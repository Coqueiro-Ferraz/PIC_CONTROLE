

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Apr 22 16:28:27 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	intentry,global,class=CODE,delta=2
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    56                           	dabs	1,0x7E,2
    57     0000                     
    58                           ; Version 2.40
    59                           ; Generated 17/11/2021 GMT
    60                           ; 
    61                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F887 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93     0000                     	;# 
    94     0001                     	;# 
    95     0002                     	;# 
    96     0003                     	;# 
    97     0004                     	;# 
    98     0005                     	;# 
    99     0006                     	;# 
   100     0007                     	;# 
   101     0008                     	;# 
   102     0009                     	;# 
   103     000A                     	;# 
   104     000B                     	;# 
   105     000C                     	;# 
   106     000D                     	;# 
   107     000E                     	;# 
   108     000E                     	;# 
   109     000F                     	;# 
   110     0010                     	;# 
   111     0011                     	;# 
   112     0012                     	;# 
   113     0013                     	;# 
   114     0014                     	;# 
   115     0015                     	;# 
   116     0015                     	;# 
   117     0016                     	;# 
   118     0017                     	;# 
   119     0018                     	;# 
   120     0019                     	;# 
   121     001A                     	;# 
   122     001B                     	;# 
   123     001B                     	;# 
   124     001C                     	;# 
   125     001D                     	;# 
   126     001E                     	;# 
   127     001F                     	;# 
   128     0081                     	;# 
   129     0085                     	;# 
   130     0086                     	;# 
   131     0087                     	;# 
   132     0088                     	;# 
   133     0089                     	;# 
   134     008C                     	;# 
   135     008D                     	;# 
   136     008E                     	;# 
   137     008F                     	;# 
   138     0090                     	;# 
   139     0091                     	;# 
   140     0092                     	;# 
   141     0093                     	;# 
   142     0093                     	;# 
   143     0093                     	;# 
   144     0094                     	;# 
   145     0095                     	;# 
   146     0096                     	;# 
   147     0097                     	;# 
   148     0098                     	;# 
   149     0099                     	;# 
   150     009A                     	;# 
   151     009B                     	;# 
   152     009C                     	;# 
   153     009D                     	;# 
   154     009E                     	;# 
   155     009F                     	;# 
   156     0105                     	;# 
   157     0107                     	;# 
   158     0108                     	;# 
   159     0109                     	;# 
   160     010C                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     0185                     	;# 
   166     0187                     	;# 
   167     0188                     	;# 
   168     0189                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171     0000                     	;# 
   172     0001                     	;# 
   173     0002                     	;# 
   174     0003                     	;# 
   175     0004                     	;# 
   176     0005                     	;# 
   177     0006                     	;# 
   178     0007                     	;# 
   179     0008                     	;# 
   180     0009                     	;# 
   181     000A                     	;# 
   182     000B                     	;# 
   183     000C                     	;# 
   184     000D                     	;# 
   185     000E                     	;# 
   186     000E                     	;# 
   187     000F                     	;# 
   188     0010                     	;# 
   189     0011                     	;# 
   190     0012                     	;# 
   191     0013                     	;# 
   192     0014                     	;# 
   193     0015                     	;# 
   194     0015                     	;# 
   195     0016                     	;# 
   196     0017                     	;# 
   197     0018                     	;# 
   198     0019                     	;# 
   199     001A                     	;# 
   200     001B                     	;# 
   201     001B                     	;# 
   202     001C                     	;# 
   203     001D                     	;# 
   204     001E                     	;# 
   205     001F                     	;# 
   206     0081                     	;# 
   207     0085                     	;# 
   208     0086                     	;# 
   209     0087                     	;# 
   210     0088                     	;# 
   211     0089                     	;# 
   212     008C                     	;# 
   213     008D                     	;# 
   214     008E                     	;# 
   215     008F                     	;# 
   216     0090                     	;# 
   217     0091                     	;# 
   218     0092                     	;# 
   219     0093                     	;# 
   220     0093                     	;# 
   221     0093                     	;# 
   222     0094                     	;# 
   223     0095                     	;# 
   224     0096                     	;# 
   225     0097                     	;# 
   226     0098                     	;# 
   227     0099                     	;# 
   228     009A                     	;# 
   229     009B                     	;# 
   230     009C                     	;# 
   231     009D                     	;# 
   232     009E                     	;# 
   233     009F                     	;# 
   234     0105                     	;# 
   235     0107                     	;# 
   236     0108                     	;# 
   237     0109                     	;# 
   238     010C                     	;# 
   239     010C                     	;# 
   240     010D                     	;# 
   241     010E                     	;# 
   242     010F                     	;# 
   243     0185                     	;# 
   244     0187                     	;# 
   245     0188                     	;# 
   246     0189                     	;# 
   247     018C                     	;# 
   248     018D                     	;# 
   249     0000                     	;# 
   250     0001                     	;# 
   251     0002                     	;# 
   252     0003                     	;# 
   253     0004                     	;# 
   254     0005                     	;# 
   255     0006                     	;# 
   256     0007                     	;# 
   257     0008                     	;# 
   258     0009                     	;# 
   259     000A                     	;# 
   260     000B                     	;# 
   261     000C                     	;# 
   262     000D                     	;# 
   263     000E                     	;# 
   264     000E                     	;# 
   265     000F                     	;# 
   266     0010                     	;# 
   267     0011                     	;# 
   268     0012                     	;# 
   269     0013                     	;# 
   270     0014                     	;# 
   271     0015                     	;# 
   272     0015                     	;# 
   273     0016                     	;# 
   274     0017                     	;# 
   275     0018                     	;# 
   276     0019                     	;# 
   277     001A                     	;# 
   278     001B                     	;# 
   279     001B                     	;# 
   280     001C                     	;# 
   281     001D                     	;# 
   282     001E                     	;# 
   283     001F                     	;# 
   284     0081                     	;# 
   285     0085                     	;# 
   286     0086                     	;# 
   287     0087                     	;# 
   288     0088                     	;# 
   289     0089                     	;# 
   290     008C                     	;# 
   291     008D                     	;# 
   292     008E                     	;# 
   293     008F                     	;# 
   294     0090                     	;# 
   295     0091                     	;# 
   296     0092                     	;# 
   297     0093                     	;# 
   298     0093                     	;# 
   299     0093                     	;# 
   300     0094                     	;# 
   301     0095                     	;# 
   302     0096                     	;# 
   303     0097                     	;# 
   304     0098                     	;# 
   305     0099                     	;# 
   306     009A                     	;# 
   307     009B                     	;# 
   308     009C                     	;# 
   309     009D                     	;# 
   310     009E                     	;# 
   311     009F                     	;# 
   312     0105                     	;# 
   313     0107                     	;# 
   314     0108                     	;# 
   315     0109                     	;# 
   316     010C                     	;# 
   317     010C                     	;# 
   318     010D                     	;# 
   319     010E                     	;# 
   320     010F                     	;# 
   321     0185                     	;# 
   322     0187                     	;# 
   323     0188                     	;# 
   324     0189                     	;# 
   325     018C                     	;# 
   326     018D                     	;# 
   327                           
   328                           	psect	idataBANK3
   329     1BEB                     __pidataBANK3:
   330                           
   331                           ;initializer for _lcd_pins
   332     1BEB  3406               	retlw	6
   333     1BEC  3400               	retlw	0
   334     1BED  3402               	retlw	2
   335     1BEE  3406               	retlw	6
   336     1BEF  3400               	retlw	0
   337     1BF0  3403               	retlw	3
   338     1BF1  3406               	retlw	6
   339     1BF2  3400               	retlw	0
   340     1BF3  3404               	retlw	4
   341     1BF4  3405               	retlw	5
   342     1BF5  3406               	retlw	6
   343     1BF6  3407               	retlw	7
   344                           
   345                           	psect	strings
   346     1000                     __pstrings:
   347     1000                     stringtab:
   348     1000                     __stringtab:
   349     1000                     stringcode:	
   350                           ;	String table - string pointers are 1 byte each
   351                           
   352     1000                     stringdir:
   353     1000  3010               	movlw	high stringdir
   354     1001  008A               	movwf	10
   355     1002  0804               	movf	4,w
   356     1003  0A84               	incf	4,f
   357     1004  0782               	addwf	2,f
   358     1005                     __stringbase:
   359     1005  3400               	retlw	0
   360     1006                     __end_of__stringtab:
   361     1006                     __powers_:
   362     1006  3400               	retlw	0
   363     1007  3400               	retlw	0
   364     1008  3480               	retlw	128
   365     1009  343F               	retlw	63
   366     100A  3400               	retlw	0
   367     100B  3400               	retlw	0
   368     100C  3420               	retlw	32
   369     100D  3441               	retlw	65
   370     100E  3400               	retlw	0
   371     100F  3400               	retlw	0
   372     1010  34C8               	retlw	200
   373     1011  3442               	retlw	66
   374     1012  3400               	retlw	0
   375     1013  3400               	retlw	0
   376     1014  347A               	retlw	122
   377     1015  3444               	retlw	68
   378     1016  3400               	retlw	0
   379     1017  3440               	retlw	64
   380     1018  341C               	retlw	28
   381     1019  3446               	retlw	70
   382     101A  3400               	retlw	0
   383     101B  3450               	retlw	80
   384     101C  34C3               	retlw	195
   385     101D  3447               	retlw	71
   386     101E  3400               	retlw	0
   387     101F  3424               	retlw	36
   388     1020  3474               	retlw	116
   389     1021  3449               	retlw	73
   390     1022  3480               	retlw	128
   391     1023  3496               	retlw	150
   392     1024  3418               	retlw	24
   393     1025  344B               	retlw	75
   394     1026  3420               	retlw	32
   395     1027  34BC               	retlw	188
   396     1028  34BE               	retlw	190
   397     1029  344C               	retlw	76
   398     102A  3428               	retlw	40
   399     102B  346B               	retlw	107
   400     102C  346E               	retlw	110
   401     102D  344E               	retlw	78
   402     102E  34F9               	retlw	249
   403     102F  3402               	retlw	2
   404     1030  3415               	retlw	21
   405     1031  3450               	retlw	80
   406     1032  34EC               	retlw	236
   407     1033  3478               	retlw	120
   408     1034  34AD               	retlw	173
   409     1035  3460               	retlw	96
   410     1036  34CA               	retlw	202
   411     1037  34F2               	retlw	242
   412     1038  3449               	retlw	73
   413     1039  3471               	retlw	113
   414     103A                     __end_of__powers_:
   415     103A                     __npowers_:
   416     103A  3400               	retlw	0
   417     103B  3400               	retlw	0
   418     103C  3480               	retlw	128
   419     103D  343F               	retlw	63
   420     103E  34CD               	retlw	205
   421     103F  34CC               	retlw	204
   422     1040  34CC               	retlw	204
   423     1041  343D               	retlw	61
   424     1042  340A               	retlw	10
   425     1043  34D7               	retlw	215
   426     1044  3423               	retlw	35
   427     1045  343C               	retlw	60
   428     1046  346F               	retlw	111
   429     1047  3412               	retlw	18
   430     1048  3483               	retlw	131
   431     1049  343A               	retlw	58
   432     104A  3417               	retlw	23
   433     104B  34B7               	retlw	183
   434     104C  34D1               	retlw	209
   435     104D  3438               	retlw	56
   436     104E  34AC               	retlw	172
   437     104F  34C5               	retlw	197
   438     1050  3427               	retlw	39
   439     1051  3437               	retlw	55
   440     1052  34BD               	retlw	189
   441     1053  3437               	retlw	55
   442     1054  3486               	retlw	134
   443     1055  3435               	retlw	53
   444     1056  3495               	retlw	149
   445     1057  34BF               	retlw	191
   446     1058  34D6               	retlw	214
   447     1059  3433               	retlw	51
   448     105A  3477               	retlw	119
   449     105B  34CC               	retlw	204
   450     105C  342B               	retlw	43
   451     105D  3432               	retlw	50
   452     105E  345F               	retlw	95
   453     105F  3470               	retlw	112
   454     1060  3489               	retlw	137
   455     1061  3430               	retlw	48
   456     1062  34FF               	retlw	255
   457     1063  34E6               	retlw	230
   458     1064  34DB               	retlw	219
   459     1065  342E               	retlw	46
   460     1066  3408               	retlw	8
   461     1067  34E5               	retlw	229
   462     1068  343C               	retlw	60
   463     1069  341E               	retlw	30
   464     106A  3460               	retlw	96
   465     106B  3442               	retlw	66
   466     106C  34A2               	retlw	162
   467     106D  340D               	retlw	13
   468     106E                     __end_of__npowers_:
   469     106E                     _dpowers:
   470     106E  3401               	retlw	1
   471     106F  3400               	retlw	0
   472     1070  3400               	retlw	0
   473     1071  3400               	retlw	0
   474     1072  340A               	retlw	10
   475     1073  3400               	retlw	0
   476     1074  3400               	retlw	0
   477     1075  3400               	retlw	0
   478     1076  3464               	retlw	100
   479     1077  3400               	retlw	0
   480     1078  3400               	retlw	0
   481     1079  3400               	retlw	0
   482     107A  34E8               	retlw	232
   483     107B  3403               	retlw	3
   484     107C  3400               	retlw	0
   485     107D  3400               	retlw	0
   486     107E  3410               	retlw	16
   487     107F  3427               	retlw	39
   488     1080  3400               	retlw	0
   489     1081  3400               	retlw	0
   490     1082  34A0               	retlw	160
   491     1083  3486               	retlw	134
   492     1084  3401               	retlw	1
   493     1085  3400               	retlw	0
   494     1086  3440               	retlw	64
   495     1087  3442               	retlw	66
   496     1088  340F               	retlw	15
   497     1089  3400               	retlw	0
   498     108A  3480               	retlw	128
   499     108B  3496               	retlw	150
   500     108C  3498               	retlw	152
   501     108D  3400               	retlw	0
   502     108E  3400               	retlw	0
   503     108F  34E1               	retlw	225
   504     1090  34F5               	retlw	245
   505     1091  3405               	retlw	5
   506     1092  3400               	retlw	0
   507     1093  34CA               	retlw	202
   508     1094  349A               	retlw	154
   509     1095  343B               	retlw	59
   510     1096                     __end_of_dpowers:
   511     000B                     _INTCONbits	set	11
   512     001A                     _RCREG	set	26
   513     0019                     _TXREG	set	25
   514     0011                     _TMR2	set	17
   515     0018                     _RCSTAbits	set	24
   516     0001                     _TMR0	set	1
   517     001E                     _ADRESH	set	30
   518     0012                     _T2CON	set	18
   519     0015                     _CCPR1L	set	21
   520     0017                     _CCP1CON	set	23
   521     0006                     _PORTB	set	6
   522     003B                     _RC3	set	59
   523     0065                     _RCIF	set	101
   524     005F                     _GIE	set	95
   525     005A                     _T0IF	set	90
   526     005D                     _T0IE	set	93
   527     00F9                     _GO_DONE	set	249
   528     00FA                     _CHS0	set	250
   529     00FB                     _CHS1	set	251
   530     00FC                     _CHS2	set	252
   531     00FD                     _CHS3	set	253
   532     00FE                     _ADCS0	set	254
   533     00FF                     _ADCS1	set	255
   534     00F8                     _ADON	set	248
   535     0061                     _TMR2IF	set	97
   536     0087                     _TRISCbits	set	135
   537     0086                     _TRISB	set	134
   538     0098                     _TXSTAbits	set	152
   539     0099                     _SPBRG	set	153
   540     009E                     _ADRESL	set	158
   541     0092                     _PR2	set	146
   542     040D                     _T0CS	set	1037
   543     0408                     _PS0	set	1032
   544     0409                     _PS1	set	1033
   545     040A                     _PS2	set	1034
   546     040B                     _PSA	set	1035
   547     04FF                     _ADFM	set	1279
   548     043A                     _TRISC2	set	1082
   549     0189                     _ANSELH	set	393
   550     1096                     STR_2:
   551     1096  3441               	retlw	65	;'A'
   552     1097  3444               	retlw	68	;'D'
   553     1098  3443               	retlw	67	;'C'
   554     1099  3430               	retlw	48	;'0'
   555     109A  343A               	retlw	58	;':'
   556     109B  3420               	retlw	32	;' '
   557     109C  3425               	retlw	37	;'%'
   558     109D  342E               	retlw	46	;'.'
   559     109E  3432               	retlw	50	;'2'
   560     109F  3466               	retlw	102	;'f'
   561     10A0  342C               	retlw	44	;','
   562     10A1  3420               	retlw	32	;' '
   563     10A2  3444               	retlw	68	;'D'
   564     10A3  3475               	retlw	117	;'u'
   565     10A4  3474               	retlw	116	;'t'
   566     10A5  3479               	retlw	121	;'y'
   567     10A6  343A               	retlw	58	;':'
   568     10A7  3420               	retlw	32	;' '
   569     10A8  3425               	retlw	37	;'%'
   570     10A9  3475               	retlw	117	;'u'
   571     10AA  3463               	retlw	99	;'c'
   572     10AB  3420               	retlw	32	;' '
   573     10AC  340D               	retlw	13
   574     10AD  340A               	retlw	10
   575     10AE  3400               	retlw	0
   576     10AF                     STR_1:
   577     10AF  3443               	retlw	67	;'C'
   578     10B0  346F               	retlw	111	;'o'
   579     10B1  346E               	retlw	110	;'n'
   580     10B2  3474               	retlw	116	;'t'
   581     10B3  3472               	retlw	114	;'r'
   582     10B4  346F               	retlw	111	;'o'
   583     10B5  346C               	retlw	108	;'l'
   584     10B6  3465               	retlw	101	;'e'
   585     10B7  3400               	retlw	0
   586                           
   587                           	psect	cinit
   588     000F                     start_initialization:	
   589                           ; #config settings
   590                           
   591     000F                     __initialization:
   592                           
   593                           ; Initialize objects allocated to BANK3
   594     000F  1783               	bsf	3,7	;select IRP bank2
   595     0010  30C2               	movlw	low (__pdataBANK3+12)
   596     0011  00FD               	movwf	btemp+-1
   597     0012  301B               	movlw	high __pidataBANK3
   598     0013  00FE               	movwf	btemp
   599     0014  30EB               	movlw	low __pidataBANK3
   600     0015  00FF               	movwf	btemp+1
   601     0016  30B6               	movlw	low __pdataBANK3
   602     0017  0084               	movwf	4
   603     0018  160A  158A  2417   	fcall	init_ram0
   604                           
   605                           ; Clear objects allocated to BANK3
   606     001B  1683               	bsf	3,5	;RP0=1, select bank3
   607     001C  1703               	bsf	3,6	;RP1=1, select bank3
   608     001D  01C2               	clrf	__pbssBANK3& (0+127)
   609     001E  01C3               	clrf	(__pbssBANK3+1)& (0+127)
   610     001F  01C4               	clrf	(__pbssBANK3+2)& (0+127)
   611     0020  01C5               	clrf	(__pbssBANK3+3)& (0+127)
   612     0021  01C6               	clrf	(__pbssBANK3+4)& (0+127)
   613     0022  01C7               	clrf	(__pbssBANK3+5)& (0+127)
   614     0023  01C8               	clrf	(__pbssBANK3+6)& (0+127)
   615     0024  01C9               	clrf	(__pbssBANK3+7)& (0+127)
   616     0025  01CA               	clrf	(__pbssBANK3+8)& (0+127)
   617     0026  01CB               	clrf	(__pbssBANK3+9)& (0+127)
   618                           
   619                           ; Clear objects allocated to BANK1
   620     0027  1303               	bcf	3,6	;RP1=0, select bank1
   621     0028  01C7               	clrf	__pbssBANK1& (0+127)
   622     0029  01C8               	clrf	(__pbssBANK1+1)& (0+127)
   623     002A  01C9               	clrf	(__pbssBANK1+2)& (0+127)
   624     002B  01CA               	clrf	(__pbssBANK1+3)& (0+127)
   625     002C  01CB               	clrf	(__pbssBANK1+4)& (0+127)
   626     002D  01CC               	clrf	(__pbssBANK1+5)& (0+127)
   627     002E  01CD               	clrf	(__pbssBANK1+6)& (0+127)
   628                           
   629                           ; Clear objects allocated to COMMON
   630     002F  01FA               	clrf	__pbssCOMMON& (0+127)
   631     0030  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   632     0031                     end_of_initialization:	
   633                           ;End of C runtime variable initialization code
   634                           
   635     0031                     __end_of__initialization:
   636     0031  0183               	clrf	3
   637     0032  160A  118A  2D17   	ljmp	_main	;jump to C main() function
   638                           
   639                           	psect	bssCOMMON
   640     007A                     __pbssCOMMON:
   641     007A                     _EN:
   642     007A                     	ds	2
   643                           
   644                           	psect	bssBANK1
   645     00C7                     __pbssBANK1:
   646     00C7                     _port_data:
   647     00C7                     	ds	2
   648     00C9                     _D4:
   649     00C9                     	ds	2
   650     00CB                     _RS:
   651     00CB                     	ds	2
   652     00CD                     _pwm_enabled:
   653     00CD                     	ds	1
   654                           
   655                           	psect	bssBANK3
   656     01C2                     __pbssBANK3:
   657     01C2                     _port_en:
   658     01C2                     	ds	2
   659     01C4                     _port_rs:
   660     01C4                     	ds	2
   661     01C6                     _D7:
   662     01C6                     	ds	2
   663     01C8                     _D6:
   664     01C8                     	ds	2
   665     01CA                     _D5:
   666     01CA                     	ds	2
   667                           
   668                           	psect	dataBANK3
   669     01B6                     __pdataBANK3:
   670     01B6                     _lcd_pins:
   671     01B6                     	ds	12
   672                           
   673                           	psect	inittext
   674     1C13                     init_fetch0:	
   675                           ;	Called with low address in FSR and high address in W
   676                           
   677     1C13  087E               	movf	126,w
   678     1C14  008A               	movwf	10
   679     1C15  087F               	movf	127,w
   680     1C16  0082               	movwf	2
   681     1C17                     init_ram0:	
   682                           ;Called with:
   683                           ;	high address of idata address in btemp 
   684                           ;	low address of idata address in btemp+1 
   685                           ;	low address of data in FSR
   686                           ;	high address + 1 of data in btemp-1
   687                           
   688     1C17  2413  160A  158A   	fcall	init_fetch0
   689     1C1A  0080               	movwf	0
   690     1C1B  0A84               	incf	4,f
   691     1C1C  0804               	movf	4,w
   692     1C1D  067D               	xorwf	125,w
   693     1C1E  1903               	btfsc	3,2
   694     1C1F  3400               	retlw	0
   695     1C20  0AFF               	incf	127,f
   696     1C21  1903               	btfsc	3,2
   697     1C22  0AFE               	incf	126,f
   698     1C23  2C17               	goto	init_ram0
   699                           
   700                           	psect	cstackBANK3
   701     0190                     __pcstackBANK3:
   702     0190                     main@buffer:
   703                           
   704                           ; 30 bytes @ 0x0
   705     0190                     	ds	30
   706     01AE                     main@c:
   707                           
   708                           ; 1 bytes @ 0x1E
   709     01AE                     	ds	1
   710     01AF                     main@i:
   711                           
   712                           ; 2 bytes @ 0x1F
   713     01AF                     	ds	2
   714     01B1                     main@duty_cycle:
   715                           
   716                           ; 1 bytes @ 0x21
   717     01B1                     	ds	1
   718     01B2                     main@temp:
   719                           
   720                           ; 4 bytes @ 0x22
   721     01B2                     	ds	4
   722                           
   723                           	psect	cstackBANK1
   724     00A0                     __pcstackBANK1:
   725     00A0                     ?_sprintf:
   726     00A0                     ?_LM35:	
   727                           ; 2 bytes @ 0x0
   728                           
   729     00A0                     sprintf@f:	
   730                           ; 4 bytes @ 0x0
   731                           
   732                           
   733                           ; 1 bytes @ 0x0
   734     00A0                     	ds	4
   735     00A4                     ??_LM35:
   736                           
   737                           ; 1 bytes @ 0x4
   738     00A4                     	ds	3
   739     00A7                     ??_sprintf:
   740                           
   741                           ; 1 bytes @ 0x7
   742     00A7                     	ds	3
   743     00AA                     LM35@temperatura:
   744                           
   745                           ; 4 bytes @ 0xA
   746     00AA                     	ds	2
   747     00AC                     _sprintf$1071:
   748                           
   749                           ; 4 bytes @ 0xC
   750     00AC                     	ds	2
   751     00AE                     _LM35$1067:
   752                           
   753                           ; 4 bytes @ 0xE
   754     00AE                     	ds	2
   755     00B0                     sprintf@ap:
   756                           
   757                           ; 1 bytes @ 0x10
   758     00B0                     	ds	1
   759     00B1                     sprintf@flag:
   760                           
   761                           ; 2 bytes @ 0x11
   762     00B1                     	ds	1
   763     00B2                     LM35@adc_val:
   764                           
   765                           ; 2 bytes @ 0x12
   766     00B2                     	ds	1
   767     00B3                     sprintf@val:
   768                           
   769                           ; 4 bytes @ 0x13
   770     00B3                     	ds	4
   771     00B7                     sprintf@eexp:
   772                           
   773                           ; 2 bytes @ 0x17
   774     00B7                     	ds	2
   775     00B9                     sprintf@tmpval:
   776                           
   777                           ; 4 bytes @ 0x19
   778     00B9                     	ds	4
   779     00BD                     sprintf@sp:
   780                           
   781                           ; 1 bytes @ 0x1D
   782     00BD                     	ds	1
   783     00BE                     sprintf@fval:
   784                           
   785                           ; 4 bytes @ 0x1E
   786     00BE                     	ds	4
   787     00C2                     sprintf@prec:
   788                           
   789                           ; 2 bytes @ 0x22
   790     00C2                     	ds	2
   791     00C4                     sprintf@c:
   792                           
   793                           ; 1 bytes @ 0x24
   794     00C4                     	ds	1
   795     00C5                     ??_main:
   796                           
   797                           ; 1 bytes @ 0x25
   798     00C5                     	ds	2
   799                           
   800                           	psect	cstackCOMMON
   801     0070                     __pcstackCOMMON:
   802     0070                     ?_isdigit:
   803     0070                     ?_lcd_init:	
   804                           ; 1 bit 
   805                           
   806     0070                     ?_PWM_init:	
   807                           ; 1 bytes @ 0x0
   808                           
   809     0070                     ?_Timer0_init:	
   810                           ; 1 bytes @ 0x0
   811                           
   812     0070                     ?_UART_init:	
   813                           ; 1 bytes @ 0x0
   814                           
   815     0070                     ?_velocidade:	
   816                           ; 1 bytes @ 0x0
   817                           
   818     0070                     ?_controle_pwm:	
   819                           ; 1 bytes @ 0x0
   820                           
   821     0070                     ?_main:	
   822                           ; 1 bytes @ 0x0
   823                           
   824     0070                     ?_Timers_ISR:	
   825                           ; 1 bytes @ 0x0
   826                           
   827     0070                     ??_Timers_ISR:	
   828                           ; 1 bytes @ 0x0
   829                           
   830     0070                     ?_enable:	
   831                           ; 1 bytes @ 0x0
   832                           
   833                           
   834                           ; 1 bytes @ 0x0
   835     0070                     	ds	2
   836     0072                     ?___fleq:
   837     0072                     ?___flge:	
   838                           ; 1 bit 
   839                           
   840     0072                     ??_isdigit:	
   841                           ; 1 bit 
   842                           
   843     0072                     ??_PWM_init:	
   844                           ; 1 bytes @ 0x2
   845                           
   846     0072                     ??_Timer0_init:	
   847                           ; 1 bytes @ 0x2
   848                           
   849     0072                     ??_UART_init:	
   850                           ; 1 bytes @ 0x2
   851                           
   852     0072                     ??_velocidade:	
   853                           ; 1 bytes @ 0x2
   854                           
   855     0072                     ??_controle_pwm:	
   856                           ; 1 bytes @ 0x2
   857                           
   858     0072                     ?_muda_pin:	
   859                           ; 1 bytes @ 0x2
   860                           
   861     0072                     ?___lbmod:	
   862                           ; 1 bytes @ 0x2
   863                           
   864     0072                     ?__Umul8_16:	
   865                           ; 1 bytes @ 0x2
   866                           
   867     0072                     ?___wmul:	
   868                           ; 2 bytes @ 0x2
   869                           
   870     0072                     ?___awmod:	
   871                           ; 2 bytes @ 0x2
   872                           
   873     0072                     ?__tdiv_to_l_:	
   874                           ; 2 bytes @ 0x2
   875                           
   876     0072                     ?__div_to_l_:	
   877                           ; 4 bytes @ 0x2
   878                           
   879     0072                     ?___lldiv:	
   880                           ; 4 bytes @ 0x2
   881                           
   882     0072                     ?___flneg:	
   883                           ; 4 bytes @ 0x2
   884                           
   885     0072                     ?___xxtofl:	
   886                           ; 4 bytes @ 0x2
   887                           
   888     0072                     velocidade@duty:	
   889                           ; 4 bytes @ 0x2
   890                           
   891     0072                     controle_pwm@ligado:	
   892                           ; 1 bytes @ 0x2
   893                           
   894     0072                     ___lbmod@divisor:	
   895                           ; 1 bytes @ 0x2
   896                           
   897     0072                     __Umul8_16@multiplicand:	
   898                           ; 1 bytes @ 0x2
   899                           
   900     0072                     _isdigit$856:	
   901                           ; 1 bytes @ 0x2
   902                           
   903     0072                     muda_pin@_port:	
   904                           ; 1 bytes @ 0x2
   905                           
   906     0072                     ___wmul@multiplier:	
   907                           ; 2 bytes @ 0x2
   908                           
   909     0072                     ___awmod@divisor:	
   910                           ; 2 bytes @ 0x2
   911                           
   912     0072                     ___lldiv@divisor:	
   913                           ; 2 bytes @ 0x2
   914                           
   915     0072                     __div_to_l_@f1:	
   916                           ; 4 bytes @ 0x2
   917                           
   918     0072                     ___fleq@ff1:	
   919                           ; 4 bytes @ 0x2
   920                           
   921     0072                     ___flge@ff1:	
   922                           ; 4 bytes @ 0x2
   923                           
   924     0072                     ___flneg@f1:	
   925                           ; 4 bytes @ 0x2
   926                           
   927     0072                     __tdiv_to_l_@f1:	
   928                           ; 4 bytes @ 0x2
   929                           
   930     0072                     ___xxtofl@val:	
   931                           ; 4 bytes @ 0x2
   932                           
   933                           
   934                           ; 4 bytes @ 0x2
   935     0072                     	ds	1
   936     0073                     ??___lbmod:
   937     0073                     isdigit@c:	
   938                           ; 1 bytes @ 0x3
   939                           
   940                           
   941                           ; 1 bytes @ 0x3
   942     0073                     	ds	1
   943     0074                     ??__Umul8_16:
   944     0074                     muda_pin@_pin:	
   945                           ; 1 bytes @ 0x4
   946                           
   947     0074                     ___wmul@multiplicand:	
   948                           ; 2 bytes @ 0x4
   949                           
   950     0074                     ___awmod@dividend:	
   951                           ; 2 bytes @ 0x4
   952                           
   953                           
   954                           ; 2 bytes @ 0x4
   955     0074                     	ds	1
   956     0075                     ___lbmod@dividend:
   957                           
   958                           ; 1 bytes @ 0x5
   959     0075                     	ds	1
   960     0076                     ??___wmul:
   961     0076                     ??___awmod:	
   962                           ; 1 bytes @ 0x6
   963                           
   964     0076                     ??___flneg:	
   965                           ; 1 bytes @ 0x6
   966                           
   967     0076                     ??___xxtofl:	
   968                           ; 1 bytes @ 0x6
   969                           
   970     0076                     ___awmod@counter:	
   971                           ; 1 bytes @ 0x6
   972                           
   973     0076                     ___lbmod@counter:	
   974                           ; 1 bytes @ 0x6
   975                           
   976     0076                     muda_pin@_val:	
   977                           ; 1 bytes @ 0x6
   978                           
   979     0076                     ___wmul@product:	
   980                           ; 2 bytes @ 0x6
   981                           
   982     0076                     ___lldiv@dividend:	
   983                           ; 2 bytes @ 0x6
   984                           
   985     0076                     __div_to_l_@f2:	
   986                           ; 4 bytes @ 0x6
   987                           
   988     0076                     ___fleq@ff2:	
   989                           ; 4 bytes @ 0x6
   990                           
   991     0076                     ___flge@ff2:	
   992                           ; 4 bytes @ 0x6
   993                           
   994     0076                     __tdiv_to_l_@f2:	
   995                           ; 4 bytes @ 0x6
   996                           
   997                           
   998                           ; 4 bytes @ 0x6
   999     0076                     	ds	1
  1000     0077                     ___awmod@sign:
  1001     0077                     ___lbmod@rem:	
  1002                           ; 1 bytes @ 0x7
  1003                           
  1004                           
  1005                           ; 1 bytes @ 0x7
  1006     0077                     	ds	1
  1007     0078                     ??_muda_pin:
  1008     0078                     ??___awdiv:	
  1009                           ; 1 bytes @ 0x8
  1010                           
  1011     0078                     ?___lbdiv:	
  1012                           ; 1 bytes @ 0x8
  1013                           
  1014     0078                     ___lbdiv@divisor:	
  1015                           ; 1 bytes @ 0x8
  1016                           
  1017                           
  1018                           ; 1 bytes @ 0x8
  1019     0078                     	ds	1
  1020     0079                     ??_escreve:
  1021     0079                     ??___lbdiv:	
  1022                           ; 1 bytes @ 0x9
  1023                           
  1024     0079                     lcd_init@lcd_pins:	
  1025                           ; 1 bytes @ 0x9
  1026                           
  1027     0079                     escreve@lin:	
  1028                           ; 1 bytes @ 0x9
  1029                           
  1030                           
  1031                           ; 1 bytes @ 0x9
  1032     0079                     	ds	1
  1033     007A                     ??___flsub:
  1034                           
  1035                           	psect	cstackBANK0
  1036     0020                     __pcstackBANK0:	
  1037                           ; 1 bytes @ 0xA
  1038                           
  1039     0020                     ??__tdiv_to_l_:
  1040     0020                     ??__div_to_l_:	
  1041                           ; 1 bytes @ 0x0
  1042                           
  1043     0020                     ??_enable:	
  1044                           ; 1 bytes @ 0x0
  1045                           
  1046     0020                     ?_nibble:	
  1047                           ; 1 bytes @ 0x0
  1048                           
  1049     0020                     ??___lldiv:	
  1050                           ; 1 bytes @ 0x0
  1051                           
  1052     0020                     ??___fleq:	
  1053                           ; 1 bytes @ 0x0
  1054                           
  1055     0020                     ??___flge:	
  1056                           ; 1 bytes @ 0x0
  1057                           
  1058     0020                     ?___awdiv:	
  1059                           ; 1 bytes @ 0x0
  1060                           
  1061     0020                     ___lbdiv@dividend:	
  1062                           ; 2 bytes @ 0x0
  1063                           
  1064     0020                     ___xxtofl@sign:	
  1065                           ; 1 bytes @ 0x0
  1066                           
  1067     0020                     nibble@dado:	
  1068                           ; 1 bytes @ 0x0
  1069                           
  1070     0020                     ___awdiv@divisor:	
  1071                           ; 2 bytes @ 0x0
  1072                           
  1073     0020                     __Umul8_16@product:	
  1074                           ; 2 bytes @ 0x0
  1075                           
  1076                           
  1077                           ; 2 bytes @ 0x0
  1078     0020                     	ds	1
  1079     0021                     ___lbdiv@counter:
  1080     0021                     ___xxtofl@exp:	
  1081                           ; 1 bytes @ 0x1
  1082                           
  1083     0021                     ___lldiv@quotient:	
  1084                           ; 1 bytes @ 0x1
  1085                           
  1086     0021                     __div_to_l_@quot:	
  1087                           ; 4 bytes @ 0x1
  1088                           
  1089                           
  1090                           ; 4 bytes @ 0x1
  1091     0021                     	ds	1
  1092     0022                     ??_nibble:
  1093     0022                     ___lbdiv@quotient:	
  1094                           ; 1 bytes @ 0x2
  1095                           
  1096     0022                     ___awdiv@dividend:	
  1097                           ; 1 bytes @ 0x2
  1098                           
  1099     0022                     __Umul8_16@word_mpld:	
  1100                           ; 2 bytes @ 0x2
  1101                           
  1102     0022                     ___xxtofl@arg:	
  1103                           ; 2 bytes @ 0x2
  1104                           
  1105                           
  1106                           ; 4 bytes @ 0x2
  1107     0022                     	ds	1
  1108     0023                     __tdiv_to_l_@quot:
  1109                           
  1110                           ; 4 bytes @ 0x3
  1111     0023                     	ds	1
  1112     0024                     ?_byte:
  1113     0024                     ___awdiv@counter:	
  1114                           ; 1 bytes @ 0x4
  1115                           
  1116     0024                     __Umul8_16@multiplier:	
  1117                           ; 1 bytes @ 0x4
  1118                           
  1119     0024                     byte@escreve:	
  1120                           ; 1 bytes @ 0x4
  1121                           
  1122                           
  1123                           ; 2 bytes @ 0x4
  1124     0024                     	ds	1
  1125     0025                     ?___fladd:
  1126     0025                     ___lldiv@counter:	
  1127                           ; 4 bytes @ 0x5
  1128                           
  1129     0025                     ___awdiv@sign:	
  1130                           ; 1 bytes @ 0x5
  1131                           
  1132     0025                     __div_to_l_@cntr:	
  1133                           ; 1 bytes @ 0x5
  1134                           
  1135     0025                     ___fladd@b:	
  1136                           ; 1 bytes @ 0x5
  1137                           
  1138                           
  1139                           ; 4 bytes @ 0x5
  1140     0025                     	ds	1
  1141     0026                     ?___llmod:
  1142     0026                     byte@dado:	
  1143                           ; 4 bytes @ 0x6
  1144                           
  1145     0026                     __div_to_l_@exp1:	
  1146                           ; 1 bytes @ 0x6
  1147                           
  1148     0026                     ___awdiv@quotient:	
  1149                           ; 1 bytes @ 0x6
  1150                           
  1151     0026                     ___llmod@divisor:	
  1152                           ; 2 bytes @ 0x6
  1153                           
  1154                           
  1155                           ; 4 bytes @ 0x6
  1156     0026                     	ds	1
  1157     0027                     ??_byte:
  1158     0027                     __tdiv_to_l_@cntr:	
  1159                           ; 1 bytes @ 0x7
  1160                           
  1161                           
  1162                           ; 1 bytes @ 0x7
  1163     0027                     	ds	1
  1164     0028                     __tdiv_to_l_@exp1:
  1165                           
  1166                           ; 1 bytes @ 0x8
  1167     0028                     	ds	1
  1168     0029                     ___fladd@a:
  1169                           
  1170                           ; 4 bytes @ 0x9
  1171     0029                     	ds	1
  1172     002A                     ??_lcd_init:
  1173     002A                     ?_escreve:	
  1174                           ; 1 bytes @ 0xA
  1175                           
  1176     002A                     escreve@col:	
  1177                           ; 1 bytes @ 0xA
  1178                           
  1179     002A                     ___llmod@dividend:	
  1180                           ; 1 bytes @ 0xA
  1181                           
  1182                           
  1183                           ; 4 bytes @ 0xA
  1184     002A                     	ds	1
  1185     002B                     escreve@str:
  1186                           
  1187                           ; 1 bytes @ 0xB
  1188     002B                     	ds	2
  1189     002D                     ??___fladd:
  1190                           
  1191                           ; 1 bytes @ 0xD
  1192     002D                     	ds	1
  1193     002E                     ??___llmod:
  1194                           
  1195                           ; 1 bytes @ 0xE
  1196     002E                     	ds	1
  1197     002F                     ___llmod@counter:
  1198                           
  1199                           ; 1 bytes @ 0xF
  1200     002F                     	ds	6
  1201     0035                     ___fladd@signs:
  1202                           
  1203                           ; 1 bytes @ 0x15
  1204     0035                     	ds	1
  1205     0036                     ___fladd@aexp:
  1206                           
  1207                           ; 1 bytes @ 0x16
  1208     0036                     	ds	1
  1209     0037                     ___fladd@bexp:
  1210                           
  1211                           ; 1 bytes @ 0x17
  1212     0037                     	ds	1
  1213     0038                     ___fladd@grs:
  1214                           
  1215                           ; 1 bytes @ 0x18
  1216     0038                     	ds	1
  1217     0039                     ?___flsub:
  1218     0039                     ?___flmul:	
  1219                           ; 4 bytes @ 0x19
  1220                           
  1221     0039                     ___flsub@a:	
  1222                           ; 4 bytes @ 0x19
  1223                           
  1224     0039                     ___flmul@b:	
  1225                           ; 4 bytes @ 0x19
  1226                           
  1227                           
  1228                           ; 4 bytes @ 0x19
  1229     0039                     	ds	4
  1230     003D                     ___flsub@b:
  1231     003D                     ___flmul@a:	
  1232                           ; 4 bytes @ 0x1D
  1233                           
  1234                           
  1235                           ; 4 bytes @ 0x1D
  1236     003D                     	ds	4
  1237     0041                     ??___flmul:
  1238                           
  1239                           ; 1 bytes @ 0x21
  1240     0041                     	ds	5
  1241     0046                     ___flmul@sign:
  1242                           
  1243                           ; 1 bytes @ 0x26
  1244     0046                     	ds	1
  1245     0047                     ___flmul@aexp:
  1246                           
  1247                           ; 1 bytes @ 0x27
  1248     0047                     	ds	1
  1249     0048                     ___flmul@bexp:
  1250                           
  1251                           ; 1 bytes @ 0x28
  1252     0048                     	ds	1
  1253     0049                     ___flmul@grs:
  1254                           
  1255                           ; 4 bytes @ 0x29
  1256     0049                     	ds	4
  1257     004D                     ___flmul@prod:
  1258                           
  1259                           ; 4 bytes @ 0x2D
  1260     004D                     	ds	4
  1261     0051                     ___flmul@temp:
  1262                           
  1263                           ; 2 bytes @ 0x31
  1264     0051                     	ds	2
  1265     0053                     ?_fround:
  1266     0053                     ?_scale:	
  1267                           ; 4 bytes @ 0x33
  1268                           
  1269     0053                     ?___fldiv:	
  1270                           ; 4 bytes @ 0x33
  1271                           
  1272     0053                     ___fldiv@a:	
  1273                           ; 4 bytes @ 0x33
  1274                           
  1275                           
  1276                           ; 4 bytes @ 0x33
  1277     0053                     	ds	4
  1278     0057                     ??_fround:
  1279     0057                     ??_scale:	
  1280                           ; 1 bytes @ 0x37
  1281                           
  1282     0057                     ___fldiv@b:	
  1283                           ; 1 bytes @ 0x37
  1284                           
  1285                           
  1286                           ; 4 bytes @ 0x37
  1287     0057                     	ds	4
  1288     005B                     ??___fldiv:
  1289                           
  1290                           ; 1 bytes @ 0x3B
  1291     005B                     	ds	1
  1292     005C                     _fround$1069:
  1293                           
  1294                           ; 4 bytes @ 0x3C
  1295     005C                     	ds	4
  1296     0060                     ___fldiv@rem:
  1297     0060                     _fround$1068:	
  1298                           ; 4 bytes @ 0x40
  1299                           
  1300                           
  1301                           ; 4 bytes @ 0x40
  1302     0060                     	ds	1
  1303     0061                     _scale$1070:
  1304                           
  1305                           ; 4 bytes @ 0x41
  1306     0061                     	ds	3
  1307     0064                     fround@prec:
  1308     0064                     ___fldiv@sign:	
  1309                           ; 1 bytes @ 0x44
  1310                           
  1311                           
  1312                           ; 1 bytes @ 0x44
  1313     0064                     	ds	1
  1314     0065                     scale@scl:
  1315     0065                     ___fldiv@new_exp:	
  1316                           ; 1 bytes @ 0x45
  1317                           
  1318                           
  1319                           ; 2 bytes @ 0x45
  1320     0065                     	ds	1
  1321     0066                     ?___fltol:
  1322     0066                     ___fltol@f1:	
  1323                           ; 4 bytes @ 0x46
  1324                           
  1325                           
  1326                           ; 4 bytes @ 0x46
  1327     0066                     	ds	1
  1328     0067                     ___fldiv@grs:
  1329                           
  1330                           ; 4 bytes @ 0x47
  1331     0067                     	ds	3
  1332     006A                     ??___fltol:
  1333                           
  1334                           ; 1 bytes @ 0x4A
  1335     006A                     	ds	1
  1336     006B                     ___fldiv@bexp:
  1337                           
  1338                           ; 1 bytes @ 0x4B
  1339     006B                     	ds	1
  1340     006C                     ___fldiv@aexp:
  1341                           
  1342                           ; 1 bytes @ 0x4C
  1343     006C                     	ds	2
  1344     006E                     ___fltol@sign1:
  1345                           
  1346                           ; 1 bytes @ 0x4E
  1347     006E                     	ds	1
  1348     006F                     ___fltol@exp1:
  1349                           
  1350                           ; 1 bytes @ 0x4F
  1351     006F                     	ds	1
  1352                           
  1353                           	psect	maintext
  1354     1517                     __pmaintext:	
  1355 ;;
  1356 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1357 ;;
  1358 ;; *************** function _main *****************
  1359 ;; Defined at:
  1360 ;;		line 146 in file "controle.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;		None
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;  c               1   30[BANK3 ] unsigned char 
  1365 ;;  i               2   31[BANK3 ] int 
  1366 ;;  buffer         30    0[BANK3 ] unsigned char [30]
  1367 ;;  temp            4   34[BANK3 ] float 
  1368 ;;  duty_cycle      1   33[BANK3 ] unsigned char 
  1369 ;; Return value:  Size  Location     Type
  1370 ;;                  1    wreg      void 
  1371 ;; Registers used:
  1372 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1373 ;; Tracked objects:
  1374 ;;		On entry : B00/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1378 ;;      Params:         0       0       0       0       0
  1379 ;;      Locals:         0       0       0      38       0
  1380 ;;      Temps:          0       0       2       0       0
  1381 ;;      Totals:         0       0       2      38       0
  1382 ;;Total ram usage:       40 bytes
  1383 ;; Hardware stack levels required when called: 5
  1384 ;; This function calls:
  1385 ;;		_LM35
  1386 ;;		_PWM_init
  1387 ;;		_Timer0_init
  1388 ;;		_UART_init
  1389 ;;		___fladd
  1390 ;;		___flge
  1391 ;;		___flmul
  1392 ;;		___fltol
  1393 ;;		_controle_pwm
  1394 ;;		_escreve
  1395 ;;		_lcd_init
  1396 ;;		_sprintf
  1397 ;;		_velocidade
  1398 ;; This function is called by:
  1399 ;;		Startup code after reset
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403     1517                     _main:	
  1404                           ;psect for function _main
  1405                           
  1406                           
  1407                           ;controle.c: 148:     float temp;;controle.c: 149:     unsigned char duty_cycle;;control
      +                          e.c: 150:     char buffer[30];;controle.c: 151:     ANSELH = 0;
  1408                           
  1409                           ;incstack = 0
  1410                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1411     1517  1683               	bsf	3,5	;RP0=1, select bank3
  1412     1518  1703               	bsf	3,6	;RP1=1, select bank3
  1413     1519  0189               	clrf	9	;volatile
  1414                           
  1415                           ;controle.c: 152:     TRISB = 0;
  1416     151A  1303               	bcf	3,6	;RP1=0, select bank1
  1417     151B  0186               	clrf	6	;volatile
  1418                           
  1419                           ;controle.c: 154:     UART_init();
  1420     151C  160A  158A  23F7  160A  118A  	fcall	_UART_init
  1421                           
  1422                           ;controle.c: 155:     PWM_init();
  1423     1521  160A  158A  244B  160A  118A  	fcall	_PWM_init
  1424                           
  1425                           ;controle.c: 156:     Timer0_init();
  1426     1526  160A  158A  23DF  160A  118A  	fcall	_Timer0_init
  1427                           
  1428                           ;controle.c: 157:     TRISCbits.TRISC3 = 0;
  1429     152B  1683               	bsf	3,5	;RP0=1, select bank1
  1430     152C  1187               	bcf	7,3	;volatile
  1431                           
  1432                           ;controle.c: 158:     lcd_init(&lcd_pins);
  1433     152D  30B6               	movlw	(low (_lcd_pins| (0+256)))& (0+255)
  1434     152E  160A  118A  2447  160A  118A  	fcall	_lcd_init
  1435                           
  1436                           ;controle.c: 159:     escreve(1,1,"Controle");
  1437     1533  1283               	bcf	3,5	;RP0=0, select bank0
  1438     1534  1303               	bcf	3,6	;RP1=0, select bank0
  1439     1535  01AA               	clrf	escreve@col
  1440     1536  0AAA               	incf	escreve@col,f
  1441     1537  30AA               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1442     1538  00AB               	movwf	escreve@str
  1443     1539  3001               	movlw	1
  1444     153A  160A  158A  2568  160A  118A  	fcall	_escreve
  1445     153F                     l5231:
  1446                           
  1447                           ;controle.c: 162:         temp = LM35();
  1448     153F  160A  118A  2399  160A  118A  	fcall	_LM35
  1449     1544  0823               	movf	(?_LM35+3)^(0+128),w
  1450     1545  1703               	bsf	3,6	;RP1=1, select bank3
  1451     1546  00B5               	movwf	(main@temp+3)^(0+384)
  1452     1547  1303               	bcf	3,6	;RP1=0, select bank1
  1453     1548  0822               	movf	(?_LM35+2)^(0+128),w
  1454     1549  1703               	bsf	3,6	;RP1=1, select bank3
  1455     154A  00B4               	movwf	(main@temp+2)^(0+384)
  1456     154B  1303               	bcf	3,6	;RP1=0, select bank1
  1457     154C  0821               	movf	(?_LM35+1)^(0+128),w
  1458     154D  1703               	bsf	3,6	;RP1=1, select bank3
  1459     154E  00B3               	movwf	(main@temp+1)^(0+384)
  1460     154F  1303               	bcf	3,6	;RP1=0, select bank1
  1461     1550  0820               	movf	?_LM35^(0+128),w
  1462     1551  1703               	bsf	3,6	;RP1=1, select bank3
  1463     1552  00B2               	movwf	main@temp^(0+384)
  1464                           
  1465                           ;controle.c: 164:         if (temp < 25) {
  1466     1553  0835               	movf	(main@temp+3)^(0+384),w
  1467     1554  00F5               	movwf	___flge@ff1+3
  1468     1555  0834               	movf	(main@temp+2)^(0+384),w
  1469     1556  00F4               	movwf	___flge@ff1+2
  1470     1557  0833               	movf	(main@temp+1)^(0+384),w
  1471     1558  00F3               	movwf	___flge@ff1+1
  1472     1559  0832               	movf	main@temp^(0+384),w
  1473     155A  00F2               	movwf	___flge@ff1
  1474     155B  3041               	movlw	65
  1475     155C  00F9               	movwf	___flge@ff2+3
  1476     155D  30C8               	movlw	200
  1477     155E  00F8               	movwf	___flge@ff2+2
  1478     155F  3000               	movlw	0
  1479     1560  00F7               	movwf	___flge@ff2+1
  1480     1561  3000               	movlw	0
  1481     1562  00F6               	movwf	___flge@ff2
  1482     1563  160A  118A  211C  160A  118A  	fcall	___flge
  1483     1568  1803               	btfsc	3,0
  1484     1569  2D6E               	goto	l5237
  1485                           
  1486                           ;controle.c: 165:             duty_cycle = 0;
  1487     156A  1683               	bsf	3,5	;RP0=1, select bank3
  1488     156B  1703               	bsf	3,6	;RP1=1, select bank3
  1489     156C  01B1               	clrf	main@duty_cycle^(0+384)
  1490                           
  1491                           ;controle.c: 166:         } else if (temp > 50) {
  1492     156D  2DD4               	goto	l5243
  1493     156E                     l5237:
  1494     156E  3042               	movlw	66
  1495     156F  00F5               	movwf	___flge@ff1+3
  1496     1570  3048               	movlw	72
  1497     1571  00F4               	movwf	___flge@ff1+2
  1498     1572  3000               	movlw	0
  1499     1573  00F3               	movwf	___flge@ff1+1
  1500     1574  3000               	movlw	0
  1501     1575  00F2               	movwf	___flge@ff1
  1502     1576  1683               	bsf	3,5	;RP0=1, select bank3
  1503     1577  1703               	bsf	3,6	;RP1=1, select bank3
  1504     1578  0835               	movf	(main@temp+3)^(0+384),w
  1505     1579  00F9               	movwf	___flge@ff2+3
  1506     157A  0834               	movf	(main@temp+2)^(0+384),w
  1507     157B  00F8               	movwf	___flge@ff2+2
  1508     157C  0833               	movf	(main@temp+1)^(0+384),w
  1509     157D  00F7               	movwf	___flge@ff2+1
  1510     157E  0832               	movf	main@temp^(0+384),w
  1511     157F  00F6               	movwf	___flge@ff2
  1512     1580  160A  118A  211C  160A  118A  	fcall	___flge
  1513     1585  1803               	btfsc	3,0
  1514     1586  2D89               	goto	l5241
  1515                           
  1516                           ;controle.c: 167:             duty_cycle = 255;
  1517     1587  30FF               	movlw	255
  1518     1588  2DD1               	goto	L1
  1519     1589                     l5241:	
  1520                           ;controle.c: 168:         } else {
  1521                           
  1522                           
  1523                           ;controle.c: 169:             duty_cycle = (unsigned char)((temp - 25) * 10.2);
  1524     1589  1683               	bsf	3,5	;RP0=1, select bank3
  1525     158A  1703               	bsf	3,6	;RP1=1, select bank3
  1526     158B  0835               	movf	(main@temp+3)^(0+384),w
  1527     158C  1283               	bcf	3,5	;RP0=0, select bank0
  1528     158D  1303               	bcf	3,6	;RP1=0, select bank0
  1529     158E  00AC               	movwf	___fladd@a+3
  1530     158F  1683               	bsf	3,5	;RP0=1, select bank3
  1531     1590  1703               	bsf	3,6	;RP1=1, select bank3
  1532     1591  0834               	movf	(main@temp+2)^(0+384),w
  1533     1592  1283               	bcf	3,5	;RP0=0, select bank0
  1534     1593  1303               	bcf	3,6	;RP1=0, select bank0
  1535     1594  00AB               	movwf	___fladd@a+2
  1536     1595  1683               	bsf	3,5	;RP0=1, select bank3
  1537     1596  1703               	bsf	3,6	;RP1=1, select bank3
  1538     1597  0833               	movf	(main@temp+1)^(0+384),w
  1539     1598  1283               	bcf	3,5	;RP0=0, select bank0
  1540     1599  1303               	bcf	3,6	;RP1=0, select bank0
  1541     159A  00AA               	movwf	___fladd@a+1
  1542     159B  1683               	bsf	3,5	;RP0=1, select bank3
  1543     159C  1703               	bsf	3,6	;RP1=1, select bank3
  1544     159D  0832               	movf	main@temp^(0+384),w
  1545     159E  1283               	bcf	3,5	;RP0=0, select bank0
  1546     159F  1303               	bcf	3,6	;RP1=0, select bank0
  1547     15A0  00A9               	movwf	___fladd@a
  1548     15A1  30C1               	movlw	193
  1549     15A2  00A8               	movwf	___fladd@b+3
  1550     15A3  30C8               	movlw	200
  1551     15A4  00A7               	movwf	___fladd@b+2
  1552     15A5  3000               	movlw	0
  1553     15A6  00A6               	movwf	___fladd@b+1
  1554     15A7  3000               	movlw	0
  1555     15A8  00A5               	movwf	___fladd@b
  1556     15A9  120A  158A  2002  160A  118A  	fcall	___fladd
  1557     15AE  0828               	movf	?___fladd+3,w
  1558     15AF  00C0               	movwf	___flmul@a+3
  1559     15B0  0827               	movf	?___fladd+2,w
  1560     15B1  00BF               	movwf	___flmul@a+2
  1561     15B2  0826               	movf	?___fladd+1,w
  1562     15B3  00BE               	movwf	___flmul@a+1
  1563     15B4  0825               	movf	?___fladd,w
  1564     15B5  00BD               	movwf	___flmul@a
  1565     15B6  3041               	movlw	65
  1566     15B7  00BC               	movwf	___flmul@b+3
  1567     15B8  3023               	movlw	35
  1568     15B9  00BB               	movwf	___flmul@b+2
  1569     15BA  3033               	movlw	51
  1570     15BB  00BA               	movwf	___flmul@b+1
  1571     15BC  3033               	movlw	51
  1572     15BD  00B9               	movwf	___flmul@b
  1573     15BE  120A  158A  21FF  160A  118A  	fcall	___flmul
  1574     15C3  083C               	movf	?___flmul+3,w
  1575     15C4  00E9               	movwf	___fltol@f1+3
  1576     15C5  083B               	movf	?___flmul+2,w
  1577     15C6  00E8               	movwf	___fltol@f1+2
  1578     15C7  083A               	movf	?___flmul+1,w
  1579     15C8  00E7               	movwf	___fltol@f1+1
  1580     15C9  0839               	movf	?___flmul,w
  1581     15CA  00E6               	movwf	___fltol@f1
  1582     15CB  160A  158A  271F  160A  118A  	fcall	___fltol
  1583     15D0  0866               	movf	?___fltol,w
  1584     15D1                     L1:
  1585     15D1  1683               	bsf	3,5	;RP0=1, select bank3
  1586     15D2  1703               	bsf	3,6	;RP1=1, select bank3
  1587     15D3  00B1               	movwf	main@duty_cycle^(0+384)
  1588     15D4                     l5243:
  1589                           
  1590                           ;controle.c: 173:         sprintf(buffer, "ADC0: %.2f, Duty: %uc \r\n", temp, duty_cycle
      +                          );
  1591     15D4  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1592     15D5  1303               	bcf	3,6	;RP1=0, select bank1
  1593     15D6  00A0               	movwf	sprintf@f^(0+128)
  1594     15D7  1703               	bsf	3,6	;RP1=1, select bank3
  1595     15D8  0835               	movf	(main@temp+3)^(0+384),w
  1596     15D9  1303               	bcf	3,6	;RP1=0, select bank1
  1597     15DA  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1598     15DB  1703               	bsf	3,6	;RP1=1, select bank3
  1599     15DC  0834               	movf	(main@temp+2)^(0+384),w
  1600     15DD  1303               	bcf	3,6	;RP1=0, select bank1
  1601     15DE  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1602     15DF  1703               	bsf	3,6	;RP1=1, select bank3
  1603     15E0  0833               	movf	(main@temp+1)^(0+384),w
  1604     15E1  1303               	bcf	3,6	;RP1=0, select bank1
  1605     15E2  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1606     15E3  1703               	bsf	3,6	;RP1=1, select bank3
  1607     15E4  0832               	movf	main@temp^(0+384),w
  1608     15E5  1303               	bcf	3,6	;RP1=0, select bank1
  1609     15E6  00A1               	movwf	(?_sprintf^(0+128)+1)
  1610     15E7  1703               	bsf	3,6	;RP1=1, select bank3
  1611     15E8  0831               	movf	main@duty_cycle^(0+384),w
  1612     15E9  1303               	bcf	3,6	;RP1=0, select bank1
  1613     15EA  00C5               	movwf	??_main^(0+128)
  1614     15EB  01C6               	clrf	(??_main^(0+128)+1)
  1615     15EC  0845               	movf	??_main^(0+128),w
  1616     15ED  00A5               	movwf	(?_sprintf^(0+128)+5)
  1617     15EE  0846               	movf	(??_main+1)^(0+128),w
  1618     15EF  00A6               	movwf	((?_sprintf+1)^(0+128)+5)
  1619     15F0  3090               	movlw	(low (main@buffer| (0+256)))& (0+255)
  1620     15F1  120A  118A  2035  160A  118A  	fcall	_sprintf
  1621                           
  1622                           ;controle.c: 174:         for (int i = 0; buffer[i] != '\0'; i++)
  1623     15F6  1703               	bsf	3,6	;RP1=1, select bank3
  1624     15F7  01AF               	clrf	main@i^(0+384)
  1625     15F8  01B0               	clrf	(main@i+1)^(0+384)
  1626     15F9                     l5251:
  1627     15F9  082F               	movf	main@i^(0+384),w
  1628     15FA  3E90               	addlw	(low (main@buffer| (0+256)))& (0+255)
  1629     15FB  0084               	movwf	4
  1630     15FC  1783               	bsf	3,7	;select IRP bank3
  1631     15FD  0800               	movf	0,w
  1632     15FE  1903               	btfsc	3,2
  1633     15FF  2E12               	goto	l140
  1634                           
  1635                           ;controle.c: 175:         {;controle.c: 176:             TXREG = buffer[i];
  1636     1600  082F               	movf	main@i^(0+384),w
  1637     1601  3E90               	addlw	(low (main@buffer| (0+256)))& (0+255)
  1638     1602  0084               	movwf	4
  1639     1603  0800               	movf	0,w
  1640     1604  1283               	bcf	3,5	;RP0=0, select bank0
  1641     1605  1303               	bcf	3,6	;RP1=0, select bank0
  1642     1606  0099               	movwf	25	;volatile
  1643     1607                     l137:	
  1644                           ;controle.c: 177:             while (!TXSTAbits.TRMT);
  1645                           
  1646     1607  1683               	bsf	3,5	;RP0=1, select bank1
  1647     1608  1C98               	btfss	24,1	;volatile
  1648     1609  2E07               	goto	l137
  1649                           
  1650                           ;controle.c: 178:         }
  1651     160A  3001               	movlw	1
  1652     160B  1703               	bsf	3,6	;RP1=1, select bank3
  1653     160C  07AF               	addwf	main@i^(0+384),f
  1654     160D  1803               	skipnc
  1655     160E  0AB0               	incf	(main@i+1)^(0+384),f
  1656     160F  3000               	movlw	0
  1657     1610  07B0               	addwf	(main@i+1)^(0+384),f
  1658     1611  2DF9               	goto	l5251
  1659     1612                     l140:
  1660                           
  1661                           ;controle.c: 179:         if (RCIF)
  1662     1612  1283               	bcf	3,5	;RP0=0, select bank0
  1663     1613  1303               	bcf	3,6	;RP1=0, select bank0
  1664     1614  1E8C               	btfss	12,5	;volatile
  1665     1615  2E36               	goto	l5271
  1666                           
  1667                           ;controle.c: 180:         {;controle.c: 181:             char c = RCREG;
  1668     1616  081A               	movf	26,w	;volatile
  1669     1617  1683               	bsf	3,5	;RP0=1, select bank3
  1670     1618  1703               	bsf	3,6	;RP1=1, select bank3
  1671     1619  00AE               	movwf	main@c^(0+384)
  1672                           
  1673                           ;controle.c: 182:             if (c == '0' && pwm_enabled) {
  1674     161A  3030               	movlw	48
  1675     161B  062E               	xorwf	main@c^(0+384),w
  1676     161C  1D03               	btfss	3,2
  1677     161D  2E24               	goto	l5263
  1678     161E  1303               	bcf	3,6	;RP1=0, select bank1
  1679     161F  084D               	movf	_pwm_enabled^(0+128),w
  1680     1620  1903               	btfsc	3,2
  1681     1621  2E24               	goto	l5263
  1682                           
  1683                           ;controle.c: 183:                 controle_pwm(0);
  1684     1622  3000               	movlw	0
  1685     1623  2E2E               	goto	L2
  1686     1624                     l5263:	
  1687                           ;controle.c: 185:             } else if (c == '1' && !pwm_enabled) {
  1688                           
  1689     1624  3031               	movlw	49
  1690     1625  1703               	bsf	3,6	;RP1=1, select bank3
  1691     1626  062E               	xorwf	main@c^(0+384),w
  1692     1627  1D03               	btfss	3,2
  1693     1628  2E36               	goto	l5271
  1694     1629  1303               	bcf	3,6	;RP1=0, select bank1
  1695     162A  084D               	movf	_pwm_enabled^(0+128),w
  1696     162B  1D03               	btfss	3,2
  1697     162C  2E36               	goto	l5271
  1698                           
  1699                           ;controle.c: 186:                 controle_pwm(1);
  1700     162D  3001               	movlw	1
  1701     162E                     L2:
  1702     162E  160A  158A  2424  160A  118A  	fcall	_controle_pwm
  1703                           
  1704                           ;controle.c: 184:                 TXREG = 'P';
  1705     1633  3050               	movlw	80
  1706     1634  1283               	bcf	3,5	;RP0=0, select bank0
  1707     1635  0099               	movwf	25	;volatile
  1708     1636                     l5271:
  1709                           
  1710                           ;controle.c: 190:         velocidade(duty_cycle);
  1711     1636  1683               	bsf	3,5	;RP0=1, select bank3
  1712     1637  1703               	bsf	3,6	;RP1=1, select bank3
  1713     1638  0831               	movf	main@duty_cycle^(0+384),w
  1714     1639  160A  158A  23D8  160A  118A  	fcall	_velocidade
  1715                           
  1716                           ;controle.c: 192:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1717     163E  3082               	movlw	130
  1718     163F  1683               	bsf	3,5	;RP0=1, select bank1
  1719     1640  1303               	bcf	3,6	;RP1=0, select bank1
  1720     1641  00C6               	movwf	(??_main^(0+128)+1)
  1721     1642  30DD               	movlw	221
  1722     1643  00C5               	movwf	??_main^(0+128)
  1723     1644                     u9127:
  1724     1644  0BC5               	decfsz	??_main^(0+128),f
  1725     1645  2E44               	goto	u9127
  1726     1646  0BC6               	decfsz	(??_main^(0+128)+1),f
  1727     1647  2E44               	goto	u9127
  1728     1648  2D3F               	goto	l5231
  1729     1649                     __end_of_main:
  1730                           
  1731                           	psect	text1
  1732     1BD8                     __ptext1:	
  1733 ;; *************** function _velocidade *****************
  1734 ;; Defined at:
  1735 ;;		line 113 in file "controle.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;  duty            1    wreg     unsigned char 
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;  duty            1    2[COMMON] unsigned char 
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  1    wreg      void 
  1742 ;; Registers used:
  1743 ;;		wreg, status,2
  1744 ;; Tracked objects:
  1745 ;;		On entry : 300/B00
  1746 ;;		On exit  : 300/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1749 ;;      Params:         0       0       0       0       0
  1750 ;;      Locals:         1       0       0       0       0
  1751 ;;      Temps:          0       0       0       0       0
  1752 ;;      Totals:         1       0       0       0       0
  1753 ;;Total ram usage:        1 bytes
  1754 ;; Hardware stack levels used: 1
  1755 ;; Hardware stack levels required when called: 1
  1756 ;; This function calls:
  1757 ;;		Nothing
  1758 ;; This function is called by:
  1759 ;;		_main
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763     1BD8                     _velocidade:	
  1764                           ;psect for function _velocidade
  1765                           
  1766                           
  1767                           ;incstack = 0
  1768                           ; Regs used in _velocidade: [wreg+status,2]
  1769                           ;velocidade@duty stored from wreg
  1770     1BD8  00F2               	movwf	velocidade@duty
  1771                           
  1772                           ;controle.c: 113: void velocidade(char duty);controle.c: 114: {;controle.c: 115:     CCP
      +                          R1L = duty;
  1773     1BD9  0872               	movf	velocidade@duty,w
  1774     1BDA  1283               	bcf	3,5	;RP0=0, select bank0
  1775     1BDB  1303               	bcf	3,6	;RP1=0, select bank0
  1776     1BDC  0095               	movwf	21	;volatile
  1777                           
  1778                           ;controle.c: 116:     TMR2 = 0;
  1779     1BDD  0191               	clrf	17	;volatile
  1780     1BDE  0008               	return
  1781     1BDF                     __end_of_velocidade:
  1782                           
  1783                           	psect	text2
  1784     0035                     __ptext2:	
  1785 ;; *************** function _sprintf *****************
  1786 ;; Defined at:
  1787 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;  sp              1    wreg     PTR unsigned char 
  1790 ;;		 -> main@buffer(30), 
  1791 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1792 ;;		 -> STR_2(25), 
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;  sp              1   29[BANK1 ] PTR unsigned char 
  1795 ;;		 -> main@buffer(30), 
  1796 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  1797 ;;  tmpval          4   25[BANK1 ] struct .
  1798 ;;  val             4   19[BANK1 ] unsigned long 
  1799 ;;  prec            2   34[BANK1 ] int 
  1800 ;;  eexp            2   23[BANK1 ] int 
  1801 ;;  flag            2   17[BANK1 ] unsigned short 
  1802 ;;  cp              2    0        PTR const unsigned char 
  1803 ;;  len             2    0        unsigned int 
  1804 ;;  width           2    0        int 
  1805 ;;  c               1   36[BANK1 ] unsigned char 
  1806 ;;  ap              1   16[BANK1 ] PTR void [1]
  1807 ;;		 -> ?_sprintf(2), 
  1808 ;;  d               1    0        unsigned char 
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  2    0[BANK1 ] int 
  1811 ;; Registers used:
  1812 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1813 ;; Tracked objects:
  1814 ;;		On entry : 300/100
  1815 ;;		On exit  : B00/900
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1818 ;;      Params:         0       0       7       0       0
  1819 ;;      Locals:         0       0      25       0       0
  1820 ;;      Temps:          0       0       5       0       0
  1821 ;;      Totals:         0       0      37       0       0
  1822 ;;Total ram usage:       37 bytes
  1823 ;; Hardware stack levels used: 1
  1824 ;; Hardware stack levels required when called: 4
  1825 ;; This function calls:
  1826 ;;		___awdiv
  1827 ;;		___fladd
  1828 ;;		___fleq
  1829 ;;		___flge
  1830 ;;		___flmul
  1831 ;;		___flneg
  1832 ;;		___flsub
  1833 ;;		___fltol
  1834 ;;		___lldiv
  1835 ;;		___llmod
  1836 ;;		___wmul
  1837 ;;		___xxtofl
  1838 ;;		__div_to_l_
  1839 ;;		__tdiv_to_l_
  1840 ;;		_fround
  1841 ;;		_isdigit
  1842 ;;		_scale
  1843 ;; This function is called by:
  1844 ;;		_main
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848     0035                     _sprintf:	
  1849                           ;psect for function _sprintf
  1850                           
  1851                           
  1852                           ;incstack = 0
  1853                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1854                           ;sprintf@sp stored from wreg
  1855     0035  00BD               	movwf	sprintf@sp^(0+128)
  1856                           
  1857                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1858     0036  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1859     0037  00B0               	movwf	sprintf@ap^(0+128)
  1860     0038                     l5205:	
  1861                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1862                           
  1863                           
  1864                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1865     0038  3001               	movlw	1
  1866     0039  07A0               	addwf	sprintf@f^(0+128),f
  1867     003A  30FF               	movlw	-1
  1868     003B  0720               	addwf	sprintf@f^(0+128),w
  1869     003C  0084               	movwf	4
  1870     003D  160A  118A  2000  120A  118A  	fcall	stringdir
  1871     0042  00C4               	movwf	sprintf@c^(0+128)
  1872     0043  0844               	movf	sprintf@c^(0+128),w
  1873     0044  1903               	btfsc	3,2
  1874     0045  2E59               	goto	l5207
  1875                           
  1876                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1877     0046  3025               	movlw	37
  1878     0047  0644               	xorwf	sprintf@c^(0+128),w
  1879     0048  1903               	btfsc	3,2
  1880     0049  2854               	goto	l4983
  1881                           
  1882                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1883     004A  083D               	movf	sprintf@sp^(0+128),w
  1884     004B  0084               	movwf	4
  1885     004C  0844               	movf	sprintf@c^(0+128),w
  1886     004D  1783               	bsf	3,7	;select IRP bank2
  1887     004E  0080               	movwf	0
  1888     004F  3001               	movlw	1
  1889     0050  00FF               	movwf	127
  1890     0051  087F               	movf	127,w
  1891     0052  07BD               	addwf	sprintf@sp^(0+128),f
  1892                           
  1893                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  1894     0053  2838               	goto	l5205
  1895     0054                     l4983:
  1896                           
  1897                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1898     0054  01B1               	clrf	sprintf@flag^(0+128)
  1899     0055  01B2               	clrf	(sprintf@flag+1)^(0+128)
  1900                           
  1901                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1902     0056  0820               	movf	sprintf@f^(0+128),w
  1903     0057  0084               	movwf	4
  1904     0058  160A  118A  2000  120A  118A  	fcall	stringdir
  1905     005D  3A2E               	xorlw	46
  1906     005E  1D03               	skipz
  1907     005F  289E               	goto	l5001
  1908                           
  1909                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1910     0060  1732               	bsf	(sprintf@flag^(0+128)+1),6
  1911                           
  1912                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 630:    f++;
  1913     0061  3001               	movlw	1
  1914     0062  00FF               	movwf	127
  1915     0063  087F               	movf	127,w
  1916     0064  07A0               	addwf	sprintf@f^(0+128),f
  1917                           
  1918                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1919     0065  01C2               	clrf	sprintf@prec^(0+128)
  1920     0066  01C3               	clrf	(sprintf@prec+1)^(0+128)
  1921     0067                     l4999:	
  1922                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1923                           
  1924                           
  1925                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1926     0067  0820               	movf	sprintf@f^(0+128),w
  1927     0068  0084               	movwf	4
  1928     0069  160A  118A  2000  120A  118A  	fcall	stringdir
  1929     006E  160A  158A  2405  120A  118A  	fcall	_isdigit
  1930     0073  1C03               	btfss	3,0
  1931     0074  28A9               	goto	l5009
  1932                           
  1933                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1934     0075  300A               	movlw	10
  1935     0076  00F2               	movwf	___wmul@multiplier
  1936     0077  3000               	movlw	0
  1937     0078  00F3               	movwf	___wmul@multiplier+1
  1938     0079  0843               	movf	(sprintf@prec+1)^(0+128),w
  1939     007A  00F5               	movwf	___wmul@multiplicand+1
  1940     007B  0842               	movf	sprintf@prec^(0+128),w
  1941     007C  00F4               	movwf	___wmul@multiplicand
  1942     007D  160A  158A  249F  120A  118A  	fcall	___wmul
  1943     0082  0873               	movf	?___wmul+1,w
  1944     0083  00C3               	movwf	(sprintf@prec+1)^(0+128)
  1945     0084  0872               	movf	?___wmul,w
  1946     0085  00C2               	movwf	sprintf@prec^(0+128)
  1947                           
  1948                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1949     0086  0820               	movf	sprintf@f^(0+128),w
  1950     0087  0084               	movwf	4
  1951     0088  160A  118A  2000  120A  118A  	fcall	stringdir
  1952     008D  3ED0               	addlw	208
  1953     008E  00A7               	movwf	??_sprintf^(0+128)
  1954     008F  30FF               	movlw	255
  1955     0090  1803               	skipnc
  1956     0091  3000               	movlw	0
  1957     0092  00A8               	movwf	(??_sprintf^(0+128)+1)
  1958     0093  0827               	movf	??_sprintf^(0+128),w
  1959     0094  07C2               	addwf	sprintf@prec^(0+128),f
  1960     0095  1803               	skipnc
  1961     0096  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  1962     0097  0828               	movf	(??_sprintf+1)^(0+128),w
  1963     0098  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  1964     0099  3001               	movlw	1
  1965     009A  00FF               	movwf	127
  1966     009B  087F               	movf	127,w
  1967     009C  07A0               	addwf	sprintf@f^(0+128),f
  1968     009D  2867               	goto	l4999
  1969     009E                     l5001:
  1970                           
  1971                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1972     009E  01C2               	clrf	sprintf@prec^(0+128)
  1973     009F  01C3               	clrf	(sprintf@prec+1)^(0+128)
  1974                           
  1975                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1976     00A0  1632               	bsf	(sprintf@flag^(0+128)+1),4
  1977     00A1  28A9               	goto	l5009
  1978     00A2                     l350:	
  1979                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1980                           
  1981                           
  1982                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1983     00A2  1532               	bsf	(sprintf@flag^(0+128)+1),2
  1984                           
  1985                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 690:    break;
  1986     00A3  28C6               	goto	l5011
  1987     00A4                     l5005:
  1988                           
  1989                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1990     00A4  30C0               	movlw	192
  1991     00A5  04B1               	iorwf	sprintf@flag^(0+128),f
  1992     00A6  3000               	movlw	0
  1993     00A7  04B2               	iorwf	(sprintf@flag+1)^(0+128),f
  1994                           
  1995                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 845:    break;
  1996     00A8  28C6               	goto	l5011
  1997     00A9                     l5009:
  1998     00A9  3001               	movlw	1
  1999     00AA  07A0               	addwf	sprintf@f^(0+128),f
  2000     00AB  30FF               	movlw	-1
  2001     00AC  0720               	addwf	sprintf@f^(0+128),w
  2002     00AD  0084               	movwf	4
  2003     00AE  160A  118A  2000  120A  118A  	fcall	stringdir
  2004     00B3  00C4               	movwf	sprintf@c^(0+128)
  2005     00B4  00A7               	movwf	??_sprintf^(0+128)
  2006     00B5  01A8               	clrf	(??_sprintf^(0+128)+1)
  2007                           
  2008                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2009                           ; Switch size 1, requested type "simple"
  2010                           ; Number of cases is 1, Range of values is 0 to 0
  2011                           ; switch strategies available:
  2012                           ; Name         Instructions Cycles
  2013                           ; simple_byte            4     3 (average)
  2014                           ; direct_byte           11     8 (fixed)
  2015                           ; jumptable            260     6 (fixed)
  2016                           ;	Chosen strategy is simple_byte
  2017     00B6  0828               	movf	(??_sprintf+1)^(0+128),w
  2018     00B7  3A00               	xorlw	0	; case 0
  2019     00B8  1903               	skipnz
  2020     00B9  28BB               	goto	l5303
  2021     00BA  2838               	goto	l5205
  2022     00BB                     l5303:
  2023                           
  2024                           ; Switch size 1, requested type "simple"
  2025                           ; Number of cases is 3, Range of values is 0 to 117
  2026                           ; switch strategies available:
  2027                           ; Name         Instructions Cycles
  2028                           ; simple_byte           10     6 (average)
  2029                           ; jumptable            260     6 (fixed)
  2030                           ;	Chosen strategy is simple_byte
  2031     00BB  0827               	movf	??_sprintf^(0+128),w
  2032     00BC  3A00               	xorlw	0	; case 0
  2033     00BD  1903               	skipnz
  2034     00BE  2E59               	goto	l5207
  2035     00BF  3A66               	xorlw	102	; case 102
  2036     00C0  1903               	skipnz
  2037     00C1  28A2               	goto	l350
  2038     00C2  3A13               	xorlw	19	; case 117
  2039     00C3  1903               	skipnz
  2040     00C4  28A4               	goto	l5005
  2041     00C5  2838               	goto	l5205
  2042     00C6                     l5011:
  2043                           
  2044                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2045     00C6  3000               	movlw	0
  2046     00C7  0531               	andwf	sprintf@flag^(0+128),w
  2047     00C8  00A7               	movwf	??_sprintf^(0+128)
  2048     00C9  3007               	movlw	7
  2049     00CA  0532               	andwf	(sprintf@flag+1)^(0+128),w
  2050     00CB  00A8               	movwf	(??_sprintf+1)^(0+128)
  2051     00CC  0827               	movf	??_sprintf^(0+128),w
  2052     00CD  0428               	iorwf	(??_sprintf^(0+128)+1),w
  2053     00CE  1903               	btfsc	3,2
  2054     00CF  2D70               	goto	l5159
  2055                           
  2056                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2057     00D0  1E32               	btfss	(sprintf@flag+1)^(0+128),4
  2058     00D1  28D6               	goto	l5017
  2059                           
  2060                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2061     00D2  3006               	movlw	6
  2062     00D3  00C2               	movwf	sprintf@prec^(0+128)
  2063     00D4  3000               	movlw	0
  2064     00D5  00C3               	movwf	(sprintf@prec^(0+128)+1)
  2065     00D6                     l5017:
  2066                           
  2067                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2068     00D6  0830               	movf	sprintf@ap^(0+128),w
  2069     00D7  0084               	movwf	4
  2070     00D8  1383               	bcf	3,7	;select IRP bank0
  2071     00D9  0800               	movf	0,w
  2072     00DA  00BE               	movwf	sprintf@fval^(0+128)
  2073     00DB  0A84               	incf	4,f
  2074     00DC  0800               	movf	0,w
  2075     00DD  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2076     00DE  0A84               	incf	4,f
  2077     00DF  0800               	movf	0,w
  2078     00E0  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2079     00E1  0A84               	incf	4,f
  2080     00E2  0800               	movf	0,w
  2081     00E3  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2082     00E4  3004               	movlw	4
  2083     00E5  00FF               	movwf	127
  2084     00E6  087F               	movf	127,w
  2085     00E7  07B0               	addwf	sprintf@ap^(0+128),f
  2086                           
  2087                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2088     00E8  0841               	movf	(sprintf@fval+3)^(0+128),w
  2089     00E9  00F5               	movwf	___flge@ff1+3
  2090     00EA  0840               	movf	(sprintf@fval+2)^(0+128),w
  2091     00EB  00F4               	movwf	___flge@ff1+2
  2092     00EC  083F               	movf	(sprintf@fval+1)^(0+128),w
  2093     00ED  00F3               	movwf	___flge@ff1+1
  2094     00EE  083E               	movf	sprintf@fval^(0+128),w
  2095     00EF  00F2               	movwf	___flge@ff1
  2096     00F0  3000               	movlw	0
  2097     00F1  00F9               	movwf	___flge@ff2+3
  2098     00F2  3000               	movlw	0
  2099     00F3  00F8               	movwf	___flge@ff2+2
  2100     00F4  3000               	movlw	0
  2101     00F5  00F7               	movwf	___flge@ff2+1
  2102     00F6  3000               	movlw	0
  2103     00F7  00F6               	movwf	___flge@ff2
  2104     00F8  160A  118A  211C  120A  118A  	fcall	___flge
  2105     00FD  1803               	btfsc	3,0
  2106     00FE  2919               	goto	l5027
  2107                           
  2108                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2109     00FF  1683               	bsf	3,5	;RP0=1, select bank1
  2110     0100  0841               	movf	(sprintf@fval+3)^(0+128),w
  2111     0101  00F5               	movwf	___flneg@f1+3
  2112     0102  0840               	movf	(sprintf@fval+2)^(0+128),w
  2113     0103  00F4               	movwf	___flneg@f1+2
  2114     0104  083F               	movf	(sprintf@fval+1)^(0+128),w
  2115     0105  00F3               	movwf	___flneg@f1+1
  2116     0106  083E               	movf	sprintf@fval^(0+128),w
  2117     0107  00F2               	movwf	___flneg@f1
  2118     0108  120A  118A  27F5  120A  118A  	fcall	___flneg
  2119     010D  0875               	movf	?___flneg+3,w
  2120     010E  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2121     010F  0874               	movf	?___flneg+2,w
  2122     0110  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2123     0111  0873               	movf	?___flneg+1,w
  2124     0112  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2125     0113  0872               	movf	?___flneg,w
  2126     0114  00BE               	movwf	sprintf@fval^(0+128)
  2127                           
  2128                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2129     0115  3003               	movlw	3
  2130     0116  04B1               	iorwf	sprintf@flag^(0+128),f
  2131     0117  3000               	movlw	0
  2132     0118  04B2               	iorwf	(sprintf@flag+1)^(0+128),f
  2133     0119                     l5027:
  2134                           
  2135                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2136     0119  1683               	bsf	3,5	;RP0=1, select bank1
  2137     011A  01B7               	clrf	sprintf@eexp^(0+128)
  2138     011B  01B8               	clrf	(sprintf@eexp+1)^(0+128)
  2139                           
  2140                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2141     011C  0841               	movf	(sprintf@fval+3)^(0+128),w
  2142     011D  00F5               	movwf	___fleq@ff1+3
  2143     011E  0840               	movf	(sprintf@fval+2)^(0+128),w
  2144     011F  00F4               	movwf	___fleq@ff1+2
  2145     0120  083F               	movf	(sprintf@fval+1)^(0+128),w
  2146     0121  00F3               	movwf	___fleq@ff1+1
  2147     0122  083E               	movf	sprintf@fval^(0+128),w
  2148     0123  00F2               	movwf	___fleq@ff1
  2149     0124  3000               	movlw	0
  2150     0125  00F9               	movwf	___fleq@ff2+3
  2151     0126  3000               	movlw	0
  2152     0127  00F8               	movwf	___fleq@ff2+2
  2153     0128  3000               	movlw	0
  2154     0129  00F7               	movwf	___fleq@ff2+1
  2155     012A  3000               	movlw	0
  2156     012B  00F6               	movwf	___fleq@ff2
  2157     012C  160A  158A  25E6  120A  118A  	fcall	___fleq
  2158     0131  1803               	btfsc	3,0
  2159     0132  29FB               	goto	l5055
  2160                           
  2161                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2162     0133  1003               	clrc
  2163     0134  1683               	bsf	3,5	;RP0=1, select bank1
  2164     0135  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  2165     0136  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  2166     0137  3E82               	addlw	130
  2167     0138  00B7               	movwf	sprintf@eexp^(0+128)
  2168     0139  30FF               	movlw	255
  2169     013A  1803               	skipnc
  2170     013B  3000               	movlw	0
  2171     013C  00B8               	movwf	(sprintf@eexp^(0+128)+1)
  2172                           
  2173                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2174     013D  30FF               	movlw	255
  2175     013E  07B7               	addwf	sprintf@eexp^(0+128),f
  2176     013F  1803               	skipnc
  2177     0140  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2178     0141  30FF               	movlw	255
  2179     0142  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2180                           
  2181                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2182     0143  3003               	movlw	3
  2183     0144  00F2               	movwf	___wmul@multiplier
  2184     0145  3000               	movlw	0
  2185     0146  00F3               	movwf	___wmul@multiplier+1
  2186     0147  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2187     0148  00F5               	movwf	___wmul@multiplicand+1
  2188     0149  0837               	movf	sprintf@eexp^(0+128),w
  2189     014A  00F4               	movwf	___wmul@multiplicand
  2190     014B  160A  158A  249F  120A  118A  	fcall	___wmul
  2191     0150  0873               	movf	?___wmul+1,w
  2192     0151  00B8               	movwf	(sprintf@eexp+1)^(0+128)
  2193     0152  0872               	movf	?___wmul,w
  2194     0153  00B7               	movwf	sprintf@eexp^(0+128)
  2195                           
  2196                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2197     0154  300A               	movlw	10
  2198     0155  1283               	bcf	3,5	;RP0=0, select bank0
  2199     0156  00A0               	movwf	___awdiv@divisor
  2200     0157  3000               	movlw	0
  2201     0158  00A1               	movwf	___awdiv@divisor+1
  2202     0159  1683               	bsf	3,5	;RP0=1, select bank1
  2203     015A  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2204     015B  1283               	bcf	3,5	;RP0=0, select bank0
  2205     015C  00A3               	movwf	___awdiv@dividend+1
  2206     015D  1683               	bsf	3,5	;RP0=1, select bank1
  2207     015E  0837               	movf	sprintf@eexp^(0+128),w
  2208     015F  1283               	bcf	3,5	;RP0=0, select bank0
  2209     0160  00A2               	movwf	___awdiv@dividend
  2210     0161  160A  158A  26C6  120A  118A  	fcall	___awdiv
  2211     0166  0821               	movf	?___awdiv+1,w
  2212     0167  1683               	bsf	3,5	;RP0=1, select bank1
  2213     0168  00B8               	movwf	(sprintf@eexp+1)^(0+128)
  2214     0169  1283               	bcf	3,5	;RP0=0, select bank0
  2215     016A  0820               	movf	?___awdiv,w
  2216     016B  1683               	bsf	3,5	;RP0=1, select bank1
  2217     016C  00B7               	movwf	sprintf@eexp^(0+128)
  2218                           
  2219                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2220     016D  1FB8               	btfss	(sprintf@eexp+1)^(0+128),7
  2221     016E  2975               	goto	l5043
  2222                           
  2223                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2224     016F  30FF               	movlw	255
  2225     0170  07B7               	addwf	sprintf@eexp^(0+128),f
  2226     0171  1803               	skipnc
  2227     0172  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2228     0173  30FF               	movlw	255
  2229     0174  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2230     0175                     l5043:
  2231                           
  2232                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2233     0175  0337               	decf	sprintf@eexp^(0+128),w
  2234     0176  3AFF               	xorlw	255
  2235     0177  120A  158A  24D8  120A  118A  	fcall	_scale
  2236     017C  0856               	movf	?_scale+3,w
  2237     017D  1683               	bsf	3,5	;RP0=1, select bank1
  2238     017E  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2239     017F  1283               	bcf	3,5	;RP0=0, select bank0
  2240     0180  0855               	movf	?_scale+2,w
  2241     0181  1683               	bsf	3,5	;RP0=1, select bank1
  2242     0182  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2243     0183  1283               	bcf	3,5	;RP0=0, select bank0
  2244     0184  0854               	movf	?_scale+1,w
  2245     0185  1683               	bsf	3,5	;RP0=1, select bank1
  2246     0186  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2247     0187  1283               	bcf	3,5	;RP0=0, select bank0
  2248     0188  0853               	movf	?_scale,w
  2249     0189  1683               	bsf	3,5	;RP0=1, select bank1
  2250     018A  00B9               	movwf	sprintf@tmpval^(0+128)
  2251                           
  2252                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2253     018B  0841               	movf	(sprintf@fval+3)^(0+128),w
  2254     018C  1283               	bcf	3,5	;RP0=0, select bank0
  2255     018D  00BC               	movwf	___flmul@b+3
  2256     018E  1683               	bsf	3,5	;RP0=1, select bank1
  2257     018F  0840               	movf	(sprintf@fval+2)^(0+128),w
  2258     0190  1283               	bcf	3,5	;RP0=0, select bank0
  2259     0191  00BB               	movwf	___flmul@b+2
  2260     0192  1683               	bsf	3,5	;RP0=1, select bank1
  2261     0193  083F               	movf	(sprintf@fval+1)^(0+128),w
  2262     0194  1283               	bcf	3,5	;RP0=0, select bank0
  2263     0195  00BA               	movwf	___flmul@b+1
  2264     0196  1683               	bsf	3,5	;RP0=1, select bank1
  2265     0197  083E               	movf	sprintf@fval^(0+128),w
  2266     0198  1283               	bcf	3,5	;RP0=0, select bank0
  2267     0199  00B9               	movwf	___flmul@b
  2268     019A  1683               	bsf	3,5	;RP0=1, select bank1
  2269     019B  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2270     019C  1283               	bcf	3,5	;RP0=0, select bank0
  2271     019D  00C0               	movwf	___flmul@a+3
  2272     019E  1683               	bsf	3,5	;RP0=1, select bank1
  2273     019F  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2274     01A0  1283               	bcf	3,5	;RP0=0, select bank0
  2275     01A1  00BF               	movwf	___flmul@a+2
  2276     01A2  1683               	bsf	3,5	;RP0=1, select bank1
  2277     01A3  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2278     01A4  1283               	bcf	3,5	;RP0=0, select bank0
  2279     01A5  00BE               	movwf	___flmul@a+1
  2280     01A6  1683               	bsf	3,5	;RP0=1, select bank1
  2281     01A7  0839               	movf	sprintf@tmpval^(0+128),w
  2282     01A8  1283               	bcf	3,5	;RP0=0, select bank0
  2283     01A9  00BD               	movwf	___flmul@a
  2284     01AA  120A  158A  21FF  120A  118A  	fcall	___flmul
  2285     01AF  083C               	movf	?___flmul+3,w
  2286     01B0  1683               	bsf	3,5	;RP0=1, select bank1
  2287     01B1  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2288     01B2  1283               	bcf	3,5	;RP0=0, select bank0
  2289     01B3  083B               	movf	?___flmul+2,w
  2290     01B4  1683               	bsf	3,5	;RP0=1, select bank1
  2291     01B5  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2292     01B6  1283               	bcf	3,5	;RP0=0, select bank0
  2293     01B7  083A               	movf	?___flmul+1,w
  2294     01B8  1683               	bsf	3,5	;RP0=1, select bank1
  2295     01B9  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2296     01BA  1283               	bcf	3,5	;RP0=0, select bank0
  2297     01BB  0839               	movf	?___flmul,w
  2298     01BC  1683               	bsf	3,5	;RP0=1, select bank1
  2299     01BD  00B9               	movwf	sprintf@tmpval^(0+128)
  2300                           
  2301                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2302     01BE  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2303     01BF  00F5               	movwf	___flge@ff1+3
  2304     01C0  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2305     01C1  00F4               	movwf	___flge@ff1+2
  2306     01C2  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2307     01C3  00F3               	movwf	___flge@ff1+1
  2308     01C4  0839               	movf	sprintf@tmpval^(0+128),w
  2309     01C5  00F2               	movwf	___flge@ff1
  2310     01C6  303F               	movlw	63
  2311     01C7  00F9               	movwf	___flge@ff2+3
  2312     01C8  3080               	movlw	128
  2313     01C9  00F8               	movwf	___flge@ff2+2
  2314     01CA  3000               	movlw	0
  2315     01CB  00F7               	movwf	___flge@ff2+1
  2316     01CC  3000               	movlw	0
  2317     01CD  00F6               	movwf	___flge@ff2
  2318     01CE  160A  118A  211C  120A  118A  	fcall	___flge
  2319     01D3  1803               	btfsc	3,0
  2320     01D4  29DC               	goto	l5051
  2321                           
  2322                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2323     01D5  30FF               	movlw	255
  2324     01D6  1683               	bsf	3,5	;RP0=1, select bank1
  2325     01D7  07B7               	addwf	sprintf@eexp^(0+128),f
  2326     01D8  1803               	skipnc
  2327     01D9  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2328     01DA  30FF               	movlw	255
  2329     01DB  29FA               	goto	L3
  2330     01DC                     l5051:
  2331     01DC  1683               	bsf	3,5	;RP0=1, select bank1
  2332     01DD  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2333     01DE  00F5               	movwf	___flge@ff1+3
  2334     01DF  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2335     01E0  00F4               	movwf	___flge@ff1+2
  2336     01E1  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2337     01E2  00F3               	movwf	___flge@ff1+1
  2338     01E3  0839               	movf	sprintf@tmpval^(0+128),w
  2339     01E4  00F2               	movwf	___flge@ff1
  2340     01E5  3041               	movlw	65
  2341     01E6  00F9               	movwf	___flge@ff2+3
  2342     01E7  3020               	movlw	32
  2343     01E8  00F8               	movwf	___flge@ff2+2
  2344     01E9  3000               	movlw	0
  2345     01EA  00F7               	movwf	___flge@ff2+1
  2346     01EB  3000               	movlw	0
  2347     01EC  00F6               	movwf	___flge@ff2
  2348     01ED  160A  118A  211C  120A  118A  	fcall	___flge
  2349     01F2  1C03               	btfss	3,0
  2350     01F3  29FB               	goto	l5055
  2351                           
  2352                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2353     01F4  3001               	movlw	1
  2354     01F5  1683               	bsf	3,5	;RP0=1, select bank1
  2355     01F6  07B7               	addwf	sprintf@eexp^(0+128),f
  2356     01F7  1803               	skipnc
  2357     01F8  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2358     01F9  3000               	movlw	0
  2359     01FA                     L3:
  2360     01FA  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2361     01FB                     l5055:
  2362                           
  2363                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2364     01FB  1683               	bsf	3,5	;RP0=1, select bank1
  2365     01FC  0843               	movf	(sprintf@prec+1)^(0+128),w
  2366     01FD  3A80               	xorlw	128
  2367     01FE  00FF               	movwf	127
  2368     01FF  3080               	movlw	128
  2369     0200  027F               	subwf	127,w
  2370     0201  1D03               	skipz
  2371     0202  2A05               	goto	u8735
  2372     0203  300D               	movlw	13
  2373     0204  0242               	subwf	sprintf@prec^(0+128),w
  2374     0205                     u8735:
  2375     0205  1803               	skipnc
  2376     0206  2A3B               	goto	l5059
  2377                           
  2378                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2379     0207  1683               	bsf	3,5	;RP0=1, select bank1
  2380     0208  1303               	bcf	3,6	;RP1=0, select bank1
  2381     0209  0842               	movf	sprintf@prec^(0+128),w
  2382     020A  160A  118A  2649  120A  118A  	fcall	_fround
  2383     020F  0856               	movf	?_fround+3,w
  2384     0210  00A8               	movwf	___fladd@b+3
  2385     0211  0855               	movf	?_fround+2,w
  2386     0212  00A7               	movwf	___fladd@b+2
  2387     0213  0854               	movf	?_fround+1,w
  2388     0214  00A6               	movwf	___fladd@b+1
  2389     0215  0853               	movf	?_fround,w
  2390     0216  00A5               	movwf	___fladd@b
  2391     0217  1683               	bsf	3,5	;RP0=1, select bank1
  2392     0218  0841               	movf	(sprintf@fval+3)^(0+128),w
  2393     0219  1283               	bcf	3,5	;RP0=0, select bank0
  2394     021A  00AC               	movwf	___fladd@a+3
  2395     021B  1683               	bsf	3,5	;RP0=1, select bank1
  2396     021C  0840               	movf	(sprintf@fval+2)^(0+128),w
  2397     021D  1283               	bcf	3,5	;RP0=0, select bank0
  2398     021E  00AB               	movwf	___fladd@a+2
  2399     021F  1683               	bsf	3,5	;RP0=1, select bank1
  2400     0220  083F               	movf	(sprintf@fval+1)^(0+128),w
  2401     0221  1283               	bcf	3,5	;RP0=0, select bank0
  2402     0222  00AA               	movwf	___fladd@a+1
  2403     0223  1683               	bsf	3,5	;RP0=1, select bank1
  2404     0224  083E               	movf	sprintf@fval^(0+128),w
  2405     0225  1283               	bcf	3,5	;RP0=0, select bank0
  2406     0226  00A9               	movwf	___fladd@a
  2407     0227  120A  158A  2002  120A  118A  	fcall	___fladd
  2408     022C  0828               	movf	?___fladd+3,w
  2409     022D  1683               	bsf	3,5	;RP0=1, select bank1
  2410     022E  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2411     022F  1283               	bcf	3,5	;RP0=0, select bank0
  2412     0230  0827               	movf	?___fladd+2,w
  2413     0231  1683               	bsf	3,5	;RP0=1, select bank1
  2414     0232  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2415     0233  1283               	bcf	3,5	;RP0=0, select bank0
  2416     0234  0826               	movf	?___fladd+1,w
  2417     0235  1683               	bsf	3,5	;RP0=1, select bank1
  2418     0236  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2419     0237  1283               	bcf	3,5	;RP0=0, select bank0
  2420     0238  0825               	movf	?___fladd,w
  2421     0239  1683               	bsf	3,5	;RP0=1, select bank1
  2422     023A  00BE               	movwf	sprintf@fval^(0+128)
  2423     023B                     l5059:
  2424                           
  2425                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2426     023B  1683               	bsf	3,5	;RP0=1, select bank1
  2427     023C  1303               	bcf	3,6	;RP1=0, select bank1
  2428     023D  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2429     023E  3A80               	xorlw	128
  2430     023F  00FF               	movwf	127
  2431     0240  3080               	movlw	128
  2432     0241  027F               	subwf	127,w
  2433     0242  1D03               	skipz
  2434     0243  2A46               	goto	u8745
  2435     0244  300A               	movlw	10
  2436     0245  0237               	subwf	sprintf@eexp^(0+128),w
  2437     0246                     u8745:
  2438     0246  1803               	skipnc
  2439     0247  2A88               	goto	l5067
  2440     0248  1683               	bsf	3,5	;RP0=1, select bank1
  2441     0249  1303               	bcf	3,6	;RP1=0, select bank1
  2442     024A  0841               	movf	(sprintf@fval+3)^(0+128),w
  2443     024B  00F5               	movwf	___fleq@ff1+3
  2444     024C  0840               	movf	(sprintf@fval+2)^(0+128),w
  2445     024D  00F4               	movwf	___fleq@ff1+2
  2446     024E  083F               	movf	(sprintf@fval+1)^(0+128),w
  2447     024F  00F3               	movwf	___fleq@ff1+1
  2448     0250  083E               	movf	sprintf@fval^(0+128),w
  2449     0251  00F2               	movwf	___fleq@ff1
  2450     0252  3000               	movlw	0
  2451     0253  00F9               	movwf	___fleq@ff2+3
  2452     0254  3000               	movlw	0
  2453     0255  00F8               	movwf	___fleq@ff2+2
  2454     0256  3000               	movlw	0
  2455     0257  00F7               	movwf	___fleq@ff2+1
  2456     0258  3000               	movlw	0
  2457     0259  00F6               	movwf	___fleq@ff2
  2458     025A  160A  158A  25E6  120A  118A  	fcall	___fleq
  2459     025F  1803               	btfsc	3,0
  2460     0260  2AE6               	goto	l5081
  2461     0261  1683               	bsf	3,5	;RP0=1, select bank1
  2462     0262  0841               	movf	(sprintf@fval+3)^(0+128),w
  2463     0263  1283               	bcf	3,5	;RP0=0, select bank0
  2464     0264  00E9               	movwf	___fltol@f1+3
  2465     0265  1683               	bsf	3,5	;RP0=1, select bank1
  2466     0266  0840               	movf	(sprintf@fval+2)^(0+128),w
  2467     0267  1283               	bcf	3,5	;RP0=0, select bank0
  2468     0268  00E8               	movwf	___fltol@f1+2
  2469     0269  1683               	bsf	3,5	;RP0=1, select bank1
  2470     026A  083F               	movf	(sprintf@fval+1)^(0+128),w
  2471     026B  1283               	bcf	3,5	;RP0=0, select bank0
  2472     026C  00E7               	movwf	___fltol@f1+1
  2473     026D  1683               	bsf	3,5	;RP0=1, select bank1
  2474     026E  083E               	movf	sprintf@fval^(0+128),w
  2475     026F  1283               	bcf	3,5	;RP0=0, select bank0
  2476     0270  00E6               	movwf	___fltol@f1
  2477     0271  160A  158A  271F  120A  118A  	fcall	___fltol
  2478     0276  0869               	movf	?___fltol+3,w
  2479     0277  0468               	iorwf	?___fltol+2,w
  2480     0278  0467               	iorwf	?___fltol+1,w
  2481     0279  0466               	iorwf	?___fltol,w
  2482     027A  1D03               	skipz
  2483     027B  2AE6               	goto	l5081
  2484     027C  1683               	bsf	3,5	;RP0=1, select bank1
  2485     027D  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2486     027E  3A80               	xorlw	128
  2487     027F  00FF               	movwf	127
  2488     0280  3080               	movlw	128
  2489     0281  027F               	subwf	127,w
  2490     0282  1D03               	skipz
  2491     0283  2A86               	goto	u8775
  2492     0284  3002               	movlw	2
  2493     0285  0237               	subwf	sprintf@eexp^(0+128),w
  2494     0286                     u8775:
  2495     0286  1C03               	skipc
  2496     0287  2AE6               	goto	l5081
  2497     0288                     l5067:
  2498                           
  2499                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2500     0288  1683               	bsf	3,5	;RP0=1, select bank1
  2501     0289  1303               	bcf	3,6	;RP1=0, select bank1
  2502     028A  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2503     028B  00F5               	movwf	___flge@ff1+3
  2504     028C  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2505     028D  00F4               	movwf	___flge@ff1+2
  2506     028E  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2507     028F  00F3               	movwf	___flge@ff1+1
  2508     0290  0839               	movf	sprintf@tmpval^(0+128),w
  2509     0291  00F2               	movwf	___flge@ff1
  2510     0292  3040               	movlw	64
  2511     0293  00F9               	movwf	___flge@ff2+3
  2512     0294  3089               	movlw	137
  2513     0295  00F8               	movwf	___flge@ff2+2
  2514     0296  3070               	movlw	112
  2515     0297  00F7               	movwf	___flge@ff2+1
  2516     0298  305F               	movlw	95
  2517     0299  00F6               	movwf	___flge@ff2
  2518     029A  160A  118A  211C  120A  118A  	fcall	___flge
  2519     029F  1803               	btfsc	3,0
  2520     02A0  2AA3               	goto	l5071
  2521                           
  2522                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2523     02A1  30F7               	movlw	247
  2524     02A2  2AA4               	goto	L4
  2525     02A3                     l5071:	
  2526                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2527                           
  2528                           
  2529                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2530     02A3  30F8               	movlw	248
  2531     02A4                     L4:
  2532     02A4  1683               	bsf	3,5	;RP0=1, select bank1
  2533     02A5  07B7               	addwf	sprintf@eexp^(0+128),f
  2534     02A6  1803               	skipnc
  2535     02A7  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2536     02A8  30FF               	movlw	255
  2537     02A9  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2538                           
  2539                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2540     02AA  0837               	movf	sprintf@eexp^(0+128),w
  2541     02AB  120A  158A  24D8  120A  118A  	fcall	_scale
  2542     02B0  0856               	movf	?_scale+3,w
  2543     02B1  1683               	bsf	3,5	;RP0=1, select bank1
  2544     02B2  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2545     02B3  1283               	bcf	3,5	;RP0=0, select bank0
  2546     02B4  0855               	movf	?_scale+2,w
  2547     02B5  1683               	bsf	3,5	;RP0=1, select bank1
  2548     02B6  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2549     02B7  1283               	bcf	3,5	;RP0=0, select bank0
  2550     02B8  0854               	movf	?_scale+1,w
  2551     02B9  1683               	bsf	3,5	;RP0=1, select bank1
  2552     02BA  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2553     02BB  1283               	bcf	3,5	;RP0=0, select bank0
  2554     02BC  0853               	movf	?_scale,w
  2555     02BD  1683               	bsf	3,5	;RP0=1, select bank1
  2556     02BE  00B9               	movwf	sprintf@tmpval^(0+128)
  2557     02BF  0841               	movf	(sprintf@fval+3)^(0+128),w
  2558     02C0  00F5               	movwf	__div_to_l_@f1+3
  2559     02C1  0840               	movf	(sprintf@fval+2)^(0+128),w
  2560     02C2  00F4               	movwf	__div_to_l_@f1+2
  2561     02C3  083F               	movf	(sprintf@fval+1)^(0+128),w
  2562     02C4  00F3               	movwf	__div_to_l_@f1+1
  2563     02C5  083E               	movf	sprintf@fval^(0+128),w
  2564     02C6  00F2               	movwf	__div_to_l_@f1
  2565     02C7  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2566     02C8  00F9               	movwf	__div_to_l_@f2+3
  2567     02C9  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2568     02CA  00F8               	movwf	__div_to_l_@f2+2
  2569     02CB  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2570     02CC  00F7               	movwf	__div_to_l_@f2+1
  2571     02CD  0839               	movf	sprintf@tmpval^(0+128),w
  2572     02CE  00F6               	movwf	__div_to_l_@f2
  2573     02CF  160A  118A  2253  120A  118A  	fcall	__div_to_l_
  2574     02D4  0875               	movf	?__div_to_l_+3,w
  2575     02D5  1683               	bsf	3,5	;RP0=1, select bank1
  2576     02D6  00B6               	movwf	(sprintf@val+3)^(0+128)
  2577     02D7  0874               	movf	?__div_to_l_+2,w
  2578     02D8  00B5               	movwf	(sprintf@val+2)^(0+128)
  2579     02D9  0873               	movf	?__div_to_l_+1,w
  2580     02DA  00B4               	movwf	(sprintf@val+1)^(0+128)
  2581     02DB  0872               	movf	?__div_to_l_,w
  2582     02DC  00B3               	movwf	sprintf@val^(0+128)
  2583                           
  2584                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2585     02DD  3000               	movlw	0
  2586     02DE  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2587     02DF  3000               	movlw	0
  2588     02E0  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2589     02E1  3000               	movlw	0
  2590     02E2  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2591     02E3  3000               	movlw	0
  2592     02E4  00BE               	movwf	sprintf@fval^(0+128)
  2593                           
  2594                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2595     02E5  2B47               	goto	l5085
  2596     02E6                     l5081:
  2597                           
  2598                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2599     02E6  1683               	bsf	3,5	;RP0=1, select bank1
  2600     02E7  1303               	bcf	3,6	;RP1=0, select bank1
  2601     02E8  0841               	movf	(sprintf@fval+3)^(0+128),w
  2602     02E9  1283               	bcf	3,5	;RP0=0, select bank0
  2603     02EA  00E9               	movwf	___fltol@f1+3
  2604     02EB  1683               	bsf	3,5	;RP0=1, select bank1
  2605     02EC  0840               	movf	(sprintf@fval+2)^(0+128),w
  2606     02ED  1283               	bcf	3,5	;RP0=0, select bank0
  2607     02EE  00E8               	movwf	___fltol@f1+2
  2608     02EF  1683               	bsf	3,5	;RP0=1, select bank1
  2609     02F0  083F               	movf	(sprintf@fval+1)^(0+128),w
  2610     02F1  1283               	bcf	3,5	;RP0=0, select bank0
  2611     02F2  00E7               	movwf	___fltol@f1+1
  2612     02F3  1683               	bsf	3,5	;RP0=1, select bank1
  2613     02F4  083E               	movf	sprintf@fval^(0+128),w
  2614     02F5  1283               	bcf	3,5	;RP0=0, select bank0
  2615     02F6  00E6               	movwf	___fltol@f1
  2616     02F7  160A  158A  271F  120A  118A  	fcall	___fltol
  2617     02FC  0869               	movf	?___fltol+3,w
  2618     02FD  1683               	bsf	3,5	;RP0=1, select bank1
  2619     02FE  00B6               	movwf	(sprintf@val+3)^(0+128)
  2620     02FF  1283               	bcf	3,5	;RP0=0, select bank0
  2621     0300  0868               	movf	?___fltol+2,w
  2622     0301  1683               	bsf	3,5	;RP0=1, select bank1
  2623     0302  00B5               	movwf	(sprintf@val+2)^(0+128)
  2624     0303  1283               	bcf	3,5	;RP0=0, select bank0
  2625     0304  0867               	movf	?___fltol+1,w
  2626     0305  1683               	bsf	3,5	;RP0=1, select bank1
  2627     0306  00B4               	movwf	(sprintf@val+1)^(0+128)
  2628     0307  1283               	bcf	3,5	;RP0=0, select bank0
  2629     0308  0866               	movf	?___fltol,w
  2630     0309  1683               	bsf	3,5	;RP0=1, select bank1
  2631     030A  00B3               	movwf	sprintf@val^(0+128)
  2632                           
  2633                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2634     030B  0836               	movf	(sprintf@val+3)^(0+128),w
  2635     030C  00F5               	movwf	___xxtofl@val+3
  2636     030D  0835               	movf	(sprintf@val+2)^(0+128),w
  2637     030E  00F4               	movwf	___xxtofl@val+2
  2638     030F  0834               	movf	(sprintf@val+1)^(0+128),w
  2639     0310  00F3               	movwf	___xxtofl@val+1
  2640     0311  0833               	movf	sprintf@val^(0+128),w
  2641     0312  00F2               	movwf	___xxtofl@val
  2642     0313  3000               	movlw	0
  2643     0314  160A  118A  21B1  120A  118A  	fcall	___xxtofl
  2644     0319  0875               	movf	?___xxtofl+3,w
  2645     031A  00BC               	movwf	___flsub@a+3
  2646     031B  0874               	movf	?___xxtofl+2,w
  2647     031C  00BB               	movwf	___flsub@a+2
  2648     031D  0873               	movf	?___xxtofl+1,w
  2649     031E  00BA               	movwf	___flsub@a+1
  2650     031F  0872               	movf	?___xxtofl,w
  2651     0320  00B9               	movwf	___flsub@a
  2652     0321  1683               	bsf	3,5	;RP0=1, select bank1
  2653     0322  0841               	movf	(sprintf@fval+3)^(0+128),w
  2654     0323  1283               	bcf	3,5	;RP0=0, select bank0
  2655     0324  00C0               	movwf	___flsub@b+3
  2656     0325  1683               	bsf	3,5	;RP0=1, select bank1
  2657     0326  0840               	movf	(sprintf@fval+2)^(0+128),w
  2658     0327  1283               	bcf	3,5	;RP0=0, select bank0
  2659     0328  00BF               	movwf	___flsub@b+2
  2660     0329  1683               	bsf	3,5	;RP0=1, select bank1
  2661     032A  083F               	movf	(sprintf@fval+1)^(0+128),w
  2662     032B  1283               	bcf	3,5	;RP0=0, select bank0
  2663     032C  00BE               	movwf	___flsub@b+1
  2664     032D  1683               	bsf	3,5	;RP0=1, select bank1
  2665     032E  083E               	movf	sprintf@fval^(0+128),w
  2666     032F  1283               	bcf	3,5	;RP0=0, select bank0
  2667     0330  00BD               	movwf	___flsub@b
  2668     0331  160A  158A  2462  120A  118A  	fcall	___flsub
  2669     0336  083C               	movf	?___flsub+3,w
  2670     0337  1683               	bsf	3,5	;RP0=1, select bank1
  2671     0338  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2672     0339  1283               	bcf	3,5	;RP0=0, select bank0
  2673     033A  083B               	movf	?___flsub+2,w
  2674     033B  1683               	bsf	3,5	;RP0=1, select bank1
  2675     033C  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2676     033D  1283               	bcf	3,5	;RP0=0, select bank0
  2677     033E  083A               	movf	?___flsub+1,w
  2678     033F  1683               	bsf	3,5	;RP0=1, select bank1
  2679     0340  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2680     0341  1283               	bcf	3,5	;RP0=0, select bank0
  2681     0342  0839               	movf	?___flsub,w
  2682     0343  1683               	bsf	3,5	;RP0=1, select bank1
  2683     0344  00BE               	movwf	sprintf@fval^(0+128)
  2684                           
  2685                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2686     0345  01B7               	clrf	sprintf@eexp^(0+128)
  2687     0346  01B8               	clrf	(sprintf@eexp+1)^(0+128)
  2688     0347                     l5085:
  2689                           
  2690                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2691     0347  01C4               	clrf	sprintf@c^(0+128)
  2692     0348  0AC4               	incf	sprintf@c^(0+128),f
  2693     0349                     l5091:
  2694                           
  2695                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2696     0349  0844               	movf	sprintf@c^(0+128),w
  2697     034A  00A7               	movwf	??_sprintf^(0+128)
  2698     034B  3001               	movlw	1
  2699     034C                     u8795:
  2700     034C  1003               	clrc
  2701     034D  0DA7               	rlf	??_sprintf^(0+128),f
  2702     034E  3EFF               	addlw	-1
  2703     034F  1D03               	skipz
  2704     0350  2B4C               	goto	u8795
  2705     0351  1003               	clrc
  2706     0352  0D27               	rlf	??_sprintf^(0+128),w
  2707     0353  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2708     0354  0084               	movwf	4
  2709     0355  160A  118A  2000  120A  118A  	fcall	stringdir
  2710     035A  00A8               	movwf	(??_sprintf+1)^(0+128)
  2711     035B  160A  118A  2000  120A  118A  	fcall	stringdir
  2712     0360  00A9               	movwf	((??_sprintf+1)^(0+128)+1)
  2713     0361  160A  118A  2000  120A  118A  	fcall	stringdir
  2714     0366  00AA               	movwf	((??_sprintf+1)^(0+128)+2)
  2715     0367  160A  118A  2000  120A  118A  	fcall	stringdir
  2716     036C  00AB               	movwf	((??_sprintf+1)^(0+128)+3)
  2717     036D  082B               	movf	(??_sprintf+4)^(0+128),w
  2718     036E  0236               	subwf	(sprintf@val+3)^(0+128),w
  2719     036F  1D03               	skipz
  2720     0370  2B7B               	goto	u8805
  2721     0371  082A               	movf	(??_sprintf+3)^(0+128),w
  2722     0372  0235               	subwf	(sprintf@val+2)^(0+128),w
  2723     0373  1D03               	skipz
  2724     0374  2B7B               	goto	u8805
  2725     0375  0829               	movf	(??_sprintf+2)^(0+128),w
  2726     0376  0234               	subwf	(sprintf@val+1)^(0+128),w
  2727     0377  1D03               	skipz
  2728     0378  2B7B               	goto	u8805
  2729     0379  0828               	movf	(??_sprintf+1)^(0+128),w
  2730     037A  0233               	subwf	sprintf@val^(0+128),w
  2731     037B                     u8805:
  2732     037B  1C03               	btfss	3,0
  2733     037C  2B85               	goto	l5099
  2734     037D  3001               	movlw	1
  2735     037E  00FF               	movwf	127
  2736     037F  087F               	movf	127,w
  2737     0380  07C4               	addwf	sprintf@c^(0+128),f
  2738     0381  300A               	movlw	10
  2739     0382  0644               	xorwf	sprintf@c^(0+128),w
  2740     0383  1D03               	btfss	3,2
  2741     0384  2B49               	goto	l5091
  2742     0385                     l5099:
  2743                           
  2744                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  2745     0385  0831               	movf	sprintf@flag^(0+128),w
  2746     0386  3903               	andlw	3
  2747     0387  1903               	btfsc	3,2
  2748     0388  2B92               	goto	l5113
  2749                           
  2750                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  2751     0389  083D               	movf	sprintf@sp^(0+128),w
  2752     038A  0084               	movwf	4
  2753     038B  302D               	movlw	45
  2754     038C                     L7:
  2755     038C  1783               	bsf	3,7	;select IRP bank2
  2756     038D  0080               	movwf	0
  2757     038E  3001               	movlw	1
  2758     038F  00FF               	movwf	127
  2759     0390  087F               	movf	127,w
  2760     0391  07BD               	addwf	sprintf@sp^(0+128),f
  2761     0392                     l5113:
  2762                           
  2763                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  2764     0392  3001               	movlw	1
  2765     0393  02C4               	subwf	sprintf@c^(0+128),f
  2766     0394  0A44               	incf	sprintf@c^(0+128),w
  2767     0395  1903               	btfsc	3,2
  2768     0396  2C14               	goto	l5121
  2769                           
  2770                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2771     0397  0844               	movf	sprintf@c^(0+128),w
  2772     0398  00A7               	movwf	??_sprintf^(0+128)
  2773     0399  3001               	movlw	1
  2774     039A                     u8835:
  2775     039A  1003               	clrc
  2776     039B  0DA7               	rlf	??_sprintf^(0+128),f
  2777     039C  3EFF               	addlw	-1
  2778     039D  1D03               	skipz
  2779     039E  2B9A               	goto	u8835
  2780     039F  1003               	clrc
  2781     03A0  0D27               	rlf	??_sprintf^(0+128),w
  2782     03A1  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2783     03A2  0084               	movwf	4
  2784     03A3  160A  118A  2000  120A  118A  	fcall	stringdir
  2785     03A8  00F2               	movwf	___lldiv@divisor
  2786     03A9  160A  118A  2000  120A  118A  	fcall	stringdir
  2787     03AE  00F3               	movwf	___lldiv@divisor+1
  2788     03AF  160A  118A  2000  120A  118A  	fcall	stringdir
  2789     03B4  00F4               	movwf	___lldiv@divisor+2
  2790     03B5  160A  118A  2000  120A  118A  	fcall	stringdir
  2791     03BA  00F5               	movwf	___lldiv@divisor+3
  2792     03BB  0836               	movf	(sprintf@val+3)^(0+128),w
  2793     03BC  00F9               	movwf	___lldiv@dividend+3
  2794     03BD  0835               	movf	(sprintf@val+2)^(0+128),w
  2795     03BE  00F8               	movwf	___lldiv@dividend+2
  2796     03BF  0834               	movf	(sprintf@val+1)^(0+128),w
  2797     03C0  00F7               	movwf	___lldiv@dividend+1
  2798     03C1  0833               	movf	sprintf@val^(0+128),w
  2799     03C2  00F6               	movwf	___lldiv@dividend
  2800     03C3  160A  118A  20BD  120A  118A  	fcall	___lldiv
  2801     03C8  0875               	movf	?___lldiv+3,w
  2802     03C9  1683               	bsf	3,5	;RP0=1, select bank1
  2803     03CA  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2804     03CB  0874               	movf	?___lldiv+2,w
  2805     03CC  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2806     03CD  0873               	movf	?___lldiv+1,w
  2807     03CE  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2808     03CF  0872               	movf	?___lldiv,w
  2809     03D0  00B9               	movwf	sprintf@tmpval^(0+128)
  2810                           
  2811                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  2812     03D1  3000               	movlw	0
  2813     03D2  1283               	bcf	3,5	;RP0=0, select bank0
  2814     03D3  00A9               	movwf	___llmod@divisor+3
  2815     03D4  3000               	movlw	0
  2816     03D5  00A8               	movwf	___llmod@divisor+2
  2817     03D6  3000               	movlw	0
  2818     03D7  00A7               	movwf	___llmod@divisor+1
  2819     03D8  300A               	movlw	10
  2820     03D9  00A6               	movwf	___llmod@divisor
  2821     03DA  1683               	bsf	3,5	;RP0=1, select bank1
  2822     03DB  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2823     03DC  1283               	bcf	3,5	;RP0=0, select bank0
  2824     03DD  00AD               	movwf	___llmod@dividend+3
  2825     03DE  1683               	bsf	3,5	;RP0=1, select bank1
  2826     03DF  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2827     03E0  1283               	bcf	3,5	;RP0=0, select bank0
  2828     03E1  00AC               	movwf	___llmod@dividend+2
  2829     03E2  1683               	bsf	3,5	;RP0=1, select bank1
  2830     03E3  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2831     03E4  1283               	bcf	3,5	;RP0=0, select bank0
  2832     03E5  00AB               	movwf	___llmod@dividend+1
  2833     03E6  1683               	bsf	3,5	;RP0=1, select bank1
  2834     03E7  0839               	movf	sprintf@tmpval^(0+128),w
  2835     03E8  1283               	bcf	3,5	;RP0=0, select bank0
  2836     03E9  00AA               	movwf	___llmod@dividend
  2837     03EA  160A  158A  267A  120A  118A  	fcall	___llmod
  2838     03EF  0829               	movf	?___llmod+3,w
  2839     03F0  1683               	bsf	3,5	;RP0=1, select bank1
  2840     03F1  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2841     03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2842     03F3  0828               	movf	?___llmod+2,w
  2843     03F4  1683               	bsf	3,5	;RP0=1, select bank1
  2844     03F5  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2845     03F6  1283               	bcf	3,5	;RP0=0, select bank0
  2846     03F7  0827               	movf	?___llmod+1,w
  2847     03F8  1683               	bsf	3,5	;RP0=1, select bank1
  2848     03F9  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2849     03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2850     03FB  0826               	movf	?___llmod,w
  2851     03FC  1683               	bsf	3,5	;RP0=1, select bank1
  2852     03FD  00B9               	movwf	sprintf@tmpval^(0+128)
  2853                           
  2854                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  2855     03FE  083D               	movf	sprintf@sp^(0+128),w
  2856     03FF  0084               	movwf	4
  2857     0400  0839               	movf	sprintf@tmpval^(0+128),w
  2858     0401  3E30               	addlw	48
  2859     0402  2B8C               	goto	L7
  2860     0403                     l5115:
  2861                           
  2862                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  2863     0403  1683               	bsf	3,5	;RP0=1, select bank1
  2864     0404  1303               	bcf	3,6	;RP1=0, select bank1
  2865     0405  083D               	movf	sprintf@sp^(0+128),w
  2866     0406  0084               	movwf	4
  2867     0407  3030               	movlw	48
  2868     0408  1783               	bsf	3,7	;select IRP bank2
  2869     0409  0080               	movwf	0
  2870     040A  3001               	movlw	1
  2871     040B  00FF               	movwf	127
  2872     040C  087F               	movf	127,w
  2873     040D  07BD               	addwf	sprintf@sp^(0+128),f
  2874                           
  2875                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  2876     040E  30FF               	movlw	255
  2877     040F  07B7               	addwf	sprintf@eexp^(0+128),f
  2878     0410  1803               	skipnc
  2879     0411  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2880     0412  30FF               	movlw	255
  2881     0413  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2882     0414                     l5121:
  2883                           
  2884                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  2885     0414  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2886     0415  3A80               	xorlw	128
  2887     0416  00FF               	movwf	127
  2888     0417  3080               	movlw	128
  2889     0418  027F               	subwf	127,w
  2890     0419  1D03               	skipz
  2891     041A  2C1D               	goto	u8855
  2892     041B  3001               	movlw	1
  2893     041C  0237               	subwf	sprintf@eexp^(0+128),w
  2894     041D                     u8855:
  2895     041D  1803               	skipnc
  2896     041E  2C03               	goto	l5115
  2897                           
  2898                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2899     041F  1683               	bsf	3,5	;RP0=1, select bank1
  2900     0420  1303               	bcf	3,6	;RP1=0, select bank1
  2901     0421  0843               	movf	(sprintf@prec+1)^(0+128),w
  2902     0422  3A80               	xorlw	128
  2903     0423  00FF               	movwf	127
  2904     0424  3080               	movlw	128
  2905     0425  027F               	subwf	127,w
  2906     0426  1D03               	skipz
  2907     0427  2C2A               	goto	u8865
  2908     0428  3009               	movlw	9
  2909     0429  0242               	subwf	sprintf@prec^(0+128),w
  2910     042A                     u8865:
  2911     042A  1C03               	skipc
  2912     042B  2C30               	goto	l5127
  2913                           
  2914                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  2915     042C  3008               	movlw	8
  2916     042D  1683               	bsf	3,5	;RP0=1, select bank1
  2917     042E  1303               	bcf	3,6	;RP1=0, select bank1
  2918     042F  2C33               	goto	L5
  2919     0430                     l5127:
  2920                           
  2921                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  2922     0430  1683               	bsf	3,5	;RP0=1, select bank1
  2923     0431  1303               	bcf	3,6	;RP1=0, select bank1
  2924     0432  0842               	movf	sprintf@prec^(0+128),w
  2925     0433                     L5:
  2926     0433  00C4               	movwf	sprintf@c^(0+128)
  2927                           
  2928                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  2929     0434  0844               	movf	sprintf@c^(0+128),w
  2930     0435  00A7               	movwf	??_sprintf^(0+128)
  2931     0436  01A8               	clrf	(??_sprintf^(0+128)+1)
  2932     0437  0827               	movf	??_sprintf^(0+128),w
  2933     0438  02C2               	subwf	sprintf@prec^(0+128),f
  2934     0439  0828               	movf	(??_sprintf+1)^(0+128),w
  2935     043A  1C03               	skipc
  2936     043B  03C3               	decf	(sprintf@prec+1)^(0+128),f
  2937     043C  02C3               	subwf	(sprintf@prec+1)^(0+128),f
  2938                           
  2939                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  2940     043D  0844               	movf	sprintf@c^(0+128),w
  2941     043E  1903               	btfsc	3,2
  2942     043F  2C49               	goto	l5135
  2943                           
  2944                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  2945     0440  083D               	movf	sprintf@sp^(0+128),w
  2946     0441  0084               	movwf	4
  2947     0442  302E               	movlw	46
  2948     0443  1783               	bsf	3,7	;select IRP bank2
  2949     0444  0080               	movwf	0
  2950     0445  3001               	movlw	1
  2951     0446  00FF               	movwf	127
  2952     0447  087F               	movf	127,w
  2953     0448  07BD               	addwf	sprintf@sp^(0+128),f
  2954     0449                     l5135:
  2955                           
  2956                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  2957     0449  0844               	movf	sprintf@c^(0+128),w
  2958     044A  120A  158A  24D8  120A  118A  	fcall	_scale
  2959     044F  0856               	movf	?_scale+3,w
  2960     0450  1683               	bsf	3,5	;RP0=1, select bank1
  2961     0451  00AF               	movwf	(_sprintf$1071+3)^(0+128)
  2962     0452  1283               	bcf	3,5	;RP0=0, select bank0
  2963     0453  0855               	movf	?_scale+2,w
  2964     0454  1683               	bsf	3,5	;RP0=1, select bank1
  2965     0455  00AE               	movwf	(_sprintf$1071+2)^(0+128)
  2966     0456  1283               	bcf	3,5	;RP0=0, select bank0
  2967     0457  0854               	movf	?_scale+1,w
  2968     0458  1683               	bsf	3,5	;RP0=1, select bank1
  2969     0459  00AD               	movwf	(_sprintf$1071+1)^(0+128)
  2970     045A  1283               	bcf	3,5	;RP0=0, select bank0
  2971     045B  0853               	movf	?_scale,w
  2972     045C  1683               	bsf	3,5	;RP0=1, select bank1
  2973     045D  00AC               	movwf	_sprintf$1071^(0+128)
  2974                           
  2975                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  2976     045E  082F               	movf	(_sprintf$1071+3)^(0+128),w
  2977     045F  1283               	bcf	3,5	;RP0=0, select bank0
  2978     0460  00C0               	movwf	___flmul@a+3
  2979     0461  1683               	bsf	3,5	;RP0=1, select bank1
  2980     0462  082E               	movf	(_sprintf$1071+2)^(0+128),w
  2981     0463  1283               	bcf	3,5	;RP0=0, select bank0
  2982     0464  00BF               	movwf	___flmul@a+2
  2983     0465  1683               	bsf	3,5	;RP0=1, select bank1
  2984     0466  082D               	movf	(_sprintf$1071+1)^(0+128),w
  2985     0467  1283               	bcf	3,5	;RP0=0, select bank0
  2986     0468  00BE               	movwf	___flmul@a+1
  2987     0469  1683               	bsf	3,5	;RP0=1, select bank1
  2988     046A  082C               	movf	_sprintf$1071^(0+128),w
  2989     046B  1283               	bcf	3,5	;RP0=0, select bank0
  2990     046C  00BD               	movwf	___flmul@a
  2991     046D  1683               	bsf	3,5	;RP0=1, select bank1
  2992     046E  0841               	movf	(sprintf@fval+3)^(0+128),w
  2993     046F  1283               	bcf	3,5	;RP0=0, select bank0
  2994     0470  00BC               	movwf	___flmul@b+3
  2995     0471  1683               	bsf	3,5	;RP0=1, select bank1
  2996     0472  0840               	movf	(sprintf@fval+2)^(0+128),w
  2997     0473  1283               	bcf	3,5	;RP0=0, select bank0
  2998     0474  00BB               	movwf	___flmul@b+2
  2999     0475  1683               	bsf	3,5	;RP0=1, select bank1
  3000     0476  083F               	movf	(sprintf@fval+1)^(0+128),w
  3001     0477  1283               	bcf	3,5	;RP0=0, select bank0
  3002     0478  00BA               	movwf	___flmul@b+1
  3003     0479  1683               	bsf	3,5	;RP0=1, select bank1
  3004     047A  083E               	movf	sprintf@fval^(0+128),w
  3005     047B  1283               	bcf	3,5	;RP0=0, select bank0
  3006     047C  00B9               	movwf	___flmul@b
  3007     047D  120A  158A  21FF  120A  118A  	fcall	___flmul
  3008     0482  083C               	movf	?___flmul+3,w
  3009     0483  00E9               	movwf	___fltol@f1+3
  3010     0484  083B               	movf	?___flmul+2,w
  3011     0485  00E8               	movwf	___fltol@f1+2
  3012     0486  083A               	movf	?___flmul+1,w
  3013     0487  00E7               	movwf	___fltol@f1+1
  3014     0488  0839               	movf	?___flmul,w
  3015     0489  00E6               	movwf	___fltol@f1
  3016     048A  160A  158A  271F  120A  118A  	fcall	___fltol
  3017     048F  0869               	movf	?___fltol+3,w
  3018     0490  1683               	bsf	3,5	;RP0=1, select bank1
  3019     0491  00B6               	movwf	(sprintf@val+3)^(0+128)
  3020     0492  1283               	bcf	3,5	;RP0=0, select bank0
  3021     0493  0868               	movf	?___fltol+2,w
  3022     0494  1683               	bsf	3,5	;RP0=1, select bank1
  3023     0495  00B5               	movwf	(sprintf@val+2)^(0+128)
  3024     0496  1283               	bcf	3,5	;RP0=0, select bank0
  3025     0497  0867               	movf	?___fltol+1,w
  3026     0498  1683               	bsf	3,5	;RP0=1, select bank1
  3027     0499  00B4               	movwf	(sprintf@val+1)^(0+128)
  3028     049A  1283               	bcf	3,5	;RP0=0, select bank0
  3029     049B  0866               	movf	?___fltol,w
  3030     049C                     L6:
  3031     049C  1683               	bsf	3,5	;RP0=1, select bank1
  3032     049D  00B3               	movwf	sprintf@val^(0+128)
  3033                           
  3034                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3035     049E  3001               	movlw	1
  3036     049F  02C4               	subwf	sprintf@c^(0+128),f
  3037     04A0  0A44               	incf	sprintf@c^(0+128),w
  3038     04A1  1903               	btfsc	3,2
  3039     04A2  2D6B               	goto	l5157
  3040                           
  3041                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3042                           
  3043                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3044     04A3  0844               	movf	sprintf@c^(0+128),w
  3045     04A4  00A7               	movwf	??_sprintf^(0+128)
  3046     04A5  3001               	movlw	1
  3047     04A6                     u8885:
  3048     04A6  1003               	clrc
  3049     04A7  0DA7               	rlf	??_sprintf^(0+128),f
  3050     04A8  3EFF               	addlw	-1
  3051     04A9  1D03               	skipz
  3052     04AA  2CA6               	goto	u8885
  3053     04AB  1003               	clrc
  3054     04AC  0D27               	rlf	??_sprintf^(0+128),w
  3055     04AD  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3056     04AE  0084               	movwf	4
  3057     04AF  160A  118A  2000  120A  118A  	fcall	stringdir
  3058     04B4  00F2               	movwf	___lldiv@divisor
  3059     04B5  160A  118A  2000  120A  118A  	fcall	stringdir
  3060     04BA  00F3               	movwf	___lldiv@divisor+1
  3061     04BB  160A  118A  2000  120A  118A  	fcall	stringdir
  3062     04C0  00F4               	movwf	___lldiv@divisor+2
  3063     04C1  160A  118A  2000  120A  118A  	fcall	stringdir
  3064     04C6  00F5               	movwf	___lldiv@divisor+3
  3065     04C7  0836               	movf	(sprintf@val+3)^(0+128),w
  3066     04C8  00F9               	movwf	___lldiv@dividend+3
  3067     04C9  0835               	movf	(sprintf@val+2)^(0+128),w
  3068     04CA  00F8               	movwf	___lldiv@dividend+2
  3069     04CB  0834               	movf	(sprintf@val+1)^(0+128),w
  3070     04CC  00F7               	movwf	___lldiv@dividend+1
  3071     04CD  0833               	movf	sprintf@val^(0+128),w
  3072     04CE  00F6               	movwf	___lldiv@dividend
  3073     04CF  160A  118A  20BD  120A  118A  	fcall	___lldiv
  3074     04D4  0875               	movf	?___lldiv+3,w
  3075     04D5  1683               	bsf	3,5	;RP0=1, select bank1
  3076     04D6  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3077     04D7  0874               	movf	?___lldiv+2,w
  3078     04D8  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3079     04D9  0873               	movf	?___lldiv+1,w
  3080     04DA  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3081     04DB  0872               	movf	?___lldiv,w
  3082     04DC  00B9               	movwf	sprintf@tmpval^(0+128)
  3083                           
  3084                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3085     04DD  3000               	movlw	0
  3086     04DE  1283               	bcf	3,5	;RP0=0, select bank0
  3087     04DF  00A9               	movwf	___llmod@divisor+3
  3088     04E0  3000               	movlw	0
  3089     04E1  00A8               	movwf	___llmod@divisor+2
  3090     04E2  3000               	movlw	0
  3091     04E3  00A7               	movwf	___llmod@divisor+1
  3092     04E4  300A               	movlw	10
  3093     04E5  00A6               	movwf	___llmod@divisor
  3094     04E6  1683               	bsf	3,5	;RP0=1, select bank1
  3095     04E7  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3096     04E8  1283               	bcf	3,5	;RP0=0, select bank0
  3097     04E9  00AD               	movwf	___llmod@dividend+3
  3098     04EA  1683               	bsf	3,5	;RP0=1, select bank1
  3099     04EB  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3100     04EC  1283               	bcf	3,5	;RP0=0, select bank0
  3101     04ED  00AC               	movwf	___llmod@dividend+2
  3102     04EE  1683               	bsf	3,5	;RP0=1, select bank1
  3103     04EF  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3104     04F0  1283               	bcf	3,5	;RP0=0, select bank0
  3105     04F1  00AB               	movwf	___llmod@dividend+1
  3106     04F2  1683               	bsf	3,5	;RP0=1, select bank1
  3107     04F3  0839               	movf	sprintf@tmpval^(0+128),w
  3108     04F4  1283               	bcf	3,5	;RP0=0, select bank0
  3109     04F5  00AA               	movwf	___llmod@dividend
  3110     04F6  160A  158A  267A  120A  118A  	fcall	___llmod
  3111     04FB  0829               	movf	?___llmod+3,w
  3112     04FC  1683               	bsf	3,5	;RP0=1, select bank1
  3113     04FD  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3114     04FE  1283               	bcf	3,5	;RP0=0, select bank0
  3115     04FF  0828               	movf	?___llmod+2,w
  3116     0500  1683               	bsf	3,5	;RP0=1, select bank1
  3117     0501  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3118     0502  1283               	bcf	3,5	;RP0=0, select bank0
  3119     0503  0827               	movf	?___llmod+1,w
  3120     0504  1683               	bsf	3,5	;RP0=1, select bank1
  3121     0505  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3122     0506  1283               	bcf	3,5	;RP0=0, select bank0
  3123     0507  0826               	movf	?___llmod,w
  3124     0508  1683               	bsf	3,5	;RP0=1, select bank1
  3125     0509  00B9               	movwf	sprintf@tmpval^(0+128)
  3126                           
  3127                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3128     050A  083D               	movf	sprintf@sp^(0+128),w
  3129     050B  0084               	movwf	4
  3130     050C  0839               	movf	sprintf@tmpval^(0+128),w
  3131     050D  3E30               	addlw	48
  3132     050E  1783               	bsf	3,7	;select IRP bank2
  3133     050F  0080               	movwf	0
  3134     0510  3001               	movlw	1
  3135     0511  00FF               	movwf	127
  3136     0512  087F               	movf	127,w
  3137     0513  07BD               	addwf	sprintf@sp^(0+128),f
  3138                           
  3139                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3140     0514  0844               	movf	sprintf@c^(0+128),w
  3141     0515  00A7               	movwf	??_sprintf^(0+128)
  3142     0516  3001               	movlw	1
  3143     0517                     u8895:
  3144     0517  1003               	clrc
  3145     0518  0DA7               	rlf	??_sprintf^(0+128),f
  3146     0519  3EFF               	addlw	-1
  3147     051A  1D03               	skipz
  3148     051B  2D17               	goto	u8895
  3149     051C  1003               	clrc
  3150     051D  0D27               	rlf	??_sprintf^(0+128),w
  3151     051E  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3152     051F  0084               	movwf	4
  3153     0520  160A  118A  2000  120A  118A  	fcall	stringdir
  3154     0525  1283               	bcf	3,5	;RP0=0, select bank0
  3155     0526  00A6               	movwf	___llmod@divisor
  3156     0527  160A  118A  2000  120A  118A  	fcall	stringdir
  3157     052C  00A7               	movwf	___llmod@divisor+1
  3158     052D  160A  118A  2000  120A  118A  	fcall	stringdir
  3159     0532  00A8               	movwf	___llmod@divisor+2
  3160     0533  160A  118A  2000  120A  118A  	fcall	stringdir
  3161     0538  00A9               	movwf	___llmod@divisor+3
  3162     0539  1683               	bsf	3,5	;RP0=1, select bank1
  3163     053A  0836               	movf	(sprintf@val+3)^(0+128),w
  3164     053B  1283               	bcf	3,5	;RP0=0, select bank0
  3165     053C  00AD               	movwf	___llmod@dividend+3
  3166     053D  1683               	bsf	3,5	;RP0=1, select bank1
  3167     053E  0835               	movf	(sprintf@val+2)^(0+128),w
  3168     053F  1283               	bcf	3,5	;RP0=0, select bank0
  3169     0540  00AC               	movwf	___llmod@dividend+2
  3170     0541  1683               	bsf	3,5	;RP0=1, select bank1
  3171     0542  0834               	movf	(sprintf@val+1)^(0+128),w
  3172     0543  1283               	bcf	3,5	;RP0=0, select bank0
  3173     0544  00AB               	movwf	___llmod@dividend+1
  3174     0545  1683               	bsf	3,5	;RP0=1, select bank1
  3175     0546  0833               	movf	sprintf@val^(0+128),w
  3176     0547  1283               	bcf	3,5	;RP0=0, select bank0
  3177     0548  00AA               	movwf	___llmod@dividend
  3178     0549  160A  158A  267A  120A  118A  	fcall	___llmod
  3179     054E  0829               	movf	?___llmod+3,w
  3180     054F  1683               	bsf	3,5	;RP0=1, select bank1
  3181     0550  00B6               	movwf	(sprintf@val+3)^(0+128)
  3182     0551  1283               	bcf	3,5	;RP0=0, select bank0
  3183     0552  0828               	movf	?___llmod+2,w
  3184     0553  1683               	bsf	3,5	;RP0=1, select bank1
  3185     0554  00B5               	movwf	(sprintf@val+2)^(0+128)
  3186     0555  1283               	bcf	3,5	;RP0=0, select bank0
  3187     0556  0827               	movf	?___llmod+1,w
  3188     0557  1683               	bsf	3,5	;RP0=1, select bank1
  3189     0558  00B4               	movwf	(sprintf@val+1)^(0+128)
  3190     0559  1283               	bcf	3,5	;RP0=0, select bank0
  3191     055A  0826               	movf	?___llmod,w
  3192     055B  2C9C               	goto	L6
  3193     055C                     l5151:
  3194                           
  3195                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3196     055C  083D               	movf	sprintf@sp^(0+128),w
  3197     055D  0084               	movwf	4
  3198     055E  3030               	movlw	48
  3199     055F  1783               	bsf	3,7	;select IRP bank2
  3200     0560  0080               	movwf	0
  3201     0561  3001               	movlw	1
  3202     0562  00FF               	movwf	127
  3203     0563  087F               	movf	127,w
  3204     0564  07BD               	addwf	sprintf@sp^(0+128),f
  3205                           
  3206                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3207     0565  30FF               	movlw	255
  3208     0566  07C2               	addwf	sprintf@prec^(0+128),f
  3209     0567  1803               	skipnc
  3210     0568  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  3211     0569  30FF               	movlw	255
  3212     056A  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  3213     056B                     l5157:
  3214                           
  3215                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3216     056B  0842               	movf	sprintf@prec^(0+128),w
  3217     056C  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3218     056D  1903               	btfsc	3,2
  3219     056E  2838               	goto	l5205
  3220     056F  2D5C               	goto	l5151
  3221     0570                     l5159:
  3222                           
  3223                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3224     0570  0830               	movf	sprintf@ap^(0+128),w
  3225     0571  0084               	movwf	4
  3226     0572  1383               	bcf	3,7	;select IRP bank0
  3227     0573  0800               	movf	0,w
  3228     0574  00A7               	movwf	??_sprintf^(0+128)
  3229     0575  0A84               	incf	4,f
  3230     0576  0800               	movf	0,w
  3231     0577  00A8               	movwf	(??_sprintf^(0+128)+1)
  3232     0578  0827               	movf	??_sprintf^(0+128),w
  3233     0579  00B3               	movwf	sprintf@val^(0+128)
  3234     057A  0828               	movf	(??_sprintf+1)^(0+128),w
  3235     057B  00B4               	movwf	(sprintf@val^(0+128)+1)
  3236     057C  01B5               	clrf	(sprintf@val^(0+128)+2)
  3237     057D  01B6               	clrf	(sprintf@val^(0+128)+3)
  3238     057E  3002               	movlw	2
  3239     057F  00FF               	movwf	127
  3240     0580  087F               	movf	127,w
  3241     0581  07B0               	addwf	sprintf@ap^(0+128),f
  3242                           
  3243                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  3244     0582  0842               	movf	sprintf@prec^(0+128),w
  3245     0583  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3246     0584  1D03               	btfss	3,2
  3247     0585  2D92               	goto	l5169
  3248     0586  0836               	movf	(sprintf@val+3)^(0+128),w
  3249     0587  0435               	iorwf	(sprintf@val+2)^(0+128),w
  3250     0588  0434               	iorwf	(sprintf@val+1)^(0+128),w
  3251     0589  0433               	iorwf	sprintf@val^(0+128),w
  3252     058A  1D03               	skipz
  3253     058B  2D92               	goto	l5169
  3254                           
  3255                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3256     058C  3001               	movlw	1
  3257     058D  07C2               	addwf	sprintf@prec^(0+128),f
  3258     058E  1803               	skipnc
  3259     058F  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  3260     0590  3000               	movlw	0
  3261     0591  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  3262     0592                     l5169:
  3263                           
  3264                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3265     0592  01C4               	clrf	sprintf@c^(0+128)
  3266     0593  0AC4               	incf	sprintf@c^(0+128),f
  3267     0594                     l5175:
  3268                           
  3269                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3270     0594  0844               	movf	sprintf@c^(0+128),w
  3271     0595  00A7               	movwf	??_sprintf^(0+128)
  3272     0596  3001               	movlw	1
  3273     0597                     u8945:
  3274     0597  1003               	clrc
  3275     0598  0DA7               	rlf	??_sprintf^(0+128),f
  3276     0599  3EFF               	addlw	-1
  3277     059A  1D03               	skipz
  3278     059B  2D97               	goto	u8945
  3279     059C  1003               	clrc
  3280     059D  0D27               	rlf	??_sprintf^(0+128),w
  3281     059E  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3282     059F  0084               	movwf	4
  3283     05A0  160A  118A  2000  120A  118A  	fcall	stringdir
  3284     05A5  00A8               	movwf	(??_sprintf+1)^(0+128)
  3285     05A6  160A  118A  2000  120A  118A  	fcall	stringdir
  3286     05AB  00A9               	movwf	((??_sprintf+1)^(0+128)+1)
  3287     05AC  160A  118A  2000  120A  118A  	fcall	stringdir
  3288     05B1  00AA               	movwf	((??_sprintf+1)^(0+128)+2)
  3289     05B2  160A  118A  2000  120A  118A  	fcall	stringdir
  3290     05B7  00AB               	movwf	((??_sprintf+1)^(0+128)+3)
  3291     05B8  082B               	movf	(??_sprintf+4)^(0+128),w
  3292     05B9  0236               	subwf	(sprintf@val+3)^(0+128),w
  3293     05BA  1D03               	skipz
  3294     05BB  2DC6               	goto	u8955
  3295     05BC  082A               	movf	(??_sprintf+3)^(0+128),w
  3296     05BD  0235               	subwf	(sprintf@val+2)^(0+128),w
  3297     05BE  1D03               	skipz
  3298     05BF  2DC6               	goto	u8955
  3299     05C0  0829               	movf	(??_sprintf+2)^(0+128),w
  3300     05C1  0234               	subwf	(sprintf@val+1)^(0+128),w
  3301     05C2  1D03               	skipz
  3302     05C3  2DC6               	goto	u8955
  3303     05C4  0828               	movf	(??_sprintf+1)^(0+128),w
  3304     05C5  0233               	subwf	sprintf@val^(0+128),w
  3305     05C6                     u8955:
  3306     05C6  1C03               	btfss	3,0
  3307     05C7  2DD0               	goto	l5183
  3308     05C8  3001               	movlw	1
  3309     05C9  00FF               	movwf	127
  3310     05CA  087F               	movf	127,w
  3311     05CB  07C4               	addwf	sprintf@c^(0+128),f
  3312     05CC  300A               	movlw	10
  3313     05CD  0644               	xorwf	sprintf@c^(0+128),w
  3314     05CE  1D03               	btfss	3,2
  3315     05CF  2D94               	goto	l5175
  3316     05D0                     l5183:
  3317                           
  3318                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3319     05D0  0843               	movf	(sprintf@prec+1)^(0+128),w
  3320     05D1  3A80               	xorlw	128
  3321     05D2  3C80               	sublw	128
  3322     05D3  1D03               	skipz
  3323     05D4  2DD7               	goto	u8975
  3324     05D5  0842               	movf	sprintf@prec^(0+128),w
  3325     05D6  0244               	subwf	sprintf@c^(0+128),w
  3326     05D7                     u8975:
  3327     05D7  1C03               	btfss	3,0
  3328     05D8  2DEF               	goto	l5191
  3329     05D9  1683               	bsf	3,5	;RP0=1, select bank1
  3330     05DA  1303               	bcf	3,6	;RP1=0, select bank1
  3331     05DB  0843               	movf	(sprintf@prec+1)^(0+128),w
  3332     05DC  3A80               	xorlw	128
  3333     05DD  00A7               	movwf	??_sprintf^(0+128)
  3334     05DE  3080               	movlw	128
  3335     05DF  0227               	subwf	??_sprintf^(0+128),w
  3336     05E0  1D03               	skipz
  3337     05E1  2DE4               	goto	u8985
  3338     05E2  0844               	movf	sprintf@c^(0+128),w
  3339     05E3  0242               	subwf	sprintf@prec^(0+128),w
  3340     05E4                     u8985:
  3341     05E4  1803               	skipnc
  3342     05E5  2DEF               	goto	l5191
  3343                           
  3344                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  3345     05E6  1683               	bsf	3,5	;RP0=1, select bank1
  3346     05E7  1303               	bcf	3,6	;RP1=0, select bank1
  3347     05E8  0844               	movf	sprintf@c^(0+128),w
  3348     05E9  00A7               	movwf	??_sprintf^(0+128)
  3349     05EA  01A8               	clrf	(??_sprintf^(0+128)+1)
  3350     05EB  0827               	movf	??_sprintf^(0+128),w
  3351     05EC  00C2               	movwf	sprintf@prec^(0+128)
  3352     05ED  0828               	movf	(??_sprintf+1)^(0+128),w
  3353     05EE  00C3               	movwf	(sprintf@prec+1)^(0+128)
  3354     05EF                     l5191:
  3355                           
  3356                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3357     05EF  1683               	bsf	3,5	;RP0=1, select bank1
  3358     05F0  1303               	bcf	3,6	;RP1=0, select bank1
  3359     05F1  0831               	movf	sprintf@flag^(0+128),w
  3360     05F2  3903               	andlw	3
  3361     05F3  1903               	btfsc	3,2
  3362     05F4  2DFE               	goto	l5203
  3363                           
  3364                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3365     05F5  083D               	movf	sprintf@sp^(0+128),w
  3366     05F6  0084               	movwf	4
  3367     05F7  302D               	movlw	45
  3368     05F8                     L8:
  3369     05F8  1783               	bsf	3,7	;select IRP bank2
  3370     05F9  0080               	movwf	0
  3371     05FA  3001               	movlw	1
  3372     05FB  00FF               	movwf	127
  3373     05FC  087F               	movf	127,w
  3374     05FD  07BD               	addwf	sprintf@sp^(0+128),f
  3375     05FE                     l5203:
  3376                           
  3377                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3378     05FE  30FF               	movlw	255
  3379     05FF  07C2               	addwf	sprintf@prec^(0+128),f
  3380     0600  1803               	skipnc
  3381     0601  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  3382     0602  30FF               	movlw	255
  3383     0603  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  3384     0604  0A42               	incf	sprintf@prec^(0+128),w
  3385     0605  1903               	btfsc	3,2
  3386     0606  0A43               	incf	(sprintf@prec+1)^(0+128),w
  3387     0607  1903               	btfsc	3,2
  3388     0608  2838               	goto	l5205
  3389                           
  3390                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
  3391     0609  3000               	movlw	0
  3392     060A  1283               	bcf	3,5	;RP0=0, select bank0
  3393     060B  00A9               	movwf	___llmod@divisor+3
  3394     060C  3000               	movlw	0
  3395     060D  00A8               	movwf	___llmod@divisor+2
  3396     060E  3000               	movlw	0
  3397     060F  00A7               	movwf	___llmod@divisor+1
  3398     0610  300A               	movlw	10
  3399     0611  00A6               	movwf	___llmod@divisor
  3400     0612  1683               	bsf	3,5	;RP0=1, select bank1
  3401     0613  0842               	movf	sprintf@prec^(0+128),w
  3402     0614  00A7               	movwf	??_sprintf^(0+128)
  3403     0615  3001               	movlw	1
  3404     0616                     u9005:
  3405     0616  1003               	clrc
  3406     0617  0DA7               	rlf	??_sprintf^(0+128),f
  3407     0618  3EFF               	addlw	-1
  3408     0619  1D03               	skipz
  3409     061A  2E16               	goto	u9005
  3410     061B  1003               	clrc
  3411     061C  0D27               	rlf	??_sprintf^(0+128),w
  3412     061D  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3413     061E  0084               	movwf	4
  3414     061F  160A  118A  2000  120A  118A  	fcall	stringdir
  3415     0624  00F2               	movwf	___lldiv@divisor
  3416     0625  160A  118A  2000  120A  118A  	fcall	stringdir
  3417     062A  00F3               	movwf	___lldiv@divisor+1
  3418     062B  160A  118A  2000  120A  118A  	fcall	stringdir
  3419     0630  00F4               	movwf	___lldiv@divisor+2
  3420     0631  160A  118A  2000  120A  118A  	fcall	stringdir
  3421     0636  00F5               	movwf	___lldiv@divisor+3
  3422     0637  0836               	movf	(sprintf@val+3)^(0+128),w
  3423     0638  00F9               	movwf	___lldiv@dividend+3
  3424     0639  0835               	movf	(sprintf@val+2)^(0+128),w
  3425     063A  00F8               	movwf	___lldiv@dividend+2
  3426     063B  0834               	movf	(sprintf@val+1)^(0+128),w
  3427     063C  00F7               	movwf	___lldiv@dividend+1
  3428     063D  0833               	movf	sprintf@val^(0+128),w
  3429     063E  00F6               	movwf	___lldiv@dividend
  3430     063F  160A  118A  20BD  120A  118A  	fcall	___lldiv
  3431     0644  0875               	movf	?___lldiv+3,w
  3432     0645  00AD               	movwf	___llmod@dividend+3
  3433     0646  0874               	movf	?___lldiv+2,w
  3434     0647  00AC               	movwf	___llmod@dividend+2
  3435     0648  0873               	movf	?___lldiv+1,w
  3436     0649  00AB               	movwf	___llmod@dividend+1
  3437     064A  0872               	movf	?___lldiv,w
  3438     064B  00AA               	movwf	___llmod@dividend
  3439     064C  160A  158A  267A  120A  118A  	fcall	___llmod
  3440     0651  0826               	movf	?___llmod,w
  3441     0652  3E30               	addlw	48
  3442     0653  1683               	bsf	3,5	;RP0=1, select bank1
  3443     0654  00C4               	movwf	sprintf@c^(0+128)
  3444                           
  3445                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3446     0655  083D               	movf	sprintf@sp^(0+128),w
  3447     0656  0084               	movwf	4
  3448     0657  0844               	movf	sprintf@c^(0+128),w
  3449     0658  2DF8               	goto	L8
  3450     0659                     l5207:
  3451                           
  3452                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3453     0659  083D               	movf	sprintf@sp^(0+128),w
  3454     065A  0084               	movwf	4
  3455     065B  1783               	bsf	3,7	;select IRP bank2
  3456     065C  0180               	clrf	0
  3457     065D  0008               	return
  3458     065E                     __end_of_sprintf:
  3459                           
  3460                           	psect	text3
  3461     0CD8                     __ptext3:	
  3462 ;; *************** function _scale *****************
  3463 ;; Defined at:
  3464 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;  scl             1    wreg     char 
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;  scl             1   69[BANK0 ] char 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  4   51[BANK0 ] char 
  3471 ;; Registers used:
  3472 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3473 ;; Tracked objects:
  3474 ;;		On entry : 300/100
  3475 ;;		On exit  : 300/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3478 ;;      Params:         0       4       0       0       0
  3479 ;;      Locals:         0       5       0       0       0
  3480 ;;      Temps:          0      10       0       0       0
  3481 ;;      Totals:         0      19       0       0       0
  3482 ;;Total ram usage:       19 bytes
  3483 ;; Hardware stack levels used: 1
  3484 ;; Hardware stack levels required when called: 3
  3485 ;; This function calls:
  3486 ;;		___awdiv
  3487 ;;		___awmod
  3488 ;;		___flmul
  3489 ;; This function is called by:
  3490 ;;		_sprintf
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494     0CD8                     _scale:	
  3495                           ;psect for function _scale
  3496                           
  3497                           
  3498                           ;incstack = 0
  3499                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3500                           ;scale@scl stored from wreg
  3501     0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  3502     0CD9  00E5               	movwf	scale@scl
  3503                           
  3504                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3505     0CDA  1FE5               	btfss	scale@scl,7
  3506     0CDB  2E6F               	goto	l4407
  3507                           
  3508                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3509     0CDC  09E5               	comf	scale@scl,f
  3510     0CDD  0AE5               	incf	scale@scl,f
  3511                           
  3512                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3513     0CDE  0865               	movf	scale@scl,w
  3514     0CDF  3A80               	xorlw	128
  3515     0CE0  3E12               	addlw	-238
  3516     0CE1  1C03               	skipc
  3517     0CE2  2DBF               	goto	l4397
  3518                           
  3519                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3520     0CE3  300A               	movlw	10
  3521     0CE4  00A0               	movwf	___awdiv@divisor
  3522     0CE5  3000               	movlw	0
  3523     0CE6  00A1               	movwf	___awdiv@divisor+1
  3524     0CE7  0865               	movf	scale@scl,w
  3525     0CE8  00F4               	movwf	___awmod@dividend
  3526     0CE9  01F5               	clrf	___awmod@dividend+1
  3527     0CEA  1BF4               	btfsc	___awmod@dividend,7
  3528     0CEB  03F5               	decf	___awmod@dividend+1,f
  3529     0CEC  3064               	movlw	100
  3530     0CED  00F2               	movwf	___awmod@divisor
  3531     0CEE  3000               	movlw	0
  3532     0CEF  00F3               	movwf	___awmod@divisor+1
  3533     0CF0  160A  158A  262F  120A  158A  	fcall	___awmod
  3534     0CF5  0873               	movf	?___awmod+1,w
  3535     0CF6  00A3               	movwf	___awdiv@dividend+1
  3536     0CF7  0872               	movf	?___awmod,w
  3537     0CF8  00A2               	movwf	___awdiv@dividend
  3538     0CF9  160A  158A  26C6  120A  158A  	fcall	___awdiv
  3539     0CFE  0820               	movf	?___awdiv,w
  3540     0CFF  00D7               	movwf	??_scale
  3541     0D00  3001               	movlw	1
  3542     0D01                     u7345:
  3543     0D01  1003               	clrc
  3544     0D02  0DD7               	rlf	??_scale,f
  3545     0D03  3EFF               	addlw	-1
  3546     0D04  1D03               	skipz
  3547     0D05  2D01               	goto	u7345
  3548     0D06  1003               	clrc
  3549     0D07  0D57               	rlf	??_scale,w
  3550     0D08  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3551     0D09  0084               	movwf	4
  3552     0D0A  160A  118A  2000  120A  158A  	fcall	stringdir
  3553     0D0F  00D8               	movwf	??_scale+1
  3554     0D10  160A  118A  2000  120A  158A  	fcall	stringdir
  3555     0D15  00D9               	movwf	??_scale+2
  3556     0D16  160A  118A  2000  120A  158A  	fcall	stringdir
  3557     0D1B  00DA               	movwf	??_scale+3
  3558     0D1C  160A  118A  2000  120A  158A  	fcall	stringdir
  3559     0D21  00DB               	movwf	??_scale+4
  3560     0D22  085B               	movf	??_scale+4,w
  3561     0D23  00BC               	movwf	___flmul@b+3
  3562     0D24  085A               	movf	??_scale+3,w
  3563     0D25  00BB               	movwf	___flmul@b+2
  3564     0D26  0859               	movf	??_scale+2,w
  3565     0D27  00BA               	movwf	___flmul@b+1
  3566     0D28  0858               	movf	??_scale+1,w
  3567     0D29  00B9               	movwf	___flmul@b
  3568     0D2A  3064               	movlw	100
  3569     0D2B  00A0               	movwf	___awdiv@divisor
  3570     0D2C  3000               	movlw	0
  3571     0D2D  00A1               	movwf	___awdiv@divisor+1
  3572     0D2E  0865               	movf	scale@scl,w
  3573     0D2F  00A2               	movwf	___awdiv@dividend
  3574     0D30  01A3               	clrf	___awdiv@dividend+1
  3575     0D31  1BA2               	btfsc	___awdiv@dividend,7
  3576     0D32  03A3               	decf	___awdiv@dividend+1,f
  3577     0D33  160A  158A  26C6  120A  158A  	fcall	___awdiv
  3578     0D38  0820               	movf	?___awdiv,w
  3579     0D39  00DC               	movwf	??_scale+5
  3580     0D3A  3001               	movlw	1
  3581     0D3B                     u7355:
  3582     0D3B  1003               	clrc
  3583     0D3C  0DDC               	rlf	??_scale+5,f
  3584     0D3D  3EFF               	addlw	-1
  3585     0D3E  1D03               	skipz
  3586     0D3F  2D3B               	goto	u7355
  3587     0D40  1003               	clrc
  3588     0D41  0D5C               	rlf	??_scale+5,w
  3589     0D42  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3590     0D43  0084               	movwf	4
  3591     0D44  160A  118A  2000  120A  158A  	fcall	stringdir
  3592     0D49  00DD               	movwf	??_scale+6
  3593     0D4A  160A  118A  2000  120A  158A  	fcall	stringdir
  3594     0D4F  00DE               	movwf	??_scale+7
  3595     0D50  160A  118A  2000  120A  158A  	fcall	stringdir
  3596     0D55  00DF               	movwf	??_scale+8
  3597     0D56  160A  118A  2000  120A  158A  	fcall	stringdir
  3598     0D5B  00E0               	movwf	??_scale+9
  3599     0D5C  0860               	movf	??_scale+9,w
  3600     0D5D  00C0               	movwf	___flmul@a+3
  3601     0D5E  085F               	movf	??_scale+8,w
  3602     0D5F  00BF               	movwf	___flmul@a+2
  3603     0D60  085E               	movf	??_scale+7,w
  3604     0D61  00BE               	movwf	___flmul@a+1
  3605     0D62  085D               	movf	??_scale+6,w
  3606     0D63  00BD               	movwf	___flmul@a
  3607     0D64  120A  158A  21FF  120A  158A  	fcall	___flmul
  3608     0D69  083C               	movf	?___flmul+3,w
  3609     0D6A  00E4               	movwf	_scale$1070+3
  3610     0D6B  083B               	movf	?___flmul+2,w
  3611     0D6C  00E3               	movwf	_scale$1070+2
  3612     0D6D  083A               	movf	?___flmul+1,w
  3613     0D6E  00E2               	movwf	_scale$1070+1
  3614     0D6F  0839               	movf	?___flmul,w
  3615     0D70  00E1               	movwf	_scale$1070
  3616                           
  3617                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3618     0D71  300A               	movlw	10
  3619     0D72  00F2               	movwf	___awmod@divisor
  3620     0D73  3000               	movlw	0
  3621     0D74  00F3               	movwf	___awmod@divisor+1
  3622     0D75  0865               	movf	scale@scl,w
  3623     0D76  00F4               	movwf	___awmod@dividend
  3624     0D77  01F5               	clrf	___awmod@dividend+1
  3625     0D78  1BF4               	btfsc	___awmod@dividend,7
  3626     0D79  03F5               	decf	___awmod@dividend+1,f
  3627     0D7A  160A  158A  262F  120A  158A  	fcall	___awmod
  3628     0D7F  0872               	movf	?___awmod,w
  3629     0D80  00D7               	movwf	??_scale
  3630     0D81  3001               	movlw	1
  3631     0D82                     u7365:
  3632     0D82  1003               	clrc
  3633     0D83  0DD7               	rlf	??_scale,f
  3634     0D84  3EFF               	addlw	-1
  3635     0D85  1D03               	skipz
  3636     0D86  2D82               	goto	u7365
  3637     0D87  1003               	clrc
  3638     0D88  0D57               	rlf	??_scale,w
  3639     0D89  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3640     0D8A  0084               	movwf	4
  3641     0D8B  160A  118A  2000  120A  158A  	fcall	stringdir
  3642     0D90  00D8               	movwf	??_scale+1
  3643     0D91  160A  118A  2000  120A  158A  	fcall	stringdir
  3644     0D96  00D9               	movwf	??_scale+2
  3645     0D97  160A  118A  2000  120A  158A  	fcall	stringdir
  3646     0D9C  00DA               	movwf	??_scale+3
  3647     0D9D  160A  118A  2000  120A  158A  	fcall	stringdir
  3648     0DA2  00DB               	movwf	??_scale+4
  3649     0DA3  085B               	movf	??_scale+4,w
  3650     0DA4  00BC               	movwf	___flmul@b+3
  3651     0DA5  085A               	movf	??_scale+3,w
  3652     0DA6  00BB               	movwf	___flmul@b+2
  3653     0DA7  0859               	movf	??_scale+2,w
  3654     0DA8  00BA               	movwf	___flmul@b+1
  3655     0DA9  0858               	movf	??_scale+1,w
  3656     0DAA  00B9               	movwf	___flmul@b
  3657     0DAB  0864               	movf	_scale$1070+3,w
  3658     0DAC  00C0               	movwf	___flmul@a+3
  3659     0DAD  0863               	movf	_scale$1070+2,w
  3660     0DAE  00BF               	movwf	___flmul@a+2
  3661     0DAF  0862               	movf	_scale$1070+1,w
  3662     0DB0  00BE               	movwf	___flmul@a+1
  3663     0DB1  0861               	movf	_scale$1070,w
  3664     0DB2  00BD               	movwf	___flmul@a
  3665     0DB3  120A  158A  21FF   	fcall	___flmul
  3666     0DB6  083C               	movf	?___flmul+3,w
  3667     0DB7  00D6               	movwf	?_scale+3
  3668     0DB8  083B               	movf	?___flmul+2,w
  3669     0DB9  00D5               	movwf	?_scale+2
  3670     0DBA  083A               	movf	?___flmul+1,w
  3671     0DBB  00D4               	movwf	?_scale+1
  3672     0DBC  0839               	movf	?___flmul,w
  3673     0DBD  00D3               	movwf	?_scale
  3674     0DBE  0008               	return
  3675     0DBF                     l4397:
  3676     0DBF  0865               	movf	scale@scl,w
  3677     0DC0  3A80               	xorlw	128
  3678     0DC1  3E75               	addlw	-139
  3679     0DC2  1C03               	skipc
  3680     0DC3  2E44               	goto	l4403
  3681                           
  3682                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3683     0DC4  300A               	movlw	10
  3684     0DC5  00F2               	movwf	___awmod@divisor
  3685     0DC6  3000               	movlw	0
  3686     0DC7  00F3               	movwf	___awmod@divisor+1
  3687     0DC8  0865               	movf	scale@scl,w
  3688     0DC9  00F4               	movwf	___awmod@dividend
  3689     0DCA  01F5               	clrf	___awmod@dividend+1
  3690     0DCB  1BF4               	btfsc	___awmod@dividend,7
  3691     0DCC  03F5               	decf	___awmod@dividend+1,f
  3692     0DCD  160A  158A  262F  120A  158A  	fcall	___awmod
  3693     0DD2  0872               	movf	?___awmod,w
  3694     0DD3  00D7               	movwf	??_scale
  3695     0DD4  3001               	movlw	1
  3696     0DD5                     u7385:
  3697     0DD5  1003               	clrc
  3698     0DD6  0DD7               	rlf	??_scale,f
  3699     0DD7  3EFF               	addlw	-1
  3700     0DD8  1D03               	skipz
  3701     0DD9  2DD5               	goto	u7385
  3702     0DDA  1003               	clrc
  3703     0DDB  0D57               	rlf	??_scale,w
  3704     0DDC  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3705     0DDD  0084               	movwf	4
  3706     0DDE  160A  118A  2000  120A  158A  	fcall	stringdir
  3707     0DE3  00D8               	movwf	??_scale+1
  3708     0DE4  160A  118A  2000  120A  158A  	fcall	stringdir
  3709     0DE9  00D9               	movwf	??_scale+2
  3710     0DEA  160A  118A  2000  120A  158A  	fcall	stringdir
  3711     0DEF  00DA               	movwf	??_scale+3
  3712     0DF0  160A  118A  2000  120A  158A  	fcall	stringdir
  3713     0DF5  00DB               	movwf	??_scale+4
  3714     0DF6  085B               	movf	??_scale+4,w
  3715     0DF7  00BC               	movwf	___flmul@b+3
  3716     0DF8  085A               	movf	??_scale+3,w
  3717     0DF9  00BB               	movwf	___flmul@b+2
  3718     0DFA  0859               	movf	??_scale+2,w
  3719     0DFB  00BA               	movwf	___flmul@b+1
  3720     0DFC  0858               	movf	??_scale+1,w
  3721     0DFD  00B9               	movwf	___flmul@b
  3722     0DFE  300A               	movlw	10
  3723     0DFF  00A0               	movwf	___awdiv@divisor
  3724     0E00  3000               	movlw	0
  3725     0E01  00A1               	movwf	___awdiv@divisor+1
  3726     0E02  0865               	movf	scale@scl,w
  3727     0E03  00A2               	movwf	___awdiv@dividend
  3728     0E04  01A3               	clrf	___awdiv@dividend+1
  3729     0E05  1BA2               	btfsc	___awdiv@dividend,7
  3730     0E06  03A3               	decf	___awdiv@dividend+1,f
  3731     0E07  160A  158A  26C6  120A  158A  	fcall	___awdiv
  3732     0E0C  0820               	movf	?___awdiv,w
  3733     0E0D  00DC               	movwf	??_scale+5
  3734     0E0E  3001               	movlw	1
  3735     0E0F                     u7395:
  3736     0E0F  1003               	clrc
  3737     0E10  0DDC               	rlf	??_scale+5,f
  3738     0E11  3EFF               	addlw	-1
  3739     0E12  1D03               	skipz
  3740     0E13  2E0F               	goto	u7395
  3741     0E14  1003               	clrc
  3742     0E15  0D5C               	rlf	??_scale+5,w
  3743     0E16  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3744     0E17  0084               	movwf	4
  3745     0E18  160A  118A  2000  120A  158A  	fcall	stringdir
  3746     0E1D  00DD               	movwf	??_scale+6
  3747     0E1E  160A  118A  2000  120A  158A  	fcall	stringdir
  3748     0E23  00DE               	movwf	??_scale+7
  3749     0E24  160A  118A  2000  120A  158A  	fcall	stringdir
  3750     0E29  00DF               	movwf	??_scale+8
  3751     0E2A  160A  118A  2000  120A  158A  	fcall	stringdir
  3752     0E2F  00E0               	movwf	??_scale+9
  3753     0E30  0860               	movf	??_scale+9,w
  3754     0E31  00C0               	movwf	___flmul@a+3
  3755     0E32  085F               	movf	??_scale+8,w
  3756     0E33  00BF               	movwf	___flmul@a+2
  3757     0E34  085E               	movf	??_scale+7,w
  3758     0E35  00BE               	movwf	___flmul@a+1
  3759     0E36  085D               	movf	??_scale+6,w
  3760     0E37  00BD               	movwf	___flmul@a
  3761     0E38  120A  158A  21FF   	fcall	___flmul
  3762     0E3B  083C               	movf	?___flmul+3,w
  3763     0E3C  00D6               	movwf	?_scale+3
  3764     0E3D  083B               	movf	?___flmul+2,w
  3765     0E3E  00D5               	movwf	?_scale+2
  3766     0E3F  083A               	movf	?___flmul+1,w
  3767     0E40  00D4               	movwf	?_scale+1
  3768     0E41  0839               	movf	?___flmul,w
  3769     0E42  00D3               	movwf	?_scale
  3770     0E43  0008               	return
  3771     0E44                     l4403:
  3772                           
  3773                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3774     0E44  0865               	movf	scale@scl,w
  3775     0E45  00D7               	movwf	??_scale
  3776     0E46  3001               	movlw	1
  3777     0E47                     u7405:
  3778     0E47  1003               	clrc
  3779     0E48  0DD7               	rlf	??_scale,f
  3780     0E49  3EFF               	addlw	-1
  3781     0E4A  1D03               	skipz
  3782     0E4B  2E47               	goto	u7405
  3783     0E4C  1003               	clrc
  3784     0E4D  0D57               	rlf	??_scale,w
  3785     0E4E  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3786     0E4F  0084               	movwf	4
  3787     0E50  160A  118A  2000  120A  158A  	fcall	stringdir
  3788     0E55  00D8               	movwf	??_scale+1
  3789     0E56  160A  118A  2000  120A  158A  	fcall	stringdir
  3790     0E5B  00D9               	movwf	??_scale+2
  3791     0E5C  160A  118A  2000  120A  158A  	fcall	stringdir
  3792     0E61  00DA               	movwf	??_scale+3
  3793     0E62  160A  118A  2000   	fcall	stringdir
  3794     0E65  00DB               	movwf	??_scale+4
  3795     0E66  085B               	movf	??_scale+4,w
  3796     0E67  00D6               	movwf	?_scale+3
  3797     0E68  085A               	movf	??_scale+3,w
  3798     0E69  00D5               	movwf	?_scale+2
  3799     0E6A  0859               	movf	??_scale+2,w
  3800     0E6B  00D4               	movwf	?_scale+1
  3801     0E6C  0858               	movf	??_scale+1,w
  3802     0E6D  00D3               	movwf	?_scale
  3803     0E6E  0008               	return
  3804     0E6F                     l4407:
  3805                           
  3806                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3807     0E6F  0865               	movf	scale@scl,w
  3808     0E70  3A80               	xorlw	128
  3809     0E71  3E12               	addlw	-238
  3810     0E72  1C03               	skipc
  3811     0E73  2F50               	goto	l4415
  3812                           
  3813                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3814     0E74  300A               	movlw	10
  3815     0E75  00A0               	movwf	___awdiv@divisor
  3816     0E76  3000               	movlw	0
  3817     0E77  00A1               	movwf	___awdiv@divisor+1
  3818     0E78  0865               	movf	scale@scl,w
  3819     0E79  00F4               	movwf	___awmod@dividend
  3820     0E7A  01F5               	clrf	___awmod@dividend+1
  3821     0E7B  1BF4               	btfsc	___awmod@dividend,7
  3822     0E7C  03F5               	decf	___awmod@dividend+1,f
  3823     0E7D  3064               	movlw	100
  3824     0E7E  00F2               	movwf	___awmod@divisor
  3825     0E7F  3000               	movlw	0
  3826     0E80  00F3               	movwf	___awmod@divisor+1
  3827     0E81  160A  158A  262F  120A  158A  	fcall	___awmod
  3828     0E86  0873               	movf	?___awmod+1,w
  3829     0E87  00A3               	movwf	___awdiv@dividend+1
  3830     0E88  0872               	movf	?___awmod,w
  3831     0E89  00A2               	movwf	___awdiv@dividend
  3832     0E8A  160A  158A  26C6  120A  158A  	fcall	___awdiv
  3833     0E8F  0820               	movf	?___awdiv,w
  3834     0E90  00D7               	movwf	??_scale
  3835     0E91  3001               	movlw	1
  3836     0E92                     u7425:
  3837     0E92  1003               	clrc
  3838     0E93  0DD7               	rlf	??_scale,f
  3839     0E94  3EFF               	addlw	-1
  3840     0E95  1D03               	skipz
  3841     0E96  2E92               	goto	u7425
  3842     0E97  1003               	clrc
  3843     0E98  0D57               	rlf	??_scale,w
  3844     0E99  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3845     0E9A  0084               	movwf	4
  3846     0E9B  160A  118A  2000  120A  158A  	fcall	stringdir
  3847     0EA0  00D8               	movwf	??_scale+1
  3848     0EA1  160A  118A  2000  120A  158A  	fcall	stringdir
  3849     0EA6  00D9               	movwf	??_scale+2
  3850     0EA7  160A  118A  2000  120A  158A  	fcall	stringdir
  3851     0EAC  00DA               	movwf	??_scale+3
  3852     0EAD  160A  118A  2000  120A  158A  	fcall	stringdir
  3853     0EB2  00DB               	movwf	??_scale+4
  3854     0EB3  085B               	movf	??_scale+4,w
  3855     0EB4  00BC               	movwf	___flmul@b+3
  3856     0EB5  085A               	movf	??_scale+3,w
  3857     0EB6  00BB               	movwf	___flmul@b+2
  3858     0EB7  0859               	movf	??_scale+2,w
  3859     0EB8  00BA               	movwf	___flmul@b+1
  3860     0EB9  0858               	movf	??_scale+1,w
  3861     0EBA  00B9               	movwf	___flmul@b
  3862     0EBB  3064               	movlw	100
  3863     0EBC  00A0               	movwf	___awdiv@divisor
  3864     0EBD  3000               	movlw	0
  3865     0EBE  00A1               	movwf	___awdiv@divisor+1
  3866     0EBF  0865               	movf	scale@scl,w
  3867     0EC0  00A2               	movwf	___awdiv@dividend
  3868     0EC1  01A3               	clrf	___awdiv@dividend+1
  3869     0EC2  1BA2               	btfsc	___awdiv@dividend,7
  3870     0EC3  03A3               	decf	___awdiv@dividend+1,f
  3871     0EC4  160A  158A  26C6  120A  158A  	fcall	___awdiv
  3872     0EC9  0820               	movf	?___awdiv,w
  3873     0ECA  00DC               	movwf	??_scale+5
  3874     0ECB  3001               	movlw	1
  3875     0ECC                     u7435:
  3876     0ECC  1003               	clrc
  3877     0ECD  0DDC               	rlf	??_scale+5,f
  3878     0ECE  3EFF               	addlw	-1
  3879     0ECF  1D03               	skipz
  3880     0ED0  2ECC               	goto	u7435
  3881     0ED1  1003               	clrc
  3882     0ED2  0D5C               	rlf	??_scale+5,w
  3883     0ED3  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3884     0ED4  0084               	movwf	4
  3885     0ED5  160A  118A  2000  120A  158A  	fcall	stringdir
  3886     0EDA  00DD               	movwf	??_scale+6
  3887     0EDB  160A  118A  2000  120A  158A  	fcall	stringdir
  3888     0EE0  00DE               	movwf	??_scale+7
  3889     0EE1  160A  118A  2000  120A  158A  	fcall	stringdir
  3890     0EE6  00DF               	movwf	??_scale+8
  3891     0EE7  160A  118A  2000  120A  158A  	fcall	stringdir
  3892     0EEC  00E0               	movwf	??_scale+9
  3893     0EED  0860               	movf	??_scale+9,w
  3894     0EEE  00C0               	movwf	___flmul@a+3
  3895     0EEF  085F               	movf	??_scale+8,w
  3896     0EF0  00BF               	movwf	___flmul@a+2
  3897     0EF1  085E               	movf	??_scale+7,w
  3898     0EF2  00BE               	movwf	___flmul@a+1
  3899     0EF3  085D               	movf	??_scale+6,w
  3900     0EF4  00BD               	movwf	___flmul@a
  3901     0EF5  120A  158A  21FF  120A  158A  	fcall	___flmul
  3902     0EFA  083C               	movf	?___flmul+3,w
  3903     0EFB  00E4               	movwf	_scale$1070+3
  3904     0EFC  083B               	movf	?___flmul+2,w
  3905     0EFD  00E3               	movwf	_scale$1070+2
  3906     0EFE  083A               	movf	?___flmul+1,w
  3907     0EFF  00E2               	movwf	_scale$1070+1
  3908     0F00  0839               	movf	?___flmul,w
  3909     0F01  00E1               	movwf	_scale$1070
  3910                           
  3911                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3912     0F02  300A               	movlw	10
  3913     0F03  00F2               	movwf	___awmod@divisor
  3914     0F04  3000               	movlw	0
  3915     0F05  00F3               	movwf	___awmod@divisor+1
  3916     0F06  0865               	movf	scale@scl,w
  3917     0F07  00F4               	movwf	___awmod@dividend
  3918     0F08  01F5               	clrf	___awmod@dividend+1
  3919     0F09  1BF4               	btfsc	___awmod@dividend,7
  3920     0F0A  03F5               	decf	___awmod@dividend+1,f
  3921     0F0B  160A  158A  262F  120A  158A  	fcall	___awmod
  3922     0F10  0872               	movf	?___awmod,w
  3923     0F11  00D7               	movwf	??_scale
  3924     0F12  3001               	movlw	1
  3925     0F13                     u7445:
  3926     0F13  1003               	clrc
  3927     0F14  0DD7               	rlf	??_scale,f
  3928     0F15  3EFF               	addlw	-1
  3929     0F16  1D03               	skipz
  3930     0F17  2F13               	goto	u7445
  3931     0F18  1003               	clrc
  3932     0F19  0D57               	rlf	??_scale,w
  3933     0F1A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3934     0F1B  0084               	movwf	4
  3935     0F1C  160A  118A  2000  120A  158A  	fcall	stringdir
  3936     0F21  00D8               	movwf	??_scale+1
  3937     0F22  160A  118A  2000  120A  158A  	fcall	stringdir
  3938     0F27  00D9               	movwf	??_scale+2
  3939     0F28  160A  118A  2000  120A  158A  	fcall	stringdir
  3940     0F2D  00DA               	movwf	??_scale+3
  3941     0F2E  160A  118A  2000  120A  158A  	fcall	stringdir
  3942     0F33  00DB               	movwf	??_scale+4
  3943     0F34  085B               	movf	??_scale+4,w
  3944     0F35  00BC               	movwf	___flmul@b+3
  3945     0F36  085A               	movf	??_scale+3,w
  3946     0F37  00BB               	movwf	___flmul@b+2
  3947     0F38  0859               	movf	??_scale+2,w
  3948     0F39  00BA               	movwf	___flmul@b+1
  3949     0F3A  0858               	movf	??_scale+1,w
  3950     0F3B  00B9               	movwf	___flmul@b
  3951     0F3C  0864               	movf	_scale$1070+3,w
  3952     0F3D  00C0               	movwf	___flmul@a+3
  3953     0F3E  0863               	movf	_scale$1070+2,w
  3954     0F3F  00BF               	movwf	___flmul@a+2
  3955     0F40  0862               	movf	_scale$1070+1,w
  3956     0F41  00BE               	movwf	___flmul@a+1
  3957     0F42  0861               	movf	_scale$1070,w
  3958     0F43  00BD               	movwf	___flmul@a
  3959     0F44  120A  158A  21FF   	fcall	___flmul
  3960     0F47  083C               	movf	?___flmul+3,w
  3961     0F48  00D6               	movwf	?_scale+3
  3962     0F49  083B               	movf	?___flmul+2,w
  3963     0F4A  00D5               	movwf	?_scale+2
  3964     0F4B  083A               	movf	?___flmul+1,w
  3965     0F4C  00D4               	movwf	?_scale+1
  3966     0F4D  0839               	movf	?___flmul,w
  3967     0F4E  00D3               	movwf	?_scale
  3968     0F4F  0008               	return
  3969     0F50                     l4415:
  3970     0F50  0865               	movf	scale@scl,w
  3971     0F51  3A80               	xorlw	128
  3972     0F52  3E75               	addlw	-139
  3973     0F53  1C03               	skipc
  3974     0F54  2FD5               	goto	l4421
  3975                           
  3976                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3977     0F55  300A               	movlw	10
  3978     0F56  00F2               	movwf	___awmod@divisor
  3979     0F57  3000               	movlw	0
  3980     0F58  00F3               	movwf	___awmod@divisor+1
  3981     0F59  0865               	movf	scale@scl,w
  3982     0F5A  00F4               	movwf	___awmod@dividend
  3983     0F5B  01F5               	clrf	___awmod@dividend+1
  3984     0F5C  1BF4               	btfsc	___awmod@dividend,7
  3985     0F5D  03F5               	decf	___awmod@dividend+1,f
  3986     0F5E  160A  158A  262F  120A  158A  	fcall	___awmod
  3987     0F63  0872               	movf	?___awmod,w
  3988     0F64  00D7               	movwf	??_scale
  3989     0F65  3001               	movlw	1
  3990     0F66                     u7465:
  3991     0F66  1003               	clrc
  3992     0F67  0DD7               	rlf	??_scale,f
  3993     0F68  3EFF               	addlw	-1
  3994     0F69  1D03               	skipz
  3995     0F6A  2F66               	goto	u7465
  3996     0F6B  1003               	clrc
  3997     0F6C  0D57               	rlf	??_scale,w
  3998     0F6D  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3999     0F6E  0084               	movwf	4
  4000     0F6F  160A  118A  2000  120A  158A  	fcall	stringdir
  4001     0F74  00D8               	movwf	??_scale+1
  4002     0F75  160A  118A  2000  120A  158A  	fcall	stringdir
  4003     0F7A  00D9               	movwf	??_scale+2
  4004     0F7B  160A  118A  2000  120A  158A  	fcall	stringdir
  4005     0F80  00DA               	movwf	??_scale+3
  4006     0F81  160A  118A  2000  120A  158A  	fcall	stringdir
  4007     0F86  00DB               	movwf	??_scale+4
  4008     0F87  085B               	movf	??_scale+4,w
  4009     0F88  00BC               	movwf	___flmul@b+3
  4010     0F89  085A               	movf	??_scale+3,w
  4011     0F8A  00BB               	movwf	___flmul@b+2
  4012     0F8B  0859               	movf	??_scale+2,w
  4013     0F8C  00BA               	movwf	___flmul@b+1
  4014     0F8D  0858               	movf	??_scale+1,w
  4015     0F8E  00B9               	movwf	___flmul@b
  4016     0F8F  300A               	movlw	10
  4017     0F90  00A0               	movwf	___awdiv@divisor
  4018     0F91  3000               	movlw	0
  4019     0F92  00A1               	movwf	___awdiv@divisor+1
  4020     0F93  0865               	movf	scale@scl,w
  4021     0F94  00A2               	movwf	___awdiv@dividend
  4022     0F95  01A3               	clrf	___awdiv@dividend+1
  4023     0F96  1BA2               	btfsc	___awdiv@dividend,7
  4024     0F97  03A3               	decf	___awdiv@dividend+1,f
  4025     0F98  160A  158A  26C6  120A  158A  	fcall	___awdiv
  4026     0F9D  0820               	movf	?___awdiv,w
  4027     0F9E  00DC               	movwf	??_scale+5
  4028     0F9F  3001               	movlw	1
  4029     0FA0                     u7475:
  4030     0FA0  1003               	clrc
  4031     0FA1  0DDC               	rlf	??_scale+5,f
  4032     0FA2  3EFF               	addlw	-1
  4033     0FA3  1D03               	skipz
  4034     0FA4  2FA0               	goto	u7475
  4035     0FA5  1003               	clrc
  4036     0FA6  0D5C               	rlf	??_scale+5,w
  4037     0FA7  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4038     0FA8  0084               	movwf	4
  4039     0FA9  160A  118A  2000  120A  158A  	fcall	stringdir
  4040     0FAE  00DD               	movwf	??_scale+6
  4041     0FAF  160A  118A  2000  120A  158A  	fcall	stringdir
  4042     0FB4  00DE               	movwf	??_scale+7
  4043     0FB5  160A  118A  2000  120A  158A  	fcall	stringdir
  4044     0FBA  00DF               	movwf	??_scale+8
  4045     0FBB  160A  118A  2000  120A  158A  	fcall	stringdir
  4046     0FC0  00E0               	movwf	??_scale+9
  4047     0FC1  0860               	movf	??_scale+9,w
  4048     0FC2  00C0               	movwf	___flmul@a+3
  4049     0FC3  085F               	movf	??_scale+8,w
  4050     0FC4  00BF               	movwf	___flmul@a+2
  4051     0FC5  085E               	movf	??_scale+7,w
  4052     0FC6  00BE               	movwf	___flmul@a+1
  4053     0FC7  085D               	movf	??_scale+6,w
  4054     0FC8  00BD               	movwf	___flmul@a
  4055     0FC9  120A  158A  21FF   	fcall	___flmul
  4056     0FCC  083C               	movf	?___flmul+3,w
  4057     0FCD  00D6               	movwf	?_scale+3
  4058     0FCE  083B               	movf	?___flmul+2,w
  4059     0FCF  00D5               	movwf	?_scale+2
  4060     0FD0  083A               	movf	?___flmul+1,w
  4061     0FD1  00D4               	movwf	?_scale+1
  4062     0FD2  0839               	movf	?___flmul,w
  4063     0FD3  00D3               	movwf	?_scale
  4064     0FD4  0008               	return
  4065     0FD5                     l4421:
  4066                           
  4067                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4068     0FD5  0865               	movf	scale@scl,w
  4069     0FD6  00D7               	movwf	??_scale
  4070     0FD7  3001               	movlw	1
  4071     0FD8                     u7485:
  4072     0FD8  1003               	clrc
  4073     0FD9  0DD7               	rlf	??_scale,f
  4074     0FDA  3EFF               	addlw	-1
  4075     0FDB  1D03               	skipz
  4076     0FDC  2FD8               	goto	u7485
  4077     0FDD  1003               	clrc
  4078     0FDE  0D57               	rlf	??_scale,w
  4079     0FDF  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4080     0FE0  0084               	movwf	4
  4081     0FE1  160A  118A  2000  120A  158A  	fcall	stringdir
  4082     0FE6  00D8               	movwf	??_scale+1
  4083     0FE7  160A  118A  2000  120A  158A  	fcall	stringdir
  4084     0FEC  00D9               	movwf	??_scale+2
  4085     0FED  160A  118A  2000  120A  158A  	fcall	stringdir
  4086     0FF2  00DA               	movwf	??_scale+3
  4087     0FF3  160A  118A  2000   	fcall	stringdir
  4088     0FF6  00DB               	movwf	??_scale+4
  4089     0FF7  085B               	movf	??_scale+4,w
  4090     0FF8  00D6               	movwf	?_scale+3
  4091     0FF9  085A               	movf	??_scale+3,w
  4092     0FFA  00D5               	movwf	?_scale+2
  4093     0FFB  0859               	movf	??_scale+2,w
  4094     0FFC  00D4               	movwf	?_scale+1
  4095     0FFD  0858               	movf	??_scale+1,w
  4096     0FFE  00D3               	movwf	?_scale
  4097     0FFF  0008               	return
  4098     1000                     __end_of_scale:
  4099                           
  4100                           	psect	text4
  4101     1E2F                     __ptext4:	
  4102 ;; *************** function ___awmod *****************
  4103 ;; Defined at:
  4104 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;  divisor         2    2[COMMON] int 
  4107 ;;  dividend        2    4[COMMON] int 
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;  sign            1    7[COMMON] unsigned char 
  4110 ;;  counter         1    6[COMMON] unsigned char 
  4111 ;; Return value:  Size  Location     Type
  4112 ;;                  2    2[COMMON] int 
  4113 ;; Registers used:
  4114 ;;		wreg, status,2, status,0, btemp+1
  4115 ;; Tracked objects:
  4116 ;;		On entry : 300/0
  4117 ;;		On exit  : 300/0
  4118 ;;		Unchanged: 300/0
  4119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4120 ;;      Params:         4       0       0       0       0
  4121 ;;      Locals:         2       0       0       0       0
  4122 ;;      Temps:          0       0       0       0       0
  4123 ;;      Totals:         6       0       0       0       0
  4124 ;;Total ram usage:        6 bytes
  4125 ;; Hardware stack levels used: 1
  4126 ;; Hardware stack levels required when called: 1
  4127 ;; This function calls:
  4128 ;;		Nothing
  4129 ;; This function is called by:
  4130 ;;		_scale
  4131 ;; This function uses a non-reentrant model
  4132 ;;
  4133                           
  4134     1E2F                     ___awmod:	
  4135                           ;psect for function ___awmod
  4136                           
  4137                           
  4138                           ;incstack = 0
  4139                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  4140     1E2F  01F7               	clrf	___awmod@sign
  4141     1E30  1FF5               	btfss	___awmod@dividend+1,7
  4142     1E31  2E39               	goto	l3951
  4143     1E32  09F4               	comf	___awmod@dividend,f
  4144     1E33  09F5               	comf	___awmod@dividend+1,f
  4145     1E34  0AF4               	incf	___awmod@dividend,f
  4146     1E35  1903               	skipnz
  4147     1E36  0AF5               	incf	___awmod@dividend+1,f
  4148     1E37  01F7               	clrf	___awmod@sign
  4149     1E38  0AF7               	incf	___awmod@sign,f
  4150     1E39                     l3951:
  4151     1E39  1FF3               	btfss	___awmod@divisor+1,7
  4152     1E3A  2E40               	goto	l3955
  4153     1E3B  09F2               	comf	___awmod@divisor,f
  4154     1E3C  09F3               	comf	___awmod@divisor+1,f
  4155     1E3D  0AF2               	incf	___awmod@divisor,f
  4156     1E3E  1903               	skipnz
  4157     1E3F  0AF3               	incf	___awmod@divisor+1,f
  4158     1E40                     l3955:
  4159     1E40  0872               	movf	___awmod@divisor,w
  4160     1E41  0473               	iorwf	___awmod@divisor+1,w
  4161     1E42  1903               	btfsc	3,2
  4162     1E43  2E6D               	goto	l3973
  4163     1E44  01F6               	clrf	___awmod@counter
  4164     1E45  0AF6               	incf	___awmod@counter,f
  4165     1E46                     l3963:
  4166     1E46  1BF3               	btfsc	___awmod@divisor+1,7
  4167     1E47  2E54               	goto	l3965
  4168     1E48  3001               	movlw	1
  4169     1E49                     u6285:
  4170     1E49  1003               	clrc
  4171     1E4A  0DF2               	rlf	___awmod@divisor,f
  4172     1E4B  0DF3               	rlf	___awmod@divisor+1,f
  4173     1E4C  3EFF               	addlw	-1
  4174     1E4D  1D03               	skipz
  4175     1E4E  2E49               	goto	u6285
  4176     1E4F  3001               	movlw	1
  4177     1E50  00FF               	movwf	127
  4178     1E51  087F               	movf	127,w
  4179     1E52  07F6               	addwf	___awmod@counter,f
  4180     1E53  2E46               	goto	l3963
  4181     1E54                     l3965:
  4182     1E54  0873               	movf	___awmod@divisor+1,w
  4183     1E55  0275               	subwf	___awmod@dividend+1,w
  4184     1E56  1D03               	skipz
  4185     1E57  2E5A               	goto	u6305
  4186     1E58  0872               	movf	___awmod@divisor,w
  4187     1E59  0274               	subwf	___awmod@dividend,w
  4188     1E5A                     u6305:
  4189     1E5A  1C03               	skipc
  4190     1E5B  2E62               	goto	l3969
  4191     1E5C  0872               	movf	___awmod@divisor,w
  4192     1E5D  02F4               	subwf	___awmod@dividend,f
  4193     1E5E  0873               	movf	___awmod@divisor+1,w
  4194     1E5F  1C03               	skipc
  4195     1E60  03F5               	decf	___awmod@dividend+1,f
  4196     1E61  02F5               	subwf	___awmod@dividend+1,f
  4197     1E62                     l3969:
  4198     1E62  3001               	movlw	1
  4199     1E63                     u6315:
  4200     1E63  1003               	clrc
  4201     1E64  0CF3               	rrf	___awmod@divisor+1,f
  4202     1E65  0CF2               	rrf	___awmod@divisor,f
  4203     1E66  3EFF               	addlw	-1
  4204     1E67  1D03               	skipz
  4205     1E68  2E63               	goto	u6315
  4206     1E69  3001               	movlw	1
  4207     1E6A  02F6               	subwf	___awmod@counter,f
  4208     1E6B  1D03               	btfss	3,2
  4209     1E6C  2E54               	goto	l3965
  4210     1E6D                     l3973:
  4211     1E6D  0877               	movf	___awmod@sign,w
  4212     1E6E  1903               	btfsc	3,2
  4213     1E6F  2E75               	goto	l3977
  4214     1E70  09F4               	comf	___awmod@dividend,f
  4215     1E71  09F5               	comf	___awmod@dividend+1,f
  4216     1E72  0AF4               	incf	___awmod@dividend,f
  4217     1E73  1903               	skipnz
  4218     1E74  0AF5               	incf	___awmod@dividend+1,f
  4219     1E75                     l3977:
  4220     1E75  0875               	movf	___awmod@dividend+1,w
  4221     1E76  00F3               	movwf	?___awmod+1
  4222     1E77  0874               	movf	___awmod@dividend,w
  4223     1E78  00F2               	movwf	?___awmod
  4224     1E79  0008               	return
  4225     1E7A                     __end_of___awmod:
  4226                           
  4227                           	psect	text5
  4228     1EC6                     __ptext5:	
  4229 ;; *************** function ___awdiv *****************
  4230 ;; Defined at:
  4231 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;  divisor         2    0[BANK0 ] int 
  4234 ;;  dividend        2    2[BANK0 ] int 
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;  quotient        2    6[BANK0 ] int 
  4237 ;;  sign            1    5[BANK0 ] unsigned char 
  4238 ;;  counter         1    4[BANK0 ] unsigned char 
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  2    0[BANK0 ] int 
  4241 ;; Registers used:
  4242 ;;		wreg, status,2, status,0, btemp+1
  4243 ;; Tracked objects:
  4244 ;;		On entry : 300/0
  4245 ;;		On exit  : 300/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4248 ;;      Params:         0       4       0       0       0
  4249 ;;      Locals:         0       4       0       0       0
  4250 ;;      Temps:          0       0       0       0       0
  4251 ;;      Totals:         0       8       0       0       0
  4252 ;;Total ram usage:        8 bytes
  4253 ;; Hardware stack levels used: 1
  4254 ;; Hardware stack levels required when called: 1
  4255 ;; This function calls:
  4256 ;;		Nothing
  4257 ;; This function is called by:
  4258 ;;		_scale
  4259 ;;		_sprintf
  4260 ;; This function uses a non-reentrant model
  4261 ;;
  4262                           
  4263     1EC6                     ___awdiv:	
  4264                           ;psect for function ___awdiv
  4265                           
  4266                           
  4267                           ;incstack = 0
  4268                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  4269     1EC6  01A5               	clrf	___awdiv@sign
  4270     1EC7  1FA1               	btfss	___awdiv@divisor+1,7
  4271     1EC8  2ED0               	goto	l3907
  4272     1EC9  09A0               	comf	___awdiv@divisor,f
  4273     1ECA  09A1               	comf	___awdiv@divisor+1,f
  4274     1ECB  0AA0               	incf	___awdiv@divisor,f
  4275     1ECC  1903               	skipnz
  4276     1ECD  0AA1               	incf	___awdiv@divisor+1,f
  4277     1ECE  01A5               	clrf	___awdiv@sign
  4278     1ECF  0AA5               	incf	___awdiv@sign,f
  4279     1ED0                     l3907:
  4280     1ED0  1FA3               	btfss	___awdiv@dividend+1,7
  4281     1ED1  2EDB               	goto	l3913
  4282     1ED2  09A2               	comf	___awdiv@dividend,f
  4283     1ED3  09A3               	comf	___awdiv@dividend+1,f
  4284     1ED4  0AA2               	incf	___awdiv@dividend,f
  4285     1ED5  1903               	skipnz
  4286     1ED6  0AA3               	incf	___awdiv@dividend+1,f
  4287     1ED7  3001               	movlw	1
  4288     1ED8  00FF               	movwf	127
  4289     1ED9  087F               	movf	127,w
  4290     1EDA  06A5               	xorwf	___awdiv@sign,f
  4291     1EDB                     l3913:
  4292     1EDB  01A6               	clrf	___awdiv@quotient
  4293     1EDC  01A7               	clrf	___awdiv@quotient+1
  4294     1EDD  0820               	movf	___awdiv@divisor,w
  4295     1EDE  0421               	iorwf	___awdiv@divisor+1,w
  4296     1EDF  1903               	btfsc	3,2
  4297     1EE0  2F12               	goto	l3935
  4298     1EE1  01A4               	clrf	___awdiv@counter
  4299     1EE2  0AA4               	incf	___awdiv@counter,f
  4300     1EE3                     l3923:
  4301     1EE3  1BA1               	btfsc	___awdiv@divisor+1,7
  4302     1EE4  2EF1               	goto	l3925
  4303     1EE5  3001               	movlw	1
  4304     1EE6                     u6185:
  4305     1EE6  1003               	clrc
  4306     1EE7  0DA0               	rlf	___awdiv@divisor,f
  4307     1EE8  0DA1               	rlf	___awdiv@divisor+1,f
  4308     1EE9  3EFF               	addlw	-1
  4309     1EEA  1D03               	skipz
  4310     1EEB  2EE6               	goto	u6185
  4311     1EEC  3001               	movlw	1
  4312     1EED  00FF               	movwf	127
  4313     1EEE  087F               	movf	127,w
  4314     1EEF  07A4               	addwf	___awdiv@counter,f
  4315     1EF0  2EE3               	goto	l3923
  4316     1EF1                     l3925:
  4317     1EF1  3001               	movlw	1
  4318     1EF2                     u6205:
  4319     1EF2  1003               	clrc
  4320     1EF3  0DA6               	rlf	___awdiv@quotient,f
  4321     1EF4  0DA7               	rlf	___awdiv@quotient+1,f
  4322     1EF5  3EFF               	addlw	-1
  4323     1EF6  1D03               	skipz
  4324     1EF7  2EF2               	goto	u6205
  4325     1EF8  0821               	movf	___awdiv@divisor+1,w
  4326     1EF9  0223               	subwf	___awdiv@dividend+1,w
  4327     1EFA  1D03               	skipz
  4328     1EFB  2EFE               	goto	u6215
  4329     1EFC  0820               	movf	___awdiv@divisor,w
  4330     1EFD  0222               	subwf	___awdiv@dividend,w
  4331     1EFE                     u6215:
  4332     1EFE  1C03               	skipc
  4333     1EFF  2F07               	goto	l3931
  4334     1F00  0820               	movf	___awdiv@divisor,w
  4335     1F01  02A2               	subwf	___awdiv@dividend,f
  4336     1F02  0821               	movf	___awdiv@divisor+1,w
  4337     1F03  1C03               	skipc
  4338     1F04  03A3               	decf	___awdiv@dividend+1,f
  4339     1F05  02A3               	subwf	___awdiv@dividend+1,f
  4340     1F06  1426               	bsf	___awdiv@quotient,0
  4341     1F07                     l3931:
  4342     1F07  3001               	movlw	1
  4343     1F08                     u6225:
  4344     1F08  1003               	clrc
  4345     1F09  0CA1               	rrf	___awdiv@divisor+1,f
  4346     1F0A  0CA0               	rrf	___awdiv@divisor,f
  4347     1F0B  3EFF               	addlw	-1
  4348     1F0C  1D03               	skipz
  4349     1F0D  2F08               	goto	u6225
  4350     1F0E  3001               	movlw	1
  4351     1F0F  02A4               	subwf	___awdiv@counter,f
  4352     1F10  1D03               	btfss	3,2
  4353     1F11  2EF1               	goto	l3925
  4354     1F12                     l3935:
  4355     1F12  0825               	movf	___awdiv@sign,w
  4356     1F13  1903               	btfsc	3,2
  4357     1F14  2F1A               	goto	l3939
  4358     1F15  09A6               	comf	___awdiv@quotient,f
  4359     1F16  09A7               	comf	___awdiv@quotient+1,f
  4360     1F17  0AA6               	incf	___awdiv@quotient,f
  4361     1F18  1903               	skipnz
  4362     1F19  0AA7               	incf	___awdiv@quotient+1,f
  4363     1F1A                     l3939:
  4364     1F1A  0827               	movf	___awdiv@quotient+1,w
  4365     1F1B  00A1               	movwf	?___awdiv+1
  4366     1F1C  0826               	movf	___awdiv@quotient,w
  4367     1F1D  00A0               	movwf	?___awdiv
  4368     1F1E  0008               	return
  4369     1F1F                     __end_of___awdiv:
  4370                           
  4371                           	psect	text6
  4372     1C05                     __ptext6:	
  4373 ;; *************** function _isdigit *****************
  4374 ;; Defined at:
  4375 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;  c               1    wreg     unsigned char 
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;  c               1    3[COMMON] unsigned char 
  4380 ;; Return value:  Size  Location     Type
  4381 ;;		None               void
  4382 ;; Registers used:
  4383 ;;		wreg, status,2, status,0
  4384 ;; Tracked objects:
  4385 ;;		On entry : 300/100
  4386 ;;		On exit  : 300/100
  4387 ;;		Unchanged: 300/0
  4388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4389 ;;      Params:         0       0       0       0       0
  4390 ;;      Locals:         2       0       0       0       0
  4391 ;;      Temps:          0       0       0       0       0
  4392 ;;      Totals:         2       0       0       0       0
  4393 ;;Total ram usage:        2 bytes
  4394 ;; Hardware stack levels used: 1
  4395 ;; Hardware stack levels required when called: 1
  4396 ;; This function calls:
  4397 ;;		Nothing
  4398 ;; This function is called by:
  4399 ;;		_sprintf
  4400 ;; This function uses a non-reentrant model
  4401 ;;
  4402                           
  4403     1C05                     _isdigit:	
  4404                           ;psect for function _isdigit
  4405                           
  4406                           
  4407                           ;incstack = 0
  4408                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4409                           ;isdigit@c stored from wreg
  4410     1C05  00F3               	movwf	isdigit@c
  4411     1C06  01F2               	clrf	_isdigit$856
  4412     1C07  303A               	movlw	58
  4413     1C08  0273               	subwf	isdigit@c,w
  4414     1C09  1803               	skipnc
  4415     1C0A  2C11               	goto	l4433
  4416     1C0B  3030               	movlw	48
  4417     1C0C  0273               	subwf	isdigit@c,w
  4418     1C0D  1C03               	skipc
  4419     1C0E  2C11               	goto	l4433
  4420     1C0F  01F2               	clrf	_isdigit$856
  4421     1C10  0AF2               	incf	_isdigit$856,f
  4422     1C11                     l4433:
  4423     1C11  0C72               	rrf	_isdigit$856,w
  4424     1C12  0008               	return
  4425     1C13                     __end_of_isdigit:
  4426                           
  4427                           	psect	text7
  4428     1649                     __ptext7:	
  4429 ;; *************** function _fround *****************
  4430 ;; Defined at:
  4431 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;  prec            1    wreg     unsigned char 
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;  prec            1   68[BANK0 ] unsigned char 
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  4   51[BANK0 ] unsigned char 
  4438 ;; Registers used:
  4439 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4440 ;; Tracked objects:
  4441 ;;		On entry : 300/100
  4442 ;;		On exit  : 300/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4445 ;;      Params:         0       4       0       0       0
  4446 ;;      Locals:         0       9       0       0       0
  4447 ;;      Temps:          0       5       0       0       0
  4448 ;;      Totals:         0      18       0       0       0
  4449 ;;Total ram usage:       18 bytes
  4450 ;; Hardware stack levels used: 1
  4451 ;; Hardware stack levels required when called: 3
  4452 ;; This function calls:
  4453 ;;		___flmul
  4454 ;;		___lbdiv
  4455 ;;		___lbmod
  4456 ;; This function is called by:
  4457 ;;		_sprintf
  4458 ;; This function uses a non-reentrant model
  4459 ;;
  4460                           
  4461     1649                     _fround:	
  4462                           ;psect for function _fround
  4463                           
  4464                           
  4465                           ;incstack = 0
  4466                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4467                           ;fround@prec stored from wreg
  4468     1649  1283               	bcf	3,5	;RP0=0, select bank0
  4469     164A  00E4               	movwf	fround@prec
  4470                           
  4471                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4472     164B  306E               	movlw	110
  4473     164C  0264               	subwf	fround@prec,w
  4474     164D  1C03               	skipc
  4475     164E  2F2D               	goto	l4375
  4476                           
  4477                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4478     164F  303F               	movlw	63
  4479     1650  00BC               	movwf	___flmul@b+3
  4480     1651  3000               	movlw	0
  4481     1652  00BB               	movwf	___flmul@b+2
  4482     1653  3000               	movlw	0
  4483     1654  00BA               	movwf	___flmul@b+1
  4484     1655  3000               	movlw	0
  4485     1656  00B9               	movwf	___flmul@b
  4486     1657  3064               	movlw	100
  4487     1658  00F8               	movwf	___lbdiv@divisor
  4488     1659  0864               	movf	fround@prec,w
  4489     165A  160A  158A  24C0  160A  118A  	fcall	___lbdiv
  4490     165F  00D7               	movwf	??_fround
  4491     1660  3001               	movlw	1
  4492     1661                     u7255:
  4493     1661  1003               	clrc
  4494     1662  0DD7               	rlf	??_fround,f
  4495     1663  3EFF               	addlw	-1
  4496     1664  1D03               	skipz
  4497     1665  2E61               	goto	u7255
  4498     1666  1003               	clrc
  4499     1667  0D57               	rlf	??_fround,w
  4500     1668  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4501     1669  0084               	movwf	4
  4502     166A  160A  118A  2000  160A  118A  	fcall	stringdir
  4503     166F  00D8               	movwf	??_fround+1
  4504     1670  160A  118A  2000  160A  118A  	fcall	stringdir
  4505     1675  00D9               	movwf	??_fround+2
  4506     1676  160A  118A  2000  160A  118A  	fcall	stringdir
  4507     167B  00DA               	movwf	??_fround+3
  4508     167C  160A  118A  2000  160A  118A  	fcall	stringdir
  4509     1681  00DB               	movwf	??_fround+4
  4510     1682  085B               	movf	??_fround+4,w
  4511     1683  00C0               	movwf	___flmul@a+3
  4512     1684  085A               	movf	??_fround+3,w
  4513     1685  00BF               	movwf	___flmul@a+2
  4514     1686  0859               	movf	??_fround+2,w
  4515     1687  00BE               	movwf	___flmul@a+1
  4516     1688  0858               	movf	??_fround+1,w
  4517     1689  00BD               	movwf	___flmul@a
  4518     168A  120A  158A  21FF  160A  118A  	fcall	___flmul
  4519     168F  083C               	movf	?___flmul+3,w
  4520     1690  00E3               	movwf	_fround$1068+3
  4521     1691  083B               	movf	?___flmul+2,w
  4522     1692  00E2               	movwf	_fround$1068+2
  4523     1693  083A               	movf	?___flmul+1,w
  4524     1694  00E1               	movwf	_fround$1068+1
  4525     1695  0839               	movf	?___flmul,w
  4526     1696  00E0               	movwf	_fround$1068
  4527                           
  4528                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4529     1697  300A               	movlw	10
  4530     1698  00F8               	movwf	___lbdiv@divisor
  4531     1699  3064               	movlw	100
  4532     169A  00F2               	movwf	___lbmod@divisor
  4533     169B  0864               	movf	fround@prec,w
  4534     169C  160A  158A  2480  160A  118A  	fcall	___lbmod
  4535     16A1  160A  158A  24C0  160A  118A  	fcall	___lbdiv
  4536     16A6  00D7               	movwf	??_fround
  4537     16A7  3001               	movlw	1
  4538     16A8                     u7265:
  4539     16A8  1003               	clrc
  4540     16A9  0DD7               	rlf	??_fround,f
  4541     16AA  3EFF               	addlw	-1
  4542     16AB  1D03               	skipz
  4543     16AC  2EA8               	goto	u7265
  4544     16AD  1003               	clrc
  4545     16AE  0D57               	rlf	??_fround,w
  4546     16AF  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4547     16B0  0084               	movwf	4
  4548     16B1  160A  118A  2000  160A  118A  	fcall	stringdir
  4549     16B6  00D8               	movwf	??_fround+1
  4550     16B7  160A  118A  2000  160A  118A  	fcall	stringdir
  4551     16BC  00D9               	movwf	??_fround+2
  4552     16BD  160A  118A  2000  160A  118A  	fcall	stringdir
  4553     16C2  00DA               	movwf	??_fround+3
  4554     16C3  160A  118A  2000  160A  118A  	fcall	stringdir
  4555     16C8  00DB               	movwf	??_fround+4
  4556     16C9  085B               	movf	??_fround+4,w
  4557     16CA  00BC               	movwf	___flmul@b+3
  4558     16CB  085A               	movf	??_fround+3,w
  4559     16CC  00BB               	movwf	___flmul@b+2
  4560     16CD  0859               	movf	??_fround+2,w
  4561     16CE  00BA               	movwf	___flmul@b+1
  4562     16CF  0858               	movf	??_fround+1,w
  4563     16D0  00B9               	movwf	___flmul@b
  4564     16D1  0863               	movf	_fround$1068+3,w
  4565     16D2  00C0               	movwf	___flmul@a+3
  4566     16D3  0862               	movf	_fround$1068+2,w
  4567     16D4  00BF               	movwf	___flmul@a+2
  4568     16D5  0861               	movf	_fround$1068+1,w
  4569     16D6  00BE               	movwf	___flmul@a+1
  4570     16D7  0860               	movf	_fround$1068,w
  4571     16D8  00BD               	movwf	___flmul@a
  4572     16D9  120A  158A  21FF  160A  118A  	fcall	___flmul
  4573     16DE  083C               	movf	?___flmul+3,w
  4574     16DF  00DF               	movwf	_fround$1069+3
  4575     16E0  083B               	movf	?___flmul+2,w
  4576     16E1  00DE               	movwf	_fround$1069+2
  4577     16E2  083A               	movf	?___flmul+1,w
  4578     16E3  00DD               	movwf	_fround$1069+1
  4579     16E4  0839               	movf	?___flmul,w
  4580     16E5  00DC               	movwf	_fround$1069
  4581                           
  4582                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4583     16E6  300A               	movlw	10
  4584     16E7  00F2               	movwf	___lbmod@divisor
  4585     16E8  0864               	movf	fround@prec,w
  4586     16E9  160A  158A  2480  160A  118A  	fcall	___lbmod
  4587     16EE  00D7               	movwf	??_fround
  4588     16EF  3001               	movlw	1
  4589     16F0                     u7275:
  4590     16F0  1003               	clrc
  4591     16F1  0DD7               	rlf	??_fround,f
  4592     16F2  3EFF               	addlw	-1
  4593     16F3  1D03               	skipz
  4594     16F4  2EF0               	goto	u7275
  4595     16F5  1003               	clrc
  4596     16F6  0D57               	rlf	??_fround,w
  4597     16F7  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4598     16F8  0084               	movwf	4
  4599     16F9  160A  118A  2000  160A  118A  	fcall	stringdir
  4600     16FE  00D8               	movwf	??_fround+1
  4601     16FF  160A  118A  2000  160A  118A  	fcall	stringdir
  4602     1704  00D9               	movwf	??_fround+2
  4603     1705  160A  118A  2000  160A  118A  	fcall	stringdir
  4604     170A  00DA               	movwf	??_fround+3
  4605     170B  160A  118A  2000  160A  118A  	fcall	stringdir
  4606     1710  00DB               	movwf	??_fround+4
  4607     1711  085B               	movf	??_fround+4,w
  4608     1712  00BC               	movwf	___flmul@b+3
  4609     1713  085A               	movf	??_fround+3,w
  4610     1714  00BB               	movwf	___flmul@b+2
  4611     1715  0859               	movf	??_fround+2,w
  4612     1716  00BA               	movwf	___flmul@b+1
  4613     1717  0858               	movf	??_fround+1,w
  4614     1718  00B9               	movwf	___flmul@b
  4615     1719  085F               	movf	_fround$1069+3,w
  4616     171A  00C0               	movwf	___flmul@a+3
  4617     171B  085E               	movf	_fround$1069+2,w
  4618     171C  00BF               	movwf	___flmul@a+2
  4619     171D  085D               	movf	_fround$1069+1,w
  4620     171E  00BE               	movwf	___flmul@a+1
  4621     171F  085C               	movf	_fround$1069,w
  4622     1720  00BD               	movwf	___flmul@a
  4623     1721  120A  158A  21FF   	fcall	___flmul
  4624     1724  083C               	movf	?___flmul+3,w
  4625     1725  00D6               	movwf	?_fround+3
  4626     1726  083B               	movf	?___flmul+2,w
  4627     1727  00D5               	movwf	?_fround+2
  4628     1728  083A               	movf	?___flmul+1,w
  4629     1729  00D4               	movwf	?_fround+1
  4630     172A  0839               	movf	?___flmul,w
  4631     172B  00D3               	movwf	?_fround
  4632     172C  0008               	return
  4633     172D                     l4375:
  4634     172D  300B               	movlw	11
  4635     172E  0264               	subwf	fround@prec,w
  4636     172F  1C03               	skipc
  4637     1730  2FC0               	goto	l4381
  4638                           
  4639                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4640     1731  303F               	movlw	63
  4641     1732  00BC               	movwf	___flmul@b+3
  4642     1733  3000               	movlw	0
  4643     1734  00BB               	movwf	___flmul@b+2
  4644     1735  3000               	movlw	0
  4645     1736  00BA               	movwf	___flmul@b+1
  4646     1737  3000               	movlw	0
  4647     1738  00B9               	movwf	___flmul@b
  4648     1739  300A               	movlw	10
  4649     173A  00F8               	movwf	___lbdiv@divisor
  4650     173B  0864               	movf	fround@prec,w
  4651     173C  160A  158A  24C0  160A  118A  	fcall	___lbdiv
  4652     1741  00D7               	movwf	??_fround
  4653     1742  3001               	movlw	1
  4654     1743                     u7295:
  4655     1743  1003               	clrc
  4656     1744  0DD7               	rlf	??_fround,f
  4657     1745  3EFF               	addlw	-1
  4658     1746  1D03               	skipz
  4659     1747  2F43               	goto	u7295
  4660     1748  1003               	clrc
  4661     1749  0D57               	rlf	??_fround,w
  4662     174A  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4663     174B  0084               	movwf	4
  4664     174C  160A  118A  2000  160A  118A  	fcall	stringdir
  4665     1751  00D8               	movwf	??_fround+1
  4666     1752  160A  118A  2000  160A  118A  	fcall	stringdir
  4667     1757  00D9               	movwf	??_fround+2
  4668     1758  160A  118A  2000  160A  118A  	fcall	stringdir
  4669     175D  00DA               	movwf	??_fround+3
  4670     175E  160A  118A  2000  160A  118A  	fcall	stringdir
  4671     1763  00DB               	movwf	??_fround+4
  4672     1764  085B               	movf	??_fround+4,w
  4673     1765  00C0               	movwf	___flmul@a+3
  4674     1766  085A               	movf	??_fround+3,w
  4675     1767  00BF               	movwf	___flmul@a+2
  4676     1768  0859               	movf	??_fround+2,w
  4677     1769  00BE               	movwf	___flmul@a+1
  4678     176A  0858               	movf	??_fround+1,w
  4679     176B  00BD               	movwf	___flmul@a
  4680     176C  120A  158A  21FF  160A  118A  	fcall	___flmul
  4681     1771  083C               	movf	?___flmul+3,w
  4682     1772  00E3               	movwf	_fround$1068+3
  4683     1773  083B               	movf	?___flmul+2,w
  4684     1774  00E2               	movwf	_fround$1068+2
  4685     1775  083A               	movf	?___flmul+1,w
  4686     1776  00E1               	movwf	_fround$1068+1
  4687     1777  0839               	movf	?___flmul,w
  4688     1778  00E0               	movwf	_fround$1068
  4689                           
  4690                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4691     1779  300A               	movlw	10
  4692     177A  00F2               	movwf	___lbmod@divisor
  4693     177B  0864               	movf	fround@prec,w
  4694     177C  160A  158A  2480  160A  118A  	fcall	___lbmod
  4695     1781  00D7               	movwf	??_fround
  4696     1782  3001               	movlw	1
  4697     1783                     u7305:
  4698     1783  1003               	clrc
  4699     1784  0DD7               	rlf	??_fround,f
  4700     1785  3EFF               	addlw	-1
  4701     1786  1D03               	skipz
  4702     1787  2F83               	goto	u7305
  4703     1788  1003               	clrc
  4704     1789  0D57               	rlf	??_fround,w
  4705     178A  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4706     178B  0084               	movwf	4
  4707     178C  160A  118A  2000  160A  118A  	fcall	stringdir
  4708     1791  00D8               	movwf	??_fround+1
  4709     1792  160A  118A  2000  160A  118A  	fcall	stringdir
  4710     1797  00D9               	movwf	??_fround+2
  4711     1798  160A  118A  2000  160A  118A  	fcall	stringdir
  4712     179D  00DA               	movwf	??_fround+3
  4713     179E  160A  118A  2000  160A  118A  	fcall	stringdir
  4714     17A3  00DB               	movwf	??_fround+4
  4715     17A4  085B               	movf	??_fround+4,w
  4716     17A5  00BC               	movwf	___flmul@b+3
  4717     17A6  085A               	movf	??_fround+3,w
  4718     17A7  00BB               	movwf	___flmul@b+2
  4719     17A8  0859               	movf	??_fround+2,w
  4720     17A9  00BA               	movwf	___flmul@b+1
  4721     17AA  0858               	movf	??_fround+1,w
  4722     17AB  00B9               	movwf	___flmul@b
  4723     17AC  0863               	movf	_fround$1068+3,w
  4724     17AD  00C0               	movwf	___flmul@a+3
  4725     17AE  0862               	movf	_fround$1068+2,w
  4726     17AF  00BF               	movwf	___flmul@a+2
  4727     17B0  0861               	movf	_fround$1068+1,w
  4728     17B1  00BE               	movwf	___flmul@a+1
  4729     17B2  0860               	movf	_fround$1068,w
  4730     17B3  00BD               	movwf	___flmul@a
  4731     17B4  120A  158A  21FF   	fcall	___flmul
  4732     17B7  083C               	movf	?___flmul+3,w
  4733     17B8  00D6               	movwf	?_fround+3
  4734     17B9  083B               	movf	?___flmul+2,w
  4735     17BA  00D5               	movwf	?_fround+2
  4736     17BB  083A               	movf	?___flmul+1,w
  4737     17BC  00D4               	movwf	?_fround+1
  4738     17BD  0839               	movf	?___flmul,w
  4739     17BE  00D3               	movwf	?_fround
  4740     17BF  0008               	return
  4741     17C0                     l4381:
  4742                           
  4743                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4744     17C0  303F               	movlw	63
  4745     17C1  00BC               	movwf	___flmul@b+3
  4746     17C2  3000               	movlw	0
  4747     17C3  00BB               	movwf	___flmul@b+2
  4748     17C4  3000               	movlw	0
  4749     17C5  00BA               	movwf	___flmul@b+1
  4750     17C6  3000               	movlw	0
  4751     17C7  00B9               	movwf	___flmul@b
  4752     17C8  0864               	movf	fround@prec,w
  4753     17C9  00D7               	movwf	??_fround
  4754     17CA  3001               	movlw	1
  4755     17CB                     u7315:
  4756     17CB  1003               	clrc
  4757     17CC  0DD7               	rlf	??_fround,f
  4758     17CD  3EFF               	addlw	-1
  4759     17CE  1D03               	skipz
  4760     17CF  2FCB               	goto	u7315
  4761     17D0  1003               	clrc
  4762     17D1  0D57               	rlf	??_fround,w
  4763     17D2  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4764     17D3  0084               	movwf	4
  4765     17D4  160A  118A  2000  160A  118A  	fcall	stringdir
  4766     17D9  00D8               	movwf	??_fround+1
  4767     17DA  160A  118A  2000  160A  118A  	fcall	stringdir
  4768     17DF  00D9               	movwf	??_fround+2
  4769     17E0  160A  118A  2000  160A  118A  	fcall	stringdir
  4770     17E5  00DA               	movwf	??_fround+3
  4771     17E6  160A  118A  2000  160A  118A  	fcall	stringdir
  4772     17EB  00DB               	movwf	??_fround+4
  4773     17EC  085B               	movf	??_fround+4,w
  4774     17ED  00C0               	movwf	___flmul@a+3
  4775     17EE  085A               	movf	??_fround+3,w
  4776     17EF  00BF               	movwf	___flmul@a+2
  4777     17F0  0859               	movf	??_fround+2,w
  4778     17F1  00BE               	movwf	___flmul@a+1
  4779     17F2  0858               	movf	??_fround+1,w
  4780     17F3  00BD               	movwf	___flmul@a
  4781     17F4  120A  158A  21FF   	fcall	___flmul
  4782     17F7  083C               	movf	?___flmul+3,w
  4783     17F8  00D6               	movwf	?_fround+3
  4784     17F9  083B               	movf	?___flmul+2,w
  4785     17FA  00D5               	movwf	?_fround+2
  4786     17FB  083A               	movf	?___flmul+1,w
  4787     17FC  00D4               	movwf	?_fround+1
  4788     17FD  0839               	movf	?___flmul,w
  4789     17FE  00D3               	movwf	?_fround
  4790     17FF  0008               	return
  4791     1800                     __end_of_fround:
  4792                           
  4793                           	psect	text8
  4794     1C80                     __ptext8:	
  4795 ;; *************** function ___lbmod *****************
  4796 ;; Defined at:
  4797 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbmod.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;  dividend        1    wreg     unsigned char 
  4800 ;;  divisor         1    2[COMMON] unsigned char 
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;  dividend        1    5[COMMON] unsigned char 
  4803 ;;  rem             1    7[COMMON] unsigned char 
  4804 ;;  counter         1    6[COMMON] unsigned char 
  4805 ;; Return value:  Size  Location     Type
  4806 ;;                  1    wreg      unsigned char 
  4807 ;; Registers used:
  4808 ;;		wreg, status,2, status,0
  4809 ;; Tracked objects:
  4810 ;;		On entry : 300/0
  4811 ;;		On exit  : 300/0
  4812 ;;		Unchanged: 300/0
  4813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4814 ;;      Params:         1       0       0       0       0
  4815 ;;      Locals:         3       0       0       0       0
  4816 ;;      Temps:          2       0       0       0       0
  4817 ;;      Totals:         6       0       0       0       0
  4818 ;;Total ram usage:        6 bytes
  4819 ;; Hardware stack levels used: 1
  4820 ;; Hardware stack levels required when called: 1
  4821 ;; This function calls:
  4822 ;;		Nothing
  4823 ;; This function is called by:
  4824 ;;		_fround
  4825 ;; This function uses a non-reentrant model
  4826 ;;
  4827                           
  4828     1C80                     ___lbmod:	
  4829                           ;psect for function ___lbmod
  4830                           
  4831                           
  4832                           ;incstack = 0
  4833                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  4834                           ;___lbmod@dividend stored from wreg
  4835     1C80  00F5               	movwf	___lbmod@dividend
  4836     1C81  3008               	movlw	8
  4837     1C82  00F6               	movwf	___lbmod@counter
  4838     1C83  01F7               	clrf	___lbmod@rem
  4839     1C84                     l4011:
  4840     1C84  0875               	movf	___lbmod@dividend,w
  4841     1C85  00F3               	movwf	??___lbmod
  4842     1C86  3007               	movlw	7
  4843     1C87                     u6385:
  4844     1C87  1003               	clrc
  4845     1C88  0CF3               	rrf	??___lbmod,f
  4846     1C89  3EFF               	addlw	-1
  4847     1C8A  1D03               	skipz
  4848     1C8B  2C87               	goto	u6385
  4849     1C8C  0877               	movf	___lbmod@rem,w
  4850     1C8D  00F4               	movwf	??___lbmod+1
  4851     1C8E  0774               	addwf	??___lbmod+1,w
  4852     1C8F  0473               	iorwf	??___lbmod,w
  4853     1C90  00F7               	movwf	___lbmod@rem
  4854     1C91  1003               	clrc
  4855     1C92  0DF5               	rlf	___lbmod@dividend,f
  4856     1C93  0872               	movf	___lbmod@divisor,w
  4857     1C94  0277               	subwf	___lbmod@rem,w
  4858     1C95  1C03               	skipc
  4859     1C96  2C99               	goto	l652
  4860     1C97  0872               	movf	___lbmod@divisor,w
  4861     1C98  02F7               	subwf	___lbmod@rem,f
  4862     1C99                     l652:
  4863     1C99  3001               	movlw	1
  4864     1C9A  02F6               	subwf	___lbmod@counter,f
  4865     1C9B  1D03               	btfss	3,2
  4866     1C9C  2C84               	goto	l4011
  4867     1C9D  0877               	movf	___lbmod@rem,w
  4868     1C9E  0008               	return
  4869     1C9F                     __end_of___lbmod:
  4870                           
  4871                           	psect	text9
  4872     1CC0                     __ptext9:	
  4873 ;; *************** function ___lbdiv *****************
  4874 ;; Defined at:
  4875 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbdiv.c"
  4876 ;; Parameters:    Size  Location     Type
  4877 ;;  dividend        1    wreg     unsigned char 
  4878 ;;  divisor         1    8[COMMON] unsigned char 
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;  dividend        1    0[BANK0 ] unsigned char 
  4881 ;;  quotient        1    2[BANK0 ] unsigned char 
  4882 ;;  counter         1    1[BANK0 ] unsigned char 
  4883 ;; Return value:  Size  Location     Type
  4884 ;;                  1    wreg      unsigned char 
  4885 ;; Registers used:
  4886 ;;		wreg, status,2, status,0, btemp+1
  4887 ;; Tracked objects:
  4888 ;;		On entry : 300/0
  4889 ;;		On exit  : 300/0
  4890 ;;		Unchanged: 0/0
  4891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4892 ;;      Params:         1       0       0       0       0
  4893 ;;      Locals:         0       3       0       0       0
  4894 ;;      Temps:          0       0       0       0       0
  4895 ;;      Totals:         1       3       0       0       0
  4896 ;;Total ram usage:        4 bytes
  4897 ;; Hardware stack levels used: 1
  4898 ;; Hardware stack levels required when called: 1
  4899 ;; This function calls:
  4900 ;;		Nothing
  4901 ;; This function is called by:
  4902 ;;		_fround
  4903 ;; This function uses a non-reentrant model
  4904 ;;
  4905                           
  4906     1CC0                     ___lbdiv:	
  4907                           ;psect for function ___lbdiv
  4908                           
  4909                           
  4910                           ;incstack = 0
  4911                           ; Regs used in ___lbdiv: [wreg+status,2+status,0+btemp+1]
  4912                           ;___lbdiv@dividend stored from wreg
  4913     1CC0  00A0               	movwf	___lbdiv@dividend
  4914     1CC1  01A2               	clrf	___lbdiv@quotient
  4915     1CC2  0878               	movf	___lbdiv@divisor,w
  4916     1CC3  1903               	btfsc	3,2
  4917     1CC4  2CDF               	goto	l4003
  4918     1CC5  01A1               	clrf	___lbdiv@counter
  4919     1CC6  0AA1               	incf	___lbdiv@counter,f
  4920     1CC7                     l3991:
  4921     1CC7  1BF8               	btfsc	___lbdiv@divisor,7
  4922     1CC8  2CD0               	goto	l3993
  4923     1CC9  1003               	clrc
  4924     1CCA  0DF8               	rlf	___lbdiv@divisor,f
  4925     1CCB  3001               	movlw	1
  4926     1CCC  00FF               	movwf	127
  4927     1CCD  087F               	movf	127,w
  4928     1CCE  07A1               	addwf	___lbdiv@counter,f
  4929     1CCF  2CC7               	goto	l3991
  4930     1CD0                     l3993:
  4931     1CD0  1003               	clrc
  4932     1CD1  0DA2               	rlf	___lbdiv@quotient,f
  4933     1CD2  0878               	movf	___lbdiv@divisor,w
  4934     1CD3  0220               	subwf	___lbdiv@dividend,w
  4935     1CD4  1C03               	skipc
  4936     1CD5  2CDA               	goto	L9
  4937     1CD6  0878               	movf	___lbdiv@divisor,w
  4938     1CD7  02A0               	subwf	___lbdiv@dividend,f
  4939     1CD8  1422               	bsf	___lbdiv@quotient,0
  4940     1CD9  1003               	clrc
  4941     1CDA                     L9:
  4942     1CDA  0CF8               	rrf	___lbdiv@divisor,f
  4943     1CDB  3001               	movlw	1
  4944     1CDC  02A1               	subwf	___lbdiv@counter,f
  4945     1CDD  1D03               	btfss	3,2
  4946     1CDE  2CD0               	goto	l3993
  4947     1CDF                     l4003:
  4948     1CDF  0822               	movf	___lbdiv@quotient,w
  4949     1CE0  0008               	return
  4950     1CE1                     __end_of___lbdiv:
  4951                           
  4952                           	psect	text10
  4953     12F6                     __ptext10:	
  4954 ;; *************** function __tdiv_to_l_ *****************
  4955 ;; Defined at:
  4956 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftdivl.c"
  4957 ;; Parameters:    Size  Location     Type
  4958 ;;  f1              4    2[COMMON] float 
  4959 ;;  f2              4    6[COMMON] float 
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;  quot            4    3[BANK0 ] unsigned long 
  4962 ;;  exp1            1    8[BANK0 ] unsigned char 
  4963 ;;  cntr            1    7[BANK0 ] unsigned char 
  4964 ;; Return value:  Size  Location     Type
  4965 ;;                  4    2[COMMON] unsigned long 
  4966 ;; Registers used:
  4967 ;;		wreg, status,2, status,0, btemp+1
  4968 ;; Tracked objects:
  4969 ;;		On entry : 0/0
  4970 ;;		On exit  : 300/0
  4971 ;;		Unchanged: 0/0
  4972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4973 ;;      Params:         8       0       0       0       0
  4974 ;;      Locals:         0       6       0       0       0
  4975 ;;      Temps:          0       3       0       0       0
  4976 ;;      Totals:         8       9       0       0       0
  4977 ;;Total ram usage:       17 bytes
  4978 ;; Hardware stack levels used: 1
  4979 ;; Hardware stack levels required when called: 1
  4980 ;; This function calls:
  4981 ;;		Nothing
  4982 ;; This function is called by:
  4983 ;;		_sprintf
  4984 ;; This function uses a non-reentrant model
  4985 ;;
  4986                           
  4987     12F6                     __tdiv_to_l_:	
  4988                           ;psect for function __tdiv_to_l_
  4989                           
  4990                           
  4991                           ;incstack = 0
  4992                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0+btemp+1]
  4993     12F6  0872               	movf	__tdiv_to_l_@f1,w
  4994     12F7  1283               	bcf	3,5	;RP0=0, select bank0
  4995     12F8  1303               	bcf	3,6	;RP1=0, select bank0
  4996     12F9  00A0               	movwf	??__tdiv_to_l_
  4997     12FA  0873               	movf	__tdiv_to_l_@f1+1,w
  4998     12FB  00A1               	movwf	??__tdiv_to_l_+1
  4999     12FC  0874               	movf	__tdiv_to_l_@f1+2,w
  5000     12FD  00A2               	movwf	??__tdiv_to_l_+2
  5001     12FE  1003               	clrc
  5002     12FF  0D21               	rlf	??__tdiv_to_l_+1,w
  5003     1300  0D22               	rlf	??__tdiv_to_l_+2,w
  5004     1301  00A8               	movwf	__tdiv_to_l_@exp1
  5005     1302  0828               	movf	__tdiv_to_l_@exp1,w
  5006     1303  1D03               	btfss	3,2
  5007     1304  2B0E               	goto	l4443
  5008     1305                     l4439:
  5009     1305  3000               	movlw	0
  5010     1306  00F5               	movwf	?__tdiv_to_l_+3
  5011     1307  3000               	movlw	0
  5012     1308  00F4               	movwf	?__tdiv_to_l_+2
  5013     1309  3000               	movlw	0
  5014     130A  00F3               	movwf	?__tdiv_to_l_+1
  5015     130B  3000               	movlw	0
  5016     130C  00F2               	movwf	?__tdiv_to_l_
  5017     130D  0008               	return
  5018     130E                     l4443:
  5019     130E  0876               	movf	__tdiv_to_l_@f2,w
  5020     130F  00A0               	movwf	??__tdiv_to_l_
  5021     1310  0877               	movf	__tdiv_to_l_@f2+1,w
  5022     1311  00A1               	movwf	??__tdiv_to_l_+1
  5023     1312  0878               	movf	__tdiv_to_l_@f2+2,w
  5024     1313  00A2               	movwf	??__tdiv_to_l_+2
  5025     1314  1003               	clrc
  5026     1315  0D21               	rlf	??__tdiv_to_l_+1,w
  5027     1316  0D22               	rlf	??__tdiv_to_l_+2,w
  5028     1317  00A7               	movwf	__tdiv_to_l_@cntr
  5029     1318  0827               	movf	__tdiv_to_l_@cntr,w
  5030     1319  1903               	btfsc	3,2
  5031     131A  2B05               	goto	l4439
  5032     131B  17F3               	bsf	__tdiv_to_l_@f1+1,7
  5033     131C  30FF               	movlw	255
  5034     131D  05F2               	andwf	__tdiv_to_l_@f1,f
  5035     131E  30FF               	movlw	255
  5036     131F  05F3               	andwf	__tdiv_to_l_@f1+1,f
  5037     1320  3000               	movlw	0
  5038     1321  05F4               	andwf	__tdiv_to_l_@f1+2,f
  5039     1322  17F7               	bsf	__tdiv_to_l_@f2+1,7
  5040     1323  30FF               	movlw	255
  5041     1324  05F6               	andwf	__tdiv_to_l_@f2,f
  5042     1325  30FF               	movlw	255
  5043     1326  05F7               	andwf	__tdiv_to_l_@f2+1,f
  5044     1327  3000               	movlw	0
  5045     1328  05F8               	andwf	__tdiv_to_l_@f2+2,f
  5046     1329  3000               	movlw	0
  5047     132A  00A6               	movwf	__tdiv_to_l_@quot+3
  5048     132B  3000               	movlw	0
  5049     132C  00A5               	movwf	__tdiv_to_l_@quot+2
  5050     132D  3000               	movlw	0
  5051     132E  00A4               	movwf	__tdiv_to_l_@quot+1
  5052     132F  3000               	movlw	0
  5053     1330  00A3               	movwf	__tdiv_to_l_@quot
  5054     1331  307F               	movlw	127
  5055     1332  02A8               	subwf	__tdiv_to_l_@exp1,f
  5056     1333  3098               	movlw	152
  5057     1334  0727               	addwf	__tdiv_to_l_@cntr,w
  5058     1335  00A0               	movwf	??__tdiv_to_l_
  5059     1336  0820               	movf	??__tdiv_to_l_,w
  5060     1337  02A8               	subwf	__tdiv_to_l_@exp1,f
  5061     1338  3018               	movlw	24
  5062     1339  00A7               	movwf	__tdiv_to_l_@cntr
  5063     133A                     l4457:
  5064     133A  3001               	movlw	1
  5065     133B  00A0               	movwf	??__tdiv_to_l_
  5066     133C                     u7535:
  5067     133C  1003               	clrc
  5068     133D  0DA3               	rlf	__tdiv_to_l_@quot,f
  5069     133E  0DA4               	rlf	__tdiv_to_l_@quot+1,f
  5070     133F  0DA5               	rlf	__tdiv_to_l_@quot+2,f
  5071     1340  0DA6               	rlf	__tdiv_to_l_@quot+3,f
  5072     1341  0BA0               	decfsz	??__tdiv_to_l_,f
  5073     1342  2B3C               	goto	u7535
  5074     1343  0878               	movf	__tdiv_to_l_@f2+2,w
  5075     1344  0274               	subwf	__tdiv_to_l_@f1+2,w
  5076     1345  1D03               	skipz
  5077     1346  2B4D               	goto	u7545
  5078     1347  0877               	movf	__tdiv_to_l_@f2+1,w
  5079     1348  0273               	subwf	__tdiv_to_l_@f1+1,w
  5080     1349  1D03               	skipz
  5081     134A  2B4D               	goto	u7545
  5082     134B  0876               	movf	__tdiv_to_l_@f2,w
  5083     134C  0272               	subwf	__tdiv_to_l_@f1,w
  5084     134D                     u7545:
  5085     134D  1C03               	skipc
  5086     134E  2B5A               	goto	l4465
  5087     134F  0876               	movf	__tdiv_to_l_@f2,w
  5088     1350  02F2               	subwf	__tdiv_to_l_@f1,f
  5089     1351  0877               	movf	__tdiv_to_l_@f2+1,w
  5090     1352  1C03               	skipc
  5091     1353  0F77               	incfsz	__tdiv_to_l_@f2+1,w
  5092     1354  02F3               	subwf	__tdiv_to_l_@f1+1,f
  5093     1355  0878               	movf	__tdiv_to_l_@f2+2,w
  5094     1356  1C03               	skipc
  5095     1357  0A78               	incf	__tdiv_to_l_@f2+2,w
  5096     1358  02F4               	subwf	__tdiv_to_l_@f1+2,f
  5097     1359  1423               	bsf	__tdiv_to_l_@quot,0
  5098     135A                     l4465:
  5099     135A  3001               	movlw	1
  5100     135B                     u7555:
  5101     135B  1003               	clrc
  5102     135C  0DF2               	rlf	__tdiv_to_l_@f1,f
  5103     135D  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  5104     135E  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  5105     135F  3EFF               	addlw	-1
  5106     1360  1D03               	skipz
  5107     1361  2B5B               	goto	u7555
  5108     1362  3001               	movlw	1
  5109     1363  02A7               	subwf	__tdiv_to_l_@cntr,f
  5110     1364  1D03               	btfss	3,2
  5111     1365  2B3A               	goto	l4457
  5112     1366  1FA8               	btfss	__tdiv_to_l_@exp1,7
  5113     1367  2B7D               	goto	l4479
  5114     1368  0828               	movf	__tdiv_to_l_@exp1,w
  5115     1369  3A80               	xorlw	128
  5116     136A  3E97               	addlw	151
  5117     136B  1C03               	btfss	3,0
  5118     136C  2B05               	goto	l4439
  5119     136D                     l4475:
  5120     136D  3001               	movlw	1
  5121     136E                     u7595:
  5122     136E  1003               	clrc
  5123     136F  0CA6               	rrf	__tdiv_to_l_@quot+3,f
  5124     1370  0CA5               	rrf	__tdiv_to_l_@quot+2,f
  5125     1371  0CA4               	rrf	__tdiv_to_l_@quot+1,f
  5126     1372  0CA3               	rrf	__tdiv_to_l_@quot,f
  5127     1373  3EFF               	addlw	-1
  5128     1374  1D03               	skipz
  5129     1375  2B6E               	goto	u7595
  5130     1376  3001               	movlw	1
  5131     1377  00FF               	movwf	127
  5132     1378  087F               	movf	127,w
  5133     1379  07A8               	addwf	__tdiv_to_l_@exp1,f
  5134     137A  1903               	btfsc	3,2
  5135     137B  2B90               	goto	l4487
  5136     137C  2B6D               	goto	l4475
  5137     137D                     l4479:
  5138     137D  3018               	movlw	24
  5139     137E  0228               	subwf	__tdiv_to_l_@exp1,w
  5140     137F  1803               	btfsc	3,0
  5141     1380  2B05               	goto	l4439
  5142     1381                     l636:
  5143     1381  0828               	movf	__tdiv_to_l_@exp1,w
  5144     1382  1903               	btfsc	3,2
  5145     1383  2B90               	goto	l4487
  5146     1384  3001               	movlw	1
  5147     1385  00A0               	movwf	??__tdiv_to_l_
  5148     1386                     u7625:
  5149     1386  1003               	clrc
  5150     1387  0DA3               	rlf	__tdiv_to_l_@quot,f
  5151     1388  0DA4               	rlf	__tdiv_to_l_@quot+1,f
  5152     1389  0DA5               	rlf	__tdiv_to_l_@quot+2,f
  5153     138A  0DA6               	rlf	__tdiv_to_l_@quot+3,f
  5154     138B  0BA0               	decfsz	??__tdiv_to_l_,f
  5155     138C  2B86               	goto	u7625
  5156     138D  3001               	movlw	1
  5157     138E  02A8               	subwf	__tdiv_to_l_@exp1,f
  5158     138F  2B81               	goto	l636
  5159     1390                     l4487:
  5160     1390  0826               	movf	__tdiv_to_l_@quot+3,w
  5161     1391  00F5               	movwf	?__tdiv_to_l_+3
  5162     1392  0825               	movf	__tdiv_to_l_@quot+2,w
  5163     1393  00F4               	movwf	?__tdiv_to_l_+2
  5164     1394  0824               	movf	__tdiv_to_l_@quot+1,w
  5165     1395  00F3               	movwf	?__tdiv_to_l_+1
  5166     1396  0823               	movf	__tdiv_to_l_@quot,w
  5167     1397  00F2               	movwf	?__tdiv_to_l_
  5168     1398  0008               	return
  5169     1399                     __end_of__tdiv_to_l_:
  5170                           
  5171                           	psect	text11
  5172     1253                     __ptext11:	
  5173 ;; *************** function __div_to_l_ *****************
  5174 ;; Defined at:
  5175 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fldivl.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;  f1              4    2[COMMON] unsigned long 
  5178 ;;  f2              4    6[COMMON] unsigned long 
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;  quot            4    1[BANK0 ] unsigned long 
  5181 ;;  exp1            1    6[BANK0 ] unsigned char 
  5182 ;;  cntr            1    5[BANK0 ] unsigned char 
  5183 ;; Return value:  Size  Location     Type
  5184 ;;                  4    2[COMMON] unsigned long 
  5185 ;; Registers used:
  5186 ;;		wreg, status,2, status,0, btemp+1
  5187 ;; Tracked objects:
  5188 ;;		On entry : 300/100
  5189 ;;		On exit  : 300/0
  5190 ;;		Unchanged: 0/0
  5191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5192 ;;      Params:         8       0       0       0       0
  5193 ;;      Locals:         0       6       0       0       0
  5194 ;;      Temps:          0       1       0       0       0
  5195 ;;      Totals:         8       7       0       0       0
  5196 ;;Total ram usage:       15 bytes
  5197 ;; Hardware stack levels used: 1
  5198 ;; Hardware stack levels required when called: 1
  5199 ;; This function calls:
  5200 ;;		Nothing
  5201 ;; This function is called by:
  5202 ;;		_sprintf
  5203 ;; This function uses a non-reentrant model
  5204 ;;
  5205                           
  5206     1253                     __div_to_l_:	
  5207                           ;psect for function __div_to_l_
  5208                           
  5209                           
  5210                           ;incstack = 0
  5211                           ; Regs used in __div_to_l_: [wreg+status,2+status,0+btemp+1]
  5212     1253  1003               	clrc
  5213     1254  0D74               	rlf	__div_to_l_@f1+2,w
  5214     1255  0D75               	rlf	__div_to_l_@f1+3,w
  5215     1256  1283               	bcf	3,5	;RP0=0, select bank0
  5216     1257  00A6               	movwf	__div_to_l_@exp1
  5217     1258  0826               	movf	__div_to_l_@exp1,w
  5218     1259  1D03               	btfss	3,2
  5219     125A  2A64               	goto	l4497
  5220     125B                     l4493:
  5221     125B  3000               	movlw	0
  5222     125C  00F5               	movwf	?__div_to_l_+3
  5223     125D  3000               	movlw	0
  5224     125E  00F4               	movwf	?__div_to_l_+2
  5225     125F  3000               	movlw	0
  5226     1260  00F3               	movwf	?__div_to_l_+1
  5227     1261  3000               	movlw	0
  5228     1262  00F2               	movwf	?__div_to_l_
  5229     1263  0008               	return
  5230     1264                     l4497:
  5231     1264  1003               	clrc
  5232     1265  0D78               	rlf	__div_to_l_@f2+2,w
  5233     1266  0D79               	rlf	__div_to_l_@f2+3,w
  5234     1267  00A5               	movwf	__div_to_l_@cntr
  5235     1268  0825               	movf	__div_to_l_@cntr,w
  5236     1269  1903               	btfsc	3,2
  5237     126A  2A5B               	goto	l4493
  5238     126B  17F4               	bsf	__div_to_l_@f1+2,7
  5239     126C  30FF               	movlw	255
  5240     126D  05F2               	andwf	__div_to_l_@f1,f
  5241     126E  30FF               	movlw	255
  5242     126F  05F3               	andwf	__div_to_l_@f1+1,f
  5243     1270  30FF               	movlw	255
  5244     1271  05F4               	andwf	__div_to_l_@f1+2,f
  5245     1272  3000               	movlw	0
  5246     1273  05F5               	andwf	__div_to_l_@f1+3,f
  5247     1274  17F8               	bsf	__div_to_l_@f2+2,7
  5248     1275  30FF               	movlw	255
  5249     1276  05F6               	andwf	__div_to_l_@f2,f
  5250     1277  30FF               	movlw	255
  5251     1278  05F7               	andwf	__div_to_l_@f2+1,f
  5252     1279  30FF               	movlw	255
  5253     127A  05F8               	andwf	__div_to_l_@f2+2,f
  5254     127B  3000               	movlw	0
  5255     127C  05F9               	andwf	__div_to_l_@f2+3,f
  5256     127D  3000               	movlw	0
  5257     127E  00A4               	movwf	__div_to_l_@quot+3
  5258     127F  3000               	movlw	0
  5259     1280  00A3               	movwf	__div_to_l_@quot+2
  5260     1281  3000               	movlw	0
  5261     1282  00A2               	movwf	__div_to_l_@quot+1
  5262     1283  3000               	movlw	0
  5263     1284  00A1               	movwf	__div_to_l_@quot
  5264     1285  307F               	movlw	127
  5265     1286  02A6               	subwf	__div_to_l_@exp1,f
  5266     1287  30A0               	movlw	160
  5267     1288  0725               	addwf	__div_to_l_@cntr,w
  5268     1289  00A0               	movwf	??__div_to_l_
  5269     128A  0820               	movf	??__div_to_l_,w
  5270     128B  02A6               	subwf	__div_to_l_@exp1,f
  5271     128C  3020               	movlw	32
  5272     128D  00A5               	movwf	__div_to_l_@cntr
  5273     128E                     l4511:
  5274     128E  3001               	movlw	1
  5275     128F  00A0               	movwf	??__div_to_l_
  5276     1290                     u7665:
  5277     1290  1003               	clrc
  5278     1291  0DA1               	rlf	__div_to_l_@quot,f
  5279     1292  0DA2               	rlf	__div_to_l_@quot+1,f
  5280     1293  0DA3               	rlf	__div_to_l_@quot+2,f
  5281     1294  0DA4               	rlf	__div_to_l_@quot+3,f
  5282     1295  0BA0               	decfsz	??__div_to_l_,f
  5283     1296  2A90               	goto	u7665
  5284     1297  0879               	movf	__div_to_l_@f2+3,w
  5285     1298  0275               	subwf	__div_to_l_@f1+3,w
  5286     1299  1D03               	skipz
  5287     129A  2AA5               	goto	u7675
  5288     129B  0878               	movf	__div_to_l_@f2+2,w
  5289     129C  0274               	subwf	__div_to_l_@f1+2,w
  5290     129D  1D03               	skipz
  5291     129E  2AA5               	goto	u7675
  5292     129F  0877               	movf	__div_to_l_@f2+1,w
  5293     12A0  0273               	subwf	__div_to_l_@f1+1,w
  5294     12A1  1D03               	skipz
  5295     12A2  2AA5               	goto	u7675
  5296     12A3  0876               	movf	__div_to_l_@f2,w
  5297     12A4  0272               	subwf	__div_to_l_@f1,w
  5298     12A5                     u7675:
  5299     12A5  1C03               	skipc
  5300     12A6  2AB6               	goto	l4519
  5301     12A7  0876               	movf	__div_to_l_@f2,w
  5302     12A8  02F2               	subwf	__div_to_l_@f1,f
  5303     12A9  0877               	movf	__div_to_l_@f2+1,w
  5304     12AA  1C03               	skipc
  5305     12AB  0F77               	incfsz	__div_to_l_@f2+1,w
  5306     12AC  02F3               	subwf	__div_to_l_@f1+1,f
  5307     12AD  0878               	movf	__div_to_l_@f2+2,w
  5308     12AE  1C03               	skipc
  5309     12AF  0F78               	incfsz	__div_to_l_@f2+2,w
  5310     12B0  02F4               	subwf	__div_to_l_@f1+2,f
  5311     12B1  0879               	movf	__div_to_l_@f2+3,w
  5312     12B2  1C03               	skipc
  5313     12B3  0F79               	incfsz	__div_to_l_@f2+3,w
  5314     12B4  02F5               	subwf	__div_to_l_@f1+3,f
  5315     12B5  1421               	bsf	__div_to_l_@quot,0
  5316     12B6                     l4519:
  5317     12B6  3001               	movlw	1
  5318     12B7  00A0               	movwf	??__div_to_l_
  5319     12B8                     u7685:
  5320     12B8  1003               	clrc
  5321     12B9  0DF2               	rlf	__div_to_l_@f1,f
  5322     12BA  0DF3               	rlf	__div_to_l_@f1+1,f
  5323     12BB  0DF4               	rlf	__div_to_l_@f1+2,f
  5324     12BC  0DF5               	rlf	__div_to_l_@f1+3,f
  5325     12BD  0BA0               	decfsz	??__div_to_l_,f
  5326     12BE  2AB8               	goto	u7685
  5327     12BF  3001               	movlw	1
  5328     12C0  02A5               	subwf	__div_to_l_@cntr,f
  5329     12C1  1D03               	btfss	3,2
  5330     12C2  2A8E               	goto	l4511
  5331     12C3  1FA6               	btfss	__div_to_l_@exp1,7
  5332     12C4  2ADA               	goto	l4533
  5333     12C5  0826               	movf	__div_to_l_@exp1,w
  5334     12C6  3A80               	xorlw	128
  5335     12C7  3E9F               	addlw	159
  5336     12C8  1C03               	btfss	3,0
  5337     12C9  2A5B               	goto	l4493
  5338     12CA                     l4529:
  5339     12CA  3001               	movlw	1
  5340     12CB                     u7725:
  5341     12CB  1003               	clrc
  5342     12CC  0CA4               	rrf	__div_to_l_@quot+3,f
  5343     12CD  0CA3               	rrf	__div_to_l_@quot+2,f
  5344     12CE  0CA2               	rrf	__div_to_l_@quot+1,f
  5345     12CF  0CA1               	rrf	__div_to_l_@quot,f
  5346     12D0  3EFF               	addlw	-1
  5347     12D1  1D03               	skipz
  5348     12D2  2ACB               	goto	u7725
  5349     12D3  3001               	movlw	1
  5350     12D4  00FF               	movwf	127
  5351     12D5  087F               	movf	127,w
  5352     12D6  07A6               	addwf	__div_to_l_@exp1,f
  5353     12D7  1903               	btfsc	3,2
  5354     12D8  2AED               	goto	l4541
  5355     12D9  2ACA               	goto	l4529
  5356     12DA                     l4533:
  5357     12DA  3020               	movlw	32
  5358     12DB  0226               	subwf	__div_to_l_@exp1,w
  5359     12DC  1803               	btfsc	3,0
  5360     12DD  2A5B               	goto	l4493
  5361     12DE                     l589:
  5362     12DE  0826               	movf	__div_to_l_@exp1,w
  5363     12DF  1903               	btfsc	3,2
  5364     12E0  2AED               	goto	l4541
  5365     12E1  3001               	movlw	1
  5366     12E2  00A0               	movwf	??__div_to_l_
  5367     12E3                     u7755:
  5368     12E3  1003               	clrc
  5369     12E4  0DA1               	rlf	__div_to_l_@quot,f
  5370     12E5  0DA2               	rlf	__div_to_l_@quot+1,f
  5371     12E6  0DA3               	rlf	__div_to_l_@quot+2,f
  5372     12E7  0DA4               	rlf	__div_to_l_@quot+3,f
  5373     12E8  0BA0               	decfsz	??__div_to_l_,f
  5374     12E9  2AE3               	goto	u7755
  5375     12EA  3001               	movlw	1
  5376     12EB  02A6               	subwf	__div_to_l_@exp1,f
  5377     12EC  2ADE               	goto	l589
  5378     12ED                     l4541:
  5379     12ED  0824               	movf	__div_to_l_@quot+3,w
  5380     12EE  00F5               	movwf	?__div_to_l_+3
  5381     12EF  0823               	movf	__div_to_l_@quot+2,w
  5382     12F0  00F4               	movwf	?__div_to_l_+2
  5383     12F1  0822               	movf	__div_to_l_@quot+1,w
  5384     12F2  00F3               	movwf	?__div_to_l_+1
  5385     12F3  0821               	movf	__div_to_l_@quot,w
  5386     12F4  00F2               	movwf	?__div_to_l_
  5387     12F5  0008               	return
  5388     12F6                     __end_of__div_to_l_:
  5389                           
  5390                           	psect	text12
  5391     1C9F                     __ptext12:	
  5392 ;; *************** function ___wmul *****************
  5393 ;; Defined at:
  5394 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;  multiplier      2    2[COMMON] unsigned int 
  5397 ;;  multiplicand    2    4[COMMON] unsigned int 
  5398 ;; Auto vars:     Size  Location     Type
  5399 ;;  product         2    6[COMMON] unsigned int 
  5400 ;; Return value:  Size  Location     Type
  5401 ;;                  2    2[COMMON] unsigned int 
  5402 ;; Registers used:
  5403 ;;		wreg, status,2, status,0
  5404 ;; Tracked objects:
  5405 ;;		On entry : 300/100
  5406 ;;		On exit  : 300/100
  5407 ;;		Unchanged: 300/0
  5408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5409 ;;      Params:         4       0       0       0       0
  5410 ;;      Locals:         2       0       0       0       0
  5411 ;;      Temps:          0       0       0       0       0
  5412 ;;      Totals:         6       0       0       0       0
  5413 ;;Total ram usage:        6 bytes
  5414 ;; Hardware stack levels used: 1
  5415 ;; Hardware stack levels required when called: 1
  5416 ;; This function calls:
  5417 ;;		Nothing
  5418 ;; This function is called by:
  5419 ;;		_sprintf
  5420 ;; This function uses a non-reentrant model
  5421 ;;
  5422                           
  5423     1C9F                     ___wmul:	
  5424                           ;psect for function ___wmul
  5425                           
  5426                           
  5427                           ;incstack = 0
  5428                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5429     1C9F  01F6               	clrf	___wmul@product
  5430     1CA0  01F7               	clrf	___wmul@product+1
  5431     1CA1                     l4547:
  5432     1CA1  1C72               	btfss	___wmul@multiplier,0
  5433     1CA2  2CA9               	goto	l408
  5434     1CA3  0874               	movf	___wmul@multiplicand,w
  5435     1CA4  07F6               	addwf	___wmul@product,f
  5436     1CA5  1803               	skipnc
  5437     1CA6  0AF7               	incf	___wmul@product+1,f
  5438     1CA7  0875               	movf	___wmul@multiplicand+1,w
  5439     1CA8  07F7               	addwf	___wmul@product+1,f
  5440     1CA9                     l408:
  5441     1CA9  3001               	movlw	1
  5442     1CAA                     u7785:
  5443     1CAA  1003               	clrc
  5444     1CAB  0DF4               	rlf	___wmul@multiplicand,f
  5445     1CAC  0DF5               	rlf	___wmul@multiplicand+1,f
  5446     1CAD  3EFF               	addlw	-1
  5447     1CAE  1D03               	skipz
  5448     1CAF  2CAA               	goto	u7785
  5449     1CB0  3001               	movlw	1
  5450     1CB1                     u7795:
  5451     1CB1  1003               	clrc
  5452     1CB2  0CF3               	rrf	___wmul@multiplier+1,f
  5453     1CB3  0CF2               	rrf	___wmul@multiplier,f
  5454     1CB4  3EFF               	addlw	-1
  5455     1CB5  1D03               	skipz
  5456     1CB6  2CB1               	goto	u7795
  5457     1CB7  0872               	movf	___wmul@multiplier,w
  5458     1CB8  0473               	iorwf	___wmul@multiplier+1,w
  5459     1CB9  1D03               	btfss	3,2
  5460     1CBA  2CA1               	goto	l4547
  5461     1CBB  0877               	movf	___wmul@product+1,w
  5462     1CBC  00F3               	movwf	?___wmul+1
  5463     1CBD  0876               	movf	___wmul@product,w
  5464     1CBE  00F2               	movwf	?___wmul
  5465     1CBF  0008               	return
  5466     1CC0                     __end_of___wmul:
  5467                           
  5468                           	psect	text13
  5469     1E7A                     __ptext13:	
  5470 ;; *************** function ___llmod *****************
  5471 ;; Defined at:
  5472 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\llmod.c"
  5473 ;; Parameters:    Size  Location     Type
  5474 ;;  divisor         4    6[BANK0 ] unsigned long 
  5475 ;;  dividend        4   10[BANK0 ] unsigned long 
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;  counter         1   15[BANK0 ] unsigned char 
  5478 ;; Return value:  Size  Location     Type
  5479 ;;                  4    6[BANK0 ] unsigned long 
  5480 ;; Registers used:
  5481 ;;		wreg, status,2, status,0, btemp+1
  5482 ;; Tracked objects:
  5483 ;;		On entry : 300/0
  5484 ;;		On exit  : 300/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5487 ;;      Params:         0       8       0       0       0
  5488 ;;      Locals:         0       1       0       0       0
  5489 ;;      Temps:          0       1       0       0       0
  5490 ;;      Totals:         0      10       0       0       0
  5491 ;;Total ram usage:       10 bytes
  5492 ;; Hardware stack levels used: 1
  5493 ;; Hardware stack levels required when called: 1
  5494 ;; This function calls:
  5495 ;;		Nothing
  5496 ;; This function is called by:
  5497 ;;		_sprintf
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500                           
  5501     1E7A                     ___llmod:	
  5502                           ;psect for function ___llmod
  5503                           
  5504                           
  5505                           ;incstack = 0
  5506                           ; Regs used in ___llmod: [wreg+status,2+status,0+btemp+1]
  5507     1E7A  0829               	movf	___llmod@divisor+3,w
  5508     1E7B  0428               	iorwf	___llmod@divisor+2,w
  5509     1E7C  0427               	iorwf	___llmod@divisor+1,w
  5510     1E7D  0426               	iorwf	___llmod@divisor,w
  5511     1E7E  1903               	skipnz
  5512     1E7F  2EBD               	goto	l4681
  5513     1E80  01AF               	clrf	___llmod@counter
  5514     1E81  0AAF               	incf	___llmod@counter,f
  5515     1E82                     l4671:
  5516     1E82  1BA9               	btfsc	___llmod@divisor+3,7
  5517     1E83  2E92               	goto	l4673
  5518     1E84  3001               	movlw	1
  5519     1E85  00AE               	movwf	??___llmod
  5520     1E86                     u8105:
  5521     1E86  1003               	clrc
  5522     1E87  0DA6               	rlf	___llmod@divisor,f
  5523     1E88  0DA7               	rlf	___llmod@divisor+1,f
  5524     1E89  0DA8               	rlf	___llmod@divisor+2,f
  5525     1E8A  0DA9               	rlf	___llmod@divisor+3,f
  5526     1E8B  0BAE               	decfsz	??___llmod,f
  5527     1E8C  2E86               	goto	u8105
  5528     1E8D  3001               	movlw	1
  5529     1E8E  00FF               	movwf	127
  5530     1E8F  087F               	movf	127,w
  5531     1E90  07AF               	addwf	___llmod@counter,f
  5532     1E91  2E82               	goto	l4671
  5533     1E92                     l4673:
  5534     1E92  0829               	movf	___llmod@divisor+3,w
  5535     1E93  022D               	subwf	___llmod@dividend+3,w
  5536     1E94  1D03               	skipz
  5537     1E95  2EA0               	goto	u8125
  5538     1E96  0828               	movf	___llmod@divisor+2,w
  5539     1E97  022C               	subwf	___llmod@dividend+2,w
  5540     1E98  1D03               	skipz
  5541     1E99  2EA0               	goto	u8125
  5542     1E9A  0827               	movf	___llmod@divisor+1,w
  5543     1E9B  022B               	subwf	___llmod@dividend+1,w
  5544     1E9C  1D03               	skipz
  5545     1E9D  2EA0               	goto	u8125
  5546     1E9E  0826               	movf	___llmod@divisor,w
  5547     1E9F  022A               	subwf	___llmod@dividend,w
  5548     1EA0                     u8125:
  5549     1EA0  1C03               	skipc
  5550     1EA1  2EB0               	goto	l4677
  5551     1EA2  0826               	movf	___llmod@divisor,w
  5552     1EA3  02AA               	subwf	___llmod@dividend,f
  5553     1EA4  0827               	movf	___llmod@divisor+1,w
  5554     1EA5  1C03               	skipc
  5555     1EA6  0F27               	incfsz	___llmod@divisor+1,w
  5556     1EA7  02AB               	subwf	___llmod@dividend+1,f
  5557     1EA8  0828               	movf	___llmod@divisor+2,w
  5558     1EA9  1C03               	skipc
  5559     1EAA  0F28               	incfsz	___llmod@divisor+2,w
  5560     1EAB  02AC               	subwf	___llmod@dividend+2,f
  5561     1EAC  0829               	movf	___llmod@divisor+3,w
  5562     1EAD  1C03               	skipc
  5563     1EAE  0F29               	incfsz	___llmod@divisor+3,w
  5564     1EAF  02AD               	subwf	___llmod@dividend+3,f
  5565     1EB0                     l4677:
  5566     1EB0  3001               	movlw	1
  5567     1EB1                     u8135:
  5568     1EB1  1003               	clrc
  5569     1EB2  0CA9               	rrf	___llmod@divisor+3,f
  5570     1EB3  0CA8               	rrf	___llmod@divisor+2,f
  5571     1EB4  0CA7               	rrf	___llmod@divisor+1,f
  5572     1EB5  0CA6               	rrf	___llmod@divisor,f
  5573     1EB6  3EFF               	addlw	-1
  5574     1EB7  1D03               	skipz
  5575     1EB8  2EB1               	goto	u8135
  5576     1EB9  3001               	movlw	1
  5577     1EBA  02AF               	subwf	___llmod@counter,f
  5578     1EBB  1D03               	btfss	3,2
  5579     1EBC  2E92               	goto	l4673
  5580     1EBD                     l4681:
  5581     1EBD  082D               	movf	___llmod@dividend+3,w
  5582     1EBE  00A9               	movwf	?___llmod+3
  5583     1EBF  082C               	movf	___llmod@dividend+2,w
  5584     1EC0  00A8               	movwf	?___llmod+2
  5585     1EC1  082B               	movf	___llmod@dividend+1,w
  5586     1EC2  00A7               	movwf	?___llmod+1
  5587     1EC3  082A               	movf	___llmod@dividend,w
  5588     1EC4  00A6               	movwf	?___llmod
  5589     1EC5  0008               	return
  5590     1EC6                     __end_of___llmod:
  5591                           
  5592                           	psect	text14
  5593     10BD                     __ptext14:	
  5594 ;; *************** function ___lldiv *****************
  5595 ;; Defined at:
  5596 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  5597 ;; Parameters:    Size  Location     Type
  5598 ;;  divisor         4    2[COMMON] unsigned long 
  5599 ;;  dividend        4    6[COMMON] unsigned long 
  5600 ;; Auto vars:     Size  Location     Type
  5601 ;;  quotient        4    1[BANK0 ] unsigned long 
  5602 ;;  counter         1    5[BANK0 ] unsigned char 
  5603 ;; Return value:  Size  Location     Type
  5604 ;;                  4    2[COMMON] unsigned long 
  5605 ;; Registers used:
  5606 ;;		wreg, status,2, status,0, btemp+1
  5607 ;; Tracked objects:
  5608 ;;		On entry : 300/100
  5609 ;;		On exit  : 300/0
  5610 ;;		Unchanged: 0/0
  5611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5612 ;;      Params:         8       0       0       0       0
  5613 ;;      Locals:         0       5       0       0       0
  5614 ;;      Temps:          0       1       0       0       0
  5615 ;;      Totals:         8       6       0       0       0
  5616 ;;Total ram usage:       14 bytes
  5617 ;; Hardware stack levels used: 1
  5618 ;; Hardware stack levels required when called: 1
  5619 ;; This function calls:
  5620 ;;		Nothing
  5621 ;; This function is called by:
  5622 ;;		_sprintf
  5623 ;; This function uses a non-reentrant model
  5624 ;;
  5625                           
  5626     10BD                     ___lldiv:	
  5627                           ;psect for function ___lldiv
  5628                           
  5629                           
  5630                           ;incstack = 0
  5631                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  5632     10BD  3000               	movlw	0
  5633     10BE  1283               	bcf	3,5	;RP0=0, select bank0
  5634     10BF  00A4               	movwf	___lldiv@quotient+3
  5635     10C0  3000               	movlw	0
  5636     10C1  00A3               	movwf	___lldiv@quotient+2
  5637     10C2  3000               	movlw	0
  5638     10C3  00A2               	movwf	___lldiv@quotient+1
  5639     10C4  3000               	movlw	0
  5640     10C5  00A1               	movwf	___lldiv@quotient
  5641     10C6  0875               	movf	___lldiv@divisor+3,w
  5642     10C7  0474               	iorwf	___lldiv@divisor+2,w
  5643     10C8  0473               	iorwf	___lldiv@divisor+1,w
  5644     10C9  0472               	iorwf	___lldiv@divisor,w
  5645     10CA  1903               	skipnz
  5646     10CB  2913               	goto	l4581
  5647     10CC  01A5               	clrf	___lldiv@counter
  5648     10CD  0AA5               	incf	___lldiv@counter,f
  5649     10CE                     l4567:
  5650     10CE  1BF5               	btfsc	___lldiv@divisor+3,7
  5651     10CF  28DE               	goto	l4569
  5652     10D0  3001               	movlw	1
  5653     10D1  00A0               	movwf	??___lldiv
  5654     10D2                     u7825:
  5655     10D2  1003               	clrc
  5656     10D3  0DF2               	rlf	___lldiv@divisor,f
  5657     10D4  0DF3               	rlf	___lldiv@divisor+1,f
  5658     10D5  0DF4               	rlf	___lldiv@divisor+2,f
  5659     10D6  0DF5               	rlf	___lldiv@divisor+3,f
  5660     10D7  0BA0               	decfsz	??___lldiv,f
  5661     10D8  28D2               	goto	u7825
  5662     10D9  3001               	movlw	1
  5663     10DA  00FF               	movwf	127
  5664     10DB  087F               	movf	127,w
  5665     10DC  07A5               	addwf	___lldiv@counter,f
  5666     10DD  28CE               	goto	l4567
  5667     10DE                     l4569:
  5668     10DE  3001               	movlw	1
  5669     10DF  00A0               	movwf	??___lldiv
  5670     10E0                     u7845:
  5671     10E0  1003               	clrc
  5672     10E1  0DA1               	rlf	___lldiv@quotient,f
  5673     10E2  0DA2               	rlf	___lldiv@quotient+1,f
  5674     10E3  0DA3               	rlf	___lldiv@quotient+2,f
  5675     10E4  0DA4               	rlf	___lldiv@quotient+3,f
  5676     10E5  0BA0               	decfsz	??___lldiv,f
  5677     10E6  28E0               	goto	u7845
  5678     10E7  0875               	movf	___lldiv@divisor+3,w
  5679     10E8  0279               	subwf	___lldiv@dividend+3,w
  5680     10E9  1D03               	skipz
  5681     10EA  28F5               	goto	u7855
  5682     10EB  0874               	movf	___lldiv@divisor+2,w
  5683     10EC  0278               	subwf	___lldiv@dividend+2,w
  5684     10ED  1D03               	skipz
  5685     10EE  28F5               	goto	u7855
  5686     10EF  0873               	movf	___lldiv@divisor+1,w
  5687     10F0  0277               	subwf	___lldiv@dividend+1,w
  5688     10F1  1D03               	skipz
  5689     10F2  28F5               	goto	u7855
  5690     10F3  0872               	movf	___lldiv@divisor,w
  5691     10F4  0276               	subwf	___lldiv@dividend,w
  5692     10F5                     u7855:
  5693     10F5  1C03               	skipc
  5694     10F6  2906               	goto	l4577
  5695     10F7  0872               	movf	___lldiv@divisor,w
  5696     10F8  02F6               	subwf	___lldiv@dividend,f
  5697     10F9  0873               	movf	___lldiv@divisor+1,w
  5698     10FA  1C03               	skipc
  5699     10FB  0F73               	incfsz	___lldiv@divisor+1,w
  5700     10FC  02F7               	subwf	___lldiv@dividend+1,f
  5701     10FD  0874               	movf	___lldiv@divisor+2,w
  5702     10FE  1C03               	skipc
  5703     10FF  0F74               	incfsz	___lldiv@divisor+2,w
  5704     1100  02F8               	subwf	___lldiv@dividend+2,f
  5705     1101  0875               	movf	___lldiv@divisor+3,w
  5706     1102  1C03               	skipc
  5707     1103  0F75               	incfsz	___lldiv@divisor+3,w
  5708     1104  02F9               	subwf	___lldiv@dividend+3,f
  5709     1105  1421               	bsf	___lldiv@quotient,0
  5710     1106                     l4577:
  5711     1106  3001               	movlw	1
  5712     1107                     u7865:
  5713     1107  1003               	clrc
  5714     1108  0CF5               	rrf	___lldiv@divisor+3,f
  5715     1109  0CF4               	rrf	___lldiv@divisor+2,f
  5716     110A  0CF3               	rrf	___lldiv@divisor+1,f
  5717     110B  0CF2               	rrf	___lldiv@divisor,f
  5718     110C  3EFF               	addlw	-1
  5719     110D  1D03               	skipz
  5720     110E  2907               	goto	u7865
  5721     110F  3001               	movlw	1
  5722     1110  02A5               	subwf	___lldiv@counter,f
  5723     1111  1D03               	btfss	3,2
  5724     1112  28DE               	goto	l4569
  5725     1113                     l4581:
  5726     1113  0824               	movf	___lldiv@quotient+3,w
  5727     1114  00F5               	movwf	?___lldiv+3
  5728     1115  0823               	movf	___lldiv@quotient+2,w
  5729     1116  00F4               	movwf	?___lldiv+2
  5730     1117  0822               	movf	___lldiv@quotient+1,w
  5731     1118  00F3               	movwf	?___lldiv+1
  5732     1119  0821               	movf	___lldiv@quotient,w
  5733     111A  00F2               	movwf	?___lldiv
  5734     111B  0008               	return
  5735     111C                     __end_of___lldiv:
  5736                           
  5737                           	psect	text15
  5738     1F1F                     __ptext15:	
  5739 ;; *************** function ___fltol *****************
  5740 ;; Defined at:
  5741 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fltol.c"
  5742 ;; Parameters:    Size  Location     Type
  5743 ;;  f1              4   70[BANK0 ] unsigned long 
  5744 ;; Auto vars:     Size  Location     Type
  5745 ;;  exp1            1   79[BANK0 ] unsigned char 
  5746 ;;  sign1           1   78[BANK0 ] unsigned char 
  5747 ;; Return value:  Size  Location     Type
  5748 ;;                  4   70[BANK0 ] long 
  5749 ;; Registers used:
  5750 ;;		wreg, status,2, status,0, btemp+1
  5751 ;; Tracked objects:
  5752 ;;		On entry : 300/0
  5753 ;;		On exit  : 300/0
  5754 ;;		Unchanged: 0/0
  5755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5756 ;;      Params:         0       4       0       0       0
  5757 ;;      Locals:         0       2       0       0       0
  5758 ;;      Temps:          0       4       0       0       0
  5759 ;;      Totals:         0      10       0       0       0
  5760 ;;Total ram usage:       10 bytes
  5761 ;; Hardware stack levels used: 1
  5762 ;; Hardware stack levels required when called: 1
  5763 ;; This function calls:
  5764 ;;		Nothing
  5765 ;; This function is called by:
  5766 ;;		_main
  5767 ;;		_sprintf
  5768 ;; This function uses a non-reentrant model
  5769 ;;
  5770                           
  5771     1F1F                     ___fltol:	
  5772                           ;psect for function ___fltol
  5773                           
  5774                           
  5775                           ;incstack = 0
  5776                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  5777     1F1F  1003               	clrc
  5778     1F20  0D68               	rlf	___fltol@f1+2,w
  5779     1F21  0D69               	rlf	___fltol@f1+3,w
  5780     1F22  00EF               	movwf	___fltol@exp1
  5781     1F23  086F               	movf	___fltol@exp1,w
  5782     1F24  1D03               	btfss	3,2
  5783     1F25  2F2F               	goto	l4631
  5784     1F26                     l4627:
  5785     1F26  3000               	movlw	0
  5786     1F27  00E9               	movwf	?___fltol+3
  5787     1F28  3000               	movlw	0
  5788     1F29  00E8               	movwf	?___fltol+2
  5789     1F2A  3000               	movlw	0
  5790     1F2B  00E7               	movwf	?___fltol+1
  5791     1F2C  3000               	movlw	0
  5792     1F2D  00E6               	movwf	?___fltol
  5793     1F2E  0008               	return
  5794     1F2F                     l4631:
  5795     1F2F  0866               	movf	___fltol@f1,w
  5796     1F30  00EA               	movwf	??___fltol
  5797     1F31  0867               	movf	___fltol@f1+1,w
  5798     1F32  00EB               	movwf	??___fltol+1
  5799     1F33  0868               	movf	___fltol@f1+2,w
  5800     1F34  00EC               	movwf	??___fltol+2
  5801     1F35  0869               	movf	___fltol@f1+3,w
  5802     1F36  00ED               	movwf	??___fltol+3
  5803     1F37  301F               	movlw	31
  5804     1F38                     u8005:
  5805     1F38  1003               	clrc
  5806     1F39  0CED               	rrf	??___fltol+3,f
  5807     1F3A  0CEC               	rrf	??___fltol+2,f
  5808     1F3B  0CEB               	rrf	??___fltol+1,f
  5809     1F3C  0CEA               	rrf	??___fltol,f
  5810     1F3D  3EFF               	addlw	-1
  5811     1F3E  1D03               	skipz
  5812     1F3F  2F38               	goto	u8005
  5813     1F40  086A               	movf	??___fltol,w
  5814     1F41  00EE               	movwf	___fltol@sign1
  5815     1F42  17E8               	bsf	___fltol@f1+2,7
  5816     1F43  30FF               	movlw	255
  5817     1F44  05E6               	andwf	___fltol@f1,f
  5818     1F45  30FF               	movlw	255
  5819     1F46  05E7               	andwf	___fltol@f1+1,f
  5820     1F47  30FF               	movlw	255
  5821     1F48  05E8               	andwf	___fltol@f1+2,f
  5822     1F49  3000               	movlw	0
  5823     1F4A  05E9               	andwf	___fltol@f1+3,f
  5824     1F4B  3096               	movlw	150
  5825     1F4C  02EF               	subwf	___fltol@exp1,f
  5826     1F4D  1FEF               	btfss	___fltol@exp1,7
  5827     1F4E  2F64               	goto	l4651
  5828     1F4F  086F               	movf	___fltol@exp1,w
  5829     1F50  3A80               	xorlw	128
  5830     1F51  3E97               	addlw	151
  5831     1F52  1C03               	btfss	3,0
  5832     1F53  2F26               	goto	l4627
  5833     1F54                     l4647:
  5834     1F54  3001               	movlw	1
  5835     1F55                     u8035:
  5836     1F55  1003               	clrc
  5837     1F56  0CE9               	rrf	___fltol@f1+3,f
  5838     1F57  0CE8               	rrf	___fltol@f1+2,f
  5839     1F58  0CE7               	rrf	___fltol@f1+1,f
  5840     1F59  0CE6               	rrf	___fltol@f1,f
  5841     1F5A  3EFF               	addlw	-1
  5842     1F5B  1D03               	skipz
  5843     1F5C  2F55               	goto	u8035
  5844     1F5D  3001               	movlw	1
  5845     1F5E  00FF               	movwf	127
  5846     1F5F  087F               	movf	127,w
  5847     1F60  07EF               	addwf	___fltol@exp1,f
  5848     1F61  1903               	btfsc	3,2
  5849     1F62  2F77               	goto	l4659
  5850     1F63  2F54               	goto	l4647
  5851     1F64                     l4651:
  5852     1F64  3020               	movlw	32
  5853     1F65  026F               	subwf	___fltol@exp1,w
  5854     1F66  1803               	btfsc	3,0
  5855     1F67  2F26               	goto	l4627
  5856     1F68                     l618:
  5857     1F68  086F               	movf	___fltol@exp1,w
  5858     1F69  1903               	btfsc	3,2
  5859     1F6A  2F77               	goto	l4659
  5860     1F6B  3001               	movlw	1
  5861     1F6C  00EA               	movwf	??___fltol
  5862     1F6D                     u8065:
  5863     1F6D  1003               	clrc
  5864     1F6E  0DE6               	rlf	___fltol@f1,f
  5865     1F6F  0DE7               	rlf	___fltol@f1+1,f
  5866     1F70  0DE8               	rlf	___fltol@f1+2,f
  5867     1F71  0DE9               	rlf	___fltol@f1+3,f
  5868     1F72  0BEA               	decfsz	??___fltol,f
  5869     1F73  2F6D               	goto	u8065
  5870     1F74  3001               	movlw	1
  5871     1F75  02EF               	subwf	___fltol@exp1,f
  5872     1F76  2F68               	goto	l618
  5873     1F77                     l4659:
  5874     1F77  086E               	movf	___fltol@sign1,w
  5875     1F78  1903               	btfsc	3,2
  5876     1F79  0008               	return
  5877     1F7A  09E6               	comf	___fltol@f1,f
  5878     1F7B  09E7               	comf	___fltol@f1+1,f
  5879     1F7C  09E8               	comf	___fltol@f1+2,f
  5880     1F7D  09E9               	comf	___fltol@f1+3,f
  5881     1F7E  0AE6               	incf	___fltol@f1,f
  5882     1F7F  1903               	skipnz
  5883     1F80  0AE7               	incf	___fltol@f1+1,f
  5884     1F81  1903               	skipnz
  5885     1F82  0AE8               	incf	___fltol@f1+2,f
  5886     1F83  1903               	skipnz
  5887     1F84  0AE9               	incf	___fltol@f1+3,f
  5888     1F85  0008               	return
  5889     1F86                     __end_of___fltol:
  5890                           
  5891                           	psect	text16
  5892     1C62                     __ptext16:	
  5893 ;; *************** function ___flsub *****************
  5894 ;; Defined at:
  5895 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcadd.c"
  5896 ;; Parameters:    Size  Location     Type
  5897 ;;  a               4   25[BANK0 ] long 
  5898 ;;  b               4   29[BANK0 ] long 
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;		None
  5901 ;; Return value:  Size  Location     Type
  5902 ;;                  4   25[BANK0 ] long 
  5903 ;; Registers used:
  5904 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5905 ;; Tracked objects:
  5906 ;;		On entry : 300/0
  5907 ;;		On exit  : 300/0
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5910 ;;      Params:         0       8       0       0       0
  5911 ;;      Locals:         0       0       0       0       0
  5912 ;;      Temps:          0       0       0       0       0
  5913 ;;      Totals:         0       8       0       0       0
  5914 ;;Total ram usage:        8 bytes
  5915 ;; Hardware stack levels used: 1
  5916 ;; Hardware stack levels required when called: 2
  5917 ;; This function calls:
  5918 ;;		___fladd
  5919 ;; This function is called by:
  5920 ;;		_sprintf
  5921 ;; This function uses a non-reentrant model
  5922 ;;
  5923                           
  5924     1C62                     ___flsub:	
  5925                           ;psect for function ___flsub
  5926                           
  5927                           
  5928                           ;incstack = 0
  5929                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5930     1C62  3080               	movlw	128
  5931     1C63  06BC               	xorwf	___flsub@a+3,f
  5932     1C64  0840               	movf	___flsub@b+3,w
  5933     1C65  00A8               	movwf	___fladd@b+3
  5934     1C66  083F               	movf	___flsub@b+2,w
  5935     1C67  00A7               	movwf	___fladd@b+2
  5936     1C68  083E               	movf	___flsub@b+1,w
  5937     1C69  00A6               	movwf	___fladd@b+1
  5938     1C6A  083D               	movf	___flsub@b,w
  5939     1C6B  00A5               	movwf	___fladd@b
  5940     1C6C  083C               	movf	___flsub@a+3,w
  5941     1C6D  00AC               	movwf	___fladd@a+3
  5942     1C6E  083B               	movf	___flsub@a+2,w
  5943     1C6F  00AB               	movwf	___fladd@a+2
  5944     1C70  083A               	movf	___flsub@a+1,w
  5945     1C71  00AA               	movwf	___fladd@a+1
  5946     1C72  0839               	movf	___flsub@a,w
  5947     1C73  00A9               	movwf	___fladd@a
  5948     1C74  120A  158A  2002   	fcall	___fladd
  5949     1C77  0828               	movf	?___fladd+3,w
  5950     1C78  00BC               	movwf	?___flsub+3
  5951     1C79  0827               	movf	?___fladd+2,w
  5952     1C7A  00BB               	movwf	?___flsub+2
  5953     1C7B  0826               	movf	?___fladd+1,w
  5954     1C7C  00BA               	movwf	?___flsub+1
  5955     1C7D  0825               	movf	?___fladd,w
  5956     1C7E  00B9               	movwf	?___flsub
  5957     1C7F  0008               	return
  5958     1C80                     __end_of___flsub:
  5959                           
  5960                           	psect	text17
  5961     0802                     __ptext17:	
  5962 ;; *************** function ___fladd *****************
  5963 ;; Defined at:
  5964 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcadd.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;  b               4    5[BANK0 ] long 
  5967 ;;  a               4    9[BANK0 ] long 
  5968 ;; Auto vars:     Size  Location     Type
  5969 ;;  grs             1   24[BANK0 ] unsigned char 
  5970 ;;  bexp            1   23[BANK0 ] unsigned char 
  5971 ;;  aexp            1   22[BANK0 ] unsigned char 
  5972 ;;  signs           1   21[BANK0 ] unsigned char 
  5973 ;; Return value:  Size  Location     Type
  5974 ;;                  4    5[BANK0 ] unsigned char 
  5975 ;; Registers used:
  5976 ;;		wreg, status,2, status,0, btemp+1
  5977 ;; Tracked objects:
  5978 ;;		On entry : 300/0
  5979 ;;		On exit  : 300/0
  5980 ;;		Unchanged: 0/0
  5981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5982 ;;      Params:         0       8       0       0       0
  5983 ;;      Locals:         0       4       0       0       0
  5984 ;;      Temps:          0       8       0       0       0
  5985 ;;      Totals:         0      20       0       0       0
  5986 ;;Total ram usage:       20 bytes
  5987 ;; Hardware stack levels used: 1
  5988 ;; Hardware stack levels required when called: 1
  5989 ;; This function calls:
  5990 ;;		Nothing
  5991 ;; This function is called by:
  5992 ;;		_main
  5993 ;;		_sprintf
  5994 ;;		___flsub
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997                           
  5998     0802                     ___fladd:	
  5999                           ;psect for function ___fladd
  6000                           
  6001                           
  6002                           ;incstack = 0
  6003                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6004     0802  0828               	movf	___fladd@b+3,w
  6005     0803  3980               	andlw	128
  6006     0804  00B5               	movwf	___fladd@signs
  6007     0805  0828               	movf	___fladd@b+3,w
  6008     0806  00AD               	movwf	??___fladd
  6009     0807  072D               	addwf	??___fladd,w
  6010     0808  00B7               	movwf	___fladd@bexp
  6011     0809  1BA7               	btfsc	___fladd@b+2,7
  6012     080A  1437               	bsf	___fladd@bexp,0
  6013     080B  0837               	movf	___fladd@bexp,w
  6014     080C  1903               	btfsc	3,2
  6015     080D  281C               	goto	l4041
  6016     080E  0A37               	incf	___fladd@bexp,w
  6017     080F  1D03               	btfss	3,2
  6018     0810  2819               	goto	l4037
  6019     0811  3000               	movlw	0
  6020     0812  00A8               	movwf	___fladd@b+3
  6021     0813  3000               	movlw	0
  6022     0814  00A7               	movwf	___fladd@b+2
  6023     0815  3000               	movlw	0
  6024     0816  00A6               	movwf	___fladd@b+1
  6025     0817  3000               	movlw	0
  6026     0818  00A5               	movwf	___fladd@b
  6027     0819                     l4037:
  6028     0819  17A7               	bsf	___fladd@b+2,7
  6029     081A  01A8               	clrf	___fladd@b+3
  6030     081B  2824               	goto	l4043
  6031     081C                     l4041:
  6032     081C  3000               	movlw	0
  6033     081D  00A8               	movwf	___fladd@b+3
  6034     081E  3000               	movlw	0
  6035     081F  00A7               	movwf	___fladd@b+2
  6036     0820  3000               	movlw	0
  6037     0821  00A6               	movwf	___fladd@b+1
  6038     0822  3000               	movlw	0
  6039     0823  00A5               	movwf	___fladd@b
  6040     0824                     l4043:
  6041     0824  082C               	movf	___fladd@a+3,w
  6042     0825  3980               	andlw	128
  6043     0826  00B6               	movwf	___fladd@aexp
  6044     0827  0836               	movf	___fladd@aexp,w
  6045     0828  0635               	xorwf	___fladd@signs,w
  6046     0829  1D03               	btfss	3,2
  6047     082A  1735               	bsf	___fladd@signs,6
  6048     082B  082C               	movf	___fladd@a+3,w
  6049     082C  00AD               	movwf	??___fladd
  6050     082D  072D               	addwf	??___fladd,w
  6051     082E  00B6               	movwf	___fladd@aexp
  6052     082F  1BAB               	btfsc	___fladd@a+2,7
  6053     0830  1436               	bsf	___fladd@aexp,0
  6054     0831  0836               	movf	___fladd@aexp,w
  6055     0832  1903               	btfsc	3,2
  6056     0833  2842               	goto	l4065
  6057     0834  0A36               	incf	___fladd@aexp,w
  6058     0835  1D03               	btfss	3,2
  6059     0836  283F               	goto	l4061
  6060     0837  3000               	movlw	0
  6061     0838  00AC               	movwf	___fladd@a+3
  6062     0839  3000               	movlw	0
  6063     083A  00AB               	movwf	___fladd@a+2
  6064     083B  3000               	movlw	0
  6065     083C  00AA               	movwf	___fladd@a+1
  6066     083D  3000               	movlw	0
  6067     083E  00A9               	movwf	___fladd@a
  6068     083F                     l4061:
  6069     083F  17AB               	bsf	___fladd@a+2,7
  6070     0840  01AC               	clrf	___fladd@a+3
  6071     0841  284A               	goto	l735
  6072     0842                     l4065:
  6073     0842  3000               	movlw	0
  6074     0843  00AC               	movwf	___fladd@a+3
  6075     0844  3000               	movlw	0
  6076     0845  00AB               	movwf	___fladd@a+2
  6077     0846  3000               	movlw	0
  6078     0847  00AA               	movwf	___fladd@a+1
  6079     0848  3000               	movlw	0
  6080     0849  00A9               	movwf	___fladd@a
  6081     084A                     l735:
  6082     084A  0837               	movf	___fladd@bexp,w
  6083     084B  0236               	subwf	___fladd@aexp,w
  6084     084C  1803               	skipnc
  6085     084D  2872               	goto	l4101
  6086     084E  1F35               	btfss	___fladd@signs,6
  6087     084F  2854               	goto	l4071
  6088     0850  3080               	movlw	128
  6089     0851  00FF               	movwf	127
  6090     0852  087F               	movf	127,w
  6091     0853  06B5               	xorwf	___fladd@signs,f
  6092     0854                     l4071:
  6093     0854  0837               	movf	___fladd@bexp,w
  6094     0855  00B8               	movwf	___fladd@grs
  6095     0856  0836               	movf	___fladd@aexp,w
  6096     0857  00B7               	movwf	___fladd@bexp
  6097     0858  0838               	movf	___fladd@grs,w
  6098     0859  00B6               	movwf	___fladd@aexp
  6099     085A  0825               	movf	___fladd@b,w
  6100     085B  00B8               	movwf	___fladd@grs
  6101     085C  0829               	movf	___fladd@a,w
  6102     085D  00A5               	movwf	___fladd@b
  6103     085E  0838               	movf	___fladd@grs,w
  6104     085F  00A9               	movwf	___fladd@a
  6105     0860  0826               	movf	___fladd@b+1,w
  6106     0861  00B8               	movwf	___fladd@grs
  6107     0862  082A               	movf	___fladd@a+1,w
  6108     0863  00A6               	movwf	___fladd@b+1
  6109     0864  0838               	movf	___fladd@grs,w
  6110     0865  00AA               	movwf	___fladd@a+1
  6111     0866  0827               	movf	___fladd@b+2,w
  6112     0867  00B8               	movwf	___fladd@grs
  6113     0868  082B               	movf	___fladd@a+2,w
  6114     0869  00A7               	movwf	___fladd@b+2
  6115     086A  0838               	movf	___fladd@grs,w
  6116     086B  00AB               	movwf	___fladd@a+2
  6117     086C  0828               	movf	___fladd@b+3,w
  6118     086D  00B8               	movwf	___fladd@grs
  6119     086E  082C               	movf	___fladd@a+3,w
  6120     086F  00A8               	movwf	___fladd@b+3
  6121     0870  0838               	movf	___fladd@grs,w
  6122     0871  00AC               	movwf	___fladd@a+3
  6123     0872                     l4101:
  6124     0872  01B8               	clrf	___fladd@grs
  6125     0873  0836               	movf	___fladd@aexp,w
  6126     0874  00AD               	movwf	??___fladd
  6127     0875  01AE               	clrf	??___fladd+1
  6128     0876  082E               	movf	??___fladd+1,w
  6129     0877  00B0               	movwf	??___fladd+3
  6130     0878  0837               	movf	___fladd@bexp,w
  6131     0879  022D               	subwf	??___fladd,w
  6132     087A  00AF               	movwf	??___fladd+2
  6133     087B  1C03               	skipc
  6134     087C  03B0               	decf	??___fladd+3,f
  6135     087D  0830               	movf	??___fladd+3,w
  6136     087E  3A80               	xorlw	128
  6137     087F  00FF               	movwf	127
  6138     0880  3080               	movlw	128
  6139     0881  027F               	subwf	127,w
  6140     0882  1D03               	skipz
  6141     0883  2886               	goto	u6505
  6142     0884  301A               	movlw	26
  6143     0885  022F               	subwf	??___fladd+2,w
  6144     0886                     u6505:
  6145     0886  1C03               	skipc
  6146     0887  28B9               	goto	l4119
  6147     0888  1283               	bcf	3,5	;RP0=0, select bank0
  6148     0889  1303               	bcf	3,6	;RP1=0, select bank0
  6149     088A  0828               	movf	___fladd@b+3,w
  6150     088B  0427               	iorwf	___fladd@b+2,w
  6151     088C  0426               	iorwf	___fladd@b+1,w
  6152     088D  0425               	iorwf	___fladd@b,w
  6153     088E  1903               	btfsc	3,2
  6154     088F  2892               	goto	u6510
  6155     0890  3001               	movlw	1
  6156     0891  2893               	goto	u6520
  6157     0892                     u6510:
  6158     0892  3000               	movlw	0
  6159     0893                     u6520:
  6160     0893  00B8               	movwf	___fladd@grs
  6161     0894  3000               	movlw	0
  6162     0895  00A8               	movwf	___fladd@b+3
  6163     0896  3000               	movlw	0
  6164     0897  00A7               	movwf	___fladd@b+2
  6165     0898  3000               	movlw	0
  6166     0899  00A6               	movwf	___fladd@b+1
  6167     089A  3000               	movlw	0
  6168     089B  00A5               	movwf	___fladd@b
  6169     089C  0836               	movf	___fladd@aexp,w
  6170     089D  00B7               	movwf	___fladd@bexp
  6171     089E  28BF               	goto	l739
  6172     089F                     l741:
  6173     089F  1C38               	btfss	___fladd@grs,0
  6174     08A0  28A8               	goto	l4109
  6175     08A1  0838               	movf	___fladd@grs,w
  6176     08A2  00AD               	movwf	??___fladd
  6177     08A3  1003               	clrc
  6178     08A4  0C2D               	rrf	??___fladd,w
  6179     08A5  3801               	iorlw	1
  6180     08A6  00B8               	movwf	___fladd@grs
  6181     08A7  28AA               	goto	l4111
  6182     08A8                     l4109:
  6183     08A8  1003               	clrc
  6184     08A9  0CB8               	rrf	___fladd@grs,f
  6185     08AA                     l4111:
  6186     08AA  1825               	btfsc	___fladd@b,0
  6187     08AB  17B8               	bsf	___fladd@grs,7
  6188     08AC  3001               	movlw	1
  6189     08AD  00AD               	movwf	??___fladd
  6190     08AE                     u6555:
  6191     08AE  0D28               	rlf	___fladd@b+3,w
  6192     08AF  0CA8               	rrf	___fladd@b+3,f
  6193     08B0  0CA7               	rrf	___fladd@b+2,f
  6194     08B1  0CA6               	rrf	___fladd@b+1,f
  6195     08B2  0CA5               	rrf	___fladd@b,f
  6196     08B3  0BAD               	decfsz	??___fladd& (0+127),f
  6197     08B4  28AE               	goto	u6555
  6198     08B5  3001               	movlw	1
  6199     08B6  00FF               	movwf	127
  6200     08B7  087F               	movf	127,w
  6201     08B8  07B7               	addwf	___fladd@bexp,f
  6202     08B9                     l4119:
  6203     08B9  1283               	bcf	3,5	;RP0=0, select bank0
  6204     08BA  1303               	bcf	3,6	;RP1=0, select bank0
  6205     08BB  0836               	movf	___fladd@aexp,w
  6206     08BC  0237               	subwf	___fladd@bexp,w
  6207     08BD  1C03               	skipc
  6208     08BE  289F               	goto	l741
  6209     08BF                     l739:
  6210     08BF  1B35               	btfsc	___fladd@signs,6
  6211     08C0  28FE               	goto	l4145
  6212     08C1  0837               	movf	___fladd@bexp,w
  6213     08C2  1D03               	btfss	3,2
  6214     08C3  28CD               	goto	l4127
  6215     08C4  3000               	movlw	0
  6216     08C5  00A8               	movwf	?___fladd+3
  6217     08C6  3000               	movlw	0
  6218     08C7  00A7               	movwf	?___fladd+2
  6219     08C8  3000               	movlw	0
  6220     08C9  00A6               	movwf	?___fladd+1
  6221     08CA  3000               	movlw	0
  6222     08CB  00A5               	movwf	?___fladd
  6223     08CC  0008               	return
  6224     08CD                     l4127:
  6225     08CD  0829               	movf	___fladd@a,w
  6226     08CE  07A5               	addwf	___fladd@b,f
  6227     08CF  082A               	movf	___fladd@a+1,w
  6228     08D0  1103               	clrz
  6229     08D1  1803               	skipnc
  6230     08D2  3E01               	addlw	1
  6231     08D3  1D03               	btfss	3,2
  6232     08D4  07A6               	addwf	___fladd@b+1,f
  6233     08D5  082B               	movf	___fladd@a+2,w
  6234     08D6  1103               	clrz
  6235     08D7  1803               	skipnc
  6236     08D8  3E01               	addlw	1
  6237     08D9  1D03               	btfss	3,2
  6238     08DA  07A7               	addwf	___fladd@b+2,f
  6239     08DB  082C               	movf	___fladd@a+3,w
  6240     08DC  1103               	clrz
  6241     08DD  1803               	skipnc
  6242     08DE  3E01               	addlw	1
  6243     08DF  1D03               	btfss	3,2
  6244     08E0  07A8               	addwf	___fladd@b+3,f
  6245     08E1  1C28               	btfss	___fladd@b+3,0
  6246     08E2  29A0               	goto	l4181
  6247     08E3  1C38               	btfss	___fladd@grs,0
  6248     08E4  28EC               	goto	l4135
  6249     08E5  0838               	movf	___fladd@grs,w
  6250     08E6  00AD               	movwf	??___fladd
  6251     08E7  1003               	clrc
  6252     08E8  0C2D               	rrf	??___fladd,w
  6253     08E9  3801               	iorlw	1
  6254     08EA  00B8               	movwf	___fladd@grs
  6255     08EB  28EE               	goto	l4137
  6256     08EC                     l4135:
  6257     08EC  1003               	clrc
  6258     08ED  0CB8               	rrf	___fladd@grs,f
  6259     08EE                     l4137:
  6260     08EE  1825               	btfsc	___fladd@b,0
  6261     08EF  17B8               	bsf	___fladd@grs,7
  6262     08F0  3001               	movlw	1
  6263     08F1  00AD               	movwf	??___fladd
  6264     08F2                     u6635:
  6265     08F2  0D28               	rlf	___fladd@b+3,w
  6266     08F3  0CA8               	rrf	___fladd@b+3,f
  6267     08F4  0CA7               	rrf	___fladd@b+2,f
  6268     08F5  0CA6               	rrf	___fladd@b+1,f
  6269     08F6  0CA5               	rrf	___fladd@b,f
  6270     08F7  0BAD               	decfsz	??___fladd& (0+127),f
  6271     08F8  28F2               	goto	u6635
  6272     08F9  3001               	movlw	1
  6273     08FA  00FF               	movwf	127
  6274     08FB  087F               	movf	127,w
  6275     08FC  07B7               	addwf	___fladd@bexp,f
  6276     08FD  29A0               	goto	l4181
  6277     08FE                     l4145:
  6278     08FE  0828               	movf	___fladd@b+3,w
  6279     08FF  3A80               	xorlw	128
  6280     0900  00FF               	movwf	127
  6281     0901  082C               	movf	___fladd@a+3,w
  6282     0902  3A80               	xorlw	128
  6283     0903  027F               	subwf	127,w
  6284     0904  1D03               	skipz
  6285     0905  2910               	goto	u6643
  6286     0906  082B               	movf	___fladd@a+2,w
  6287     0907  0227               	subwf	___fladd@b+2,w
  6288     0908  1D03               	skipz
  6289     0909  2910               	goto	u6643
  6290     090A  082A               	movf	___fladd@a+1,w
  6291     090B  0226               	subwf	___fladd@b+1,w
  6292     090C  1D03               	skipz
  6293     090D  2910               	goto	u6643
  6294     090E  0829               	movf	___fladd@a,w
  6295     090F  0225               	subwf	___fladd@b,w
  6296     0910                     u6643:
  6297     0910  1803               	skipnc
  6298     0911  2968               	goto	l4157
  6299     0912  30FF               	movlw	255
  6300     0913  00AD               	movwf	??___fladd
  6301     0914  30FF               	movlw	255
  6302     0915  00AE               	movwf	??___fladd+1
  6303     0916  30FF               	movlw	255
  6304     0917  00AF               	movwf	??___fladd+2
  6305     0918  30FF               	movlw	255
  6306     0919  00B0               	movwf	??___fladd+3
  6307     091A  0829               	movf	___fladd@a,w
  6308     091B  00B1               	movwf	??___fladd+4
  6309     091C  082A               	movf	___fladd@a+1,w
  6310     091D  00B2               	movwf	??___fladd+5
  6311     091E  082B               	movf	___fladd@a+2,w
  6312     091F  00B3               	movwf	??___fladd+6
  6313     0920  082C               	movf	___fladd@a+3,w
  6314     0921  00B4               	movwf	??___fladd+7
  6315     0922  0825               	movf	___fladd@b,w
  6316     0923  02B1               	subwf	??___fladd+4,f
  6317     0924  0826               	movf	___fladd@b+1,w
  6318     0925  1C03               	skipc
  6319     0926  0F26               	incfsz	___fladd@b+1,w
  6320     0927  2929               	goto	u6651
  6321     0928  292A               	goto	u6652
  6322     0929                     u6651:
  6323     0929  02B2               	subwf	??___fladd+5,f
  6324     092A                     u6652:
  6325     092A  0827               	movf	___fladd@b+2,w
  6326     092B  1C03               	skipc
  6327     092C  0F27               	incfsz	___fladd@b+2,w
  6328     092D  292F               	goto	u6653
  6329     092E  2930               	goto	u6654
  6330     092F                     u6653:
  6331     092F  02B3               	subwf	??___fladd+6,f
  6332     0930                     u6654:
  6333     0930  0828               	movf	___fladd@b+3,w
  6334     0931  1C03               	skipc
  6335     0932  0F28               	incfsz	___fladd@b+3,w
  6336     0933  2935               	goto	u6655
  6337     0934  2936               	goto	u6656
  6338     0935                     u6655:
  6339     0935  02B4               	subwf	??___fladd+7,f
  6340     0936                     u6656:
  6341     0936  0831               	movf	??___fladd+4,w
  6342     0937  07AD               	addwf	??___fladd,f
  6343     0938  0832               	movf	??___fladd+5,w
  6344     0939  1803               	skipnc
  6345     093A  0F32               	incfsz	??___fladd+5,w
  6346     093B  293D               	goto	u6660
  6347     093C  293E               	goto	u6661
  6348     093D                     u6660:
  6349     093D  07AE               	addwf	??___fladd+1,f
  6350     093E                     u6661:
  6351     093E  0833               	movf	??___fladd+6,w
  6352     093F  1803               	skipnc
  6353     0940  0F33               	incfsz	??___fladd+6,w
  6354     0941  2943               	goto	u6662
  6355     0942  2944               	goto	u6663
  6356     0943                     u6662:
  6357     0943  07AF               	addwf	??___fladd+2,f
  6358     0944                     u6663:
  6359     0944  0834               	movf	??___fladd+7,w
  6360     0945  1803               	skipnc
  6361     0946  0A34               	incf	??___fladd+7,w
  6362     0947  07B0               	addwf	??___fladd+3,f
  6363     0948  0830               	movf	??___fladd+3,w
  6364     0949  00A8               	movwf	___fladd@b+3
  6365     094A  082F               	movf	??___fladd+2,w
  6366     094B  00A7               	movwf	___fladd@b+2
  6367     094C  082E               	movf	??___fladd+1,w
  6368     094D  00A6               	movwf	___fladd@b+1
  6369     094E  082D               	movf	??___fladd,w
  6370     094F  00A5               	movwf	___fladd@b
  6371     0950  3080               	movlw	128
  6372     0951  00FF               	movwf	127
  6373     0952  087F               	movf	127,w
  6374     0953  06B5               	xorwf	___fladd@signs,f
  6375     0954  09B8               	comf	___fladd@grs,f
  6376     0955  0AB8               	incf	___fladd@grs,f
  6377     0956  0838               	movf	___fladd@grs,w
  6378     0957  1D03               	btfss	3,2
  6379     0958  2976               	goto	l756
  6380     0959  3001               	movlw	1
  6381     095A  07A5               	addwf	___fladd@b,f
  6382     095B  3000               	movlw	0
  6383     095C  1803               	skipnc
  6384     095D  3001               	movlw	1
  6385     095E  07A6               	addwf	___fladd@b+1,f
  6386     095F  3000               	movlw	0
  6387     0960  1803               	skipnc
  6388     0961  3001               	movlw	1
  6389     0962  07A7               	addwf	___fladd@b+2,f
  6390     0963  3000               	movlw	0
  6391     0964  1803               	skipnc
  6392     0965  3001               	movlw	1
  6393     0966  07A8               	addwf	___fladd@b+3,f
  6394     0967  2976               	goto	l756
  6395     0968                     l4157:
  6396     0968  0829               	movf	___fladd@a,w
  6397     0969  02A5               	subwf	___fladd@b,f
  6398     096A  082A               	movf	___fladd@a+1,w
  6399     096B  1C03               	skipc
  6400     096C  0F2A               	incfsz	___fladd@a+1,w
  6401     096D  02A6               	subwf	___fladd@b+1,f
  6402     096E  082B               	movf	___fladd@a+2,w
  6403     096F  1C03               	skipc
  6404     0970  0F2B               	incfsz	___fladd@a+2,w
  6405     0971  02A7               	subwf	___fladd@b+2,f
  6406     0972  082C               	movf	___fladd@a+3,w
  6407     0973  1C03               	skipc
  6408     0974  0F2C               	incfsz	___fladd@a+3,w
  6409     0975  02A8               	subwf	___fladd@b+3,f
  6410     0976                     l756:
  6411     0976  0828               	movf	___fladd@b+3,w
  6412     0977  0427               	iorwf	___fladd@b+2,w
  6413     0978  0426               	iorwf	___fladd@b+1,w
  6414     0979  0425               	iorwf	___fladd@b,w
  6415     097A  1D03               	skipz
  6416     097B  299E               	goto	l4179
  6417     097C  0838               	movf	___fladd@grs,w
  6418     097D  1D03               	btfss	3,2
  6419     097E  299E               	goto	l4179
  6420     097F  3000               	movlw	0
  6421     0980  00A8               	movwf	?___fladd+3
  6422     0981  3000               	movlw	0
  6423     0982  00A7               	movwf	?___fladd+2
  6424     0983  3000               	movlw	0
  6425     0984  00A6               	movwf	?___fladd+1
  6426     0985  3000               	movlw	0
  6427     0986  00A5               	movwf	?___fladd
  6428     0987  0008               	return
  6429     0988                     l4165:
  6430     0988  3001               	movlw	1
  6431     0989  00AD               	movwf	??___fladd
  6432     098A                     u6705:
  6433     098A  1003               	clrc
  6434     098B  0DA5               	rlf	___fladd@b,f
  6435     098C  0DA6               	rlf	___fladd@b+1,f
  6436     098D  0DA7               	rlf	___fladd@b+2,f
  6437     098E  0DA8               	rlf	___fladd@b+3,f
  6438     098F  0BAD               	decfsz	??___fladd,f
  6439     0990  298A               	goto	u6705
  6440     0991  1BB8               	btfsc	___fladd@grs,7
  6441     0992  1425               	bsf	___fladd@b,0
  6442     0993  1C38               	btfss	___fladd@grs,0
  6443     0994  2997               	goto	l4173
  6444     0995  1403               	setc
  6445     0996  2998               	goto	L10
  6446     0997                     l4173:
  6447     0997  1003               	clrc
  6448     0998                     L10:
  6449     0998  0DB8               	rlf	___fladd@grs,f
  6450     0999  0837               	movf	___fladd@bexp,w
  6451     099A  1903               	btfsc	3,2
  6452     099B  299E               	goto	l4179
  6453     099C  3001               	movlw	1
  6454     099D  02B7               	subwf	___fladd@bexp,f
  6455     099E                     l4179:
  6456     099E  1FA7               	btfss	___fladd@b+2,7
  6457     099F  2988               	goto	l4165
  6458     09A0                     l4181:
  6459     09A0  01B6               	clrf	___fladd@aexp
  6460     09A1  1FB8               	btfss	___fladd@grs,7
  6461     09A2  29AB               	goto	l4191
  6462     09A3  0838               	movf	___fladd@grs,w
  6463     09A4  397F               	andlw	127
  6464     09A5  1903               	btfsc	3,2
  6465     09A6  1825               	btfsc	___fladd@b,0
  6466     09A7  29A9               	goto	l4187
  6467     09A8  29AB               	goto	l4191
  6468     09A9                     l4187:
  6469     09A9  01B6               	clrf	___fladd@aexp
  6470     09AA  0AB6               	incf	___fladd@aexp,f
  6471     09AB                     l4191:
  6472     09AB  0836               	movf	___fladd@aexp,w
  6473     09AC  1903               	btfsc	3,2
  6474     09AD  29DE               	goto	l4201
  6475     09AE  3001               	movlw	1
  6476     09AF  07A5               	addwf	___fladd@b,f
  6477     09B0  3000               	movlw	0
  6478     09B1  1803               	skipnc
  6479     09B2  3001               	movlw	1
  6480     09B3  07A6               	addwf	___fladd@b+1,f
  6481     09B4  3000               	movlw	0
  6482     09B5  1803               	skipnc
  6483     09B6  3001               	movlw	1
  6484     09B7  07A7               	addwf	___fladd@b+2,f
  6485     09B8  3000               	movlw	0
  6486     09B9  1803               	skipnc
  6487     09BA  3001               	movlw	1
  6488     09BB  07A8               	addwf	___fladd@b+3,f
  6489     09BC  1C28               	btfss	___fladd@b+3,0
  6490     09BD  29DE               	goto	l4201
  6491     09BE  0825               	movf	___fladd@b,w
  6492     09BF  00AD               	movwf	??___fladd
  6493     09C0  0826               	movf	___fladd@b+1,w
  6494     09C1  00AE               	movwf	??___fladd+1
  6495     09C2  0827               	movf	___fladd@b+2,w
  6496     09C3  00AF               	movwf	??___fladd+2
  6497     09C4  0828               	movf	___fladd@b+3,w
  6498     09C5  00B0               	movwf	??___fladd+3
  6499     09C6  3001               	movlw	1
  6500     09C7  00B1               	movwf	??___fladd+4
  6501     09C8                     u6805:
  6502     09C8  0D30               	rlf	??___fladd+3,w
  6503     09C9  0CB0               	rrf	??___fladd+3,f
  6504     09CA  0CAF               	rrf	??___fladd+2,f
  6505     09CB  0CAE               	rrf	??___fladd+1,f
  6506     09CC  0CAD               	rrf	??___fladd,f
  6507     09CD  0BB1               	decfsz	??___fladd+4,f
  6508     09CE  29C8               	goto	u6805
  6509     09CF  0830               	movf	??___fladd+3,w
  6510     09D0  00A8               	movwf	___fladd@b+3
  6511     09D1  082F               	movf	??___fladd+2,w
  6512     09D2  00A7               	movwf	___fladd@b+2
  6513     09D3  082E               	movf	??___fladd+1,w
  6514     09D4  00A6               	movwf	___fladd@b+1
  6515     09D5  082D               	movf	??___fladd,w
  6516     09D6  00A5               	movwf	___fladd@b
  6517     09D7  0A37               	incf	___fladd@bexp,w
  6518     09D8  1903               	btfsc	3,2
  6519     09D9  29DE               	goto	l4201
  6520     09DA  3001               	movlw	1
  6521     09DB  00FF               	movwf	127
  6522     09DC  087F               	movf	127,w
  6523     09DD  07B7               	addwf	___fladd@bexp,f
  6524     09DE                     l4201:
  6525     09DE  0A37               	incf	___fladd@bexp,w
  6526     09DF  1D03               	btfss	3,2
  6527     09E0  0837               	movf	___fladd@bexp,w
  6528     09E1  1D03               	btfss	3,2
  6529     09E2  29EE               	goto	l4211
  6530     09E3  3000               	movlw	0
  6531     09E4  00A8               	movwf	___fladd@b+3
  6532     09E5  3000               	movlw	0
  6533     09E6  00A7               	movwf	___fladd@b+2
  6534     09E7  3000               	movlw	0
  6535     09E8  00A6               	movwf	___fladd@b+1
  6536     09E9  3000               	movlw	0
  6537     09EA  00A5               	movwf	___fladd@b
  6538     09EB  0837               	movf	___fladd@bexp,w
  6539     09EC  1903               	btfsc	3,2
  6540     09ED  01B5               	clrf	___fladd@signs
  6541     09EE                     l4211:
  6542     09EE  1C37               	btfss	___fladd@bexp,0
  6543     09EF  29F2               	goto	l4215
  6544     09F0  17A7               	bsf	___fladd@b+2,7
  6545     09F1  29F6               	goto	l4217
  6546     09F2                     l4215:
  6547     09F2  307F               	movlw	127
  6548     09F3  00FF               	movwf	127
  6549     09F4  087F               	movf	127,w
  6550     09F5  05A7               	andwf	___fladd@b+2,f
  6551     09F6                     l4217:
  6552     09F6  0837               	movf	___fladd@bexp,w
  6553     09F7  00AD               	movwf	??___fladd
  6554     09F8  1003               	clrc
  6555     09F9  0C2D               	rrf	??___fladd,w
  6556     09FA  00A8               	movwf	___fladd@b+3
  6557     09FB  1FB5               	btfss	___fladd@signs,7
  6558     09FC  0008               	return
  6559     09FD  17A8               	bsf	___fladd@b+3,7
  6560     09FE  0008               	return
  6561     09FF                     __end_of___fladd:
  6562                           
  6563                           	psect	text18
  6564     07F5                     __ptext18:	
  6565 ;; *************** function ___flneg *****************
  6566 ;; Defined at:
  6567 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\flneg.c"
  6568 ;; Parameters:    Size  Location     Type
  6569 ;;  f1              4    2[COMMON] unsigned char 
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;		None
  6572 ;; Return value:  Size  Location     Type
  6573 ;;                  4    2[COMMON] unsigned char 
  6574 ;; Registers used:
  6575 ;;		wreg
  6576 ;; Tracked objects:
  6577 ;;		On entry : 300/100
  6578 ;;		On exit  : 300/100
  6579 ;;		Unchanged: 300/0
  6580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6581 ;;      Params:         4       0       0       0       0
  6582 ;;      Locals:         0       0       0       0       0
  6583 ;;      Temps:          0       0       0       0       0
  6584 ;;      Totals:         4       0       0       0       0
  6585 ;;Total ram usage:        4 bytes
  6586 ;; Hardware stack levels used: 1
  6587 ;; Hardware stack levels required when called: 1
  6588 ;; This function calls:
  6589 ;;		Nothing
  6590 ;; This function is called by:
  6591 ;;		_sprintf
  6592 ;; This function uses a non-reentrant model
  6593 ;;
  6594                           
  6595     07F5                     ___flneg:	
  6596                           ;psect for function ___flneg
  6597                           
  6598                           
  6599                           ;incstack = 0
  6600                           ; Regs used in ___flneg: [wreg]
  6601     07F5  0875               	movf	___flneg@f1+3,w
  6602     07F6  0474               	iorwf	___flneg@f1+2,w
  6603     07F7  0473               	iorwf	___flneg@f1+1,w
  6604     07F8  0472               	iorwf	___flneg@f1,w
  6605     07F9  1903               	skipnz
  6606     07FA  0008               	return
  6607     07FB  3080               	movlw	128
  6608     07FC  06F5               	xorwf	___flneg@f1+3,f
  6609     07FD  0008               	return
  6610     07FE                     __end_of___flneg:
  6611                           
  6612                           	psect	text19
  6613     111C                     __ptext19:	
  6614 ;; *************** function ___flge *****************
  6615 ;; Defined at:
  6616 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\flge.c"
  6617 ;; Parameters:    Size  Location     Type
  6618 ;;  ff1             4    2[COMMON] unsigned char 
  6619 ;;  ff2             4    6[COMMON] unsigned char 
  6620 ;; Auto vars:     Size  Location     Type
  6621 ;;		None
  6622 ;; Return value:  Size  Location     Type
  6623 ;;		None               void
  6624 ;; Registers used:
  6625 ;;		wreg, status,2, status,0
  6626 ;; Tracked objects:
  6627 ;;		On entry : 100/300
  6628 ;;		On exit  : 300/0
  6629 ;;		Unchanged: 0/0
  6630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6631 ;;      Params:         8       0       0       0       0
  6632 ;;      Locals:         0       0       0       0       0
  6633 ;;      Temps:          0       4       0       0       0
  6634 ;;      Totals:         8       4       0       0       0
  6635 ;;Total ram usage:       12 bytes
  6636 ;; Hardware stack levels used: 1
  6637 ;; Hardware stack levels required when called: 1
  6638 ;; This function calls:
  6639 ;;		Nothing
  6640 ;; This function is called by:
  6641 ;;		_main
  6642 ;;		_sprintf
  6643 ;; This function uses a non-reentrant model
  6644 ;;
  6645                           
  6646     111C                     ___flge:	
  6647                           ;psect for function ___flge
  6648                           
  6649                           
  6650                           ;incstack = 0
  6651                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6652     111C  3000               	movlw	0
  6653     111D  0572               	andwf	___flge@ff1,w
  6654     111E  1283               	bcf	3,5	;RP0=0, select bank0
  6655     111F  1303               	bcf	3,6	;RP1=0, select bank0
  6656     1120  00A0               	movwf	??___flge
  6657     1121  3000               	movlw	0
  6658     1122  0573               	andwf	___flge@ff1+1,w
  6659     1123  00A1               	movwf	??___flge+1
  6660     1124  3080               	movlw	128
  6661     1125  0574               	andwf	___flge@ff1+2,w
  6662     1126  00A2               	movwf	??___flge+2
  6663     1127  307F               	movlw	127
  6664     1128  0575               	andwf	___flge@ff1+3,w
  6665     1129  00A3               	movwf	??___flge+3
  6666     112A  0823               	movf	??___flge+3,w
  6667     112B  0422               	iorwf	??___flge+2,w
  6668     112C  0421               	iorwf	??___flge+1,w
  6669     112D  0420               	iorwf	??___flge,w
  6670     112E  1D03               	skipz
  6671     112F  2938               	goto	l599
  6672     1130  3000               	movlw	0
  6673     1131  00F5               	movwf	___flge@ff1+3
  6674     1132  3000               	movlw	0
  6675     1133  00F4               	movwf	___flge@ff1+2
  6676     1134  3000               	movlw	0
  6677     1135  00F3               	movwf	___flge@ff1+1
  6678     1136  3000               	movlw	0
  6679     1137  00F2               	movwf	___flge@ff1
  6680     1138                     l599:
  6681     1138  3000               	movlw	0
  6682     1139  0576               	andwf	___flge@ff2,w
  6683     113A  00A0               	movwf	??___flge
  6684     113B  3000               	movlw	0
  6685     113C  0577               	andwf	___flge@ff2+1,w
  6686     113D  00A1               	movwf	??___flge+1
  6687     113E  3080               	movlw	128
  6688     113F  0578               	andwf	___flge@ff2+2,w
  6689     1140  00A2               	movwf	??___flge+2
  6690     1141  307F               	movlw	127
  6691     1142  0579               	andwf	___flge@ff2+3,w
  6692     1143  00A3               	movwf	??___flge+3
  6693     1144  0823               	movf	??___flge+3,w
  6694     1145  0422               	iorwf	??___flge+2,w
  6695     1146  0421               	iorwf	??___flge+1,w
  6696     1147  0420               	iorwf	??___flge,w
  6697     1148  1D03               	skipz
  6698     1149  2952               	goto	l4603
  6699     114A  3000               	movlw	0
  6700     114B  00F9               	movwf	___flge@ff2+3
  6701     114C  3000               	movlw	0
  6702     114D  00F8               	movwf	___flge@ff2+2
  6703     114E  3000               	movlw	0
  6704     114F  00F7               	movwf	___flge@ff2+1
  6705     1150  3000               	movlw	0
  6706     1151  00F6               	movwf	___flge@ff2
  6707     1152                     l4603:
  6708     1152  1FF5               	btfss	___flge@ff1+3,7
  6709     1153  2978               	goto	l4607
  6710     1154  3000               	movlw	0
  6711     1155  00A0               	movwf	??___flge
  6712     1156  3000               	movlw	0
  6713     1157  00A1               	movwf	??___flge+1
  6714     1158  3000               	movlw	0
  6715     1159  00A2               	movwf	??___flge+2
  6716     115A  3080               	movlw	128
  6717     115B  00A3               	movwf	??___flge+3
  6718     115C  0872               	movf	___flge@ff1,w
  6719     115D  02A0               	subwf	??___flge,f
  6720     115E  0873               	movf	___flge@ff1+1,w
  6721     115F  1C03               	skipc
  6722     1160  0F73               	incfsz	___flge@ff1+1,w
  6723     1161  2963               	goto	u7941
  6724     1162  2964               	goto	u7942
  6725     1163                     u7941:
  6726     1163  02A1               	subwf	??___flge+1,f
  6727     1164                     u7942:
  6728     1164  0874               	movf	___flge@ff1+2,w
  6729     1165  1C03               	skipc
  6730     1166  0F74               	incfsz	___flge@ff1+2,w
  6731     1167  2969               	goto	u7943
  6732     1168  296A               	goto	u7944
  6733     1169                     u7943:
  6734     1169  02A2               	subwf	??___flge+2,f
  6735     116A                     u7944:
  6736     116A  0875               	movf	___flge@ff1+3,w
  6737     116B  1C03               	skipc
  6738     116C  0F75               	incfsz	___flge@ff1+3,w
  6739     116D  296F               	goto	u7945
  6740     116E  2970               	goto	u7946
  6741     116F                     u7945:
  6742     116F  02A3               	subwf	??___flge+3,f
  6743     1170                     u7946:
  6744     1170  0823               	movf	??___flge+3,w
  6745     1171  00F5               	movwf	___flge@ff1+3
  6746     1172  0822               	movf	??___flge+2,w
  6747     1173  00F4               	movwf	___flge@ff1+2
  6748     1174  0821               	movf	??___flge+1,w
  6749     1175  00F3               	movwf	___flge@ff1+1
  6750     1176  0820               	movf	??___flge,w
  6751     1177  00F2               	movwf	___flge@ff1
  6752     1178                     l4607:
  6753     1178  1FF9               	btfss	___flge@ff2+3,7
  6754     1179  299E               	goto	l602
  6755     117A  3000               	movlw	0
  6756     117B  00A0               	movwf	??___flge
  6757     117C  3000               	movlw	0
  6758     117D  00A1               	movwf	??___flge+1
  6759     117E  3000               	movlw	0
  6760     117F  00A2               	movwf	??___flge+2
  6761     1180  3080               	movlw	128
  6762     1181  00A3               	movwf	??___flge+3
  6763     1182  0876               	movf	___flge@ff2,w
  6764     1183  02A0               	subwf	??___flge,f
  6765     1184  0877               	movf	___flge@ff2+1,w
  6766     1185  1C03               	skipc
  6767     1186  0F77               	incfsz	___flge@ff2+1,w
  6768     1187  2989               	goto	u7961
  6769     1188  298A               	goto	u7962
  6770     1189                     u7961:
  6771     1189  02A1               	subwf	??___flge+1,f
  6772     118A                     u7962:
  6773     118A  0878               	movf	___flge@ff2+2,w
  6774     118B  1C03               	skipc
  6775     118C  0F78               	incfsz	___flge@ff2+2,w
  6776     118D  298F               	goto	u7963
  6777     118E  2990               	goto	u7964
  6778     118F                     u7963:
  6779     118F  02A2               	subwf	??___flge+2,f
  6780     1190                     u7964:
  6781     1190  0879               	movf	___flge@ff2+3,w
  6782     1191  1C03               	skipc
  6783     1192  0F79               	incfsz	___flge@ff2+3,w
  6784     1193  2995               	goto	u7965
  6785     1194  2996               	goto	u7966
  6786     1195                     u7965:
  6787     1195  02A3               	subwf	??___flge+3,f
  6788     1196                     u7966:
  6789     1196  0823               	movf	??___flge+3,w
  6790     1197  00F9               	movwf	___flge@ff2+3
  6791     1198  0822               	movf	??___flge+2,w
  6792     1199  00F8               	movwf	___flge@ff2+2
  6793     119A  0821               	movf	??___flge+1,w
  6794     119B  00F7               	movwf	___flge@ff2+1
  6795     119C  0820               	movf	??___flge,w
  6796     119D  00F6               	movwf	___flge@ff2
  6797     119E                     l602:
  6798     119E  3080               	movlw	128
  6799     119F  06F5               	xorwf	___flge@ff1+3,f
  6800     11A0  3080               	movlw	128
  6801     11A1  06F9               	xorwf	___flge@ff2+3,f
  6802     11A2  0879               	movf	___flge@ff2+3,w
  6803     11A3  0275               	subwf	___flge@ff1+3,w
  6804     11A4  1D03               	skipz
  6805     11A5  0008               	return
  6806     11A6  0878               	movf	___flge@ff2+2,w
  6807     11A7  0274               	subwf	___flge@ff1+2,w
  6808     11A8  1D03               	skipz
  6809     11A9  0008               	return
  6810     11AA  0877               	movf	___flge@ff2+1,w
  6811     11AB  0273               	subwf	___flge@ff1+1,w
  6812     11AC  1D03               	skipz
  6813     11AD  0008               	return
  6814     11AE  0876               	movf	___flge@ff2,w
  6815     11AF  0272               	subwf	___flge@ff1,w
  6816     11B0  0008               	return
  6817     11B1                     __end_of___flge:
  6818                           
  6819                           	psect	text20
  6820     1DE6                     __ptext20:	
  6821 ;; *************** function ___fleq *****************
  6822 ;; Defined at:
  6823 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fleq.c"
  6824 ;; Parameters:    Size  Location     Type
  6825 ;;  ff1             4    2[COMMON] unsigned char 
  6826 ;;  ff2             4    6[COMMON] unsigned char 
  6827 ;; Auto vars:     Size  Location     Type
  6828 ;;		None
  6829 ;; Return value:  Size  Location     Type
  6830 ;;		None               void
  6831 ;; Registers used:
  6832 ;;		wreg, status,2, status,0
  6833 ;; Tracked objects:
  6834 ;;		On entry : 300/100
  6835 ;;		On exit  : 300/0
  6836 ;;		Unchanged: 0/0
  6837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6838 ;;      Params:         8       0       0       0       0
  6839 ;;      Locals:         0       0       0       0       0
  6840 ;;      Temps:          0       4       0       0       0
  6841 ;;      Totals:         8       4       0       0       0
  6842 ;;Total ram usage:       12 bytes
  6843 ;; Hardware stack levels used: 1
  6844 ;; Hardware stack levels required when called: 1
  6845 ;; This function calls:
  6846 ;;		Nothing
  6847 ;; This function is called by:
  6848 ;;		_sprintf
  6849 ;; This function uses a non-reentrant model
  6850 ;;
  6851                           
  6852     1DE6                     ___fleq:	
  6853                           ;psect for function ___fleq
  6854                           
  6855                           
  6856                           ;incstack = 0
  6857                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  6858     1DE6  3000               	movlw	0
  6859     1DE7  0572               	andwf	___fleq@ff1,w
  6860     1DE8  1283               	bcf	3,5	;RP0=0, select bank0
  6861     1DE9  00A0               	movwf	??___fleq
  6862     1DEA  3000               	movlw	0
  6863     1DEB  0573               	andwf	___fleq@ff1+1,w
  6864     1DEC  00A1               	movwf	??___fleq+1
  6865     1DED  3080               	movlw	128
  6866     1DEE  0574               	andwf	___fleq@ff1+2,w
  6867     1DEF  00A2               	movwf	??___fleq+2
  6868     1DF0  307F               	movlw	127
  6869     1DF1  0575               	andwf	___fleq@ff1+3,w
  6870     1DF2  00A3               	movwf	??___fleq+3
  6871     1DF3  0823               	movf	??___fleq+3,w
  6872     1DF4  0422               	iorwf	??___fleq+2,w
  6873     1DF5  0421               	iorwf	??___fleq+1,w
  6874     1DF6  0420               	iorwf	??___fleq,w
  6875     1DF7  1D03               	skipz
  6876     1DF8  2E01               	goto	l594
  6877     1DF9  3000               	movlw	0
  6878     1DFA  00F5               	movwf	___fleq@ff1+3
  6879     1DFB  3000               	movlw	0
  6880     1DFC  00F4               	movwf	___fleq@ff1+2
  6881     1DFD  3000               	movlw	0
  6882     1DFE  00F3               	movwf	___fleq@ff1+1
  6883     1DFF  3000               	movlw	0
  6884     1E00  00F2               	movwf	___fleq@ff1
  6885     1E01                     l594:
  6886     1E01  3000               	movlw	0
  6887     1E02  0576               	andwf	___fleq@ff2,w
  6888     1E03  00A0               	movwf	??___fleq
  6889     1E04  3000               	movlw	0
  6890     1E05  0577               	andwf	___fleq@ff2+1,w
  6891     1E06  00A1               	movwf	??___fleq+1
  6892     1E07  3080               	movlw	128
  6893     1E08  0578               	andwf	___fleq@ff2+2,w
  6894     1E09  00A2               	movwf	??___fleq+2
  6895     1E0A  307F               	movlw	127
  6896     1E0B  0579               	andwf	___fleq@ff2+3,w
  6897     1E0C  00A3               	movwf	??___fleq+3
  6898     1E0D  0823               	movf	??___fleq+3,w
  6899     1E0E  0422               	iorwf	??___fleq+2,w
  6900     1E0F  0421               	iorwf	??___fleq+1,w
  6901     1E10  0420               	iorwf	??___fleq,w
  6902     1E11  1D03               	skipz
  6903     1E12  2E1B               	goto	l595
  6904     1E13  3000               	movlw	0
  6905     1E14  00F9               	movwf	___fleq@ff2+3
  6906     1E15  3000               	movlw	0
  6907     1E16  00F8               	movwf	___fleq@ff2+2
  6908     1E17  3000               	movlw	0
  6909     1E18  00F7               	movwf	___fleq@ff2+1
  6910     1E19  3000               	movlw	0
  6911     1E1A  00F6               	movwf	___fleq@ff2
  6912     1E1B                     l595:
  6913     1E1B  0879               	movf	___fleq@ff2+3,w
  6914     1E1C  0675               	xorwf	___fleq@ff1+3,w
  6915     1E1D  1D03               	skipz
  6916     1E1E  2E29               	goto	u7905
  6917     1E1F  0878               	movf	___fleq@ff2+2,w
  6918     1E20  0674               	xorwf	___fleq@ff1+2,w
  6919     1E21  1D03               	skipz
  6920     1E22  2E29               	goto	u7905
  6921     1E23  0877               	movf	___fleq@ff2+1,w
  6922     1E24  0673               	xorwf	___fleq@ff1+1,w
  6923     1E25  1D03               	skipz
  6924     1E26  2E29               	goto	u7905
  6925     1E27  0876               	movf	___fleq@ff2,w
  6926     1E28  0672               	xorwf	___fleq@ff1,w
  6927     1E29                     u7905:
  6928     1E29  1903               	skipnz
  6929     1E2A  2E2D               	goto	l4593
  6930     1E2B  1003               	clrc
  6931     1E2C  0008               	return
  6932     1E2D                     l4593:
  6933     1E2D  1403               	setc
  6934     1E2E  0008               	return
  6935     1E2F                     __end_of___fleq:
  6936                           
  6937                           	psect	text21
  6938     1447                     __ptext21:	
  6939 ;; *************** function _lcd_init *****************
  6940 ;; Defined at:
  6941 ;;		line 47 in file "bibliotec_lcd.c"
  6942 ;; Parameters:    Size  Location     Type
  6943 ;;  lcd_pins        1    wreg     PTR struct .
  6944 ;;		 -> lcd_pins(12), 
  6945 ;; Auto vars:     Size  Location     Type
  6946 ;;  lcd_pins        1    9[COMMON] PTR struct .
  6947 ;;		 -> lcd_pins(12), 
  6948 ;; Return value:  Size  Location     Type
  6949 ;;                  1    wreg      void 
  6950 ;; Registers used:
  6951 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6952 ;; Tracked objects:
  6953 ;;		On entry : B00/100
  6954 ;;		On exit  : 0/0
  6955 ;;		Unchanged: 0/0
  6956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6957 ;;      Params:         0       0       0       0       0
  6958 ;;      Locals:         1       0       0       0       0
  6959 ;;      Temps:          0       2       0       0       0
  6960 ;;      Totals:         1       2       0       0       0
  6961 ;;Total ram usage:        3 bytes
  6962 ;; Hardware stack levels used: 1
  6963 ;; Hardware stack levels required when called: 4
  6964 ;; This function calls:
  6965 ;;		_byte
  6966 ;;		_enable
  6967 ;;		_nibble
  6968 ;; This function is called by:
  6969 ;;		_main
  6970 ;; This function uses a non-reentrant model
  6971 ;;
  6972                           
  6973     1447                     _lcd_init:	
  6974                           ;psect for function _lcd_init
  6975                           
  6976                           
  6977                           ;incstack = 0
  6978                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6979                           ;lcd_init@lcd_pins stored from wreg
  6980     1447  00F9               	movwf	lcd_init@lcd_pins
  6981                           
  6982                           ;bibliotec_lcd.c: 47: void lcd_init( lcd_pin_t *lcd_pins);bibliotec_lcd.c: 48: {;bibliot
      +                          ec_lcd.c: 50:     port_rs = lcd_pins->port_rs;
  6983     1448  0879               	movf	lcd_init@lcd_pins,w
  6984     1449  0084               	movwf	4
  6985     144A  1783               	bsf	3,7	;select IRP bank2
  6986     144B  0800               	movf	0,w
  6987     144C  1703               	bsf	3,6	;RP1=1, select bank3
  6988     144D  00C4               	movwf	_port_rs^(0+384)
  6989     144E  0A84               	incf	4,f
  6990     144F  0800               	movf	0,w
  6991     1450  0384               	decf	4,f
  6992     1451  00C5               	movwf	(_port_rs+1)^(0+384)
  6993                           
  6994                           ;bibliotec_lcd.c: 51:     port_en = lcd_pins->port_en;
  6995     1452  0879               	movf	lcd_init@lcd_pins,w
  6996     1453  3E03               	addlw	3
  6997     1454  0084               	movwf	4
  6998     1455  0800               	movf	0,w
  6999     1456  00C2               	movwf	_port_en^(0+384)
  7000     1457  0A84               	incf	4,f
  7001     1458  0800               	movf	0,w
  7002     1459  0384               	decf	4,f
  7003     145A  00C3               	movwf	(_port_en+1)^(0+384)
  7004                           
  7005                           ;bibliotec_lcd.c: 52:     port_data = lcd_pins->port_data;
  7006     145B  0879               	movf	lcd_init@lcd_pins,w
  7007     145C  3E06               	addlw	6
  7008     145D  0084               	movwf	4
  7009     145E  0800               	movf	0,w
  7010     145F  1303               	bcf	3,6	;RP1=0, select bank1
  7011     1460  00C7               	movwf	_port_data^(0+128)
  7012     1461  0A84               	incf	4,f
  7013     1462  0800               	movf	0,w
  7014     1463  0384               	decf	4,f
  7015     1464  00C8               	movwf	(_port_data+1)^(0+128)
  7016                           
  7017                           ;bibliotec_lcd.c: 53:     RS = lcd_pins->pino_rs;
  7018     1465  0879               	movf	lcd_init@lcd_pins,w
  7019     1466  3E02               	addlw	2
  7020     1467  0084               	movwf	4
  7021     1468  0800               	movf	0,w
  7022     1469  1283               	bcf	3,5	;RP0=0, select bank0
  7023     146A  00AA               	movwf	??_lcd_init
  7024     146B  01AB               	clrf	??_lcd_init+1
  7025     146C  082A               	movf	??_lcd_init,w
  7026     146D  1683               	bsf	3,5	;RP0=1, select bank1
  7027     146E  00CB               	movwf	_RS^(0+128)	;volatile
  7028     146F  1283               	bcf	3,5	;RP0=0, select bank0
  7029     1470  082B               	movf	??_lcd_init+1,w
  7030     1471  1683               	bsf	3,5	;RP0=1, select bank1
  7031     1472  00CC               	movwf	(_RS+1)^(0+128)	;volatile
  7032                           
  7033                           ;bibliotec_lcd.c: 54:     EN = lcd_pins->pino_en;
  7034     1473  0879               	movf	lcd_init@lcd_pins,w
  7035     1474  3E05               	addlw	5
  7036     1475  0084               	movwf	4
  7037     1476  0800               	movf	0,w
  7038     1477  1283               	bcf	3,5	;RP0=0, select bank0
  7039     1478  00AA               	movwf	??_lcd_init
  7040     1479  01AB               	clrf	??_lcd_init+1
  7041     147A  082A               	movf	??_lcd_init,w
  7042     147B  00FA               	movwf	_EN	;volatile
  7043     147C  082B               	movf	??_lcd_init+1,w
  7044     147D  00FB               	movwf	_EN+1	;volatile
  7045                           
  7046                           ;bibliotec_lcd.c: 55:     D4 = lcd_pins->pino_d4;
  7047     147E  0879               	movf	lcd_init@lcd_pins,w
  7048     147F  3E08               	addlw	8
  7049     1480  0084               	movwf	4
  7050     1481  0800               	movf	0,w
  7051     1482  00AA               	movwf	??_lcd_init
  7052     1483  01AB               	clrf	??_lcd_init+1
  7053     1484  082A               	movf	??_lcd_init,w
  7054     1485  1683               	bsf	3,5	;RP0=1, select bank1
  7055     1486  00C9               	movwf	_D4^(0+128)	;volatile
  7056     1487  1283               	bcf	3,5	;RP0=0, select bank0
  7057     1488  082B               	movf	??_lcd_init+1,w
  7058     1489  1683               	bsf	3,5	;RP0=1, select bank1
  7059     148A  00CA               	movwf	(_D4+1)^(0+128)	;volatile
  7060                           
  7061                           ;bibliotec_lcd.c: 56:     D5 = lcd_pins->pino_d5;
  7062     148B  0879               	movf	lcd_init@lcd_pins,w
  7063     148C  3E09               	addlw	9
  7064     148D  0084               	movwf	4
  7065     148E  0800               	movf	0,w
  7066     148F  1283               	bcf	3,5	;RP0=0, select bank0
  7067     1490  00AA               	movwf	??_lcd_init
  7068     1491  01AB               	clrf	??_lcd_init+1
  7069     1492  082A               	movf	??_lcd_init,w
  7070     1493  1683               	bsf	3,5	;RP0=1, select bank3
  7071     1494  1703               	bsf	3,6	;RP1=1, select bank3
  7072     1495  00CA               	movwf	_D5^(0+384)	;volatile
  7073     1496  1283               	bcf	3,5	;RP0=0, select bank0
  7074     1497  1303               	bcf	3,6	;RP1=0, select bank0
  7075     1498  082B               	movf	??_lcd_init+1,w
  7076     1499  1683               	bsf	3,5	;RP0=1, select bank3
  7077     149A  1703               	bsf	3,6	;RP1=1, select bank3
  7078     149B  00CB               	movwf	(_D5+1)^(0+384)	;volatile
  7079                           
  7080                           ;bibliotec_lcd.c: 57:     D6 = lcd_pins->pino_d6;
  7081     149C  0879               	movf	lcd_init@lcd_pins,w
  7082     149D  3E0A               	addlw	10
  7083     149E  0084               	movwf	4
  7084     149F  0800               	movf	0,w
  7085     14A0  1283               	bcf	3,5	;RP0=0, select bank0
  7086     14A1  1303               	bcf	3,6	;RP1=0, select bank0
  7087     14A2  00AA               	movwf	??_lcd_init
  7088     14A3  01AB               	clrf	??_lcd_init+1
  7089     14A4  082A               	movf	??_lcd_init,w
  7090     14A5  1683               	bsf	3,5	;RP0=1, select bank3
  7091     14A6  1703               	bsf	3,6	;RP1=1, select bank3
  7092     14A7  00C8               	movwf	_D6^(0+384)	;volatile
  7093     14A8  1283               	bcf	3,5	;RP0=0, select bank0
  7094     14A9  1303               	bcf	3,6	;RP1=0, select bank0
  7095     14AA  082B               	movf	??_lcd_init+1,w
  7096     14AB  1683               	bsf	3,5	;RP0=1, select bank3
  7097     14AC  1703               	bsf	3,6	;RP1=1, select bank3
  7098     14AD  00C9               	movwf	(_D6+1)^(0+384)	;volatile
  7099                           
  7100                           ;bibliotec_lcd.c: 58:     D7 = lcd_pins->pino_d7;
  7101     14AE  0879               	movf	lcd_init@lcd_pins,w
  7102     14AF  3E0B               	addlw	11
  7103     14B0  0084               	movwf	4
  7104     14B1  0800               	movf	0,w
  7105     14B2  1283               	bcf	3,5	;RP0=0, select bank0
  7106     14B3  1303               	bcf	3,6	;RP1=0, select bank0
  7107     14B4  00AA               	movwf	??_lcd_init
  7108     14B5  01AB               	clrf	??_lcd_init+1
  7109     14B6  082A               	movf	??_lcd_init,w
  7110     14B7  1683               	bsf	3,5	;RP0=1, select bank3
  7111     14B8  1703               	bsf	3,6	;RP1=1, select bank3
  7112     14B9  00C6               	movwf	_D7^(0+384)	;volatile
  7113     14BA  1283               	bcf	3,5	;RP0=0, select bank0
  7114     14BB  1303               	bcf	3,6	;RP1=0, select bank0
  7115     14BC  082B               	movf	??_lcd_init+1,w
  7116     14BD  1683               	bsf	3,5	;RP0=1, select bank3
  7117     14BE  1703               	bsf	3,6	;RP1=1, select bank3
  7118     14BF  00C7               	movwf	(_D7+1)^(0+384)	;volatile
  7119                           
  7120                           ;bibliotec_lcd.c: 60:     _delay((unsigned long)((50)*(4000000/4000.0)));
  7121     14C0  3041               	movlw	65
  7122     14C1  1283               	bcf	3,5	;RP0=0, select bank0
  7123     14C2  1303               	bcf	3,6	;RP1=0, select bank0
  7124     14C3  00AB               	movwf	??_lcd_init+1
  7125     14C4  30ED               	movlw	237
  7126     14C5  00AA               	movwf	??_lcd_init
  7127     14C6                     u9137:
  7128     14C6  0BAA               	decfsz	??_lcd_init,f
  7129     14C7  2CC6               	goto	u9137
  7130     14C8  0BAB               	decfsz	??_lcd_init+1,f
  7131     14C9  2CC6               	goto	u9137
  7132     14CA  2CCB               	nop2
  7133                           
  7134                           ;bibliotec_lcd.c: 61:     nibble(0x2);
  7135     14CB  3002               	movlw	2
  7136     14CC  1283               	bcf	3,5	;RP0=0, select bank0
  7137     14CD  1303               	bcf	3,6	;RP1=0, select bank0
  7138     14CE  00A0               	movwf	nibble@dado
  7139     14CF  3000               	movlw	0
  7140     14D0  00A1               	movwf	nibble@dado+1
  7141     14D1  160A  158A  2786  160A  118A  	fcall	_nibble
  7142                           
  7143                           ;bibliotec_lcd.c: 62:     enable();
  7144     14D6  160A  158A  252F  160A  118A  	fcall	_enable
  7145                           
  7146                           ;bibliotec_lcd.c: 64:     byte(0, 0x28);
  7147     14DB  3000               	movlw	0
  7148     14DC  1283               	bcf	3,5	;RP0=0, select bank0
  7149     14DD  1303               	bcf	3,6	;RP1=0, select bank0
  7150     14DE  00A4               	movwf	byte@escreve
  7151     14DF  00A5               	movwf	byte@escreve+1
  7152     14E0  3028               	movlw	40
  7153     14E1  00A6               	movwf	byte@dado
  7154     14E2  160A  158A  25A1  160A  118A  	fcall	_byte
  7155                           
  7156                           ;bibliotec_lcd.c: 65:     byte(0, 0x0C);
  7157     14E7  3000               	movlw	0
  7158     14E8  1283               	bcf	3,5	;RP0=0, select bank0
  7159     14E9  1303               	bcf	3,6	;RP1=0, select bank0
  7160     14EA  00A4               	movwf	byte@escreve
  7161     14EB  00A5               	movwf	byte@escreve+1
  7162     14EC  300C               	movlw	12
  7163     14ED  00A6               	movwf	byte@dado
  7164     14EE  160A  158A  25A1  160A  118A  	fcall	_byte
  7165                           
  7166                           ;bibliotec_lcd.c: 66:     byte(0, 0x06);
  7167     14F3  3000               	movlw	0
  7168     14F4  1283               	bcf	3,5	;RP0=0, select bank0
  7169     14F5  1303               	bcf	3,6	;RP1=0, select bank0
  7170     14F6  00A4               	movwf	byte@escreve
  7171     14F7  00A5               	movwf	byte@escreve+1
  7172     14F8  3006               	movlw	6
  7173     14F9  00A6               	movwf	byte@dado
  7174     14FA  160A  158A  25A1  160A  118A  	fcall	_byte
  7175                           
  7176                           ;bibliotec_lcd.c: 67:     byte(0, 0x01);
  7177     14FF  3000               	movlw	0
  7178     1500  1283               	bcf	3,5	;RP0=0, select bank0
  7179     1501  1303               	bcf	3,6	;RP1=0, select bank0
  7180     1502  00A4               	movwf	byte@escreve
  7181     1503  00A5               	movwf	byte@escreve+1
  7182     1504  01A6               	clrf	byte@dado
  7183     1505  0AA6               	incf	byte@dado,f
  7184     1506  160A  158A  25A1  160A  118A  	fcall	_byte
  7185                           
  7186                           ;bibliotec_lcd.c: 69:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7187     150B  3007               	movlw	7
  7188     150C  1283               	bcf	3,5	;RP0=0, select bank0
  7189     150D  1303               	bcf	3,6	;RP1=0, select bank0
  7190     150E  00AB               	movwf	??_lcd_init+1
  7191     150F  307C               	movlw	124
  7192     1510  00AA               	movwf	??_lcd_init
  7193     1511                     u9147:
  7194     1511  0BAA               	decfsz	??_lcd_init,f
  7195     1512  2D11               	goto	u9147
  7196     1513  0BAB               	decfsz	??_lcd_init+1,f
  7197     1514  2D11               	goto	u9147
  7198     1515  0000               	nop
  7199     1516  0008               	return
  7200     1517                     __end_of_lcd_init:
  7201                           
  7202                           	psect	text22
  7203     1D68                     __ptext22:	
  7204 ;; *************** function _escreve *****************
  7205 ;; Defined at:
  7206 ;;		line 81 in file "bibliotec_lcd.c"
  7207 ;; Parameters:    Size  Location     Type
  7208 ;;  lin             1    wreg     unsigned char 
  7209 ;;  col             1   10[BANK0 ] unsigned char 
  7210 ;;  str             1   11[BANK0 ] PTR unsigned char 
  7211 ;;		 -> STR_1(9), 
  7212 ;; Auto vars:     Size  Location     Type
  7213 ;;  lin             1    9[COMMON] unsigned char 
  7214 ;; Return value:  Size  Location     Type
  7215 ;;                  1    wreg      void 
  7216 ;; Registers used:
  7217 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7218 ;; Tracked objects:
  7219 ;;		On entry : 300/0
  7220 ;;		On exit  : 300/0
  7221 ;;		Unchanged: 0/0
  7222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7223 ;;      Params:         0       2       0       0       0
  7224 ;;      Locals:         1       0       0       0       0
  7225 ;;      Temps:          0       0       0       0       0
  7226 ;;      Totals:         1       2       0       0       0
  7227 ;;Total ram usage:        3 bytes
  7228 ;; Hardware stack levels used: 1
  7229 ;; Hardware stack levels required when called: 4
  7230 ;; This function calls:
  7231 ;;		_byte
  7232 ;; This function is called by:
  7233 ;;		_main
  7234 ;; This function uses a non-reentrant model
  7235 ;;
  7236                           
  7237     1D68                     _escreve:	
  7238                           ;psect for function _escreve
  7239                           
  7240                           
  7241                           ;incstack = 0
  7242                           ; Regs used in _escreve: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7243                           ;escreve@lin stored from wreg
  7244     1D68  00F9               	movwf	escreve@lin
  7245                           
  7246                           ;bibliotec_lcd.c: 81: void escreve(char lin, char col, char *str);bibliotec_lcd.c: 82: {
      +                          ;bibliotec_lcd.c: 83:     if(lin == 1)byte(0,0x80 + col);
  7247     1D69  0379               	decf	escreve@lin,w
  7248     1D6A  1D03               	btfss	3,2
  7249     1D6B  2D72               	goto	l4967
  7250     1D6C  3000               	movlw	0
  7251     1D6D  00A4               	movwf	byte@escreve
  7252     1D6E  00A5               	movwf	byte@escreve+1
  7253     1D6F  082A               	movf	escreve@col,w
  7254     1D70  3E80               	addlw	128
  7255     1D71  2D77               	goto	L12
  7256     1D72                     l4967:
  7257     1D72  3000               	movlw	0
  7258     1D73  00A4               	movwf	byte@escreve
  7259     1D74  00A5               	movwf	byte@escreve+1
  7260     1D75  082A               	movf	escreve@col,w
  7261     1D76  3EC0               	addlw	192
  7262     1D77                     L12:
  7263     1D77  00A6               	movwf	byte@dado
  7264     1D78  160A  158A  25A1  160A  158A  	fcall	_byte
  7265     1D7D                     l4973:
  7266                           
  7267                           ;bibliotec_lcd.c: 85:     while (*str)
  7268     1D7D  1283               	bcf	3,5	;RP0=0, select bank0
  7269     1D7E  1303               	bcf	3,6	;RP1=0, select bank0
  7270     1D7F  082B               	movf	escreve@str,w
  7271     1D80  0084               	movwf	4
  7272     1D81  160A  118A  2000  160A  158A  	fcall	stringdir
  7273     1D86  3A00               	xorlw	0
  7274     1D87  1903               	btfsc	3,2
  7275     1D88  0008               	return
  7276                           
  7277                           ;bibliotec_lcd.c: 86:     {;bibliotec_lcd.c: 87:         byte(1, *str++);
  7278     1D89  3001               	movlw	1
  7279     1D8A  00A4               	movwf	byte@escreve
  7280     1D8B  3000               	movlw	0
  7281     1D8C  00A5               	movwf	byte@escreve+1
  7282     1D8D  082B               	movf	escreve@str,w
  7283     1D8E  0084               	movwf	4
  7284     1D8F  160A  118A  2000  160A  158A  	fcall	stringdir
  7285     1D94  00A6               	movwf	byte@dado
  7286     1D95  160A  158A  25A1  160A  158A  	fcall	_byte
  7287     1D9A  3001               	movlw	1
  7288     1D9B  00FF               	movwf	127
  7289     1D9C  087F               	movf	127,w
  7290     1D9D  1283               	bcf	3,5	;RP0=0, select bank0
  7291     1D9E  1303               	bcf	3,6	;RP1=0, select bank0
  7292     1D9F  07AB               	addwf	escreve@str,f
  7293     1DA0  2D7D               	goto	l4973
  7294     1DA1                     __end_of_escreve:
  7295                           
  7296                           	psect	text23
  7297     1DA1                     __ptext23:	
  7298 ;; *************** function _byte *****************
  7299 ;; Defined at:
  7300 ;;		line 37 in file "bibliotec_lcd.c"
  7301 ;; Parameters:    Size  Location     Type
  7302 ;;  escreve         2    4[BANK0 ] int 
  7303 ;;  dado            1    6[BANK0 ] unsigned char 
  7304 ;; Auto vars:     Size  Location     Type
  7305 ;;		None
  7306 ;; Return value:  Size  Location     Type
  7307 ;;                  1    wreg      void 
  7308 ;; Registers used:
  7309 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7310 ;; Tracked objects:
  7311 ;;		On entry : 300/800
  7312 ;;		On exit  : 0/0
  7313 ;;		Unchanged: 0/0
  7314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7315 ;;      Params:         0       3       0       0       0
  7316 ;;      Locals:         0       0       0       0       0
  7317 ;;      Temps:          0       3       0       0       0
  7318 ;;      Totals:         0       6       0       0       0
  7319 ;;Total ram usage:        6 bytes
  7320 ;; Hardware stack levels used: 1
  7321 ;; Hardware stack levels required when called: 3
  7322 ;; This function calls:
  7323 ;;		_enable
  7324 ;;		_muda_pin
  7325 ;;		_nibble
  7326 ;; This function is called by:
  7327 ;;		_lcd_init
  7328 ;;		_escreve
  7329 ;; This function uses a non-reentrant model
  7330 ;;
  7331                           
  7332     1DA1                     _byte:	
  7333                           ;psect for function _byte
  7334                           
  7335                           
  7336                           ;bibliotec_lcd.c: 37: void byte (int escreve, char dado);bibliotec_lcd.c: 38: {;bibliote
      +                          c_lcd.c: 39:     muda_pin(port_rs, RS, escreve & 0x01);
  7337                           
  7338                           ;incstack = 0
  7339                           ; Regs used in _byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7340     1DA1  1683               	bsf	3,5	;RP0=1, select bank3
  7341     1DA2  1703               	bsf	3,6	;RP1=1, select bank3
  7342     1DA3  0844               	movf	_port_rs^(0+384),w
  7343     1DA4  00F2               	movwf	muda_pin@_port
  7344     1DA5  0845               	movf	(_port_rs+1)^(0+384),w
  7345     1DA6  00F3               	movwf	muda_pin@_port+1
  7346     1DA7  1303               	bcf	3,6	;RP1=0, select bank1
  7347     1DA8  084C               	movf	(_RS+1)^(0+128),w	;volatile
  7348     1DA9  00F5               	movwf	muda_pin@_pin+1
  7349     1DAA  084B               	movf	_RS^(0+128),w	;volatile
  7350     1DAB  00F4               	movwf	muda_pin@_pin
  7351     1DAC  3001               	movlw	1
  7352     1DAD  1283               	bcf	3,5	;RP0=0, select bank0
  7353     1DAE  0524               	andwf	byte@escreve,w
  7354     1DAF  00F6               	movwf	muda_pin@_val
  7355     1DB0  3000               	movlw	0
  7356     1DB1  0525               	andwf	byte@escreve+1,w
  7357     1DB2  00F7               	movwf	muda_pin@_val+1
  7358     1DB3  160A  158A  2504  160A  158A  	fcall	_muda_pin
  7359                           
  7360                           ;bibliotec_lcd.c: 41:     nibble(dado >> 4);
  7361     1DB8  1283               	bcf	3,5	;RP0=0, select bank0
  7362     1DB9  1303               	bcf	3,6	;RP1=0, select bank0
  7363     1DBA  0826               	movf	byte@dado,w
  7364     1DBB  00A7               	movwf	??_byte
  7365     1DBC  3004               	movlw	4
  7366     1DBD                     u7235:
  7367     1DBD  1003               	clrc
  7368     1DBE  0CA7               	rrf	??_byte,f
  7369     1DBF  3EFF               	addlw	-1
  7370     1DC0  1D03               	skipz
  7371     1DC1  2DBD               	goto	u7235
  7372     1DC2  0827               	movf	??_byte,w
  7373     1DC3  00A8               	movwf	??_byte+1
  7374     1DC4  01A9               	clrf	??_byte+2
  7375     1DC5  0828               	movf	??_byte+1,w
  7376     1DC6  00A0               	movwf	nibble@dado
  7377     1DC7  0829               	movf	??_byte+2,w
  7378     1DC8  00A1               	movwf	nibble@dado+1
  7379     1DC9  160A  158A  2786  160A  158A  	fcall	_nibble
  7380                           
  7381                           ;bibliotec_lcd.c: 42:     enable();
  7382     1DCE  160A  158A  252F  160A  158A  	fcall	_enable
  7383                           
  7384                           ;bibliotec_lcd.c: 43:     nibble(dado & 0x0F);
  7385     1DD3  1283               	bcf	3,5	;RP0=0, select bank0
  7386     1DD4  1303               	bcf	3,6	;RP1=0, select bank0
  7387     1DD5  0826               	movf	byte@dado,w
  7388     1DD6  390F               	andlw	15
  7389     1DD7  00A7               	movwf	??_byte
  7390     1DD8  01A8               	clrf	??_byte+1
  7391     1DD9  0827               	movf	??_byte,w
  7392     1DDA  00A0               	movwf	nibble@dado
  7393     1DDB  0828               	movf	??_byte+1,w
  7394     1DDC  00A1               	movwf	nibble@dado+1
  7395     1DDD  160A  158A  2786  160A  158A  	fcall	_nibble
  7396                           
  7397                           ;bibliotec_lcd.c: 44:     enable();
  7398     1DE2  160A  158A  252F   	fcall	_enable
  7399     1DE5  0008               	return
  7400     1DE6                     __end_of_byte:
  7401                           
  7402                           	psect	text24
  7403     1F86                     __ptext24:	
  7404 ;; *************** function _nibble *****************
  7405 ;; Defined at:
  7406 ;;		line 28 in file "bibliotec_lcd.c"
  7407 ;; Parameters:    Size  Location     Type
  7408 ;;  dado            2    0[BANK0 ] int 
  7409 ;; Auto vars:     Size  Location     Type
  7410 ;;		None
  7411 ;; Return value:  Size  Location     Type
  7412 ;;                  1    wreg      void 
  7413 ;; Registers used:
  7414 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7415 ;; Tracked objects:
  7416 ;;		On entry : 300/800
  7417 ;;		On exit  : 0/0
  7418 ;;		Unchanged: 0/0
  7419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7420 ;;      Params:         0       2       0       0       0
  7421 ;;      Locals:         0       0       0       0       0
  7422 ;;      Temps:          0       2       0       0       0
  7423 ;;      Totals:         0       4       0       0       0
  7424 ;;Total ram usage:        4 bytes
  7425 ;; Hardware stack levels used: 1
  7426 ;; Hardware stack levels required when called: 2
  7427 ;; This function calls:
  7428 ;;		_muda_pin
  7429 ;; This function is called by:
  7430 ;;		_byte
  7431 ;;		_lcd_init
  7432 ;; This function uses a non-reentrant model
  7433 ;;
  7434                           
  7435     1F86                     _nibble:	
  7436                           ;psect for function _nibble
  7437                           
  7438                           
  7439                           ;bibliotec_lcd.c: 28: void nibble(int dado);bibliotec_lcd.c: 29: {;bibliotec_lcd.c: 30: 
      +                              muda_pin(port_data, D4, dado & 0x01);
  7440                           
  7441                           ;incstack = 0
  7442                           ; Regs used in _nibble: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7443     1F86  1683               	bsf	3,5	;RP0=1, select bank1
  7444     1F87  0847               	movf	_port_data^(0+128),w
  7445     1F88  00F2               	movwf	muda_pin@_port
  7446     1F89  0848               	movf	(_port_data+1)^(0+128),w
  7447     1F8A  00F3               	movwf	muda_pin@_port+1
  7448     1F8B  084A               	movf	(_D4+1)^(0+128),w	;volatile
  7449     1F8C  00F5               	movwf	muda_pin@_pin+1
  7450     1F8D  0849               	movf	_D4^(0+128),w	;volatile
  7451     1F8E  00F4               	movwf	muda_pin@_pin
  7452     1F8F  3001               	movlw	1
  7453     1F90  1283               	bcf	3,5	;RP0=0, select bank0
  7454     1F91  0520               	andwf	nibble@dado,w
  7455     1F92  00F6               	movwf	muda_pin@_val
  7456     1F93  3000               	movlw	0
  7457     1F94  0521               	andwf	nibble@dado+1,w
  7458     1F95  00F7               	movwf	muda_pin@_val+1
  7459     1F96  160A  158A  2504  160A  158A  	fcall	_muda_pin
  7460                           
  7461                           ;bibliotec_lcd.c: 31:     muda_pin(port_data, D5, dado >> 1 & 0x01);
  7462     1F9B  1683               	bsf	3,5	;RP0=1, select bank1
  7463     1F9C  1303               	bcf	3,6	;RP1=0, select bank1
  7464     1F9D  0847               	movf	_port_data^(0+128),w
  7465     1F9E  00F2               	movwf	muda_pin@_port
  7466     1F9F  0848               	movf	(_port_data+1)^(0+128),w
  7467     1FA0  00F3               	movwf	muda_pin@_port+1
  7468     1FA1  1703               	bsf	3,6	;RP1=1, select bank3
  7469     1FA2  084B               	movf	(_D5+1)^(0+384),w	;volatile
  7470     1FA3  00F5               	movwf	muda_pin@_pin+1
  7471     1FA4  084A               	movf	_D5^(0+384),w	;volatile
  7472     1FA5  00F4               	movwf	muda_pin@_pin
  7473     1FA6  1283               	bcf	3,5	;RP0=0, select bank0
  7474     1FA7  1303               	bcf	3,6	;RP1=0, select bank0
  7475     1FA8  0821               	movf	nibble@dado+1,w
  7476     1FA9  00A3               	movwf	??_nibble+1
  7477     1FAA  0820               	movf	nibble@dado,w
  7478     1FAB  00A2               	movwf	??_nibble
  7479     1FAC  0D23               	rlf	??_nibble+1,w
  7480     1FAD  0CA3               	rrf	??_nibble+1,f
  7481     1FAE  0CA2               	rrf	??_nibble,f
  7482     1FAF  3001               	movlw	1
  7483     1FB0  0522               	andwf	??_nibble,w
  7484     1FB1  00F6               	movwf	muda_pin@_val
  7485     1FB2  3000               	movlw	0
  7486     1FB3  0523               	andwf	??_nibble+1,w
  7487     1FB4  00F7               	movwf	muda_pin@_val+1
  7488     1FB5  160A  158A  2504  160A  158A  	fcall	_muda_pin
  7489                           
  7490                           ;bibliotec_lcd.c: 32:     muda_pin(port_data, D6, dado >> 2 & 0x01);
  7491     1FBA  1683               	bsf	3,5	;RP0=1, select bank1
  7492     1FBB  1303               	bcf	3,6	;RP1=0, select bank1
  7493     1FBC  0847               	movf	_port_data^(0+128),w
  7494     1FBD  00F2               	movwf	muda_pin@_port
  7495     1FBE  0848               	movf	(_port_data+1)^(0+128),w
  7496     1FBF  00F3               	movwf	muda_pin@_port+1
  7497     1FC0  1703               	bsf	3,6	;RP1=1, select bank3
  7498     1FC1  0849               	movf	(_D6+1)^(0+384),w	;volatile
  7499     1FC2  00F5               	movwf	muda_pin@_pin+1
  7500     1FC3  0848               	movf	_D6^(0+384),w	;volatile
  7501     1FC4  00F4               	movwf	muda_pin@_pin
  7502     1FC5  1283               	bcf	3,5	;RP0=0, select bank0
  7503     1FC6  1303               	bcf	3,6	;RP1=0, select bank0
  7504     1FC7  0821               	movf	nibble@dado+1,w
  7505     1FC8  00A3               	movwf	??_nibble+1
  7506     1FC9  0820               	movf	nibble@dado,w
  7507     1FCA  00A2               	movwf	??_nibble
  7508     1FCB  0D23               	rlf	??_nibble+1,w
  7509     1FCC  0CA3               	rrf	??_nibble+1,f
  7510     1FCD  0CA2               	rrf	??_nibble,f
  7511     1FCE  0D23               	rlf	??_nibble+1,w
  7512     1FCF  0CA3               	rrf	??_nibble+1,f
  7513     1FD0  0CA2               	rrf	??_nibble,f
  7514     1FD1  3001               	movlw	1
  7515     1FD2  0522               	andwf	??_nibble,w
  7516     1FD3  00F6               	movwf	muda_pin@_val
  7517     1FD4  3000               	movlw	0
  7518     1FD5  0523               	andwf	??_nibble+1,w
  7519     1FD6  00F7               	movwf	muda_pin@_val+1
  7520     1FD7  160A  158A  2504  160A  158A  	fcall	_muda_pin
  7521                           
  7522                           ;bibliotec_lcd.c: 33:     muda_pin(port_data, D7, dado >> 3 & 0x01);
  7523     1FDC  1683               	bsf	3,5	;RP0=1, select bank1
  7524     1FDD  1303               	bcf	3,6	;RP1=0, select bank1
  7525     1FDE  0847               	movf	_port_data^(0+128),w
  7526     1FDF  00F2               	movwf	muda_pin@_port
  7527     1FE0  0848               	movf	(_port_data+1)^(0+128),w
  7528     1FE1  00F3               	movwf	muda_pin@_port+1
  7529     1FE2  1703               	bsf	3,6	;RP1=1, select bank3
  7530     1FE3  0847               	movf	(_D7+1)^(0+384),w	;volatile
  7531     1FE4  00F5               	movwf	muda_pin@_pin+1
  7532     1FE5  0846               	movf	_D7^(0+384),w	;volatile
  7533     1FE6  00F4               	movwf	muda_pin@_pin
  7534     1FE7  1283               	bcf	3,5	;RP0=0, select bank0
  7535     1FE8  1303               	bcf	3,6	;RP1=0, select bank0
  7536     1FE9  0821               	movf	nibble@dado+1,w
  7537     1FEA  00A3               	movwf	??_nibble+1
  7538     1FEB  0820               	movf	nibble@dado,w
  7539     1FEC  00A2               	movwf	??_nibble
  7540     1FED  0D23               	rlf	??_nibble+1,w
  7541     1FEE  0CA3               	rrf	??_nibble+1,f
  7542     1FEF  0CA2               	rrf	??_nibble,f
  7543     1FF0  0D23               	rlf	??_nibble+1,w
  7544     1FF1  0CA3               	rrf	??_nibble+1,f
  7545     1FF2  0CA2               	rrf	??_nibble,f
  7546     1FF3  0D23               	rlf	??_nibble+1,w
  7547     1FF4  0CA3               	rrf	??_nibble+1,f
  7548     1FF5  0CA2               	rrf	??_nibble,f
  7549     1FF6  3001               	movlw	1
  7550     1FF7  0522               	andwf	??_nibble,w
  7551     1FF8  00F6               	movwf	muda_pin@_val
  7552     1FF9  3000               	movlw	0
  7553     1FFA  0523               	andwf	??_nibble+1,w
  7554     1FFB  00F7               	movwf	muda_pin@_val+1
  7555     1FFC  160A  158A  2504   	fcall	_muda_pin
  7556     1FFF  0008               	return
  7557     2000                     __end_of_nibble:
  7558                           
  7559                           	psect	text25
  7560     1D2F                     __ptext25:	
  7561 ;; *************** function _enable *****************
  7562 ;; Defined at:
  7563 ;;		line 20 in file "bibliotec_lcd.c"
  7564 ;; Parameters:    Size  Location     Type
  7565 ;;		None
  7566 ;; Auto vars:     Size  Location     Type
  7567 ;;		None
  7568 ;; Return value:  Size  Location     Type
  7569 ;;                  1    wreg      void 
  7570 ;; Registers used:
  7571 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7572 ;; Tracked objects:
  7573 ;;		On entry : 0/B00
  7574 ;;		On exit  : 0/0
  7575 ;;		Unchanged: 0/0
  7576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7577 ;;      Params:         0       0       0       0       0
  7578 ;;      Locals:         0       0       0       0       0
  7579 ;;      Temps:          0       2       0       0       0
  7580 ;;      Totals:         0       2       0       0       0
  7581 ;;Total ram usage:        2 bytes
  7582 ;; Hardware stack levels used: 1
  7583 ;; Hardware stack levels required when called: 2
  7584 ;; This function calls:
  7585 ;;		_muda_pin
  7586 ;; This function is called by:
  7587 ;;		_byte
  7588 ;;		_lcd_init
  7589 ;; This function uses a non-reentrant model
  7590 ;;
  7591                           
  7592     1D2F                     _enable:	
  7593                           ;psect for function _enable
  7594                           
  7595                           
  7596                           ;bibliotec_lcd.c: 22:     muda_pin(port_en, EN, 1);
  7597                           
  7598                           ;incstack = 0
  7599                           ; Regs used in _enable: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7600     1D2F  1683               	bsf	3,5	;RP0=1, select bank3
  7601     1D30  1703               	bsf	3,6	;RP1=1, select bank3
  7602     1D31  0842               	movf	_port_en^(0+384),w
  7603     1D32  00F2               	movwf	muda_pin@_port
  7604     1D33  0843               	movf	(_port_en+1)^(0+384),w
  7605     1D34  00F3               	movwf	muda_pin@_port+1
  7606     1D35  087B               	movf	_EN+1,w	;volatile
  7607     1D36  00F5               	movwf	muda_pin@_pin+1
  7608     1D37  087A               	movf	_EN,w	;volatile
  7609     1D38  00F4               	movwf	muda_pin@_pin
  7610     1D39  3001               	movlw	1
  7611     1D3A  00F6               	movwf	muda_pin@_val
  7612     1D3B  3000               	movlw	0
  7613     1D3C  00F7               	movwf	muda_pin@_val+1
  7614     1D3D  160A  158A  2504  160A  158A  	fcall	_muda_pin
  7615                           
  7616                           ;bibliotec_lcd.c: 23:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7617     1D42  3007               	movlw	7
  7618     1D43  1283               	bcf	3,5	;RP0=0, select bank0
  7619     1D44  1303               	bcf	3,6	;RP1=0, select bank0
  7620     1D45  00A1               	movwf	??_enable+1
  7621     1D46  307C               	movlw	124
  7622     1D47  00A0               	movwf	??_enable
  7623     1D48                     u9157:
  7624     1D48  0BA0               	decfsz	??_enable,f
  7625     1D49  2D48               	goto	u9157
  7626     1D4A  0BA1               	decfsz	??_enable+1,f
  7627     1D4B  2D48               	goto	u9157
  7628     1D4C  0000               	nop
  7629                           
  7630                           ;bibliotec_lcd.c: 24:     muda_pin(port_en, EN, 0);
  7631     1D4D  1683               	bsf	3,5	;RP0=1, select bank3
  7632     1D4E  1703               	bsf	3,6	;RP1=1, select bank3
  7633     1D4F  0842               	movf	_port_en^(0+384),w
  7634     1D50  00F2               	movwf	muda_pin@_port
  7635     1D51  0843               	movf	(_port_en+1)^(0+384),w
  7636     1D52  00F3               	movwf	muda_pin@_port+1
  7637     1D53  087B               	movf	_EN+1,w	;volatile
  7638     1D54  00F5               	movwf	muda_pin@_pin+1
  7639     1D55  087A               	movf	_EN,w	;volatile
  7640     1D56  00F4               	movwf	muda_pin@_pin
  7641     1D57  3000               	movlw	0
  7642     1D58  00F6               	movwf	muda_pin@_val
  7643     1D59  00F7               	movwf	muda_pin@_val+1
  7644     1D5A  160A  158A  2504  160A  158A  	fcall	_muda_pin
  7645                           
  7646                           ;bibliotec_lcd.c: 25:     _delay((unsigned long)((1)*(4000000/4000.0)));
  7647     1D5F  30C7               	movlw	199
  7648     1D60  1283               	bcf	3,5	;RP0=0, select bank0
  7649     1D61  1303               	bcf	3,6	;RP1=0, select bank0
  7650     1D62  00A0               	movwf	??_enable
  7651     1D63                     u9167:
  7652     1D63  2D64               	nop2
  7653     1D64  0BA0               	decfsz	??_enable,f
  7654     1D65  2D63               	goto	u9167
  7655     1D66  2D67               	nop2
  7656     1D67  0008               	return
  7657     1D68                     __end_of_enable:
  7658                           
  7659                           	psect	text26
  7660     1D04                     __ptext26:	
  7661 ;; *************** function _muda_pin *****************
  7662 ;; Defined at:
  7663 ;;		line 7 in file "bibliotec_lcd.c"
  7664 ;; Parameters:    Size  Location     Type
  7665 ;;  _port           2    2[COMMON] PTR volatile unsigned ch
  7666 ;;		 -> NULL(0), PORTB(1), 
  7667 ;;  _pin            2    4[COMMON] int 
  7668 ;;  _val            2    6[COMMON] int 
  7669 ;; Auto vars:     Size  Location     Type
  7670 ;;		None
  7671 ;; Return value:  Size  Location     Type
  7672 ;;                  1    wreg      void 
  7673 ;; Registers used:
  7674 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  7675 ;; Tracked objects:
  7676 ;;		On entry : 0/800
  7677 ;;		On exit  : 0/0
  7678 ;;		Unchanged: 0/0
  7679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7680 ;;      Params:         6       0       0       0       0
  7681 ;;      Locals:         0       0       0       0       0
  7682 ;;      Temps:          1       0       0       0       0
  7683 ;;      Totals:         7       0       0       0       0
  7684 ;;Total ram usage:        7 bytes
  7685 ;; Hardware stack levels used: 1
  7686 ;; Hardware stack levels required when called: 1
  7687 ;; This function calls:
  7688 ;;		Nothing
  7689 ;; This function is called by:
  7690 ;;		_enable
  7691 ;;		_nibble
  7692 ;;		_byte
  7693 ;; This function uses a non-reentrant model
  7694 ;;
  7695                           
  7696     1D04                     _muda_pin:	
  7697                           ;psect for function _muda_pin
  7698                           
  7699                           
  7700                           ;bibliotec_lcd.c: 7: void muda_pin(volatile unsigned char *_port, int _pin, int _val);bi
      +                          bliotec_lcd.c: 8: {;bibliotec_lcd.c: 9:     if(_val == 1)
  7701                           
  7702                           ;incstack = 0
  7703                           ; Regs used in _muda_pin: [wreg-fsr0h+status,2+status,0+btemp+1]
  7704     1D04  0376               	decf	muda_pin@_val,w
  7705     1D05  0477               	iorwf	muda_pin@_val+1,w
  7706     1D06  1D03               	btfss	3,2
  7707     1D07  2D1B               	goto	l3875
  7708                           
  7709                           ;bibliotec_lcd.c: 10:     {;bibliotec_lcd.c: 11:         *_port |= 1 << _pin;
  7710     1D08  3001               	movlw	1
  7711     1D09  00F8               	movwf	??_muda_pin
  7712     1D0A  0A74               	incf	muda_pin@_pin,w
  7713     1D0B  2D0E               	goto	u6104
  7714     1D0C                     u6105:
  7715     1D0C  1003               	clrc
  7716     1D0D  0DF8               	rlf	??_muda_pin,f
  7717     1D0E                     u6104:
  7718     1D0E  3EFF               	addlw	-1
  7719     1D0F  1D03               	skipz
  7720     1D10  2D0C               	goto	u6105
  7721     1D11  0878               	movf	??_muda_pin,w
  7722     1D12  00FF               	movwf	127
  7723     1D13  0872               	movf	muda_pin@_port,w
  7724     1D14  0084               	movwf	4
  7725     1D15  1783               	bsf	3,7
  7726     1D16  1C73               	btfss	muda_pin@_port+1,0
  7727     1D17  1383               	bcf	3,7
  7728     1D18  087F               	movf	127,w
  7729     1D19  0480               	iorwf	0,f
  7730                           
  7731                           ;bibliotec_lcd.c: 12:     }
  7732     1D1A  0008               	return
  7733     1D1B                     l3875:
  7734                           
  7735                           ;bibliotec_lcd.c: 14:     {;bibliotec_lcd.c: 15:         *_port &= ~(1 << _pin);
  7736     1D1B  3001               	movlw	1
  7737     1D1C  00F8               	movwf	??_muda_pin
  7738     1D1D  0A74               	incf	muda_pin@_pin,w
  7739     1D1E  2D21               	goto	u6114
  7740     1D1F                     u6115:
  7741     1D1F  1003               	clrc
  7742     1D20  0DF8               	rlf	??_muda_pin,f
  7743     1D21                     u6114:
  7744     1D21  3EFF               	addlw	-1
  7745     1D22  1D03               	skipz
  7746     1D23  2D1F               	goto	u6115
  7747     1D24  0878               	movf	??_muda_pin,w
  7748     1D25  3AFF               	xorlw	255
  7749     1D26  00FF               	movwf	127
  7750     1D27  0872               	movf	muda_pin@_port,w
  7751     1D28  0084               	movwf	4
  7752     1D29  1783               	bsf	3,7
  7753     1D2A  1C73               	btfss	muda_pin@_port+1,0
  7754     1D2B  1383               	bcf	3,7
  7755     1D2C  087F               	movf	127,w
  7756     1D2D  0580               	andwf	0,f
  7757     1D2E  0008               	return
  7758     1D2F                     __end_of_muda_pin:
  7759                           
  7760                           	psect	text27
  7761     1C24                     __ptext27:	
  7762 ;; *************** function _controle_pwm *****************
  7763 ;; Defined at:
  7764 ;;		line 129 in file "controle.c"
  7765 ;; Parameters:    Size  Location     Type
  7766 ;;  ligado          1    wreg     unsigned char 
  7767 ;; Auto vars:     Size  Location     Type
  7768 ;;  ligado          1    2[COMMON] unsigned char 
  7769 ;; Return value:  Size  Location     Type
  7770 ;;                  1    wreg      void 
  7771 ;; Registers used:
  7772 ;;		wreg, status,2, status,0
  7773 ;; Tracked objects:
  7774 ;;		On entry : B00/900
  7775 ;;		On exit  : B00/900
  7776 ;;		Unchanged: 800/0
  7777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7778 ;;      Params:         0       0       0       0       0
  7779 ;;      Locals:         1       0       0       0       0
  7780 ;;      Temps:          0       0       0       0       0
  7781 ;;      Totals:         1       0       0       0       0
  7782 ;;Total ram usage:        1 bytes
  7783 ;; Hardware stack levels used: 1
  7784 ;; Hardware stack levels required when called: 1
  7785 ;; This function calls:
  7786 ;;		Nothing
  7787 ;; This function is called by:
  7788 ;;		_main
  7789 ;; This function uses a non-reentrant model
  7790 ;;
  7791                           
  7792     1C24                     _controle_pwm:	
  7793                           ;psect for function _controle_pwm
  7794                           
  7795                           
  7796                           ;incstack = 0
  7797                           ; Regs used in _controle_pwm: [wreg+status,2+status,0]
  7798                           ;controle_pwm@ligado stored from wreg
  7799     1C24  00F2               	movwf	controle_pwm@ligado
  7800                           
  7801                           ;controle.c: 129: void controle_pwm(char ligado);controle.c: 130: {;controle.c: 131:    
      +                           if(ligado)
  7802     1C25  0872               	movf	controle_pwm@ligado,w
  7803     1C26  1903               	btfsc	3,2
  7804     1C27  2C31               	goto	l123
  7805                           
  7806                           ;controle.c: 132:     {;controle.c: 133:         CCP1CON = 0b00001100;
  7807     1C28  300C               	movlw	12
  7808     1C29  1283               	bcf	3,5	;RP0=0, select bank0
  7809     1C2A  0097               	movwf	23	;volatile
  7810                           
  7811                           ;controle.c: 134:         TMR2 = 0;
  7812     1C2B  0191               	clrf	17	;volatile
  7813                           
  7814                           ;controle.c: 135:         TRISC2 = 0;
  7815     1C2C  1683               	bsf	3,5	;RP0=1, select bank1
  7816     1C2D  1107               	bcf	7,2	;volatile
  7817                           
  7818                           ;controle.c: 136:         pwm_enabled = 1;
  7819     1C2E  01CD               	clrf	_pwm_enabled^(0+128)
  7820     1C2F  0ACD               	incf	_pwm_enabled^(0+128),f
  7821                           
  7822                           ;controle.c: 137:     }
  7823     1C30  0008               	return
  7824     1C31                     l123:	
  7825                           ;controle.c: 138:     else
  7826                           
  7827                           
  7828                           ;controle.c: 139:     {;controle.c: 140:         TRISC2 = 1;
  7829     1C31  1507               	bsf	7,2	;volatile
  7830                           
  7831                           ;controle.c: 141:         CCP1CON = 0b00000000;
  7832     1C32  1283               	bcf	3,5	;RP0=0, select bank0
  7833     1C33  0197               	clrf	23	;volatile
  7834                           
  7835                           ;controle.c: 142:         pwm_enabled = 0;
  7836     1C34  1683               	bsf	3,5	;RP0=1, select bank1
  7837     1C35  01CD               	clrf	_pwm_enabled^(0+128)
  7838     1C36  0008               	return
  7839     1C37                     __end_of_controle_pwm:
  7840                           
  7841                           	psect	text28
  7842     1BF7                     __ptext28:	
  7843 ;; *************** function _UART_init *****************
  7844 ;; Defined at:
  7845 ;;		line 94 in file "controle.c"
  7846 ;; Parameters:    Size  Location     Type
  7847 ;;		None
  7848 ;; Auto vars:     Size  Location     Type
  7849 ;;		None
  7850 ;; Return value:  Size  Location     Type
  7851 ;;                  1    wreg      void 
  7852 ;; Registers used:
  7853 ;;		wreg
  7854 ;; Tracked objects:
  7855 ;;		On entry : B00/100
  7856 ;;		On exit  : B00/100
  7857 ;;		Unchanged: 800/0
  7858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7859 ;;      Params:         0       0       0       0       0
  7860 ;;      Locals:         0       0       0       0       0
  7861 ;;      Temps:          0       0       0       0       0
  7862 ;;      Totals:         0       0       0       0       0
  7863 ;;Total ram usage:        0 bytes
  7864 ;; Hardware stack levels used: 1
  7865 ;; Hardware stack levels required when called: 1
  7866 ;; This function calls:
  7867 ;;		Nothing
  7868 ;; This function is called by:
  7869 ;;		_main
  7870 ;; This function uses a non-reentrant model
  7871 ;;
  7872                           
  7873     1BF7                     _UART_init:	
  7874                           ;psect for function _UART_init
  7875                           
  7876                           
  7877                           ;controle.c: 96:     SPBRG = 25;
  7878                           
  7879                           ;incstack = 0
  7880                           ; Regs used in _UART_init: [wreg]
  7881     1BF7  3019               	movlw	25
  7882     1BF8  0099               	movwf	25	;volatile
  7883                           
  7884                           ;controle.c: 98:     TXSTAbits.TXEN = 1;
  7885     1BF9  1698               	bsf	24,5	;volatile
  7886                           
  7887                           ;controle.c: 99:     RCSTAbits.CREN = 1;
  7888     1BFA  1283               	bcf	3,5	;RP0=0, select bank0
  7889     1BFB  1618               	bsf	24,4	;volatile
  7890                           
  7891                           ;controle.c: 101:     TXSTAbits.SYNC = 0;
  7892     1BFC  1683               	bsf	3,5	;RP0=1, select bank1
  7893     1BFD  1218               	bcf	24,4	;volatile
  7894                           
  7895                           ;controle.c: 102:     TXSTAbits.BRGH = 1;
  7896     1BFE  1518               	bsf	24,2	;volatile
  7897                           
  7898                           ;controle.c: 103:     RCSTAbits.SPEN = 1;
  7899     1BFF  1283               	bcf	3,5	;RP0=0, select bank0
  7900     1C00  1798               	bsf	24,7	;volatile
  7901                           
  7902                           ;controle.c: 104:     RCSTAbits.RX9 = 0;
  7903     1C01  1318               	bcf	24,6	;volatile
  7904                           
  7905                           ;controle.c: 105:     TXSTAbits.TX9 = 0;
  7906     1C02  1683               	bsf	3,5	;RP0=1, select bank1
  7907     1C03  1318               	bcf	24,6	;volatile
  7908     1C04  0008               	return
  7909     1C05                     __end_of_UART_init:
  7910                           
  7911                           	psect	text29
  7912     1BDF                     __ptext29:	
  7913 ;; *************** function _Timer0_init *****************
  7914 ;; Defined at:
  7915 ;;		line 81 in file "controle.c"
  7916 ;; Parameters:    Size  Location     Type
  7917 ;;		None
  7918 ;; Auto vars:     Size  Location     Type
  7919 ;;		None
  7920 ;; Return value:  Size  Location     Type
  7921 ;;                  1    wreg      void 
  7922 ;; Registers used:
  7923 ;;		wreg
  7924 ;; Tracked objects:
  7925 ;;		On entry : B00/100
  7926 ;;		On exit  : B00/0
  7927 ;;		Unchanged: 800/0
  7928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7929 ;;      Params:         0       0       0       0       0
  7930 ;;      Locals:         0       0       0       0       0
  7931 ;;      Temps:          0       0       0       0       0
  7932 ;;      Totals:         0       0       0       0       0
  7933 ;;Total ram usage:        0 bytes
  7934 ;; Hardware stack levels used: 1
  7935 ;; Hardware stack levels required when called: 1
  7936 ;; This function calls:
  7937 ;;		Nothing
  7938 ;; This function is called by:
  7939 ;;		_main
  7940 ;; This function uses a non-reentrant model
  7941 ;;
  7942                           
  7943     1BDF                     _Timer0_init:	
  7944                           ;psect for function _Timer0_init
  7945                           
  7946                           
  7947                           ;controle.c: 83:     PSA = 0;
  7948                           
  7949                           ;incstack = 0
  7950                           ; Regs used in _Timer0_init: [wreg]
  7951     1BDF  1181               	bcf	1,3	;volatile
  7952                           
  7953                           ;controle.c: 84:     PS2 = 0b1;
  7954     1BE0  1501               	bsf	1,2	;volatile
  7955                           
  7956                           ;controle.c: 85:     PS1 = 0b0;
  7957     1BE1  1081               	bcf	1,1	;volatile
  7958                           
  7959                           ;controle.c: 86:     PS0 = 0b1;
  7960     1BE2  1401               	bsf	1,0	;volatile
  7961                           
  7962                           ;controle.c: 87:     T0CS = 0;
  7963     1BE3  1281               	bcf	1,5	;volatile
  7964                           
  7965                           ;controle.c: 88:     T0IE = 1;
  7966     1BE4  168B               	bsf	11,5	;volatile
  7967                           
  7968                           ;controle.c: 89:     T0IF = 0;
  7969     1BE5  110B               	bcf	11,2	;volatile
  7970                           
  7971                           ;controle.c: 90:     TMR0 = 100;
  7972     1BE6  3064               	movlw	100
  7973     1BE7  1283               	bcf	3,5	;RP0=0, select bank0
  7974     1BE8  0081               	movwf	1	;volatile
  7975                           
  7976                           ;controle.c: 91:     GIE = 1;
  7977     1BE9  178B               	bsf	11,7	;volatile
  7978     1BEA  0008               	return
  7979     1BEB                     __end_of_Timer0_init:
  7980                           
  7981                           	psect	text30
  7982     1C4B                     __ptext30:	
  7983 ;; *************** function _PWM_init *****************
  7984 ;; Defined at:
  7985 ;;		line 44 in file "controle.c"
  7986 ;; Parameters:    Size  Location     Type
  7987 ;;		None
  7988 ;; Auto vars:     Size  Location     Type
  7989 ;;		None
  7990 ;; Return value:  Size  Location     Type
  7991 ;;                  1    wreg      void 
  7992 ;; Registers used:
  7993 ;;		wreg
  7994 ;; Tracked objects:
  7995 ;;		On entry : B00/100
  7996 ;;		On exit  : B00/100
  7997 ;;		Unchanged: 800/0
  7998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7999 ;;      Params:         0       0       0       0       0
  8000 ;;      Locals:         0       0       0       0       0
  8001 ;;      Temps:          0       0       0       0       0
  8002 ;;      Totals:         0       0       0       0       0
  8003 ;;Total ram usage:        0 bytes
  8004 ;; Hardware stack levels used: 1
  8005 ;; Hardware stack levels required when called: 1
  8006 ;; This function calls:
  8007 ;;		Nothing
  8008 ;; This function is called by:
  8009 ;;		_main
  8010 ;; This function uses a non-reentrant model
  8011 ;;
  8012                           
  8013     1C4B                     _PWM_init:	
  8014                           ;psect for function _PWM_init
  8015                           
  8016                           
  8017                           ;controle.c: 46:     TRISC2 = 1;
  8018                           
  8019                           ;incstack = 0
  8020                           ; Regs used in _PWM_init: [wreg]
  8021     1C4B  1507               	bsf	7,2	;volatile
  8022                           
  8023                           ;controle.c: 47:     PR2 = 255;
  8024     1C4C  30FF               	movlw	255
  8025     1C4D  0092               	movwf	18	;volatile
  8026                           
  8027                           ;controle.c: 48:     CCP1CON = 0b00001100;
  8028     1C4E  300C               	movlw	12
  8029     1C4F  1283               	bcf	3,5	;RP0=0, select bank0
  8030     1C50  0097               	movwf	23	;volatile
  8031                           
  8032                           ;controle.c: 49:     CCPR1L = 100;
  8033     1C51  3064               	movlw	100
  8034     1C52  0095               	movwf	21	;volatile
  8035                           
  8036                           ;controle.c: 50:     TMR2IF = 0;
  8037     1C53  108C               	bcf	12,1	;volatile
  8038                           
  8039                           ;controle.c: 51:     T2CON = 0b00000010;
  8040     1C54  3002               	movlw	2
  8041     1C55  0092               	movwf	18	;volatile
  8042                           
  8043                           ;controle.c: 52:     T2CON = 0b00000110;
  8044     1C56  3006               	movlw	6
  8045     1C57  0092               	movwf	18	;volatile
  8046     1C58                     l93:	
  8047                           ;controle.c: 53:     while(!TMR2IF);
  8048                           
  8049     1C58  1C8C               	btfss	12,1	;volatile
  8050     1C59  2C58               	goto	l93
  8051                           
  8052                           ;controle.c: 54:     TRISC2 = 0;
  8053     1C5A  1683               	bsf	3,5	;RP0=1, select bank1
  8054     1C5B  1107               	bcf	7,2	;volatile
  8055                           
  8056                           ;controle.c: 55:     TMR2IF = 0;
  8057     1C5C  1283               	bcf	3,5	;RP0=0, select bank0
  8058     1C5D  108C               	bcf	12,1	;volatile
  8059                           
  8060                           ;controle.c: 56:     pwm_enabled = 1;
  8061     1C5E  1683               	bsf	3,5	;RP0=1, select bank1
  8062     1C5F  01CD               	clrf	_pwm_enabled^(0+128)
  8063     1C60  0ACD               	incf	_pwm_enabled^(0+128),f
  8064     1C61  0008               	return
  8065     1C62                     __end_of_PWM_init:
  8066                           
  8067                           	psect	text31
  8068     1399                     __ptext31:	
  8069 ;; *************** function _LM35 *****************
  8070 ;; Defined at:
  8071 ;;		line 59 in file "controle.c"
  8072 ;; Parameters:    Size  Location     Type
  8073 ;;		None
  8074 ;; Auto vars:     Size  Location     Type
  8075 ;;  temperatura     4   10[BANK1 ] float 
  8076 ;;  adc_val         2   18[BANK1 ] unsigned int 
  8077 ;; Return value:  Size  Location     Type
  8078 ;;                  4    0[BANK1 ] float 
  8079 ;; Registers used:
  8080 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8081 ;; Tracked objects:
  8082 ;;		On entry : 0/0
  8083 ;;		On exit  : 300/100
  8084 ;;		Unchanged: 0/0
  8085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8086 ;;      Params:         0       0       4       0       0
  8087 ;;      Locals:         0       0      10       0       0
  8088 ;;      Temps:          0       0       6       0       0
  8089 ;;      Totals:         0       0      20       0       0
  8090 ;;Total ram usage:       20 bytes
  8091 ;; Hardware stack levels used: 1
  8092 ;; Hardware stack levels required when called: 3
  8093 ;; This function calls:
  8094 ;;		___fldiv
  8095 ;;		___flmul
  8096 ;;		___xxtofl
  8097 ;; This function is called by:
  8098 ;;		_main
  8099 ;; This function uses a non-reentrant model
  8100 ;;
  8101                           
  8102     1399                     _LM35:	
  8103                           ;psect for function _LM35
  8104                           
  8105                           
  8106                           ;controle.c: 61:     unsigned int adc_val;;controle.c: 62:     float temperatura;;contro
      +                          le.c: 63:     ADON = 1;
  8107                           
  8108                           ;incstack = 0
  8109                           ; Regs used in _LM35: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8110     1399  1283               	bcf	3,5	;RP0=0, select bank0
  8111     139A  1303               	bcf	3,6	;RP1=0, select bank0
  8112     139B  141F               	bsf	31,0	;volatile
  8113                           
  8114                           ;controle.c: 64:     ADFM = 0;
  8115     139C  1683               	bsf	3,5	;RP0=1, select bank1
  8116     139D  139F               	bcf	31,7	;volatile
  8117                           
  8118                           ;controle.c: 65:     ADCS1 = 0;
  8119     139E  1283               	bcf	3,5	;RP0=0, select bank0
  8120     139F  139F               	bcf	31,7	;volatile
  8121                           
  8122                           ;controle.c: 66:     ADCS0 = 1;
  8123     13A0  171F               	bsf	31,6	;volatile
  8124                           
  8125                           ;controle.c: 67:     CHS3 = 0;
  8126     13A1  129F               	bcf	31,5	;volatile
  8127                           
  8128                           ;controle.c: 68:     CHS2 = 0;
  8129     13A2  121F               	bcf	31,4	;volatile
  8130                           
  8131                           ;controle.c: 69:     CHS1 = 0;
  8132     13A3  119F               	bcf	31,3	;volatile
  8133                           
  8134                           ;controle.c: 70:     CHS0 = 0;
  8135     13A4  111F               	bcf	31,2	;volatile
  8136                           
  8137                           ;controle.c: 71:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  8138     13A5  3005               	movlw	5
  8139     13A6  1683               	bsf	3,5	;RP0=1, select bank1
  8140     13A7  1303               	bcf	3,6	;RP1=0, select bank1
  8141     13A8  00A4               	movwf	??_LM35^(0+128)
  8142     13A9                     u9177:
  8143     13A9  0BA4               	decfsz	??_LM35^(0+128),f
  8144     13AA  2BA9               	goto	u9177
  8145     13AB  2BAC               	nop2
  8146                           
  8147                           ;controle.c: 72:     GO_DONE = 1;
  8148     13AC  1283               	bcf	3,5	;RP0=0, select bank0
  8149     13AD  1303               	bcf	3,6	;RP1=0, select bank0
  8150     13AE  149F               	bsf	31,1	;volatile
  8151     13AF                     l99:	
  8152                           ;controle.c: 73:     while (GO_DONE);
  8153                           
  8154     13AF  189F               	btfsc	31,1	;volatile
  8155     13B0  2BAF               	goto	l99
  8156                           
  8157                           ;controle.c: 74:     adc_val = ADRESH;
  8158     13B1  081E               	movf	30,w	;volatile
  8159     13B2  1683               	bsf	3,5	;RP0=1, select bank1
  8160     13B3  00A4               	movwf	??_LM35^(0+128)
  8161     13B4  01A5               	clrf	(??_LM35^(0+128)+1)
  8162     13B5  0824               	movf	??_LM35^(0+128),w
  8163     13B6  00B2               	movwf	LM35@adc_val^(0+128)
  8164     13B7  0825               	movf	(??_LM35+1)^(0+128),w
  8165     13B8  00B3               	movwf	(LM35@adc_val+1)^(0+128)
  8166                           
  8167                           ;controle.c: 75:     adc_val = (adc_val << 8) | ADRESL;
  8168     13B9  081E               	movf	30,w	;volatile
  8169     13BA  00A4               	movwf	??_LM35^(0+128)
  8170     13BB  01A5               	clrf	(??_LM35^(0+128)+1)
  8171     13BC  0832               	movf	LM35@adc_val^(0+128),w
  8172     13BD  00A7               	movwf	((??_LM35+2)^(0+128)+1)
  8173     13BE  01A6               	clrf	(??_LM35+2)^(0+128)
  8174     13BF  0824               	movf	??_LM35^(0+128),w
  8175     13C0  0426               	iorwf	(??_LM35+2)^(0+128),w
  8176     13C1  00A8               	movwf	(??_LM35+4)^(0+128)
  8177     13C2  0825               	movf	(??_LM35+1)^(0+128),w
  8178     13C3  0427               	iorwf	(??_LM35+3)^(0+128),w
  8179     13C4  00A9               	movwf	(??_LM35+5)^(0+128)
  8180     13C5  0828               	movf	(??_LM35+4)^(0+128),w
  8181     13C6  00B2               	movwf	LM35@adc_val^(0+128)
  8182     13C7  0829               	movf	(??_LM35+5)^(0+128),w
  8183     13C8  00B3               	movwf	(LM35@adc_val+1)^(0+128)
  8184                           
  8185                           ;controle.c: 76:     temperatura = adc_val * 5.0f / 1023 * 1.543319f ;
  8186     13C9  3044               	movlw	68
  8187     13CA  1283               	bcf	3,5	;RP0=0, select bank0
  8188     13CB  00D6               	movwf	___fldiv@a+3
  8189     13CC  307F               	movlw	127
  8190     13CD  00D5               	movwf	___fldiv@a+2
  8191     13CE  30C0               	movlw	192
  8192     13CF  00D4               	movwf	___fldiv@a+1
  8193     13D0  3000               	movlw	0
  8194     13D1  00D3               	movwf	___fldiv@a
  8195     13D2  3040               	movlw	64
  8196     13D3  00BC               	movwf	___flmul@b+3
  8197     13D4  30A0               	movlw	160
  8198     13D5  00BB               	movwf	___flmul@b+2
  8199     13D6  3000               	movlw	0
  8200     13D7  00BA               	movwf	___flmul@b+1
  8201     13D8  3000               	movlw	0
  8202     13D9  00B9               	movwf	___flmul@b
  8203     13DA  1683               	bsf	3,5	;RP0=1, select bank1
  8204     13DB  0832               	movf	LM35@adc_val^(0+128),w
  8205     13DC  00F2               	movwf	___xxtofl@val
  8206     13DD  0833               	movf	(LM35@adc_val+1)^(0+128),w
  8207     13DE  00F3               	movwf	___xxtofl@val+1
  8208     13DF  01F4               	clrf	___xxtofl@val+2
  8209     13E0  01F5               	clrf	___xxtofl@val+3
  8210     13E1  3000               	movlw	0
  8211     13E2  160A  118A  21B1  160A  118A  	fcall	___xxtofl
  8212     13E7  0875               	movf	?___xxtofl+3,w
  8213     13E8  00C0               	movwf	___flmul@a+3
  8214     13E9  0874               	movf	?___xxtofl+2,w
  8215     13EA  00BF               	movwf	___flmul@a+2
  8216     13EB  0873               	movf	?___xxtofl+1,w
  8217     13EC  00BE               	movwf	___flmul@a+1
  8218     13ED  0872               	movf	?___xxtofl,w
  8219     13EE  00BD               	movwf	___flmul@a
  8220     13EF  120A  158A  21FF  160A  118A  	fcall	___flmul
  8221     13F4  083C               	movf	?___flmul+3,w
  8222     13F5  00DA               	movwf	___fldiv@b+3
  8223     13F6  083B               	movf	?___flmul+2,w
  8224     13F7  00D9               	movwf	___fldiv@b+2
  8225     13F8  083A               	movf	?___flmul+1,w
  8226     13F9  00D8               	movwf	___fldiv@b+1
  8227     13FA  0839               	movf	?___flmul,w
  8228     13FB  00D7               	movwf	___fldiv@b
  8229     13FC  120A  118A  265E  160A  118A  	fcall	___fldiv
  8230     1401  0856               	movf	?___fldiv+3,w
  8231     1402  1683               	bsf	3,5	;RP0=1, select bank1
  8232     1403  00B1               	movwf	(_LM35$1067+3)^(0+128)
  8233     1404  1283               	bcf	3,5	;RP0=0, select bank0
  8234     1405  0855               	movf	?___fldiv+2,w
  8235     1406  1683               	bsf	3,5	;RP0=1, select bank1
  8236     1407  00B0               	movwf	(_LM35$1067+2)^(0+128)
  8237     1408  1283               	bcf	3,5	;RP0=0, select bank0
  8238     1409  0854               	movf	?___fldiv+1,w
  8239     140A  1683               	bsf	3,5	;RP0=1, select bank1
  8240     140B  00AF               	movwf	(_LM35$1067+1)^(0+128)
  8241     140C  1283               	bcf	3,5	;RP0=0, select bank0
  8242     140D  0853               	movf	?___fldiv,w
  8243     140E  1683               	bsf	3,5	;RP0=1, select bank1
  8244     140F  00AE               	movwf	_LM35$1067^(0+128)
  8245                           
  8246                           ;controle.c: 76:     temperatura = adc_val * 5.0f / 1023 * 1.543319f ;
  8247     1410  303F               	movlw	63
  8248     1411  1283               	bcf	3,5	;RP0=0, select bank0
  8249     1412  00BC               	movwf	___flmul@b+3
  8250     1413  30C5               	movlw	197
  8251     1414  00BB               	movwf	___flmul@b+2
  8252     1415  308B               	movlw	139
  8253     1416  00BA               	movwf	___flmul@b+1
  8254     1417  307A               	movlw	122
  8255     1418  00B9               	movwf	___flmul@b
  8256     1419  1683               	bsf	3,5	;RP0=1, select bank1
  8257     141A  0831               	movf	(_LM35$1067+3)^(0+128),w
  8258     141B  1283               	bcf	3,5	;RP0=0, select bank0
  8259     141C  00C0               	movwf	___flmul@a+3
  8260     141D  1683               	bsf	3,5	;RP0=1, select bank1
  8261     141E  0830               	movf	(_LM35$1067+2)^(0+128),w
  8262     141F  1283               	bcf	3,5	;RP0=0, select bank0
  8263     1420  00BF               	movwf	___flmul@a+2
  8264     1421  1683               	bsf	3,5	;RP0=1, select bank1
  8265     1422  082F               	movf	(_LM35$1067+1)^(0+128),w
  8266     1423  1283               	bcf	3,5	;RP0=0, select bank0
  8267     1424  00BE               	movwf	___flmul@a+1
  8268     1425  1683               	bsf	3,5	;RP0=1, select bank1
  8269     1426  082E               	movf	_LM35$1067^(0+128),w
  8270     1427  1283               	bcf	3,5	;RP0=0, select bank0
  8271     1428  00BD               	movwf	___flmul@a
  8272     1429  120A  158A  21FF   	fcall	___flmul
  8273     142C  083C               	movf	?___flmul+3,w
  8274     142D  1683               	bsf	3,5	;RP0=1, select bank1
  8275     142E  00AD               	movwf	(LM35@temperatura+3)^(0+128)
  8276     142F  1283               	bcf	3,5	;RP0=0, select bank0
  8277     1430  083B               	movf	?___flmul+2,w
  8278     1431  1683               	bsf	3,5	;RP0=1, select bank1
  8279     1432  00AC               	movwf	(LM35@temperatura+2)^(0+128)
  8280     1433  1283               	bcf	3,5	;RP0=0, select bank0
  8281     1434  083A               	movf	?___flmul+1,w
  8282     1435  1683               	bsf	3,5	;RP0=1, select bank1
  8283     1436  00AB               	movwf	(LM35@temperatura+1)^(0+128)
  8284     1437  1283               	bcf	3,5	;RP0=0, select bank0
  8285     1438  0839               	movf	?___flmul,w
  8286     1439  1683               	bsf	3,5	;RP0=1, select bank1
  8287     143A  00AA               	movwf	LM35@temperatura^(0+128)
  8288                           
  8289                           ;controle.c: 77:     ADON = 0;
  8290     143B  1283               	bcf	3,5	;RP0=0, select bank0
  8291     143C  101F               	bcf	31,0	;volatile
  8292                           
  8293                           ;controle.c: 78:     return temperatura;
  8294     143D  1683               	bsf	3,5	;RP0=1, select bank1
  8295     143E  082D               	movf	(LM35@temperatura+3)^(0+128),w
  8296     143F  00A3               	movwf	(?_LM35+3)^(0+128)
  8297     1440  082C               	movf	(LM35@temperatura+2)^(0+128),w
  8298     1441  00A2               	movwf	(?_LM35+2)^(0+128)
  8299     1442  082B               	movf	(LM35@temperatura+1)^(0+128),w
  8300     1443  00A1               	movwf	(?_LM35+1)^(0+128)
  8301     1444  082A               	movf	LM35@temperatura^(0+128),w
  8302     1445  00A0               	movwf	?_LM35^(0+128)
  8303     1446  0008               	return
  8304     1447                     __end_of_LM35:
  8305                           
  8306                           	psect	text32
  8307     11B1                     __ptext32:	
  8308 ;; *************** function ___xxtofl *****************
  8309 ;; Defined at:
  8310 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\xxtofl.c"
  8311 ;; Parameters:    Size  Location     Type
  8312 ;;  sign            1    wreg     unsigned char 
  8313 ;;  val             4    2[COMMON] long 
  8314 ;; Auto vars:     Size  Location     Type
  8315 ;;  sign            1    0[BANK0 ] unsigned char 
  8316 ;;  arg             4    2[BANK0 ] unsigned long 
  8317 ;;  exp             1    1[BANK0 ] unsigned char 
  8318 ;; Return value:  Size  Location     Type
  8319 ;;                  4    2[COMMON] unsigned char 
  8320 ;; Registers used:
  8321 ;;		wreg, status,2, status,0, btemp+1
  8322 ;; Tracked objects:
  8323 ;;		On entry : 300/100
  8324 ;;		On exit  : 300/0
  8325 ;;		Unchanged: 0/0
  8326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8327 ;;      Params:         4       0       0       0       0
  8328 ;;      Locals:         0       6       0       0       0
  8329 ;;      Temps:          4       0       0       0       0
  8330 ;;      Totals:         8       6       0       0       0
  8331 ;;Total ram usage:       14 bytes
  8332 ;; Hardware stack levels used: 1
  8333 ;; Hardware stack levels required when called: 1
  8334 ;; This function calls:
  8335 ;;		Nothing
  8336 ;; This function is called by:
  8337 ;;		_LM35
  8338 ;;		_sprintf
  8339 ;; This function uses a non-reentrant model
  8340 ;;
  8341                           
  8342     11B1                     ___xxtofl:	
  8343                           ;psect for function ___xxtofl
  8344                           
  8345                           
  8346                           ;incstack = 0
  8347                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  8348                           ;___xxtofl@sign stored from wreg
  8349     11B1  1283               	bcf	3,5	;RP0=0, select bank0
  8350     11B2  00A0               	movwf	___xxtofl@sign
  8351     11B3  0820               	movf	___xxtofl@sign,w
  8352     11B4  1D03               	btfss	3,2
  8353     11B5  1FF5               	btfss	___xxtofl@val+3,7
  8354     11B6  29C7               	goto	l4843
  8355     11B7  0972               	comf	___xxtofl@val,w
  8356     11B8  00A2               	movwf	___xxtofl@arg
  8357     11B9  0973               	comf	___xxtofl@val+1,w
  8358     11BA  00A3               	movwf	___xxtofl@arg+1
  8359     11BB  0974               	comf	___xxtofl@val+2,w
  8360     11BC  00A4               	movwf	___xxtofl@arg+2
  8361     11BD  0975               	comf	___xxtofl@val+3,w
  8362     11BE  00A5               	movwf	___xxtofl@arg+3
  8363     11BF  0AA2               	incf	___xxtofl@arg,f
  8364     11C0  1903               	skipnz
  8365     11C1  0AA3               	incf	___xxtofl@arg+1,f
  8366     11C2  1903               	skipnz
  8367     11C3  0AA4               	incf	___xxtofl@arg+2,f
  8368     11C4  1903               	skipnz
  8369     11C5  0AA5               	incf	___xxtofl@arg+3,f
  8370     11C6  29CF               	goto	l875
  8371     11C7                     l4843:
  8372     11C7  0875               	movf	___xxtofl@val+3,w
  8373     11C8  00A5               	movwf	___xxtofl@arg+3
  8374     11C9  0874               	movf	___xxtofl@val+2,w
  8375     11CA  00A4               	movwf	___xxtofl@arg+2
  8376     11CB  0873               	movf	___xxtofl@val+1,w
  8377     11CC  00A3               	movwf	___xxtofl@arg+1
  8378     11CD  0872               	movf	___xxtofl@val,w
  8379     11CE  00A2               	movwf	___xxtofl@arg
  8380     11CF                     l875:
  8381     11CF  0875               	movf	___xxtofl@val+3,w
  8382     11D0  0474               	iorwf	___xxtofl@val+2,w
  8383     11D1  0473               	iorwf	___xxtofl@val+1,w
  8384     11D2  0472               	iorwf	___xxtofl@val,w
  8385     11D3  1D03               	skipz
  8386     11D4  29DE               	goto	l4849
  8387     11D5  3000               	movlw	0
  8388     11D6  00F5               	movwf	?___xxtofl+3
  8389     11D7  3000               	movlw	0
  8390     11D8  00F4               	movwf	?___xxtofl+2
  8391     11D9  3000               	movlw	0
  8392     11DA  00F3               	movwf	?___xxtofl+1
  8393     11DB  3000               	movlw	0
  8394     11DC  00F2               	movwf	?___xxtofl
  8395     11DD  0008               	return
  8396     11DE                     l4849:
  8397     11DE  3096               	movlw	150
  8398     11DF  00A1               	movwf	___xxtofl@exp
  8399     11E0                     l4855:
  8400     11E0  30FE               	movlw	254
  8401     11E1  0525               	andwf	___xxtofl@arg+3,w
  8402     11E2  1903               	btfsc	3,2
  8403     11E3  2A0D               	goto	l4863
  8404     11E4  3001               	movlw	1
  8405     11E5  00FF               	movwf	127
  8406     11E6  087F               	movf	127,w
  8407     11E7  07A1               	addwf	___xxtofl@exp,f
  8408     11E8  3001               	movlw	1
  8409     11E9                     u8475:
  8410     11E9  1003               	clrc
  8411     11EA  0CA5               	rrf	___xxtofl@arg+3,f
  8412     11EB  0CA4               	rrf	___xxtofl@arg+2,f
  8413     11EC  0CA3               	rrf	___xxtofl@arg+1,f
  8414     11ED  0CA2               	rrf	___xxtofl@arg,f
  8415     11EE  3EFF               	addlw	-1
  8416     11EF  1D03               	skipz
  8417     11F0  29E9               	goto	u8475
  8418     11F1  29E0               	goto	l4855
  8419     11F2                     l4857:
  8420     11F2  3001               	movlw	1
  8421     11F3  00FF               	movwf	127
  8422     11F4  087F               	movf	127,w
  8423     11F5  07A1               	addwf	___xxtofl@exp,f
  8424     11F6  3001               	movlw	1
  8425     11F7  07A2               	addwf	___xxtofl@arg,f
  8426     11F8  3000               	movlw	0
  8427     11F9  1803               	skipnc
  8428     11FA  3001               	movlw	1
  8429     11FB  07A3               	addwf	___xxtofl@arg+1,f
  8430     11FC  3000               	movlw	0
  8431     11FD  1803               	skipnc
  8432     11FE  3001               	movlw	1
  8433     11FF  07A4               	addwf	___xxtofl@arg+2,f
  8434     1200  3000               	movlw	0
  8435     1201  1803               	skipnc
  8436     1202  3001               	movlw	1
  8437     1203  07A5               	addwf	___xxtofl@arg+3,f
  8438     1204  3001               	movlw	1
  8439     1205                     u8495:
  8440     1205  1003               	clrc
  8441     1206  0CA5               	rrf	___xxtofl@arg+3,f
  8442     1207  0CA4               	rrf	___xxtofl@arg+2,f
  8443     1208  0CA3               	rrf	___xxtofl@arg+1,f
  8444     1209  0CA2               	rrf	___xxtofl@arg,f
  8445     120A  3EFF               	addlw	-1
  8446     120B  1D03               	skipz
  8447     120C  2A05               	goto	u8495
  8448     120D                     l4863:
  8449     120D  30FF               	movlw	255
  8450     120E  0525               	andwf	___xxtofl@arg+3,w
  8451     120F  1903               	btfsc	3,2
  8452     1210  2A21               	goto	l4867
  8453     1211  29F2               	goto	l4857
  8454     1212                     l4869:
  8455     1212  3002               	movlw	2
  8456     1213  0221               	subwf	___xxtofl@exp,w
  8457     1214  1C03               	btfss	3,0
  8458     1215  2A23               	goto	l888
  8459     1216  3001               	movlw	1
  8460     1217  02A1               	subwf	___xxtofl@exp,f
  8461     1218  3001               	movlw	1
  8462     1219  00F6               	movwf	??___xxtofl
  8463     121A                     u8515:
  8464     121A  1003               	clrc
  8465     121B  0DA2               	rlf	___xxtofl@arg,f
  8466     121C  0DA3               	rlf	___xxtofl@arg+1,f
  8467     121D  0DA4               	rlf	___xxtofl@arg+2,f
  8468     121E  0DA5               	rlf	___xxtofl@arg+3,f
  8469     121F  0BF6               	decfsz	??___xxtofl,f
  8470     1220  2A1A               	goto	u8515
  8471     1221                     l4867:
  8472     1221  1FA4               	btfss	___xxtofl@arg+2,7
  8473     1222  2A12               	goto	l4869
  8474     1223                     l888:
  8475     1223  1821               	btfsc	___xxtofl@exp,0
  8476     1224  2A2D               	goto	l889
  8477     1225  30FF               	movlw	255
  8478     1226  05A2               	andwf	___xxtofl@arg,f
  8479     1227  30FF               	movlw	255
  8480     1228  05A3               	andwf	___xxtofl@arg+1,f
  8481     1229  307F               	movlw	127
  8482     122A  05A4               	andwf	___xxtofl@arg+2,f
  8483     122B  30FF               	movlw	255
  8484     122C  05A5               	andwf	___xxtofl@arg+3,f
  8485     122D                     l889:
  8486     122D  1003               	clrc
  8487     122E  0CA1               	rrf	___xxtofl@exp,f
  8488     122F  0821               	movf	___xxtofl@exp,w
  8489     1230  00F6               	movwf	??___xxtofl
  8490     1231  01F7               	clrf	??___xxtofl+1
  8491     1232  01F8               	clrf	??___xxtofl+2
  8492     1233  01F9               	clrf	??___xxtofl+3
  8493     1234  3018               	movlw	24
  8494     1235                     u8555:
  8495     1235  1003               	clrc
  8496     1236  0DF6               	rlf	??___xxtofl,f
  8497     1237  0DF7               	rlf	??___xxtofl+1,f
  8498     1238  0DF8               	rlf	??___xxtofl+2,f
  8499     1239  0DF9               	rlf	??___xxtofl+3,f
  8500     123A  3EFF               	addlw	-1
  8501     123B  1D03               	skipz
  8502     123C  2A35               	goto	u8555
  8503     123D  0876               	movf	??___xxtofl,w
  8504     123E  04A2               	iorwf	___xxtofl@arg,f
  8505     123F  0877               	movf	??___xxtofl+1,w
  8506     1240  04A3               	iorwf	___xxtofl@arg+1,f
  8507     1241  0878               	movf	??___xxtofl+2,w
  8508     1242  04A4               	iorwf	___xxtofl@arg+2,f
  8509     1243  0879               	movf	??___xxtofl+3,w
  8510     1244  04A5               	iorwf	___xxtofl@arg+3,f
  8511     1245  0820               	movf	___xxtofl@sign,w
  8512     1246  1D03               	btfss	3,2
  8513     1247  1FF5               	btfss	___xxtofl@val+3,7
  8514     1248  2A4A               	goto	l4881
  8515     1249  17A5               	bsf	___xxtofl@arg+3,7
  8516     124A                     l4881:
  8517     124A  0825               	movf	___xxtofl@arg+3,w
  8518     124B  00F5               	movwf	?___xxtofl+3
  8519     124C  0824               	movf	___xxtofl@arg+2,w
  8520     124D  00F4               	movwf	?___xxtofl+2
  8521     124E  0823               	movf	___xxtofl@arg+1,w
  8522     124F  00F3               	movwf	?___xxtofl+1
  8523     1250  0822               	movf	___xxtofl@arg,w
  8524     1251  00F2               	movwf	?___xxtofl
  8525     1252  0008               	return
  8526     1253                     __end_of___xxtofl:
  8527                           
  8528                           	psect	text33
  8529     09FF                     __ptext33:	
  8530 ;; *************** function ___flmul *****************
  8531 ;; Defined at:
  8532 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcmul.c"
  8533 ;; Parameters:    Size  Location     Type
  8534 ;;  b               4   25[BANK0 ] unsigned char 
  8535 ;;  a               4   29[BANK0 ] unsigned char 
  8536 ;; Auto vars:     Size  Location     Type
  8537 ;;  prod            4   45[BANK0 ] struct .
  8538 ;;  grs             4   41[BANK0 ] unsigned long 
  8539 ;;  temp            2   49[BANK0 ] struct .
  8540 ;;  bexp            1   40[BANK0 ] unsigned char 
  8541 ;;  aexp            1   39[BANK0 ] unsigned char 
  8542 ;;  sign            1   38[BANK0 ] unsigned char 
  8543 ;; Return value:  Size  Location     Type
  8544 ;;                  4   25[BANK0 ] unsigned char 
  8545 ;; Registers used:
  8546 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8547 ;; Tracked objects:
  8548 ;;		On entry : 300/0
  8549 ;;		On exit  : 300/0
  8550 ;;		Unchanged: 0/0
  8551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8552 ;;      Params:         0       8       0       0       0
  8553 ;;      Locals:         0      13       0       0       0
  8554 ;;      Temps:          0       5       0       0       0
  8555 ;;      Totals:         0      26       0       0       0
  8556 ;;Total ram usage:       26 bytes
  8557 ;; Hardware stack levels used: 1
  8558 ;; Hardware stack levels required when called: 2
  8559 ;; This function calls:
  8560 ;;		__Umul8_16
  8561 ;; This function is called by:
  8562 ;;		_LM35
  8563 ;;		_main
  8564 ;;		_fround
  8565 ;;		_scale
  8566 ;;		_sprintf
  8567 ;; This function uses a non-reentrant model
  8568 ;;
  8569                           
  8570     09FF                     ___flmul:	
  8571                           ;psect for function ___flmul
  8572                           
  8573                           
  8574                           ;incstack = 0
  8575                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8576     09FF  083C               	movf	___flmul@b+3,w
  8577     0A00  3980               	andlw	128
  8578     0A01  00C6               	movwf	___flmul@sign
  8579     0A02  083C               	movf	___flmul@b+3,w
  8580     0A03  00C1               	movwf	??___flmul
  8581     0A04  0741               	addwf	??___flmul,w
  8582     0A05  00C8               	movwf	___flmul@bexp
  8583     0A06  1BBB               	btfsc	___flmul@b+2,7
  8584     0A07  1448               	bsf	___flmul@bexp,0
  8585     0A08  0848               	movf	___flmul@bexp,w
  8586     0A09  1903               	btfsc	3,2
  8587     0A0A  2A18               	goto	l4239
  8588     0A0B  0A48               	incf	___flmul@bexp,w
  8589     0A0C  1D03               	btfss	3,2
  8590     0A0D  2A16               	goto	l4237
  8591     0A0E  3000               	movlw	0
  8592     0A0F  00BC               	movwf	___flmul@b+3
  8593     0A10  3000               	movlw	0
  8594     0A11  00BB               	movwf	___flmul@b+2
  8595     0A12  3000               	movlw	0
  8596     0A13  00BA               	movwf	___flmul@b+1
  8597     0A14  3000               	movlw	0
  8598     0A15  00B9               	movwf	___flmul@b
  8599     0A16                     l4237:
  8600     0A16  17BB               	bsf	___flmul@b+2,7
  8601     0A17  2A20               	goto	l4241
  8602     0A18                     l4239:
  8603     0A18  3000               	movlw	0
  8604     0A19  00BC               	movwf	___flmul@b+3
  8605     0A1A  3000               	movlw	0
  8606     0A1B  00BB               	movwf	___flmul@b+2
  8607     0A1C  3000               	movlw	0
  8608     0A1D  00BA               	movwf	___flmul@b+1
  8609     0A1E  3000               	movlw	0
  8610     0A1F  00B9               	movwf	___flmul@b
  8611     0A20                     l4241:
  8612     0A20  0840               	movf	___flmul@a+3,w
  8613     0A21  3980               	andlw	128
  8614     0A22  00FF               	movwf	127
  8615     0A23  087F               	movf	127,w
  8616     0A24  06C6               	xorwf	___flmul@sign,f
  8617     0A25  0840               	movf	___flmul@a+3,w
  8618     0A26  00C1               	movwf	??___flmul
  8619     0A27  0741               	addwf	??___flmul,w
  8620     0A28  00C7               	movwf	___flmul@aexp
  8621     0A29  1BBF               	btfsc	___flmul@a+2,7
  8622     0A2A  1447               	bsf	___flmul@aexp,0
  8623     0A2B  0847               	movf	___flmul@aexp,w
  8624     0A2C  1903               	btfsc	3,2
  8625     0A2D  2A3B               	goto	l4257
  8626     0A2E  0A47               	incf	___flmul@aexp,w
  8627     0A2F  1D03               	btfss	3,2
  8628     0A30  2A39               	goto	l4255
  8629     0A31  3000               	movlw	0
  8630     0A32  00C0               	movwf	___flmul@a+3
  8631     0A33  3000               	movlw	0
  8632     0A34  00BF               	movwf	___flmul@a+2
  8633     0A35  3000               	movlw	0
  8634     0A36  00BE               	movwf	___flmul@a+1
  8635     0A37  3000               	movlw	0
  8636     0A38  00BD               	movwf	___flmul@a
  8637     0A39                     l4255:
  8638     0A39  17BF               	bsf	___flmul@a+2,7
  8639     0A3A  2A43               	goto	l4259
  8640     0A3B                     l4257:
  8641     0A3B  3000               	movlw	0
  8642     0A3C  00C0               	movwf	___flmul@a+3
  8643     0A3D  3000               	movlw	0
  8644     0A3E  00BF               	movwf	___flmul@a+2
  8645     0A3F  3000               	movlw	0
  8646     0A40  00BE               	movwf	___flmul@a+1
  8647     0A41  3000               	movlw	0
  8648     0A42  00BD               	movwf	___flmul@a
  8649     0A43                     l4259:
  8650     0A43  0847               	movf	___flmul@aexp,w
  8651     0A44  1D03               	btfss	3,2
  8652     0A45  0848               	movf	___flmul@bexp,w
  8653     0A46  1D03               	btfss	3,2
  8654     0A47  2A51               	goto	l4267
  8655     0A48  3000               	movlw	0
  8656     0A49  00BC               	movwf	?___flmul+3
  8657     0A4A  3000               	movlw	0
  8658     0A4B  00BB               	movwf	?___flmul+2
  8659     0A4C  3000               	movlw	0
  8660     0A4D  00BA               	movwf	?___flmul+1
  8661     0A4E  3000               	movlw	0
  8662     0A4F  00B9               	movwf	?___flmul
  8663     0A50  0008               	return
  8664     0A51                     l4267:
  8665     0A51  0839               	movf	___flmul@b,w
  8666     0A52  00F2               	movwf	__Umul8_16@multiplicand
  8667     0A53  083F               	movf	___flmul@a+2,w
  8668     0A54  160A  158A  24E1  120A  158A  	fcall	__Umul8_16
  8669     0A59  0873               	movf	?__Umul8_16+1,w
  8670     0A5A  00D2               	movwf	___flmul@temp+1
  8671     0A5B  0872               	movf	?__Umul8_16,w
  8672     0A5C  00D1               	movwf	___flmul@temp
  8673     0A5D  0851               	movf	___flmul@temp,w
  8674     0A5E  00C1               	movwf	??___flmul
  8675     0A5F  01C2               	clrf	??___flmul+1
  8676     0A60  01C3               	clrf	??___flmul+2
  8677     0A61  01C4               	clrf	??___flmul+3
  8678     0A62  0844               	movf	??___flmul+3,w
  8679     0A63  00CC               	movwf	___flmul@grs+3
  8680     0A64  0843               	movf	??___flmul+2,w
  8681     0A65  00CB               	movwf	___flmul@grs+2
  8682     0A66  0842               	movf	??___flmul+1,w
  8683     0A67  00CA               	movwf	___flmul@grs+1
  8684     0A68  0841               	movf	??___flmul,w
  8685     0A69  00C9               	movwf	___flmul@grs
  8686     0A6A  0852               	movf	___flmul@temp+1,w
  8687     0A6B  00C1               	movwf	??___flmul
  8688     0A6C  01C2               	clrf	??___flmul+1
  8689     0A6D  01C3               	clrf	??___flmul+2
  8690     0A6E  01C4               	clrf	??___flmul+3
  8691     0A6F  0844               	movf	??___flmul+3,w
  8692     0A70  00D0               	movwf	___flmul@prod+3
  8693     0A71  0843               	movf	??___flmul+2,w
  8694     0A72  00CF               	movwf	___flmul@prod+2
  8695     0A73  0842               	movf	??___flmul+1,w
  8696     0A74  00CE               	movwf	___flmul@prod+1
  8697     0A75  0841               	movf	??___flmul,w
  8698     0A76  00CD               	movwf	___flmul@prod
  8699     0A77  083A               	movf	___flmul@b+1,w
  8700     0A78  00F2               	movwf	__Umul8_16@multiplicand
  8701     0A79  083E               	movf	___flmul@a+1,w
  8702     0A7A  160A  158A  24E1  120A  158A  	fcall	__Umul8_16
  8703     0A7F  0873               	movf	?__Umul8_16+1,w
  8704     0A80  00D2               	movwf	___flmul@temp+1
  8705     0A81  0872               	movf	?__Umul8_16,w
  8706     0A82  00D1               	movwf	___flmul@temp
  8707     0A83  0851               	movf	___flmul@temp,w
  8708     0A84  00C1               	movwf	??___flmul
  8709     0A85  01C2               	clrf	??___flmul+1
  8710     0A86  01C3               	clrf	??___flmul+2
  8711     0A87  01C4               	clrf	??___flmul+3
  8712     0A88  0841               	movf	??___flmul,w
  8713     0A89  07C9               	addwf	___flmul@grs,f
  8714     0A8A  0842               	movf	??___flmul+1,w
  8715     0A8B  1103               	clrz
  8716     0A8C  1803               	skipnc
  8717     0A8D  3E01               	addlw	1
  8718     0A8E  1D03               	btfss	3,2
  8719     0A8F  07CA               	addwf	___flmul@grs+1,f
  8720     0A90  0843               	movf	??___flmul+2,w
  8721     0A91  1103               	clrz
  8722     0A92  1803               	skipnc
  8723     0A93  3E01               	addlw	1
  8724     0A94  1D03               	btfss	3,2
  8725     0A95  07CB               	addwf	___flmul@grs+2,f
  8726     0A96  0844               	movf	??___flmul+3,w
  8727     0A97  1103               	clrz
  8728     0A98  1803               	skipnc
  8729     0A99  3E01               	addlw	1
  8730     0A9A  1D03               	btfss	3,2
  8731     0A9B  07CC               	addwf	___flmul@grs+3,f
  8732     0A9C  0852               	movf	___flmul@temp+1,w
  8733     0A9D  00C1               	movwf	??___flmul
  8734     0A9E  01C2               	clrf	??___flmul+1
  8735     0A9F  01C3               	clrf	??___flmul+2
  8736     0AA0  01C4               	clrf	??___flmul+3
  8737     0AA1  0841               	movf	??___flmul,w
  8738     0AA2  07CD               	addwf	___flmul@prod,f
  8739     0AA3  0842               	movf	??___flmul+1,w
  8740     0AA4  1103               	clrz
  8741     0AA5  1803               	skipnc
  8742     0AA6  3E01               	addlw	1
  8743     0AA7  1D03               	btfss	3,2
  8744     0AA8  07CE               	addwf	___flmul@prod+1,f
  8745     0AA9  0843               	movf	??___flmul+2,w
  8746     0AAA  1103               	clrz
  8747     0AAB  1803               	skipnc
  8748     0AAC  3E01               	addlw	1
  8749     0AAD  1D03               	btfss	3,2
  8750     0AAE  07CF               	addwf	___flmul@prod+2,f
  8751     0AAF  0844               	movf	??___flmul+3,w
  8752     0AB0  1103               	clrz
  8753     0AB1  1803               	skipnc
  8754     0AB2  3E01               	addlw	1
  8755     0AB3  1D03               	btfss	3,2
  8756     0AB4  07D0               	addwf	___flmul@prod+3,f
  8757     0AB5  083B               	movf	___flmul@b+2,w
  8758     0AB6  00F2               	movwf	__Umul8_16@multiplicand
  8759     0AB7  083D               	movf	___flmul@a,w
  8760     0AB8  160A  158A  24E1  120A  158A  	fcall	__Umul8_16
  8761     0ABD  0873               	movf	?__Umul8_16+1,w
  8762     0ABE  00D2               	movwf	___flmul@temp+1
  8763     0ABF  0872               	movf	?__Umul8_16,w
  8764     0AC0  00D1               	movwf	___flmul@temp
  8765     0AC1  0851               	movf	___flmul@temp,w
  8766     0AC2  00C1               	movwf	??___flmul
  8767     0AC3  01C2               	clrf	??___flmul+1
  8768     0AC4  01C3               	clrf	??___flmul+2
  8769     0AC5  01C4               	clrf	??___flmul+3
  8770     0AC6  0841               	movf	??___flmul,w
  8771     0AC7  07C9               	addwf	___flmul@grs,f
  8772     0AC8  0842               	movf	??___flmul+1,w
  8773     0AC9  1103               	clrz
  8774     0ACA  1803               	skipnc
  8775     0ACB  3E01               	addlw	1
  8776     0ACC  1D03               	btfss	3,2
  8777     0ACD  07CA               	addwf	___flmul@grs+1,f
  8778     0ACE  0843               	movf	??___flmul+2,w
  8779     0ACF  1103               	clrz
  8780     0AD0  1803               	skipnc
  8781     0AD1  3E01               	addlw	1
  8782     0AD2  1D03               	btfss	3,2
  8783     0AD3  07CB               	addwf	___flmul@grs+2,f
  8784     0AD4  0844               	movf	??___flmul+3,w
  8785     0AD5  1103               	clrz
  8786     0AD6  1803               	skipnc
  8787     0AD7  3E01               	addlw	1
  8788     0AD8  1D03               	btfss	3,2
  8789     0AD9  07CC               	addwf	___flmul@grs+3,f
  8790     0ADA  0852               	movf	___flmul@temp+1,w
  8791     0ADB  00C1               	movwf	??___flmul
  8792     0ADC  01C2               	clrf	??___flmul+1
  8793     0ADD  01C3               	clrf	??___flmul+2
  8794     0ADE  01C4               	clrf	??___flmul+3
  8795     0ADF  0841               	movf	??___flmul,w
  8796     0AE0  07CD               	addwf	___flmul@prod,f
  8797     0AE1  0842               	movf	??___flmul+1,w
  8798     0AE2  1103               	clrz
  8799     0AE3  1803               	skipnc
  8800     0AE4  3E01               	addlw	1
  8801     0AE5  1D03               	btfss	3,2
  8802     0AE6  07CE               	addwf	___flmul@prod+1,f
  8803     0AE7  0843               	movf	??___flmul+2,w
  8804     0AE8  1103               	clrz
  8805     0AE9  1803               	skipnc
  8806     0AEA  3E01               	addlw	1
  8807     0AEB  1D03               	btfss	3,2
  8808     0AEC  07CF               	addwf	___flmul@prod+2,f
  8809     0AED  0844               	movf	??___flmul+3,w
  8810     0AEE  1103               	clrz
  8811     0AEF  1803               	skipnc
  8812     0AF0  3E01               	addlw	1
  8813     0AF1  1D03               	btfss	3,2
  8814     0AF2  07D0               	addwf	___flmul@prod+3,f
  8815     0AF3  3008               	movlw	8
  8816     0AF4  00C1               	movwf	??___flmul
  8817     0AF5                     u6995:
  8818     0AF5  1003               	clrc
  8819     0AF6  0DC9               	rlf	___flmul@grs,f
  8820     0AF7  0DCA               	rlf	___flmul@grs+1,f
  8821     0AF8  0DCB               	rlf	___flmul@grs+2,f
  8822     0AF9  0DCC               	rlf	___flmul@grs+3,f
  8823     0AFA  0BC1               	decfsz	??___flmul,f
  8824     0AFB  2AF5               	goto	u6995
  8825     0AFC  083A               	movf	___flmul@b+1,w
  8826     0AFD  00F2               	movwf	__Umul8_16@multiplicand
  8827     0AFE  083D               	movf	___flmul@a,w
  8828     0AFF  160A  158A  24E1  120A  158A  	fcall	__Umul8_16
  8829     0B04  0873               	movf	?__Umul8_16+1,w
  8830     0B05  00D2               	movwf	___flmul@temp+1
  8831     0B06  0872               	movf	?__Umul8_16,w
  8832     0B07  00D1               	movwf	___flmul@temp
  8833     0B08  0851               	movf	___flmul@temp,w
  8834     0B09  00C1               	movwf	??___flmul
  8835     0B0A  0852               	movf	___flmul@temp+1,w
  8836     0B0B  00C2               	movwf	??___flmul+1
  8837     0B0C  01C3               	clrf	??___flmul+2
  8838     0B0D  01C4               	clrf	??___flmul+3
  8839     0B0E  0841               	movf	??___flmul,w
  8840     0B0F  07C9               	addwf	___flmul@grs,f
  8841     0B10  0842               	movf	??___flmul+1,w
  8842     0B11  1103               	clrz
  8843     0B12  1803               	skipnc
  8844     0B13  3E01               	addlw	1
  8845     0B14  1D03               	btfss	3,2
  8846     0B15  07CA               	addwf	___flmul@grs+1,f
  8847     0B16  0843               	movf	??___flmul+2,w
  8848     0B17  1103               	clrz
  8849     0B18  1803               	skipnc
  8850     0B19  3E01               	addlw	1
  8851     0B1A  1D03               	btfss	3,2
  8852     0B1B  07CB               	addwf	___flmul@grs+2,f
  8853     0B1C  0844               	movf	??___flmul+3,w
  8854     0B1D  1103               	clrz
  8855     0B1E  1803               	skipnc
  8856     0B1F  3E01               	addlw	1
  8857     0B20  1D03               	btfss	3,2
  8858     0B21  07CC               	addwf	___flmul@grs+3,f
  8859     0B22  0839               	movf	___flmul@b,w
  8860     0B23  00F2               	movwf	__Umul8_16@multiplicand
  8861     0B24  083E               	movf	___flmul@a+1,w
  8862     0B25  160A  158A  24E1  120A  158A  	fcall	__Umul8_16
  8863     0B2A  0873               	movf	?__Umul8_16+1,w
  8864     0B2B  00D2               	movwf	___flmul@temp+1
  8865     0B2C  0872               	movf	?__Umul8_16,w
  8866     0B2D  00D1               	movwf	___flmul@temp
  8867     0B2E  0851               	movf	___flmul@temp,w
  8868     0B2F  00C1               	movwf	??___flmul
  8869     0B30  0852               	movf	___flmul@temp+1,w
  8870     0B31  00C2               	movwf	??___flmul+1
  8871     0B32  01C3               	clrf	??___flmul+2
  8872     0B33  01C4               	clrf	??___flmul+3
  8873     0B34  0841               	movf	??___flmul,w
  8874     0B35  07C9               	addwf	___flmul@grs,f
  8875     0B36  0842               	movf	??___flmul+1,w
  8876     0B37  1103               	clrz
  8877     0B38  1803               	skipnc
  8878     0B39  3E01               	addlw	1
  8879     0B3A  1D03               	btfss	3,2
  8880     0B3B  07CA               	addwf	___flmul@grs+1,f
  8881     0B3C  0843               	movf	??___flmul+2,w
  8882     0B3D  1103               	clrz
  8883     0B3E  1803               	skipnc
  8884     0B3F  3E01               	addlw	1
  8885     0B40  1D03               	btfss	3,2
  8886     0B41  07CB               	addwf	___flmul@grs+2,f
  8887     0B42  0844               	movf	??___flmul+3,w
  8888     0B43  1103               	clrz
  8889     0B44  1803               	skipnc
  8890     0B45  3E01               	addlw	1
  8891     0B46  1D03               	btfss	3,2
  8892     0B47  07CC               	addwf	___flmul@grs+3,f
  8893     0B48  3008               	movlw	8
  8894     0B49  00C1               	movwf	??___flmul
  8895     0B4A                     u7025:
  8896     0B4A  1003               	clrc
  8897     0B4B  0DC9               	rlf	___flmul@grs,f
  8898     0B4C  0DCA               	rlf	___flmul@grs+1,f
  8899     0B4D  0DCB               	rlf	___flmul@grs+2,f
  8900     0B4E  0DCC               	rlf	___flmul@grs+3,f
  8901     0B4F  0BC1               	decfsz	??___flmul,f
  8902     0B50  2B4A               	goto	u7025
  8903     0B51  0839               	movf	___flmul@b,w
  8904     0B52  00F2               	movwf	__Umul8_16@multiplicand
  8905     0B53  083D               	movf	___flmul@a,w
  8906     0B54  160A  158A  24E1  120A  158A  	fcall	__Umul8_16
  8907     0B59  0873               	movf	?__Umul8_16+1,w
  8908     0B5A  00D2               	movwf	___flmul@temp+1
  8909     0B5B  0872               	movf	?__Umul8_16,w
  8910     0B5C  00D1               	movwf	___flmul@temp
  8911     0B5D  0851               	movf	___flmul@temp,w
  8912     0B5E  00C1               	movwf	??___flmul
  8913     0B5F  0852               	movf	___flmul@temp+1,w
  8914     0B60  00C2               	movwf	??___flmul+1
  8915     0B61  01C3               	clrf	??___flmul+2
  8916     0B62  01C4               	clrf	??___flmul+3
  8917     0B63  0841               	movf	??___flmul,w
  8918     0B64  07C9               	addwf	___flmul@grs,f
  8919     0B65  0842               	movf	??___flmul+1,w
  8920     0B66  1103               	clrz
  8921     0B67  1803               	skipnc
  8922     0B68  3E01               	addlw	1
  8923     0B69  1D03               	btfss	3,2
  8924     0B6A  07CA               	addwf	___flmul@grs+1,f
  8925     0B6B  0843               	movf	??___flmul+2,w
  8926     0B6C  1103               	clrz
  8927     0B6D  1803               	skipnc
  8928     0B6E  3E01               	addlw	1
  8929     0B6F  1D03               	btfss	3,2
  8930     0B70  07CB               	addwf	___flmul@grs+2,f
  8931     0B71  0844               	movf	??___flmul+3,w
  8932     0B72  1103               	clrz
  8933     0B73  1803               	skipnc
  8934     0B74  3E01               	addlw	1
  8935     0B75  1D03               	btfss	3,2
  8936     0B76  07CC               	addwf	___flmul@grs+3,f
  8937     0B77  083A               	movf	___flmul@b+1,w
  8938     0B78  00F2               	movwf	__Umul8_16@multiplicand
  8939     0B79  083F               	movf	___flmul@a+2,w
  8940     0B7A  160A  158A  24E1  120A  158A  	fcall	__Umul8_16
  8941     0B7F  0873               	movf	?__Umul8_16+1,w
  8942     0B80  00D2               	movwf	___flmul@temp+1
  8943     0B81  0872               	movf	?__Umul8_16,w
  8944     0B82  00D1               	movwf	___flmul@temp
  8945     0B83  0851               	movf	___flmul@temp,w
  8946     0B84  00C1               	movwf	??___flmul
  8947     0B85  0852               	movf	___flmul@temp+1,w
  8948     0B86  00C2               	movwf	??___flmul+1
  8949     0B87  01C3               	clrf	??___flmul+2
  8950     0B88  01C4               	clrf	??___flmul+3
  8951     0B89  0841               	movf	??___flmul,w
  8952     0B8A  07CD               	addwf	___flmul@prod,f
  8953     0B8B  0842               	movf	??___flmul+1,w
  8954     0B8C  1103               	clrz
  8955     0B8D  1803               	skipnc
  8956     0B8E  3E01               	addlw	1
  8957     0B8F  1D03               	btfss	3,2
  8958     0B90  07CE               	addwf	___flmul@prod+1,f
  8959     0B91  0843               	movf	??___flmul+2,w
  8960     0B92  1103               	clrz
  8961     0B93  1803               	skipnc
  8962     0B94  3E01               	addlw	1
  8963     0B95  1D03               	btfss	3,2
  8964     0B96  07CF               	addwf	___flmul@prod+2,f
  8965     0B97  0844               	movf	??___flmul+3,w
  8966     0B98  1103               	clrz
  8967     0B99  1803               	skipnc
  8968     0B9A  3E01               	addlw	1
  8969     0B9B  1D03               	btfss	3,2
  8970     0B9C  07D0               	addwf	___flmul@prod+3,f
  8971     0B9D  083B               	movf	___flmul@b+2,w
  8972     0B9E  00F2               	movwf	__Umul8_16@multiplicand
  8973     0B9F  083E               	movf	___flmul@a+1,w
  8974     0BA0  160A  158A  24E1  120A  158A  	fcall	__Umul8_16
  8975     0BA5  0873               	movf	?__Umul8_16+1,w
  8976     0BA6  00D2               	movwf	___flmul@temp+1
  8977     0BA7  0872               	movf	?__Umul8_16,w
  8978     0BA8  00D1               	movwf	___flmul@temp
  8979     0BA9  0851               	movf	___flmul@temp,w
  8980     0BAA  00C1               	movwf	??___flmul
  8981     0BAB  0852               	movf	___flmul@temp+1,w
  8982     0BAC  00C2               	movwf	??___flmul+1
  8983     0BAD  01C3               	clrf	??___flmul+2
  8984     0BAE  01C4               	clrf	??___flmul+3
  8985     0BAF  0841               	movf	??___flmul,w
  8986     0BB0  07CD               	addwf	___flmul@prod,f
  8987     0BB1  0842               	movf	??___flmul+1,w
  8988     0BB2  1103               	clrz
  8989     0BB3  1803               	skipnc
  8990     0BB4  3E01               	addlw	1
  8991     0BB5  1D03               	btfss	3,2
  8992     0BB6  07CE               	addwf	___flmul@prod+1,f
  8993     0BB7  0843               	movf	??___flmul+2,w
  8994     0BB8  1103               	clrz
  8995     0BB9  1803               	skipnc
  8996     0BBA  3E01               	addlw	1
  8997     0BBB  1D03               	btfss	3,2
  8998     0BBC  07CF               	addwf	___flmul@prod+2,f
  8999     0BBD  0844               	movf	??___flmul+3,w
  9000     0BBE  1103               	clrz
  9001     0BBF  1803               	skipnc
  9002     0BC0  3E01               	addlw	1
  9003     0BC1  1D03               	btfss	3,2
  9004     0BC2  07D0               	addwf	___flmul@prod+3,f
  9005     0BC3  083B               	movf	___flmul@b+2,w
  9006     0BC4  00F2               	movwf	__Umul8_16@multiplicand
  9007     0BC5  083F               	movf	___flmul@a+2,w
  9008     0BC6  160A  158A  24E1  120A  158A  	fcall	__Umul8_16
  9009     0BCB  0873               	movf	?__Umul8_16+1,w
  9010     0BCC  00D2               	movwf	___flmul@temp+1
  9011     0BCD  0872               	movf	?__Umul8_16,w
  9012     0BCE  00D1               	movwf	___flmul@temp
  9013     0BCF  0851               	movf	___flmul@temp,w
  9014     0BD0  00C1               	movwf	??___flmul
  9015     0BD1  0852               	movf	___flmul@temp+1,w
  9016     0BD2  00C2               	movwf	??___flmul+1
  9017     0BD3  01C3               	clrf	??___flmul+2
  9018     0BD4  01C4               	clrf	??___flmul+3
  9019     0BD5  3008               	movlw	8
  9020     0BD6                     u7065:
  9021     0BD6  1003               	clrc
  9022     0BD7  0DC1               	rlf	??___flmul,f
  9023     0BD8  0DC2               	rlf	??___flmul+1,f
  9024     0BD9  0DC3               	rlf	??___flmul+2,f
  9025     0BDA  0DC4               	rlf	??___flmul+3,f
  9026     0BDB  3EFF               	addlw	-1
  9027     0BDC  1D03               	skipz
  9028     0BDD  2BD6               	goto	u7065
  9029     0BDE  0841               	movf	??___flmul,w
  9030     0BDF  07CD               	addwf	___flmul@prod,f
  9031     0BE0  0842               	movf	??___flmul+1,w
  9032     0BE1  1103               	clrz
  9033     0BE2  1803               	skipnc
  9034     0BE3  3E01               	addlw	1
  9035     0BE4  1D03               	btfss	3,2
  9036     0BE5  07CE               	addwf	___flmul@prod+1,f
  9037     0BE6  0843               	movf	??___flmul+2,w
  9038     0BE7  1103               	clrz
  9039     0BE8  1803               	skipnc
  9040     0BE9  3E01               	addlw	1
  9041     0BEA  1D03               	btfss	3,2
  9042     0BEB  07CF               	addwf	___flmul@prod+2,f
  9043     0BEC  0844               	movf	??___flmul+3,w
  9044     0BED  1103               	clrz
  9045     0BEE  1803               	skipnc
  9046     0BEF  3E01               	addlw	1
  9047     0BF0  1D03               	btfss	3,2
  9048     0BF1  07D0               	addwf	___flmul@prod+3,f
  9049     0BF2  084C               	movf	___flmul@grs+3,w
  9050     0BF3  00C1               	movwf	??___flmul
  9051     0BF4  01C2               	clrf	??___flmul+1
  9052     0BF5  01C3               	clrf	??___flmul+2
  9053     0BF6  01C4               	clrf	??___flmul+3
  9054     0BF7  0841               	movf	??___flmul,w
  9055     0BF8  07CD               	addwf	___flmul@prod,f
  9056     0BF9  0842               	movf	??___flmul+1,w
  9057     0BFA  1103               	clrz
  9058     0BFB  1803               	skipnc
  9059     0BFC  3E01               	addlw	1
  9060     0BFD  1D03               	btfss	3,2
  9061     0BFE  07CE               	addwf	___flmul@prod+1,f
  9062     0BFF  0843               	movf	??___flmul+2,w
  9063     0C00  1103               	clrz
  9064     0C01  1803               	skipnc
  9065     0C02  3E01               	addlw	1
  9066     0C03  1D03               	btfss	3,2
  9067     0C04  07CF               	addwf	___flmul@prod+2,f
  9068     0C05  0844               	movf	??___flmul+3,w
  9069     0C06  1103               	clrz
  9070     0C07  1803               	skipnc
  9071     0C08  3E01               	addlw	1
  9072     0C09  1D03               	btfss	3,2
  9073     0C0A  07D0               	addwf	___flmul@prod+3,f
  9074     0C0B  3008               	movlw	8
  9075     0C0C  00C1               	movwf	??___flmul
  9076     0C0D                     u7095:
  9077     0C0D  1003               	clrc
  9078     0C0E  0DC9               	rlf	___flmul@grs,f
  9079     0C0F  0DCA               	rlf	___flmul@grs+1,f
  9080     0C10  0DCB               	rlf	___flmul@grs+2,f
  9081     0C11  0DCC               	rlf	___flmul@grs+3,f
  9082     0C12  0BC1               	decfsz	??___flmul,f
  9083     0C13  2C0D               	goto	u7095
  9084     0C14  0848               	movf	___flmul@bexp,w
  9085     0C15  0747               	addwf	___flmul@aexp,w
  9086     0C16  00C1               	movwf	??___flmul
  9087     0C17  01C2               	clrf	??___flmul+1
  9088     0C18  0DC2               	rlf	??___flmul+1,f
  9089     0C19  0841               	movf	??___flmul,w
  9090     0C1A  3E82               	addlw	130
  9091     0C1B  00D1               	movwf	___flmul@temp
  9092     0C1C  0842               	movf	??___flmul+1,w
  9093     0C1D  1803               	skipnc
  9094     0C1E  3E01               	addlw	1
  9095     0C1F  3EFF               	addlw	255
  9096     0C20  00D2               	movwf	___flmul@temp+1
  9097     0C21                     l4319:
  9098     0C21  1BCF               	btfsc	___flmul@prod+2,7
  9099     0C22  2C3E               	goto	l4321
  9100     0C23  3001               	movlw	1
  9101     0C24  00C1               	movwf	??___flmul
  9102     0C25                     u7105:
  9103     0C25  1003               	clrc
  9104     0C26  0DCD               	rlf	___flmul@prod,f
  9105     0C27  0DCE               	rlf	___flmul@prod+1,f
  9106     0C28  0DCF               	rlf	___flmul@prod+2,f
  9107     0C29  0DD0               	rlf	___flmul@prod+3,f
  9108     0C2A  0BC1               	decfsz	??___flmul,f
  9109     0C2B  2C25               	goto	u7105
  9110     0C2C  1BCC               	btfsc	___flmul@grs+3,7
  9111     0C2D  144D               	bsf	___flmul@prod,0
  9112     0C2E  3001               	movlw	1
  9113     0C2F  00C1               	movwf	??___flmul
  9114     0C30                     u7125:
  9115     0C30  1003               	clrc
  9116     0C31  0DC9               	rlf	___flmul@grs,f
  9117     0C32  0DCA               	rlf	___flmul@grs+1,f
  9118     0C33  0DCB               	rlf	___flmul@grs+2,f
  9119     0C34  0DCC               	rlf	___flmul@grs+3,f
  9120     0C35  0BC1               	decfsz	??___flmul,f
  9121     0C36  2C30               	goto	u7125
  9122     0C37  30FF               	movlw	255
  9123     0C38  07D1               	addwf	___flmul@temp,f
  9124     0C39  1803               	skipnc
  9125     0C3A  0AD2               	incf	___flmul@temp+1,f
  9126     0C3B  30FF               	movlw	255
  9127     0C3C  07D2               	addwf	___flmul@temp+1,f
  9128     0C3D  2C21               	goto	l4319
  9129     0C3E                     l4321:
  9130     0C3E  01C7               	clrf	___flmul@aexp
  9131     0C3F  1FCC               	btfss	___flmul@grs+3,7
  9132     0C40  2C57               	goto	l4331
  9133     0C41  30FF               	movlw	255
  9134     0C42  0549               	andwf	___flmul@grs,w
  9135     0C43  00C1               	movwf	??___flmul
  9136     0C44  30FF               	movlw	255
  9137     0C45  054A               	andwf	___flmul@grs+1,w
  9138     0C46  00C2               	movwf	??___flmul+1
  9139     0C47  30FF               	movlw	255
  9140     0C48  054B               	andwf	___flmul@grs+2,w
  9141     0C49  00C3               	movwf	??___flmul+2
  9142     0C4A  307F               	movlw	127
  9143     0C4B  054C               	andwf	___flmul@grs+3,w
  9144     0C4C  00C4               	movwf	??___flmul+3
  9145     0C4D  0844               	movf	??___flmul+3,w
  9146     0C4E  0443               	iorwf	??___flmul+2,w
  9147     0C4F  0442               	iorwf	??___flmul+1,w
  9148     0C50  0441               	iorwf	??___flmul,w
  9149     0C51  1903               	skipnz
  9150     0C52  184D               	btfsc	___flmul@prod,0
  9151     0C53  2C55               	goto	l4327
  9152     0C54  2C57               	goto	l4331
  9153     0C55                     l4327:
  9154     0C55  01C7               	clrf	___flmul@aexp
  9155     0C56  0AC7               	incf	___flmul@aexp,f
  9156     0C57                     l4331:
  9157     0C57  0847               	movf	___flmul@aexp,w
  9158     0C58  1903               	btfsc	3,2
  9159     0C59  2C89               	goto	l4341
  9160     0C5A  3001               	movlw	1
  9161     0C5B  07CD               	addwf	___flmul@prod,f
  9162     0C5C  3000               	movlw	0
  9163     0C5D  1803               	skipnc
  9164     0C5E  3001               	movlw	1
  9165     0C5F  07CE               	addwf	___flmul@prod+1,f
  9166     0C60  3000               	movlw	0
  9167     0C61  1803               	skipnc
  9168     0C62  3001               	movlw	1
  9169     0C63  07CF               	addwf	___flmul@prod+2,f
  9170     0C64  3000               	movlw	0
  9171     0C65  1803               	skipnc
  9172     0C66  3001               	movlw	1
  9173     0C67  07D0               	addwf	___flmul@prod+3,f
  9174     0C68  1C50               	btfss	___flmul@prod+3,0
  9175     0C69  2C89               	goto	l4341
  9176     0C6A  084D               	movf	___flmul@prod,w
  9177     0C6B  00C1               	movwf	??___flmul
  9178     0C6C  084E               	movf	___flmul@prod+1,w
  9179     0C6D  00C2               	movwf	??___flmul+1
  9180     0C6E  084F               	movf	___flmul@prod+2,w
  9181     0C6F  00C3               	movwf	??___flmul+2
  9182     0C70  0850               	movf	___flmul@prod+3,w
  9183     0C71  00C4               	movwf	??___flmul+3
  9184     0C72  3001               	movlw	1
  9185     0C73  00C5               	movwf	??___flmul+4
  9186     0C74                     u7195:
  9187     0C74  0D44               	rlf	??___flmul+3,w
  9188     0C75  0CC4               	rrf	??___flmul+3,f
  9189     0C76  0CC3               	rrf	??___flmul+2,f
  9190     0C77  0CC2               	rrf	??___flmul+1,f
  9191     0C78  0CC1               	rrf	??___flmul,f
  9192     0C79  0BC5               	decfsz	??___flmul+4,f
  9193     0C7A  2C74               	goto	u7195
  9194     0C7B  0844               	movf	??___flmul+3,w
  9195     0C7C  00D0               	movwf	___flmul@prod+3
  9196     0C7D  0843               	movf	??___flmul+2,w
  9197     0C7E  00CF               	movwf	___flmul@prod+2
  9198     0C7F  0842               	movf	??___flmul+1,w
  9199     0C80  00CE               	movwf	___flmul@prod+1
  9200     0C81  0841               	movf	??___flmul,w
  9201     0C82  00CD               	movwf	___flmul@prod
  9202     0C83  3001               	movlw	1
  9203     0C84  07D1               	addwf	___flmul@temp,f
  9204     0C85  1803               	skipnc
  9205     0C86  0AD2               	incf	___flmul@temp+1,f
  9206     0C87  3000               	movlw	0
  9207     0C88  07D2               	addwf	___flmul@temp+1,f
  9208     0C89                     l4341:
  9209     0C89  0852               	movf	___flmul@temp+1,w
  9210     0C8A  3A80               	xorlw	128
  9211     0C8B  00FF               	movwf	127
  9212     0C8C  3080               	movlw	128
  9213     0C8D  027F               	subwf	127,w
  9214     0C8E  1D03               	skipz
  9215     0C8F  2C92               	goto	u7205
  9216     0C90  30FF               	movlw	255
  9217     0C91  0251               	subwf	___flmul@temp,w
  9218     0C92                     u7205:
  9219     0C92  1C03               	skipc
  9220     0C93  2C9F               	goto	l4345
  9221     0C94  307F               	movlw	127
  9222     0C95  1283               	bcf	3,5	;RP0=0, select bank0
  9223     0C96  1303               	bcf	3,6	;RP1=0, select bank0
  9224     0C97  00D0               	movwf	___flmul@prod+3
  9225     0C98  3080               	movlw	128
  9226     0C99  00CF               	movwf	___flmul@prod+2
  9227     0C9A  3000               	movlw	0
  9228     0C9B  00CE               	movwf	___flmul@prod+1
  9229     0C9C  3000               	movlw	0
  9230     0C9D  00CD               	movwf	___flmul@prod
  9231     0C9E  2CCB               	goto	l4359
  9232     0C9F                     l4345:
  9233     0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  9234     0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  9235     0CA1  0852               	movf	___flmul@temp+1,w
  9236     0CA2  3A80               	xorlw	128
  9237     0CA3  00FF               	movwf	127
  9238     0CA4  3080               	movlw	128
  9239     0CA5  027F               	subwf	127,w
  9240     0CA6  1D03               	skipz
  9241     0CA7  2CAA               	goto	u7215
  9242     0CA8  3001               	movlw	1
  9243     0CA9  0251               	subwf	___flmul@temp,w
  9244     0CAA                     u7215:
  9245     0CAA  1803               	skipnc
  9246     0CAB  2CB8               	goto	l4351
  9247     0CAC  3000               	movlw	0
  9248     0CAD  1283               	bcf	3,5	;RP0=0, select bank0
  9249     0CAE  1303               	bcf	3,6	;RP1=0, select bank0
  9250     0CAF  00D0               	movwf	___flmul@prod+3
  9251     0CB0  3000               	movlw	0
  9252     0CB1  00CF               	movwf	___flmul@prod+2
  9253     0CB2  3000               	movlw	0
  9254     0CB3  00CE               	movwf	___flmul@prod+1
  9255     0CB4  3000               	movlw	0
  9256     0CB5  00CD               	movwf	___flmul@prod
  9257     0CB6  01C6               	clrf	___flmul@sign
  9258     0CB7  2CCB               	goto	l4359
  9259     0CB8                     l4351:
  9260     0CB8  1283               	bcf	3,5	;RP0=0, select bank0
  9261     0CB9  1303               	bcf	3,6	;RP1=0, select bank0
  9262     0CBA  0851               	movf	___flmul@temp,w
  9263     0CBB  00C8               	movwf	___flmul@bexp
  9264     0CBC  30FF               	movlw	255
  9265     0CBD  05CD               	andwf	___flmul@prod,f
  9266     0CBE  30FF               	movlw	255
  9267     0CBF  05CE               	andwf	___flmul@prod+1,f
  9268     0CC0  307F               	movlw	127
  9269     0CC1  05CF               	andwf	___flmul@prod+2,f
  9270     0CC2  3000               	movlw	0
  9271     0CC3  05D0               	andwf	___flmul@prod+3,f
  9272     0CC4  1848               	btfsc	___flmul@bexp,0
  9273     0CC5  17CF               	bsf	___flmul@prod+2,7
  9274     0CC6  0848               	movf	___flmul@bexp,w
  9275     0CC7  00C1               	movwf	??___flmul
  9276     0CC8  1003               	clrc
  9277     0CC9  0C41               	rrf	??___flmul,w
  9278     0CCA  00D0               	movwf	___flmul@prod+3
  9279     0CCB                     l4359:
  9280     0CCB  0846               	movf	___flmul@sign,w
  9281     0CCC  00FF               	movwf	127
  9282     0CCD  087F               	movf	127,w
  9283     0CCE  04D0               	iorwf	___flmul@prod+3,f
  9284     0CCF  0850               	movf	___flmul@prod+3,w
  9285     0CD0  00BC               	movwf	?___flmul+3
  9286     0CD1  084F               	movf	___flmul@prod+2,w
  9287     0CD2  00BB               	movwf	?___flmul+2
  9288     0CD3  084E               	movf	___flmul@prod+1,w
  9289     0CD4  00BA               	movwf	?___flmul+1
  9290     0CD5  084D               	movf	___flmul@prod,w
  9291     0CD6  00B9               	movwf	?___flmul
  9292     0CD7  0008               	return
  9293     0CD8                     __end_of___flmul:
  9294                           
  9295                           	psect	text34
  9296     1CE1                     __ptext34:	
  9297 ;; *************** function __Umul8_16 *****************
  9298 ;; Defined at:
  9299 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8_16.c"
  9300 ;; Parameters:    Size  Location     Type
  9301 ;;  multiplier      1    wreg     unsigned char 
  9302 ;;  multiplicand    1    2[COMMON] unsigned char 
  9303 ;; Auto vars:     Size  Location     Type
  9304 ;;  multiplier      1    4[BANK0 ] unsigned char 
  9305 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  9306 ;;  product         2    0[BANK0 ] unsigned int 
  9307 ;; Return value:  Size  Location     Type
  9308 ;;                  2    2[COMMON] unsigned int 
  9309 ;; Registers used:
  9310 ;;		wreg, status,2, status,0
  9311 ;; Tracked objects:
  9312 ;;		On entry : 300/0
  9313 ;;		On exit  : 300/0
  9314 ;;		Unchanged: 0/0
  9315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9316 ;;      Params:         2       0       0       0       0
  9317 ;;      Locals:         0       5       0       0       0
  9318 ;;      Temps:          2       0       0       0       0
  9319 ;;      Totals:         4       5       0       0       0
  9320 ;;Total ram usage:        9 bytes
  9321 ;; Hardware stack levels used: 1
  9322 ;; Hardware stack levels required when called: 1
  9323 ;; This function calls:
  9324 ;;		Nothing
  9325 ;; This function is called by:
  9326 ;;		___flmul
  9327 ;; This function uses a non-reentrant model
  9328 ;;
  9329                           
  9330     1CE1                     __Umul8_16:	
  9331                           ;psect for function __Umul8_16
  9332                           
  9333                           
  9334                           ;incstack = 0
  9335                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9336                           ;__Umul8_16@multiplier stored from wreg
  9337     1CE1  00A4               	movwf	__Umul8_16@multiplier
  9338     1CE2  01A0               	clrf	__Umul8_16@product
  9339     1CE3  01A1               	clrf	__Umul8_16@product+1
  9340     1CE4  0872               	movf	__Umul8_16@multiplicand,w
  9341     1CE5  00F4               	movwf	??__Umul8_16
  9342     1CE6  01F5               	clrf	??__Umul8_16+1
  9343     1CE7  0874               	movf	??__Umul8_16,w
  9344     1CE8  00A2               	movwf	__Umul8_16@word_mpld
  9345     1CE9  0875               	movf	??__Umul8_16+1,w
  9346     1CEA  00A3               	movwf	__Umul8_16@word_mpld+1
  9347     1CEB                     l3881:
  9348     1CEB  1C24               	btfss	__Umul8_16@multiplier,0
  9349     1CEC  2CF3               	goto	l850
  9350     1CED  0822               	movf	__Umul8_16@word_mpld,w
  9351     1CEE  07A0               	addwf	__Umul8_16@product,f
  9352     1CEF  1803               	skipnc
  9353     1CF0  0AA1               	incf	__Umul8_16@product+1,f
  9354     1CF1  0823               	movf	__Umul8_16@word_mpld+1,w
  9355     1CF2  07A1               	addwf	__Umul8_16@product+1,f
  9356     1CF3                     l850:
  9357     1CF3  3001               	movlw	1
  9358     1CF4                     u6135:
  9359     1CF4  1003               	clrc
  9360     1CF5  0DA2               	rlf	__Umul8_16@word_mpld,f
  9361     1CF6  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  9362     1CF7  3EFF               	addlw	-1
  9363     1CF8  1D03               	skipz
  9364     1CF9  2CF4               	goto	u6135
  9365     1CFA  1003               	clrc
  9366     1CFB  0CA4               	rrf	__Umul8_16@multiplier,f
  9367     1CFC  0824               	movf	__Umul8_16@multiplier,w
  9368     1CFD  1D03               	btfss	3,2
  9369     1CFE  2CEB               	goto	l3881
  9370     1CFF  0821               	movf	__Umul8_16@product+1,w
  9371     1D00  00F3               	movwf	?__Umul8_16+1
  9372     1D01  0820               	movf	__Umul8_16@product,w
  9373     1D02  00F2               	movwf	?__Umul8_16
  9374     1D03  0008               	return
  9375     1D04                     __end_of__Umul8_16:
  9376                           
  9377                           	psect	text35
  9378     065E                     __ptext35:	
  9379 ;; *************** function ___fldiv *****************
  9380 ;; Defined at:
  9381 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcdiv.c"
  9382 ;; Parameters:    Size  Location     Type
  9383 ;;  a               4   51[BANK0 ] unsigned int 
  9384 ;;  b               4   55[BANK0 ] unsigned int 
  9385 ;; Auto vars:     Size  Location     Type
  9386 ;;  grs             4   71[BANK0 ] unsigned long 
  9387 ;;  rem             4   64[BANK0 ] unsigned long 
  9388 ;;  new_exp         2   69[BANK0 ] int 
  9389 ;;  aexp            1   76[BANK0 ] unsigned char 
  9390 ;;  bexp            1   75[BANK0 ] unsigned char 
  9391 ;;  sign            1   68[BANK0 ] unsigned char 
  9392 ;; Return value:  Size  Location     Type
  9393 ;;                  4   51[BANK0 ] unsigned char 
  9394 ;; Registers used:
  9395 ;;		wreg, status,2, status,0, btemp+1
  9396 ;; Tracked objects:
  9397 ;;		On entry : 300/0
  9398 ;;		On exit  : 300/0
  9399 ;;		Unchanged: 0/0
  9400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9401 ;;      Params:         0       8       0       0       0
  9402 ;;      Locals:         0      13       0       0       0
  9403 ;;      Temps:          0       5       0       0       0
  9404 ;;      Totals:         0      26       0       0       0
  9405 ;;Total ram usage:       26 bytes
  9406 ;; Hardware stack levels used: 1
  9407 ;; Hardware stack levels required when called: 1
  9408 ;; This function calls:
  9409 ;;		Nothing
  9410 ;; This function is called by:
  9411 ;;		_LM35
  9412 ;; This function uses a non-reentrant model
  9413 ;;
  9414                           
  9415     065E                     ___fldiv:	
  9416                           ;psect for function ___fldiv
  9417                           
  9418                           
  9419                           ;incstack = 0
  9420                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  9421     065E  085A               	movf	___fldiv@b+3,w
  9422     065F  3980               	andlw	128
  9423     0660  00E4               	movwf	___fldiv@sign
  9424     0661  085A               	movf	___fldiv@b+3,w
  9425     0662  00DB               	movwf	??___fldiv
  9426     0663  075B               	addwf	??___fldiv,w
  9427     0664  00EB               	movwf	___fldiv@bexp
  9428     0665  1BD9               	btfsc	___fldiv@b+2,7
  9429     0666  146B               	bsf	___fldiv@bexp,0
  9430     0667  086B               	movf	___fldiv@bexp,w
  9431     0668  1903               	btfsc	3,2
  9432     0669  2E78               	goto	l4709
  9433     066A  0A6B               	incf	___fldiv@bexp,w
  9434     066B  1D03               	btfss	3,2
  9435     066C  2E75               	goto	l4705
  9436     066D  3000               	movlw	0
  9437     066E  00DA               	movwf	___fldiv@b+3
  9438     066F  3000               	movlw	0
  9439     0670  00D9               	movwf	___fldiv@b+2
  9440     0671  3000               	movlw	0
  9441     0672  00D8               	movwf	___fldiv@b+1
  9442     0673  3000               	movlw	0
  9443     0674  00D7               	movwf	___fldiv@b
  9444     0675                     l4705:
  9445     0675  17D9               	bsf	___fldiv@b+2,7
  9446     0676  01DA               	clrf	___fldiv@b+3
  9447     0677  2E80               	goto	l4711
  9448     0678                     l4709:
  9449     0678  3000               	movlw	0
  9450     0679  00DA               	movwf	___fldiv@b+3
  9451     067A  3000               	movlw	0
  9452     067B  00D9               	movwf	___fldiv@b+2
  9453     067C  3000               	movlw	0
  9454     067D  00D8               	movwf	___fldiv@b+1
  9455     067E  3000               	movlw	0
  9456     067F  00D7               	movwf	___fldiv@b
  9457     0680                     l4711:
  9458     0680  0856               	movf	___fldiv@a+3,w
  9459     0681  3980               	andlw	128
  9460     0682  00FF               	movwf	127
  9461     0683  087F               	movf	127,w
  9462     0684  06E4               	xorwf	___fldiv@sign,f
  9463     0685  0856               	movf	___fldiv@a+3,w
  9464     0686  00DB               	movwf	??___fldiv
  9465     0687  075B               	addwf	??___fldiv,w
  9466     0688  00EC               	movwf	___fldiv@aexp
  9467     0689  1BD5               	btfsc	___fldiv@a+2,7
  9468     068A  146C               	bsf	___fldiv@aexp,0
  9469     068B  086C               	movf	___fldiv@aexp,w
  9470     068C  1903               	btfsc	3,2
  9471     068D  2E9C               	goto	l4729
  9472     068E  0A6C               	incf	___fldiv@aexp,w
  9473     068F  1D03               	btfss	3,2
  9474     0690  2E99               	goto	l4725
  9475     0691  3000               	movlw	0
  9476     0692  00D6               	movwf	___fldiv@a+3
  9477     0693  3000               	movlw	0
  9478     0694  00D5               	movwf	___fldiv@a+2
  9479     0695  3000               	movlw	0
  9480     0696  00D4               	movwf	___fldiv@a+1
  9481     0697  3000               	movlw	0
  9482     0698  00D3               	movwf	___fldiv@a
  9483     0699                     l4725:
  9484     0699  17D5               	bsf	___fldiv@a+2,7
  9485     069A  01D6               	clrf	___fldiv@a+3
  9486     069B  2EA4               	goto	l791
  9487     069C                     l4729:
  9488     069C  3000               	movlw	0
  9489     069D  00D6               	movwf	___fldiv@a+3
  9490     069E  3000               	movlw	0
  9491     069F  00D5               	movwf	___fldiv@a+2
  9492     06A0  3000               	movlw	0
  9493     06A1  00D4               	movwf	___fldiv@a+1
  9494     06A2  3000               	movlw	0
  9495     06A3  00D3               	movwf	___fldiv@a
  9496     06A4                     l791:
  9497     06A4  0856               	movf	___fldiv@a+3,w
  9498     06A5  0455               	iorwf	___fldiv@a+2,w
  9499     06A6  0454               	iorwf	___fldiv@a+1,w
  9500     06A7  0453               	iorwf	___fldiv@a,w
  9501     06A8  1D03               	skipz
  9502     06A9  2EC3               	goto	l4739
  9503     06AA  3000               	movlw	0
  9504     06AB  00DA               	movwf	___fldiv@b+3
  9505     06AC  3000               	movlw	0
  9506     06AD  00D9               	movwf	___fldiv@b+2
  9507     06AE  3000               	movlw	0
  9508     06AF  00D8               	movwf	___fldiv@b+1
  9509     06B0  3000               	movlw	0
  9510     06B1  00D7               	movwf	___fldiv@b
  9511     06B2  3080               	movlw	128
  9512     06B3  04D9               	iorwf	___fldiv@b+2,f
  9513     06B4  307F               	movlw	127
  9514     06B5  04DA               	iorwf	___fldiv@b+3,f
  9515     06B6                     l4733:
  9516     06B6  0864               	movf	___fldiv@sign,w
  9517     06B7  00FF               	movwf	127
  9518     06B8  087F               	movf	127,w
  9519     06B9  04DA               	iorwf	___fldiv@b+3,f
  9520     06BA  085A               	movf	___fldiv@b+3,w
  9521     06BB  00D6               	movwf	?___fldiv+3
  9522     06BC  0859               	movf	___fldiv@b+2,w
  9523     06BD  00D5               	movwf	?___fldiv+2
  9524     06BE  0858               	movf	___fldiv@b+1,w
  9525     06BF  00D4               	movwf	?___fldiv+1
  9526     06C0  0857               	movf	___fldiv@b,w
  9527     06C1  00D3               	movwf	?___fldiv
  9528     06C2  0008               	return
  9529     06C3                     l4739:
  9530     06C3  086B               	movf	___fldiv@bexp,w
  9531     06C4  1D03               	btfss	3,2
  9532     06C5  2ECF               	goto	l4745
  9533     06C6  3000               	movlw	0
  9534     06C7  00D6               	movwf	?___fldiv+3
  9535     06C8  3000               	movlw	0
  9536     06C9  00D5               	movwf	?___fldiv+2
  9537     06CA  3000               	movlw	0
  9538     06CB  00D4               	movwf	?___fldiv+1
  9539     06CC  3000               	movlw	0
  9540     06CD  00D3               	movwf	?___fldiv
  9541     06CE  0008               	return
  9542     06CF                     l4745:
  9543     06CF  086B               	movf	___fldiv@bexp,w
  9544     06D0  00DB               	movwf	??___fldiv
  9545     06D1  01DC               	clrf	??___fldiv+1
  9546     06D2  085C               	movf	??___fldiv+1,w
  9547     06D3  00DE               	movwf	??___fldiv+3
  9548     06D4  086C               	movf	___fldiv@aexp,w
  9549     06D5  025B               	subwf	??___fldiv,w
  9550     06D6  00DD               	movwf	??___fldiv+2
  9551     06D7  1C03               	skipc
  9552     06D8  03DE               	decf	??___fldiv+3,f
  9553     06D9  085D               	movf	??___fldiv+2,w
  9554     06DA  3E7F               	addlw	127
  9555     06DB  00E5               	movwf	___fldiv@new_exp
  9556     06DC  085E               	movf	??___fldiv+3,w
  9557     06DD  1803               	skipnc
  9558     06DE  3E01               	addlw	1
  9559     06DF  3E00               	addlw	0
  9560     06E0  00E6               	movwf	___fldiv@new_exp+1
  9561     06E1  085A               	movf	___fldiv@b+3,w
  9562     06E2  00E3               	movwf	___fldiv@rem+3
  9563     06E3  0859               	movf	___fldiv@b+2,w
  9564     06E4  00E2               	movwf	___fldiv@rem+2
  9565     06E5  0858               	movf	___fldiv@b+1,w
  9566     06E6  00E1               	movwf	___fldiv@rem+1
  9567     06E7  0857               	movf	___fldiv@b,w
  9568     06E8  00E0               	movwf	___fldiv@rem
  9569     06E9  3000               	movlw	0
  9570     06EA  00DA               	movwf	___fldiv@b+3
  9571     06EB  3000               	movlw	0
  9572     06EC  00D9               	movwf	___fldiv@b+2
  9573     06ED  3000               	movlw	0
  9574     06EE  00D8               	movwf	___fldiv@b+1
  9575     06EF  3000               	movlw	0
  9576     06F0  00D7               	movwf	___fldiv@b
  9577     06F1  3000               	movlw	0
  9578     06F2  00EA               	movwf	___fldiv@grs+3
  9579     06F3  3000               	movlw	0
  9580     06F4  00E9               	movwf	___fldiv@grs+2
  9581     06F5  3000               	movlw	0
  9582     06F6  00E8               	movwf	___fldiv@grs+1
  9583     06F7  3000               	movlw	0
  9584     06F8  00E7               	movwf	___fldiv@grs
  9585     06F9  01EC               	clrf	___fldiv@aexp
  9586     06FA                     l4773:
  9587     06FA  301A               	movlw	26
  9588     06FB  026C               	subwf	___fldiv@aexp,w
  9589     06FC  1803               	btfsc	3,0
  9590     06FD  2F42               	goto	l4775
  9591     06FE  086C               	movf	___fldiv@aexp,w
  9592     06FF  1903               	btfsc	3,2
  9593     0700  2F1E               	goto	l4765
  9594     0701  3001               	movlw	1
  9595     0702  00DB               	movwf	??___fldiv
  9596     0703                     u8245:
  9597     0703  1003               	clrc
  9598     0704  0DE0               	rlf	___fldiv@rem,f
  9599     0705  0DE1               	rlf	___fldiv@rem+1,f
  9600     0706  0DE2               	rlf	___fldiv@rem+2,f
  9601     0707  0DE3               	rlf	___fldiv@rem+3,f
  9602     0708  0BDB               	decfsz	??___fldiv,f
  9603     0709  2F03               	goto	u8245
  9604     070A  3001               	movlw	1
  9605     070B  00DB               	movwf	??___fldiv
  9606     070C                     u8255:
  9607     070C  1003               	clrc
  9608     070D  0DD7               	rlf	___fldiv@b,f
  9609     070E  0DD8               	rlf	___fldiv@b+1,f
  9610     070F  0DD9               	rlf	___fldiv@b+2,f
  9611     0710  0DDA               	rlf	___fldiv@b+3,f
  9612     0711  0BDB               	decfsz	??___fldiv,f
  9613     0712  2F0C               	goto	u8255
  9614     0713  1BEA               	btfsc	___fldiv@grs+3,7
  9615     0714  1457               	bsf	___fldiv@b,0
  9616     0715  3001               	movlw	1
  9617     0716  00DB               	movwf	??___fldiv
  9618     0717                     u8275:
  9619     0717  1003               	clrc
  9620     0718  0DE7               	rlf	___fldiv@grs,f
  9621     0719  0DE8               	rlf	___fldiv@grs+1,f
  9622     071A  0DE9               	rlf	___fldiv@grs+2,f
  9623     071B  0DEA               	rlf	___fldiv@grs+3,f
  9624     071C  0BDB               	decfsz	??___fldiv,f
  9625     071D  2F17               	goto	u8275
  9626     071E                     l4765:
  9627     071E  0856               	movf	___fldiv@a+3,w
  9628     071F  0263               	subwf	___fldiv@rem+3,w
  9629     0720  1D03               	skipz
  9630     0721  2F2C               	goto	u8285
  9631     0722  0855               	movf	___fldiv@a+2,w
  9632     0723  0262               	subwf	___fldiv@rem+2,w
  9633     0724  1D03               	skipz
  9634     0725  2F2C               	goto	u8285
  9635     0726  0854               	movf	___fldiv@a+1,w
  9636     0727  0261               	subwf	___fldiv@rem+1,w
  9637     0728  1D03               	skipz
  9638     0729  2F2C               	goto	u8285
  9639     072A  0853               	movf	___fldiv@a,w
  9640     072B  0260               	subwf	___fldiv@rem,w
  9641     072C                     u8285:
  9642     072C  1C03               	skipc
  9643     072D  2F3D               	goto	l4771
  9644     072E  176A               	bsf	___fldiv@grs+3,6
  9645     072F  0853               	movf	___fldiv@a,w
  9646     0730  02E0               	subwf	___fldiv@rem,f
  9647     0731  0854               	movf	___fldiv@a+1,w
  9648     0732  1C03               	skipc
  9649     0733  0F54               	incfsz	___fldiv@a+1,w
  9650     0734  02E1               	subwf	___fldiv@rem+1,f
  9651     0735  0855               	movf	___fldiv@a+2,w
  9652     0736  1C03               	skipc
  9653     0737  0F55               	incfsz	___fldiv@a+2,w
  9654     0738  02E2               	subwf	___fldiv@rem+2,f
  9655     0739  0856               	movf	___fldiv@a+3,w
  9656     073A  1C03               	skipc
  9657     073B  0F56               	incfsz	___fldiv@a+3,w
  9658     073C  02E3               	subwf	___fldiv@rem+3,f
  9659     073D                     l4771:
  9660     073D  3001               	movlw	1
  9661     073E  00FF               	movwf	127
  9662     073F  087F               	movf	127,w
  9663     0740  07EC               	addwf	___fldiv@aexp,f
  9664     0741  2EFA               	goto	l4773
  9665     0742                     l4775:
  9666     0742  0863               	movf	___fldiv@rem+3,w
  9667     0743  0462               	iorwf	___fldiv@rem+2,w
  9668     0744  0461               	iorwf	___fldiv@rem+1,w
  9669     0745  0460               	iorwf	___fldiv@rem,w
  9670     0746  1D03               	btfss	3,2
  9671     0747  1467               	bsf	___fldiv@grs,0
  9672     0748                     l4789:
  9673     0748  1BD9               	btfsc	___fldiv@b+2,7
  9674     0749  2F65               	goto	l4791
  9675     074A  3001               	movlw	1
  9676     074B  00DB               	movwf	??___fldiv
  9677     074C                     u8315:
  9678     074C  1003               	clrc
  9679     074D  0DD7               	rlf	___fldiv@b,f
  9680     074E  0DD8               	rlf	___fldiv@b+1,f
  9681     074F  0DD9               	rlf	___fldiv@b+2,f
  9682     0750  0DDA               	rlf	___fldiv@b+3,f
  9683     0751  0BDB               	decfsz	??___fldiv,f
  9684     0752  2F4C               	goto	u8315
  9685     0753  1BEA               	btfsc	___fldiv@grs+3,7
  9686     0754  1457               	bsf	___fldiv@b,0
  9687     0755  3001               	movlw	1
  9688     0756  00DB               	movwf	??___fldiv
  9689     0757                     u8335:
  9690     0757  1003               	clrc
  9691     0758  0DE7               	rlf	___fldiv@grs,f
  9692     0759  0DE8               	rlf	___fldiv@grs+1,f
  9693     075A  0DE9               	rlf	___fldiv@grs+2,f
  9694     075B  0DEA               	rlf	___fldiv@grs+3,f
  9695     075C  0BDB               	decfsz	??___fldiv,f
  9696     075D  2F57               	goto	u8335
  9697     075E  30FF               	movlw	255
  9698     075F  07E5               	addwf	___fldiv@new_exp,f
  9699     0760  1803               	skipnc
  9700     0761  0AE6               	incf	___fldiv@new_exp+1,f
  9701     0762  30FF               	movlw	255
  9702     0763  07E6               	addwf	___fldiv@new_exp+1,f
  9703     0764  2F48               	goto	l4789
  9704     0765                     l4791:
  9705     0765  01EC               	clrf	___fldiv@aexp
  9706     0766  1FEA               	btfss	___fldiv@grs+3,7
  9707     0767  2F7E               	goto	l4801
  9708     0768  30FF               	movlw	255
  9709     0769  0567               	andwf	___fldiv@grs,w
  9710     076A  00DB               	movwf	??___fldiv
  9711     076B  30FF               	movlw	255
  9712     076C  0568               	andwf	___fldiv@grs+1,w
  9713     076D  00DC               	movwf	??___fldiv+1
  9714     076E  30FF               	movlw	255
  9715     076F  0569               	andwf	___fldiv@grs+2,w
  9716     0770  00DD               	movwf	??___fldiv+2
  9717     0771  307F               	movlw	127
  9718     0772  056A               	andwf	___fldiv@grs+3,w
  9719     0773  00DE               	movwf	??___fldiv+3
  9720     0774  085E               	movf	??___fldiv+3,w
  9721     0775  045D               	iorwf	??___fldiv+2,w
  9722     0776  045C               	iorwf	??___fldiv+1,w
  9723     0777  045B               	iorwf	??___fldiv,w
  9724     0778  1903               	skipnz
  9725     0779  1857               	btfsc	___fldiv@b,0
  9726     077A  2F7C               	goto	l4797
  9727     077B  2F7E               	goto	l4801
  9728     077C                     l4797:
  9729     077C  01EC               	clrf	___fldiv@aexp
  9730     077D  0AEC               	incf	___fldiv@aexp,f
  9731     077E                     l4801:
  9732     077E  086C               	movf	___fldiv@aexp,w
  9733     077F  1903               	btfsc	3,2
  9734     0780  2FB0               	goto	l4811
  9735     0781  3001               	movlw	1
  9736     0782  07D7               	addwf	___fldiv@b,f
  9737     0783  3000               	movlw	0
  9738     0784  1803               	skipnc
  9739     0785  3001               	movlw	1
  9740     0786  07D8               	addwf	___fldiv@b+1,f
  9741     0787  3000               	movlw	0
  9742     0788  1803               	skipnc
  9743     0789  3001               	movlw	1
  9744     078A  07D9               	addwf	___fldiv@b+2,f
  9745     078B  3000               	movlw	0
  9746     078C  1803               	skipnc
  9747     078D  3001               	movlw	1
  9748     078E  07DA               	addwf	___fldiv@b+3,f
  9749     078F  1C5A               	btfss	___fldiv@b+3,0
  9750     0790  2FB0               	goto	l4811
  9751     0791  0857               	movf	___fldiv@b,w
  9752     0792  00DB               	movwf	??___fldiv
  9753     0793  0858               	movf	___fldiv@b+1,w
  9754     0794  00DC               	movwf	??___fldiv+1
  9755     0795  0859               	movf	___fldiv@b+2,w
  9756     0796  00DD               	movwf	??___fldiv+2
  9757     0797  085A               	movf	___fldiv@b+3,w
  9758     0798  00DE               	movwf	??___fldiv+3
  9759     0799  3001               	movlw	1
  9760     079A  00DF               	movwf	??___fldiv+4
  9761     079B                     u8405:
  9762     079B  0D5E               	rlf	??___fldiv+3,w
  9763     079C  0CDE               	rrf	??___fldiv+3,f
  9764     079D  0CDD               	rrf	??___fldiv+2,f
  9765     079E  0CDC               	rrf	??___fldiv+1,f
  9766     079F  0CDB               	rrf	??___fldiv,f
  9767     07A0  0BDF               	decfsz	??___fldiv+4,f
  9768     07A1  2F9B               	goto	u8405
  9769     07A2  085E               	movf	??___fldiv+3,w
  9770     07A3  00DA               	movwf	___fldiv@b+3
  9771     07A4  085D               	movf	??___fldiv+2,w
  9772     07A5  00D9               	movwf	___fldiv@b+2
  9773     07A6  085C               	movf	??___fldiv+1,w
  9774     07A7  00D8               	movwf	___fldiv@b+1
  9775     07A8  085B               	movf	??___fldiv,w
  9776     07A9  00D7               	movwf	___fldiv@b
  9777     07AA  3001               	movlw	1
  9778     07AB  07E5               	addwf	___fldiv@new_exp,f
  9779     07AC  1803               	skipnc
  9780     07AD  0AE6               	incf	___fldiv@new_exp+1,f
  9781     07AE  3000               	movlw	0
  9782     07AF  07E6               	addwf	___fldiv@new_exp+1,f
  9783     07B0                     l4811:
  9784     07B0  0866               	movf	___fldiv@new_exp+1,w
  9785     07B1  3A80               	xorlw	128
  9786     07B2  00FF               	movwf	127
  9787     07B3  3080               	movlw	128
  9788     07B4  027F               	subwf	127,w
  9789     07B5  1D03               	skipz
  9790     07B6  2FB9               	goto	u8415
  9791     07B7  30FF               	movlw	255
  9792     07B8  0265               	subwf	___fldiv@new_exp,w
  9793     07B9                     u8415:
  9794     07B9  1C03               	skipc
  9795     07BA  2FC9               	goto	l4815
  9796     07BB  30FF               	movlw	255
  9797     07BC  1283               	bcf	3,5	;RP0=0, select bank0
  9798     07BD  1303               	bcf	3,6	;RP1=0, select bank0
  9799     07BE  00E5               	movwf	___fldiv@new_exp
  9800     07BF  3000               	movlw	0
  9801     07C0  00E6               	movwf	___fldiv@new_exp+1
  9802     07C1  3000               	movlw	0
  9803     07C2  00DA               	movwf	___fldiv@b+3
  9804     07C3  3000               	movlw	0
  9805     07C4  00D9               	movwf	___fldiv@b+2
  9806     07C5  3000               	movlw	0
  9807     07C6  00D8               	movwf	___fldiv@b+1
  9808     07C7  3000               	movlw	0
  9809     07C8  00D7               	movwf	___fldiv@b
  9810     07C9                     l4815:
  9811     07C9  1283               	bcf	3,5	;RP0=0, select bank0
  9812     07CA  1303               	bcf	3,6	;RP1=0, select bank0
  9813     07CB  0866               	movf	___fldiv@new_exp+1,w
  9814     07CC  3A80               	xorlw	128
  9815     07CD  00FF               	movwf	127
  9816     07CE  3080               	movlw	128
  9817     07CF  027F               	subwf	127,w
  9818     07D0  1D03               	skipz
  9819     07D1  2FD4               	goto	u8425
  9820     07D2  3001               	movlw	1
  9821     07D3  0265               	subwf	___fldiv@new_exp,w
  9822     07D4                     u8425:
  9823     07D4  1803               	skipnc
  9824     07D5  2FE3               	goto	l813
  9825     07D6  1283               	bcf	3,5	;RP0=0, select bank0
  9826     07D7  1303               	bcf	3,6	;RP1=0, select bank0
  9827     07D8  01E5               	clrf	___fldiv@new_exp
  9828     07D9  01E6               	clrf	___fldiv@new_exp+1
  9829     07DA  3000               	movlw	0
  9830     07DB  00DA               	movwf	___fldiv@b+3
  9831     07DC  3000               	movlw	0
  9832     07DD  00D9               	movwf	___fldiv@b+2
  9833     07DE  3000               	movlw	0
  9834     07DF  00D8               	movwf	___fldiv@b+1
  9835     07E0  3000               	movlw	0
  9836     07E1  00D7               	movwf	___fldiv@b
  9837     07E2  01E4               	clrf	___fldiv@sign
  9838     07E3                     l813:
  9839     07E3  1283               	bcf	3,5	;RP0=0, select bank0
  9840     07E4  1303               	bcf	3,6	;RP1=0, select bank0
  9841     07E5  0865               	movf	___fldiv@new_exp,w
  9842     07E6  00EB               	movwf	___fldiv@bexp
  9843     07E7  1C6B               	btfss	___fldiv@bexp,0
  9844     07E8  2FEB               	goto	l4827
  9845     07E9  17D9               	bsf	___fldiv@b+2,7
  9846     07EA  2FEF               	goto	l4829
  9847     07EB                     l4827:
  9848     07EB  307F               	movlw	127
  9849     07EC  00FF               	movwf	127
  9850     07ED  087F               	movf	127,w
  9851     07EE  05D9               	andwf	___fldiv@b+2,f
  9852     07EF                     l4829:
  9853     07EF  086B               	movf	___fldiv@bexp,w
  9854     07F0  00DB               	movwf	??___fldiv
  9855     07F1  1003               	clrc
  9856     07F2  0C5B               	rrf	??___fldiv,w
  9857     07F3  00DA               	movwf	___fldiv@b+3
  9858     07F4  2EB6               	goto	l4733
  9859     07F5                     __end_of___fldiv:
  9860                           
  9861                           	psect	text36
  9862     1C37                     __ptext36:	
  9863 ;; *************** function _Timers_ISR *****************
  9864 ;; Defined at:
  9865 ;;		line 196 in file "controle.c"
  9866 ;; Parameters:    Size  Location     Type
  9867 ;;		None
  9868 ;; Auto vars:     Size  Location     Type
  9869 ;;		None
  9870 ;; Return value:  Size  Location     Type
  9871 ;;                  1    wreg      void 
  9872 ;; Registers used:
  9873 ;;		wreg
  9874 ;; Tracked objects:
  9875 ;;		On entry : 0/0
  9876 ;;		On exit  : 300/0
  9877 ;;		Unchanged: 0/0
  9878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9879 ;;      Params:         0       0       0       0       0
  9880 ;;      Locals:         0       0       0       0       0
  9881 ;;      Temps:          2       0       0       0       0
  9882 ;;      Totals:         2       0       0       0       0
  9883 ;;Total ram usage:        2 bytes
  9884 ;; Hardware stack levels used: 1
  9885 ;; This function calls:
  9886 ;;		Nothing
  9887 ;; This function is called by:
  9888 ;;		Interrupt level 1
  9889 ;; This function uses a non-reentrant model
  9890 ;;
  9891                           
  9892     1C37                     _Timers_ISR:	
  9893                           ;psect for function _Timers_ISR
  9894                           
  9895                           
  9896                           ;controle.c: 198:     if (INTCONbits.T0IF)
  9897     1C37  1D0B               	btfss	11,2	;volatile
  9898     1C38  2C40               	goto	i1l2389
  9899                           
  9900                           ;controle.c: 199:     {;controle.c: 200:         INTCONbits.T0IF = 0;
  9901     1C39  110B               	bcf	11,2	;volatile
  9902                           
  9903                           ;controle.c: 201:         TMR0 = 100;
  9904     1C3A  3064               	movlw	100
  9905     1C3B  1283               	bcf	3,5	;RP0=0, select bank0
  9906     1C3C  1303               	bcf	3,6	;RP1=0, select bank0
  9907     1C3D  0081               	movwf	1	;volatile
  9908                           
  9909                           ;controle.c: 202:         RC3 = !RC3;
  9910     1C3E  3008               	movlw	8
  9911     1C3F  0687               	xorwf	7,f
  9912     1C40                     i1l2389:
  9913                           
  9914                           ;controle.c: 204:     if (TMR2IF)
  9915     1C40  1283               	bcf	3,5	;RP0=0, select bank0
  9916     1C41  1303               	bcf	3,6	;RP1=0, select bank0
  9917     1C42  188C               	btfsc	12,1	;volatile
  9918                           
  9919                           ;controle.c: 205:     {;controle.c: 206:         TMR2IF = 0;
  9920     1C43  108C               	bcf	12,1	;volatile
  9921     1C44  0871               	movf	??_Timers_ISR+1,w
  9922     1C45  008A               	movwf	10
  9923     1C46  0E70               	swapf	??_Timers_ISR,w
  9924     1C47  0083               	movwf	3
  9925     1C48  0EFE               	swapf	126,f
  9926     1C49  0E7E               	swapf	126,w
  9927     1C4A  0009               	retfie
  9928     1C4B                     __end_of_Timers_ISR:
  9929     007E                     btemp	set	126	;btemp
  9930     007E                     wtemp0	set	126
  9931                           
  9932                           	psect	intentry
  9933     0004                     __pintentry:	
  9934                           ;incstack = 0
  9935                           ; Regs used in _Timers_ISR: [wreg]
  9936                           
  9937     0004                     interrupt_function:
  9938     007E                     saved_w	set	btemp
  9939     0004  00FE               	movwf	btemp
  9940     0005  0E03               	swapf	3,w
  9941     0006  00F0               	movwf	??_Timers_ISR
  9942     0007  080A               	movf	10,w
  9943     0008  00F1               	movwf	??_Timers_ISR+1
  9944     0009  160A  158A  2C37   	ljmp	_Timers_ISR
  9945                           
  9946                           	psect	idloc
  9947                           
  9948                           ;Config register IDLOC0 @ 0x2000
  9949                           ;	unspecified, using default values
  9950     2000                     	org	8192
  9951     2000  3FFF               	dw	16383
  9952                           
  9953                           ;Config register IDLOC1 @ 0x2001
  9954                           ;	unspecified, using default values
  9955     2001                     	org	8193
  9956     2001  3FFF               	dw	16383
  9957                           
  9958                           ;Config register IDLOC2 @ 0x2002
  9959                           ;	unspecified, using default values
  9960     2002                     	org	8194
  9961     2002  3FFF               	dw	16383
  9962                           
  9963                           ;Config register IDLOC3 @ 0x2003
  9964                           ;	unspecified, using default values
  9965     2003                     	org	8195
  9966     2003  3FFF               	dw	16383
  9967                           
  9968                           	psect	config
  9969                           
  9970                           ;Config register CONFIG1 @ 0x2007
  9971                           ;	Oscillator Selection bits
  9972                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  9973                           ;	Watchdog Timer Enable bit
  9974                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9975                           ;	Power-up Timer Enable bit
  9976                           ;	PWRTE = 0x1, unprogrammed default
  9977                           ;	RE3/MCLR pin function select bit
  9978                           ;	MCLRE = 0x1, unprogrammed default
  9979                           ;	Code Protection bit
  9980                           ;	CP = 0x1, unprogrammed default
  9981                           ;	Data Code Protection bit
  9982                           ;	CPD = 0x1, unprogrammed default
  9983                           ;	Brown Out Reset Selection bits
  9984                           ;	BOREN = 0x3, unprogrammed default
  9985                           ;	Internal External Switchover bit
  9986                           ;	IESO = 0x1, unprogrammed default
  9987                           ;	Fail-Safe Clock Monitor Enabled bit
  9988                           ;	FCMEN = 0x1, unprogrammed default
  9989                           ;	Low Voltage Programming Enable bit
  9990                           ;	LVP = 0x1, unprogrammed default
  9991                           ;	In-Circuit Debugger Mode bit
  9992                           ;	DEBUG = 0x1, unprogrammed default
  9993     2007                     	org	8199
  9994     2007  3FF4               	dw	16372
  9995                           
  9996                           ;Config register CONFIG2 @ 0x2008
  9997                           ;	unspecified, using default values
  9998                           ;	Brown-out Reset Selection bit
  9999                           ;	BOR4V = 0x1, unprogrammed default
 10000                           ;	Flash Program Memory Self Write Enable bits
 10001                           ;	WRT = 0x3, unprogrammed default
 10002     2008                     	org	8200
 10003     2008  3FFF               	dw	16383

Data Sizes:
    Strings     34
    Constant    144
    Data        12
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     80      80
    BANK1            80     39      46
    BANK3            96     38      60
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 25
		 -> STR_2(CODE[25]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 30
		 -> main@buffer(BANK3[30]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    escreve@str	PTR unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), 

    lcd_init@lcd_pins.port_data	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    lcd_init@lcd_pins.port_en	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    lcd_init@lcd_pins.port_rs	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    lcd_init@lcd_pins	PTR struct . size(1) Largest target is 12
		 -> lcd_pins(BANK3[12]), 

    port_rs	PTR volatile unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTB(SFR0[1]), 

    port_data	PTR volatile unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTB(SFR0[1]), 

    port_en	PTR volatile unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTB(SFR0[1]), 

    muda_pin@_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTB(SFR0[1]), 

    S22$port_data	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    lcd_pins.port_data	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    S22$port_en	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    lcd_pins.port_en	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    S22$port_rs	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    lcd_pins.port_rs	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->___flge
    _main->_escreve
    _main->_lcd_init
    _sprintf->___fleq
    _sprintf->___flge
    _sprintf->___lldiv
    _sprintf->___xxtofl
    _sprintf->__div_to_l_
    _sprintf->__tdiv_to_l_
    ___awdiv->___awmod
    ___lbdiv->___lbmod
    ___llmod->___lldiv
    ___flsub->___xxtofl
    ___fladd->___lbdiv
    _byte->_muda_pin
    _nibble->_muda_pin
    _enable->_muda_pin
    _LM35->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _Timers_ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fltol
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->__Umul8_16
    _lcd_init->_byte
    _escreve->_byte
    _byte->_nibble
    _LM35->___fldiv
    ___flmul->___fladd
    ___fldiv->___flmul

Critical Paths under _Timers_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _Timers_ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timers_ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timers_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                40    40      0   87056
                                             37 BANK1      2     2      0
                                              0 BANK3     38    38      0
                               _LM35
                           _PWM_init
                        _Timer0_init
                          _UART_init
                            ___fladd
                             ___flge
                            ___flmul
                            ___fltol
                       _controle_pwm
                            _escreve
                           _lcd_init
                            _sprintf
                         _velocidade
 ---------------------------------------------------------------------------------
 (1) _velocidade                                           1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             44    37      7   42991
                                              0 BANK1     37    30      7
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4   10083
                                             51 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1513
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1705
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              18    14      4    7599
                                             51 BANK0     18    14      4
                            ___fladd (ARG)
                            ___flmul
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              6     5      1     502
                                              2 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     511
                                              8 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     634
                                              2 COMMON     8     0      8
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     634
                                              2 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     496
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     952
                                              6 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     781
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     697
                                             70 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3727
                                             25 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3482
                                              5 BANK0     20    12      8
                          __Umul8_16 (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     155
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1346
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0   13661
                                              9 COMMON     1     1      0
                                             10 BANK0      2     2      0
                               _byte
                             _enable
                             _nibble
 ---------------------------------------------------------------------------------
 (1) _escreve                                              3     1      2    9200
                                              9 COMMON     1     1      0
                                             10 BANK0      2     0      2
                               _byte
 ---------------------------------------------------------------------------------
 (2) _byte                                                 6     3      3    8862
                                              4 BANK0      6     3      3
                             _enable
                           _muda_pin
                             _nibble
 ---------------------------------------------------------------------------------
 (2) _nibble                                               4     2      2    2439
                                              0 BANK0      4     2      2
                           _muda_pin
 ---------------------------------------------------------------------------------
 (2) _enable                                               2     2      0    2045
                                              0 BANK0      2     2      0
                           _muda_pin
 ---------------------------------------------------------------------------------
 (3) _muda_pin                                             7     1      6    2045
                                              2 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (1) _controle_pwm                                         1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LM35                                                20    16      4    8891
                                              0 BANK1     20    16      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     656
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    6236
                                             25 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fladd (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              2 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1863
                                             51 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Timers_ISR                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LM35
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
         ___lbdiv (ARG)
         ___lbmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___xxtofl
   _PWM_init
   _Timer0_init
   _UART_init
   ___fladd
   ___flge
   ___flmul
   ___fltol
     ___fladd (ARG)
     ___flmul (ARG)
     _scale (ARG)
       ___awdiv
       ___awmod
       ___flmul
   _controle_pwm
   _escreve
     _byte
       _enable
         _muda_pin
       _muda_pin
       _nibble
         _muda_pin
   _lcd_init
     _byte
     _enable
     _nibble
   _sprintf
     ___awdiv
     ___fladd
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___fladd (ARG)
       ___flmul (ARG)
       ___lbdiv (ARG)
       ___lbmod (ARG)
     _isdigit
     _scale
   _velocidade

 _Timers_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     26      3C       9       62.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     27      2E       7       57.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      C6      12        0.0%
ABS                  0      0      C6       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Apr 22 16:28:27 2023

           ___fldiv@aexp 006C             ___fldiv@bexp 006B                        pc 0002  
           ___fldiv@sign 0064                       _D4 00C9                       _D5 01CA  
                     _D6 01C8                       _D7 01C6                       _EN 007A  
                     l93 1C58                       l99 13AF                       _RS 00CB  
           ___awdiv@sign 0025                       fsr 0004      ___wmul@multiplicand 0074  
    __Umul8_16@word_mpld 0022                      l123 1C31                      l140 1612  
                    l137 1607                      l350 00A2                      l408 1CA9  
                    l602 119E                      l618 1F68                      l636 1381  
                    l652 1C99                      l813 07E3                      l741 089F  
                    l735 084A                      l850 1CF3                      l594 1E01  
                    l595 1E1B                      l739 08BF                      l756 0976  
                    l589 12DE                      l791 06A4                      l599 1138  
                    l875 11CF                      l888 1223                      l889 122D  
                    _GIE 005F                      _RC3 003B                      _PS0 0408  
                    _PR2 0092                      _PS1 0409                      _PS2 040A  
                    _PSA 040B                      fsr0 0004                      indf 0000  
           ___awmod@sign 0077             ___flmul@aexp 0047             ___flmul@bexp 0048  
           ___flmul@sign 0046             ___flmul@temp 0051             ___flmul@prod 004D  
           ___fltol@exp1 006F                     l4003 1CDF                     l4011 1C84  
                   l4101 0872                     l4111 08AA                     l4201 09DE  
                   l4041 081C                     l5001 009E                     l4211 09EE  
                   l4043 0824                     l5011 00C6                     l4109 08A8  
                   l4061 083F                     l4037 0819                     l5005 00A4  
                   l4215 09F2                     l4135 08EC                     l4127 08CD  
                   l4119 08B9                     l4071 0854                     l4321 0C3E  
                   l4241 0A20                     l4217 09F6                     l4137 08EE  
                   l4145 08FE                     l4065 0842                     l5121 0414  
                   l5113 0392                     l5017 00D6                     l5009 00A9  
                   l4331 0C57                     l4403 0E44                     l5203 05FE  
                   l5115 0403                     l5051 01DC                     l5043 0175  
                   l5027 0119                     l4341 0C89                     l4237 0A16  
                   l4173 0997                     l4165 0988                     l4157 0968  
                   l4181 09A0                     l4421 0FD5                     l5205 0038  
                   l4351 0CB8                     l4327 0C55                     l4319 0C21  
                   l4255 0A39                     l4239 0A18                     l4191 09AB  
                   l4511 128E                     l4415 0F50                     l4407 0E6F  
                   l5151 055C                     l5135 0449                     l5127 0430  
                   l5071 02A3                     l5055 01FB                     l5207 0659  
                   l5303 00BB                     l5231 153F                     l4345 0C9F  
                   l4257 0A3B                     l4433 1C11                     l5081 02E6  
                   l5241 1589                     l4267 0A51                     l4259 0A43  
                   l4603 1152                     l4187 09A9                     l4179 099E  
                   l4443 130E                     l5091 0349                     l5067 0288  
                   l5059 023B                     l5251 15F9                     l5243 15D4  
                   l4541 12ED                     l4533 12DA                     l4381 17C0  
                   l5157 056B                     l5085 0347                     l5237 156E  
                   l4711 0680                     l4359 0CCB                     l4607 1178  
                   l4631 1F2F                     l4519 12B6                     l4439 1305  
                   l4375 172D                     l5191 05EF                     l5183 05D0  
                   l5175 0594                     l5159 0570                     l5263 1624  
                   l5271 1636                     l4801 077E                     l4705 0675  
                   l4529 12CA                     l4465 135A                     l4457 133A  
                   l3913 1EDB                     l5169 0592                     l4811 07B0  
                   l4651 1F64                     l4627 1F26                     l4547 1CA1  
                   l4475 136D                     l3931 1F07                     l3923 1EE3  
                   l3907 1ED0                     l5099 0385                     l4733 06B6  
                   l4725 0699                     l4709 0678                     l4581 1113  
                   l4493 125B                     l3925 1EF1                     l4397 0DBF  
                   l4815 07C9                     l4647 1F54                     l4567 10CE  
                   l4671 1E82                     l4487 1390                     l4479 137D  
                   l3935 1F12                     l3951 1E39                     l4745 06CF  
                   l4729 069C                     l3881 1CEB                     l4593 1E2D  
                   l4577 1106                     l4569 10DE                     l4673 1E92  
                   l4681 1EBD                     l4497 1264                     l4827 07EB  
                   l4771 073D                     l4739 06C3                     l4843 11C7  
                   l3875 1D1B                     l4659 1F77                     l3939 1F1A  
                   l3963 1E46                     l3955 1E40                     l4829 07EF  
                   l4765 071E                     l4773 06FA                     l4677 1EB0  
                   l3965 1E54                     l3973 1E6D                     l4791 0765  
                   l4775 0742                     l4863 120D                     l4855 11E0  
                   l3991 1CC7                     l4881 124A                     l4857 11F2  
                   l4849 11DE                     l3993 1CD0                     l3977 1E75  
                   l3969 1E62                     _ADFM 04FF                     l4867 1221  
                   l4797 077C                     l4789 0748                     l4869 1212  
                   l4973 1D7D                     l4967 1D72                     l4983 0054  
                   l4999 0067                     _ADON 00F8                     _CHS0 00FA  
                   _CHS1 00FB                     _CHS2 00FC                     _CHS3 00FD  
                   STR_1 10AF                     STR_2 1096                     _LM35 1399  
                   _T0IE 005D                     _T0IF 005A                     _T0CS 040D  
                   u6104 1D0E                     u6105 1D0C                     u6114 1D21  
                   u6115 1D1F                     u6205 1EF2                     u6135 1CF4  
                   u6215 1EFE                     u7105 0C25                     u7025 0B4A  
                   u6225 1F08                     u6305 1E5A                     u6315 1E63  
                   _RCIF 0065                     u7205 0C92                     u7125 0C30  
                   u8005 1F38                     u6510 0892                     u7215 0CAA  
                   u6520 0893                     u7065 0BD6                     u6505 0886  
                   u8105 1E86                     u7305 1783                     u6185 1EE6  
                   u7235 1DBD                     u8035 1F55                     u7315 17CB  
                   u8125 1EA0                     u6285 1E49                     u7405 0E47  
                   u9005 0616                     u7095 0C0D                     u8135 1EB1  
                   u7255 1661                     u6705 098A                     u8065 1F6D  
                   u6385 1C87                     u7265 16A8                     u7425 0E92  
                   u7345 0D01                     u8315 074C                     u7195 0C74  
                   u6651 0929                     u6643 0910                     u6635 08F2  
                   u6555 08AE                     u7275 16F0                     u7435 0ECC  
                   u7355 0D3B                     u6660 093D                     u6652 092A  
                   u8405 079B                     u8245 0703                     u6805 09C8  
                   u6661 093E                     u6653 092F                     u7445 0F13  
                   u7365 0D82                     u6662 0943                     u6654 0930  
                   u8415 07B9                     u8335 0757                     u8255 070C  
                   u6663 0944                     u6655 0935                     u7535 133C  
                   u7295 1743                     u9127 1644                     u6656 0936  
                   u8425 07D4                     u9137 14C6                     u7625 1386  
                   u7545 134D                     u7465 0F66                     u7385 0DD5  
                   u8275 0717                     u8515 121A                     u9147 1511  
                   u7555 135B                     u7475 0FA0                     u7395 0E0F  
                   u8285 072C                     u9157 1D48                     u7725 12CB  
                   u7485 0FD8                     u9167 1D63                     u9177 13A9  
                   u7905 1E29                     u7825 10D2                     u7665 1290  
                   u8555 1235                     u8475 11E9                     u7755 12E3  
                   u7675 12A5                     u7595 136E                     u7941 1163  
                   u7845 10E0                     u7685 12B8                     u8805 037B  
                   u7942 1164                     u8495 1205                     u7943 1169  
                   u7855 10F5                     u8735 0205                     u7944 116A  
                   u7961 1189                     u7945 116F                     u7865 1107  
                   u7785 1CAA                     u8745 0246                     u7962 118A  
                   u7946 1170                     u6995 0AF5                     u7963 118F  
                   u7795 1CB1                     u8835 039A                     u7964 1190  
                   u7965 1195                     u7966 1196                     u8855 041D  
                   u8775 0286                     u8945 0597                     u8865 042A  
                   u8955 05C6                     u8795 034C                     u8885 04A6  
                   u8975 05D7                     u8895 0517                     _TMR0 0001  
                   u8985 05E4                     _TMR2 0011                     _main 1517  
                   _byte 1DA1                     btemp 007E                     start 000C  
        ___fldiv@new_exp 0065             _sprintf$1071 00AC                    ?_LM35 00A0  
          ___fltol@sign1 006E                    _ADCS0 00FE                    _ADCS1 00FF  
        __end_of___fladd 09FF                    ?_main 0070            ?_controle_pwm 0070  
                  ?_byte 0024          __end_of___fldiv 07F5          __end_of___awdiv 1F1F  
        __end_of___lbdiv 1CE1          __end_of___flneg 07FE          __end_of___awmod 1E7A  
        __end_of___lbmod 1C9F          __end_of___flmul 0CD8          __end_of___flsub 1C80  
        __end_of___fltol 1F86          __end_of___lldiv 111C          ___awdiv@divisor 0020  
        __end_of___llmod 1EC6                    _T2CON 0012          ___awdiv@counter 0024  
                  _RCREG 001A                    _SPBRG 0099                    _PORTB 0006  
                  _TRISB 0086                    _TXREG 0019          __end_of_escreve 1DA1  
         velocidade@duty 0072          __end_of_dpowers 1096                    _scale 0CD8  
        __end_of_isdigit 1C13                    main@c 01AE                    main@i 01AF  
                  pclath 000A         __end_of_PWM_init 1C62                    status 0003  
                  wtemp0 007E          __end_of_sprintf 065E          ___lbdiv@divisor 0078  
        ___lbdiv@counter 0021             __end_of_LM35 1447              byte@escreve 0024  
        __initialization 000F             __end_of_main 1649             __end_of_byte 1DE6  
                 ??_LM35 00A4           ??_controle_pwm 0072                   ??_main 00C5  
                 ??_byte 0027         ___llmod@dividend 002A                   ?_scale 0053  
                 _ADRESH 001E                   _ADRESL 009E                   _CCPR1L 0015  
       ___awdiv@dividend 0022                   _ANSELH 0189                   i1l2389 1C40  
                 _TMR2IF 0061                   _TRISC2 043A         __end_of___xxtofl 1253  
          ??_Timer0_init 0072         __end_of__powers_ 103A         __end_of_lcd_init 1517  
                 ___flge 111C                   ___fleq 1DE6                ??___fladd 002D  
                 ___wmul 1C9F        __end_of_UART_init 1C05                ??___fldiv 005B  
              ??___awdiv 0078                ??___lbdiv 0079                ??___flneg 0076  
              ??___awmod 0076                ??___lbmod 0073                ??___flmul 0041  
              ??___flsub 007A                ??___fltol 006A                ??___lldiv 0020  
              ??___llmod 002E                   _enable 1D2F                   _nibble 1F86  
                 _fround 1649               _Timers_ISR 1C37         ___awdiv@quotient 0026  
        ___awmod@divisor 0072          ___awmod@counter 0076         __end_of_muda_pin 1D2F  
              ??_escreve 0079                ??_isdigit 0072                   saved_w 007E  
              ??_sprintf 00A7         ___lbdiv@dividend 0020               ___flge@ff1 0072  
             ___flge@ff2 0076             ___xxtofl@arg 0022             ___xxtofl@exp 0021  
           ___xxtofl@val 0072               ___fleq@ff1 0072               ___fleq@ff2 0076  
        ___lbmod@divisor 0072  __end_of__initialization 0031          ___lbmod@counter 0076  
             ___flneg@f1 0072               ___fltol@f1 0066           __pcstackCOMMON 0070  
           __pidataBANK3 1BEB            __end_of_scale 1000         ___lbdiv@quotient 0022  
    __end_of_Timer0_init 1BEB                ?_PWM_init 0070               __div_to_l_ 1253  
        __div_to_l_@exp1 0026          __div_to_l_@cntr 0025                  ??_scale 0057  
        __div_to_l_@quot 0021               __pbssBANK1 00C7               __pbssBANK3 01C2  
   __end_of_controle_pwm 1C37            __div_to_l_@f1 0072            __div_to_l_@f2 0076  
      __end_of__Umul8_16 1D04               __pmaintext 1517                  ?___flge 0072  
                ?___fleq 0072                  ?___wmul 0072               __pintentry 0004  
                ?_enable 0070                  _CCP1CON 0017                  ?_nibble 0020  
                ?_fround 0053              ?_Timers_ISR 0070               ??_PWM_init 0072  
              ?___xxtofl 0072                  _GO_DONE 00F9                ?_lcd_init 0070  
             __stringtab 1000                _LM35$1067 00AE                ?_muda_pin 0072  
         main@duty_cycle 01B1        __end_of__npowers_ 106E               _scale$1070 0061  
            _Timer0_init 1BDF                  ___fladd 0802                  ___fldiv 065E  
                ___awdiv 1EC6                  ___lbdiv 1CC0                  ___flneg 07F5  
                ___awmod 1E2F                  ___lbmod 1C80                  ___flmul 09FF  
                ___flsub 1C62                  ___fltol 1F1F                  ___lldiv 10BD  
                ___llmod 1E7A            muda_pin@_port 0072                  __ptext1 1BD8  
                __ptext2 0035                  __ptext3 0CD8                  __ptext4 1E2F  
                __ptext5 1EC6                  __ptext6 1C05                  __ptext7 1649  
                __ptext8 1C80                  __ptext9 1CC0                  _escreve 1D68  
            ?__div_to_l_ 0072          LM35@temperatura 00AA                  _dpowers 106E  
                _isdigit 1C05               ??___xxtofl 0076         ___awmod@dividend 0074  
                _port_en 01C2                  _port_rs 01C4                  _sprintf 0035  
             ??_lcd_init 002A     end_of_initialization 0031          ___lldiv@divisor 0072  
             ??_muda_pin 0078          ___lldiv@counter 0025                _RCSTAbits 0018  
         __tdiv_to_l_@f1 0072           __tdiv_to_l_@f2 0076            ??__tdiv_to_l_ 0020  
              _UART_init 1BF7               _velocidade 1BD8              ___fladd@grs 0038  
       ___lbmod@dividend 0075            ___xxtofl@sign 0020                _TRISCbits 0087  
            ___fldiv@grs 0067              ___fldiv@rem 0060              ___lbmod@rem 0077  
            ___flmul@grs 0049               main@buffer 0190                _TXSTAbits 0098  
         __end_of___flge 11B1           __end_of___fleq 1E2F           __end_of___wmul 1CC0  
         __end_of_enable 1D68               ?_UART_init 0070           __end_of_nibble 2000  
         __end_of_fround 1800             _controle_pwm 1C24               escreve@col 002A  
             escreve@lin 0079               escreve@str 002B      start_initialization 000F  
    __end_of__tdiv_to_l_ 1399               nibble@dado 0020          ___llmod@divisor 0026  
        ___llmod@counter 002F                 ??___flge 0020                 ??___fleq 0020  
               ??___wmul 0076               init_fetch0 1C13                 ??_enable 0020  
              __Umul8_16 1CE1              __pdataBANK3 01B6                 ??_nibble 0022  
           ??_Timers_ISR 0070                 ??_fround 0057            sprintf@tmpval 00B9  
            ?_velocidade 0070                ___fladd@a 0029                ___fladd@b 0025  
             fround@prec 0064                ___fldiv@a 0053                ___fldiv@b 0057  
              ___flmul@a 003D                ___flmul@b 0039              __pbssCOMMON 007A  
              ___flsub@a 0039                ___flsub@b 003D                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00A0            __pcstackBANK3 0190  
     controle_pwm@ligado 0072              sprintf@flag 00B1              sprintf@eexp 00B7  
            sprintf@fval 00BE              sprintf@prec 00C2       __end_of_Timers_ISR 1C4B  
           ?_Timer0_init 0070                 ?___fladd 0025                 ?___fldiv 0053  
               ?___awdiv 0020                 ?___lbdiv 0078                 ?___flneg 0072  
               ?___awmod 0072                 ?___lbmod 0072                 ?___flmul 0039  
               ?___flsub 0039                 ?___fltol 0066                 ?___lldiv 0072  
               ?___llmod 0026                __npowers_ 103A               ?__Umul8_16 0072  
              __pstrings 1000              __tdiv_to_l_ 12F6              ??_UART_init 0072  
           ??__div_to_l_ 0020                 ?_escreve 002A                 ?_isdigit 0070  
               ?_sprintf 00A0             muda_pin@_pin 0074             muda_pin@_val 0076  
      interrupt_function 0004           ___wmul@product 0076       __end_of__div_to_l_ 12F6  
              _port_data 00C7              __stringbase 1005        ___wmul@multiplier 0072  
               _PWM_init 1C4B              ??__Umul8_16 0074              _fround$1068 0060  
            _fround$1069 005C       __end_of__stringtab 1006              _isdigit$856 0072  
             sprintf@val 00B3                 ___xxtofl 11B1                 __ptext10 12F6  
               __ptext11 1253                 __ptext20 1DE6                 __ptext12 1C9F  
               __ptext21 1447                 __ptext13 1E7A                 __ptext30 1C4B  
               __ptext22 1D68                 __ptext14 10BD                 __ptext31 1399  
               __ptext23 1DA1                 __ptext15 1F1F                 __ptext32 11B1  
               __ptext24 1F86                 __ptext16 1C62                 __ptext33 09FF  
               __ptext25 1D2F                 __ptext17 0802                 __ptext34 1CE1  
               __ptext26 1D04                 __ptext18 07F5                 __ptext35 065E  
               __ptext27 1C24                 __ptext19 111C                 __ptext36 1C37  
               __ptext28 1BF7                 __ptext29 1BDF                 __powers_ 1006  
               _lcd_init 1447                 _lcd_pins 01B6                 _muda_pin 1D04  
            LM35@adc_val 00B2                 main@temp 01B2         lcd_init@lcd_pins 0079  
           ??_velocidade 0072                 byte@dado 0026               _INTCONbits 000B  
               init_ram0 1C17                 isdigit@c 0073                 scale@scl 0065  
               intlevel1 0000                sprintf@ap 00B0         __tdiv_to_l_@exp1 0028  
       __tdiv_to_l_@cntr 0027                sprintf@sp 00BD         __tdiv_to_l_@quot 0023  
       ___lldiv@dividend 0076       __end_of_velocidade 1BDF                stringcode 1000  
           ?__tdiv_to_l_ 0072   __Umul8_16@multiplicand 0072                 sprintf@c 00C4  
               sprintf@f 00A0         ___lldiv@quotient 0021                 stringdir 1000  
               stringtab 1000            ___fladd@signs 0035             ___fladd@aexp 0036  
           ___fladd@bexp 0037     __Umul8_16@multiplier 0024              _pwm_enabled 00CD  
      __Umul8_16@product 0020  
