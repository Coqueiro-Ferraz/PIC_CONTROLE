

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Apr 22 15:38:48 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	intentry,global,class=CODE,delta=2
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    54                           	dabs	1,0x7E,2
    55     0000                     
    56                           ; Version 2.40
    57                           ; Generated 17/11/2021 GMT
    58                           ; 
    59                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution. Publication is not required when
    73                           ;        this file is used in an embedded application.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC16F887 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91     0000                     	;# 
    92     0001                     	;# 
    93     0002                     	;# 
    94     0003                     	;# 
    95     0004                     	;# 
    96     0005                     	;# 
    97     0006                     	;# 
    98     0007                     	;# 
    99     0008                     	;# 
   100     0009                     	;# 
   101     000A                     	;# 
   102     000B                     	;# 
   103     000C                     	;# 
   104     000D                     	;# 
   105     000E                     	;# 
   106     000E                     	;# 
   107     000F                     	;# 
   108     0010                     	;# 
   109     0011                     	;# 
   110     0012                     	;# 
   111     0013                     	;# 
   112     0014                     	;# 
   113     0015                     	;# 
   114     0015                     	;# 
   115     0016                     	;# 
   116     0017                     	;# 
   117     0018                     	;# 
   118     0019                     	;# 
   119     001A                     	;# 
   120     001B                     	;# 
   121     001B                     	;# 
   122     001C                     	;# 
   123     001D                     	;# 
   124     001E                     	;# 
   125     001F                     	;# 
   126     0081                     	;# 
   127     0085                     	;# 
   128     0086                     	;# 
   129     0087                     	;# 
   130     0088                     	;# 
   131     0089                     	;# 
   132     008C                     	;# 
   133     008D                     	;# 
   134     008E                     	;# 
   135     008F                     	;# 
   136     0090                     	;# 
   137     0091                     	;# 
   138     0092                     	;# 
   139     0093                     	;# 
   140     0093                     	;# 
   141     0093                     	;# 
   142     0094                     	;# 
   143     0095                     	;# 
   144     0096                     	;# 
   145     0097                     	;# 
   146     0098                     	;# 
   147     0099                     	;# 
   148     009A                     	;# 
   149     009B                     	;# 
   150     009C                     	;# 
   151     009D                     	;# 
   152     009E                     	;# 
   153     009F                     	;# 
   154     0105                     	;# 
   155     0107                     	;# 
   156     0108                     	;# 
   157     0109                     	;# 
   158     010C                     	;# 
   159     010C                     	;# 
   160     010D                     	;# 
   161     010E                     	;# 
   162     010F                     	;# 
   163     0185                     	;# 
   164     0187                     	;# 
   165     0188                     	;# 
   166     0189                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0000                     	;# 
   170     0001                     	;# 
   171     0002                     	;# 
   172     0003                     	;# 
   173     0004                     	;# 
   174     0005                     	;# 
   175     0006                     	;# 
   176     0007                     	;# 
   177     0008                     	;# 
   178     0009                     	;# 
   179     000A                     	;# 
   180     000B                     	;# 
   181     000C                     	;# 
   182     000D                     	;# 
   183     000E                     	;# 
   184     000E                     	;# 
   185     000F                     	;# 
   186     0010                     	;# 
   187     0011                     	;# 
   188     0012                     	;# 
   189     0013                     	;# 
   190     0014                     	;# 
   191     0015                     	;# 
   192     0015                     	;# 
   193     0016                     	;# 
   194     0017                     	;# 
   195     0018                     	;# 
   196     0019                     	;# 
   197     001A                     	;# 
   198     001B                     	;# 
   199     001B                     	;# 
   200     001C                     	;# 
   201     001D                     	;# 
   202     001E                     	;# 
   203     001F                     	;# 
   204     0081                     	;# 
   205     0085                     	;# 
   206     0086                     	;# 
   207     0087                     	;# 
   208     0088                     	;# 
   209     0089                     	;# 
   210     008C                     	;# 
   211     008D                     	;# 
   212     008E                     	;# 
   213     008F                     	;# 
   214     0090                     	;# 
   215     0091                     	;# 
   216     0092                     	;# 
   217     0093                     	;# 
   218     0093                     	;# 
   219     0093                     	;# 
   220     0094                     	;# 
   221     0095                     	;# 
   222     0096                     	;# 
   223     0097                     	;# 
   224     0098                     	;# 
   225     0099                     	;# 
   226     009A                     	;# 
   227     009B                     	;# 
   228     009C                     	;# 
   229     009D                     	;# 
   230     009E                     	;# 
   231     009F                     	;# 
   232     0105                     	;# 
   233     0107                     	;# 
   234     0108                     	;# 
   235     0109                     	;# 
   236     010C                     	;# 
   237     010C                     	;# 
   238     010D                     	;# 
   239     010E                     	;# 
   240     010F                     	;# 
   241     0185                     	;# 
   242     0187                     	;# 
   243     0188                     	;# 
   244     0189                     	;# 
   245     018C                     	;# 
   246     018D                     	;# 
   247     0000                     	;# 
   248     0001                     	;# 
   249     0002                     	;# 
   250     0003                     	;# 
   251     0004                     	;# 
   252     0005                     	;# 
   253     0006                     	;# 
   254     0007                     	;# 
   255     0008                     	;# 
   256     0009                     	;# 
   257     000A                     	;# 
   258     000B                     	;# 
   259     000C                     	;# 
   260     000D                     	;# 
   261     000E                     	;# 
   262     000E                     	;# 
   263     000F                     	;# 
   264     0010                     	;# 
   265     0011                     	;# 
   266     0012                     	;# 
   267     0013                     	;# 
   268     0014                     	;# 
   269     0015                     	;# 
   270     0015                     	;# 
   271     0016                     	;# 
   272     0017                     	;# 
   273     0018                     	;# 
   274     0019                     	;# 
   275     001A                     	;# 
   276     001B                     	;# 
   277     001B                     	;# 
   278     001C                     	;# 
   279     001D                     	;# 
   280     001E                     	;# 
   281     001F                     	;# 
   282     0081                     	;# 
   283     0085                     	;# 
   284     0086                     	;# 
   285     0087                     	;# 
   286     0088                     	;# 
   287     0089                     	;# 
   288     008C                     	;# 
   289     008D                     	;# 
   290     008E                     	;# 
   291     008F                     	;# 
   292     0090                     	;# 
   293     0091                     	;# 
   294     0092                     	;# 
   295     0093                     	;# 
   296     0093                     	;# 
   297     0093                     	;# 
   298     0094                     	;# 
   299     0095                     	;# 
   300     0096                     	;# 
   301     0097                     	;# 
   302     0098                     	;# 
   303     0099                     	;# 
   304     009A                     	;# 
   305     009B                     	;# 
   306     009C                     	;# 
   307     009D                     	;# 
   308     009E                     	;# 
   309     009F                     	;# 
   310     0105                     	;# 
   311     0107                     	;# 
   312     0108                     	;# 
   313     0109                     	;# 
   314     010C                     	;# 
   315     010C                     	;# 
   316     010D                     	;# 
   317     010E                     	;# 
   318     010F                     	;# 
   319     0185                     	;# 
   320     0187                     	;# 
   321     0188                     	;# 
   322     0189                     	;# 
   323     018C                     	;# 
   324     018D                     	;# 
   325                           
   326                           	psect	idataBANK3
   327     1CD6                     __pidataBANK3:
   328                           
   329                           ;initializer for _lcd_pins
   330     1CD6  3406               	retlw	6
   331     1CD7  3400               	retlw	0
   332     1CD8  3402               	retlw	2
   333     1CD9  3406               	retlw	6
   334     1CDA  3400               	retlw	0
   335     1CDB  3403               	retlw	3
   336     1CDC  3406               	retlw	6
   337     1CDD  3400               	retlw	0
   338     1CDE  3404               	retlw	4
   339     1CDF  3405               	retlw	5
   340     1CE0  3406               	retlw	6
   341     1CE1  3407               	retlw	7
   342                           
   343                           	psect	strings
   344     1000                     __pstrings:
   345     1000                     stringtab:
   346     1000                     __stringtab:
   347     1000                     stringcode:	
   348                           ;	String table - string pointers are 1 byte each
   349                           
   350     1000                     stringdir:
   351     1000  3010               	movlw	high stringdir
   352     1001  008A               	movwf	10
   353     1002  0804               	movf	4,w
   354     1003  0A84               	incf	4,f
   355     1004  0782               	addwf	2,f
   356     1005                     __stringbase:
   357     1005  3400               	retlw	0
   358     1006                     __end_of__stringtab:
   359     1006                     __powers_:
   360     1006  3400               	retlw	0
   361     1007  3400               	retlw	0
   362     1008  3480               	retlw	128
   363     1009  343F               	retlw	63
   364     100A  3400               	retlw	0
   365     100B  3400               	retlw	0
   366     100C  3420               	retlw	32
   367     100D  3441               	retlw	65
   368     100E  3400               	retlw	0
   369     100F  3400               	retlw	0
   370     1010  34C8               	retlw	200
   371     1011  3442               	retlw	66
   372     1012  3400               	retlw	0
   373     1013  3400               	retlw	0
   374     1014  347A               	retlw	122
   375     1015  3444               	retlw	68
   376     1016  3400               	retlw	0
   377     1017  3440               	retlw	64
   378     1018  341C               	retlw	28
   379     1019  3446               	retlw	70
   380     101A  3400               	retlw	0
   381     101B  3450               	retlw	80
   382     101C  34C3               	retlw	195
   383     101D  3447               	retlw	71
   384     101E  3400               	retlw	0
   385     101F  3424               	retlw	36
   386     1020  3474               	retlw	116
   387     1021  3449               	retlw	73
   388     1022  3480               	retlw	128
   389     1023  3496               	retlw	150
   390     1024  3418               	retlw	24
   391     1025  344B               	retlw	75
   392     1026  3420               	retlw	32
   393     1027  34BC               	retlw	188
   394     1028  34BE               	retlw	190
   395     1029  344C               	retlw	76
   396     102A  3428               	retlw	40
   397     102B  346B               	retlw	107
   398     102C  346E               	retlw	110
   399     102D  344E               	retlw	78
   400     102E  34F9               	retlw	249
   401     102F  3402               	retlw	2
   402     1030  3415               	retlw	21
   403     1031  3450               	retlw	80
   404     1032  34EC               	retlw	236
   405     1033  3478               	retlw	120
   406     1034  34AD               	retlw	173
   407     1035  3460               	retlw	96
   408     1036  34CA               	retlw	202
   409     1037  34F2               	retlw	242
   410     1038  3449               	retlw	73
   411     1039  3471               	retlw	113
   412     103A                     __end_of__powers_:
   413     103A                     __npowers_:
   414     103A  3400               	retlw	0
   415     103B  3400               	retlw	0
   416     103C  3480               	retlw	128
   417     103D  343F               	retlw	63
   418     103E  34CD               	retlw	205
   419     103F  34CC               	retlw	204
   420     1040  34CC               	retlw	204
   421     1041  343D               	retlw	61
   422     1042  340A               	retlw	10
   423     1043  34D7               	retlw	215
   424     1044  3423               	retlw	35
   425     1045  343C               	retlw	60
   426     1046  346F               	retlw	111
   427     1047  3412               	retlw	18
   428     1048  3483               	retlw	131
   429     1049  343A               	retlw	58
   430     104A  3417               	retlw	23
   431     104B  34B7               	retlw	183
   432     104C  34D1               	retlw	209
   433     104D  3438               	retlw	56
   434     104E  34AC               	retlw	172
   435     104F  34C5               	retlw	197
   436     1050  3427               	retlw	39
   437     1051  3437               	retlw	55
   438     1052  34BD               	retlw	189
   439     1053  3437               	retlw	55
   440     1054  3486               	retlw	134
   441     1055  3435               	retlw	53
   442     1056  3495               	retlw	149
   443     1057  34BF               	retlw	191
   444     1058  34D6               	retlw	214
   445     1059  3433               	retlw	51
   446     105A  3477               	retlw	119
   447     105B  34CC               	retlw	204
   448     105C  342B               	retlw	43
   449     105D  3432               	retlw	50
   450     105E  345F               	retlw	95
   451     105F  3470               	retlw	112
   452     1060  3489               	retlw	137
   453     1061  3430               	retlw	48
   454     1062  34FF               	retlw	255
   455     1063  34E6               	retlw	230
   456     1064  34DB               	retlw	219
   457     1065  342E               	retlw	46
   458     1066  3408               	retlw	8
   459     1067  34E5               	retlw	229
   460     1068  343C               	retlw	60
   461     1069  341E               	retlw	30
   462     106A  3460               	retlw	96
   463     106B  3442               	retlw	66
   464     106C  34A2               	retlw	162
   465     106D  340D               	retlw	13
   466     106E                     __end_of__npowers_:
   467     106E                     _dpowers:
   468     106E  3401               	retlw	1
   469     106F  3400               	retlw	0
   470     1070  3400               	retlw	0
   471     1071  3400               	retlw	0
   472     1072  340A               	retlw	10
   473     1073  3400               	retlw	0
   474     1074  3400               	retlw	0
   475     1075  3400               	retlw	0
   476     1076  3464               	retlw	100
   477     1077  3400               	retlw	0
   478     1078  3400               	retlw	0
   479     1079  3400               	retlw	0
   480     107A  34E8               	retlw	232
   481     107B  3403               	retlw	3
   482     107C  3400               	retlw	0
   483     107D  3400               	retlw	0
   484     107E  3410               	retlw	16
   485     107F  3427               	retlw	39
   486     1080  3400               	retlw	0
   487     1081  3400               	retlw	0
   488     1082  34A0               	retlw	160
   489     1083  3486               	retlw	134
   490     1084  3401               	retlw	1
   491     1085  3400               	retlw	0
   492     1086  3440               	retlw	64
   493     1087  3442               	retlw	66
   494     1088  340F               	retlw	15
   495     1089  3400               	retlw	0
   496     108A  3480               	retlw	128
   497     108B  3496               	retlw	150
   498     108C  3498               	retlw	152
   499     108D  3400               	retlw	0
   500     108E  3400               	retlw	0
   501     108F  34E1               	retlw	225
   502     1090  34F5               	retlw	245
   503     1091  3405               	retlw	5
   504     1092  3400               	retlw	0
   505     1093  34CA               	retlw	202
   506     1094  349A               	retlw	154
   507     1095  343B               	retlw	59
   508     1096                     __end_of_dpowers:
   509     000B                     _INTCONbits	set	11
   510     001A                     _RCREG	set	26
   511     0019                     _TXREG	set	25
   512     0011                     _TMR2	set	17
   513     0018                     _RCSTAbits	set	24
   514     0001                     _TMR0	set	1
   515     001E                     _ADRESH	set	30
   516     0012                     _T2CON	set	18
   517     0015                     _CCPR1L	set	21
   518     0017                     _CCP1CON	set	23
   519     0006                     _PORTB	set	6
   520     003B                     _RC3	set	59
   521     0065                     _RCIF	set	101
   522     005F                     _GIE	set	95
   523     005A                     _T0IF	set	90
   524     005D                     _T0IE	set	93
   525     00F9                     _GO_DONE	set	249
   526     00FA                     _CHS0	set	250
   527     00FB                     _CHS1	set	251
   528     00FC                     _CHS2	set	252
   529     00FD                     _CHS3	set	253
   530     00FE                     _ADCS0	set	254
   531     00FF                     _ADCS1	set	255
   532     00F8                     _ADON	set	248
   533     0061                     _TMR2IF	set	97
   534     0087                     _TRISCbits	set	135
   535     0086                     _TRISB	set	134
   536     0098                     _TXSTAbits	set	152
   537     0099                     _SPBRG	set	153
   538     009E                     _ADRESL	set	158
   539     0092                     _PR2	set	146
   540     040D                     _T0CS	set	1037
   541     0408                     _PS0	set	1032
   542     0409                     _PS1	set	1033
   543     040A                     _PS2	set	1034
   544     040B                     _PSA	set	1035
   545     04FF                     _ADFM	set	1279
   546     043A                     _TRISC2	set	1082
   547     0189                     _ANSELH	set	393
   548     1096                     STR_1:
   549     1096  3441               	retlw	65	;'A'
   550     1097  3444               	retlw	68	;'D'
   551     1098  3443               	retlw	67	;'C'
   552     1099  3430               	retlw	48	;'0'
   553     109A  343A               	retlw	58	;':'
   554     109B  3420               	retlw	32	;' '
   555     109C  3425               	retlw	37	;'%'
   556     109D  3466               	retlw	102	;'f'
   557     109E  342C               	retlw	44	;','
   558     109F  3420               	retlw	32	;' '
   559     10A0  3444               	retlw	68	;'D'
   560     10A1  3475               	retlw	117	;'u'
   561     10A2  3474               	retlw	116	;'t'
   562     10A3  3479               	retlw	121	;'y'
   563     10A4  343A               	retlw	58	;':'
   564     10A5  3420               	retlw	32	;' '
   565     10A6  3425               	retlw	37	;'%'
   566     10A7  3475               	retlw	117	;'u'
   567     10A8  3463               	retlw	99	;'c'
   568     10A9  3420               	retlw	32	;' '
   569     10AA  340D               	retlw	13
   570     10AB  340A               	retlw	10
   571     10AC  3400               	retlw	0
   572                           
   573                           	psect	cinit
   574     000F                     start_initialization:	
   575                           ; #config settings
   576                           
   577     000F                     __initialization:
   578                           
   579                           ; Initialize objects allocated to BANK3
   580     000F  1783               	bsf	3,7	;select IRP bank2
   581     0010  30C2               	movlw	low (__pdataBANK3+12)
   582     0011  00FD               	movwf	btemp+-1
   583     0012  301C               	movlw	high __pidataBANK3
   584     0013  00FE               	movwf	btemp
   585     0014  30D6               	movlw	low __pidataBANK3
   586     0015  00FF               	movwf	btemp+1
   587     0016  30B6               	movlw	low __pdataBANK3
   588     0017  0084               	movwf	4
   589     0018  160A  158A  24F4   	fcall	init_ram0
   590                           
   591                           ; Clear objects allocated to BANK3
   592     001B  1683               	bsf	3,5	;RP0=1, select bank3
   593     001C  1703               	bsf	3,6	;RP1=1, select bank3
   594     001D  01C2               	clrf	__pbssBANK3& (0+127)
   595     001E  01C3               	clrf	(__pbssBANK3+1)& (0+127)
   596     001F  01C4               	clrf	(__pbssBANK3+2)& (0+127)
   597     0020  01C5               	clrf	(__pbssBANK3+3)& (0+127)
   598     0021  01C6               	clrf	(__pbssBANK3+4)& (0+127)
   599     0022  01C7               	clrf	(__pbssBANK3+5)& (0+127)
   600     0023  01C8               	clrf	(__pbssBANK3+6)& (0+127)
   601     0024  01C9               	clrf	(__pbssBANK3+7)& (0+127)
   602     0025  01CA               	clrf	(__pbssBANK3+8)& (0+127)
   603     0026  01CB               	clrf	(__pbssBANK3+9)& (0+127)
   604                           
   605                           ; Clear objects allocated to BANK1
   606     0027  1303               	bcf	3,6	;RP1=0, select bank1
   607     0028  01C7               	clrf	__pbssBANK1& (0+127)
   608     0029  01C8               	clrf	(__pbssBANK1+1)& (0+127)
   609     002A  01C9               	clrf	(__pbssBANK1+2)& (0+127)
   610     002B  01CA               	clrf	(__pbssBANK1+3)& (0+127)
   611     002C  01CB               	clrf	(__pbssBANK1+4)& (0+127)
   612     002D  01CC               	clrf	(__pbssBANK1+5)& (0+127)
   613     002E  01CD               	clrf	(__pbssBANK1+6)& (0+127)
   614                           
   615                           ; Clear objects allocated to COMMON
   616     002F  01FA               	clrf	__pbssCOMMON& (0+127)
   617     0030  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   618     0031                     end_of_initialization:	
   619                           ;End of C runtime variable initialization code
   620                           
   621     0031                     __end_of__initialization:
   622     0031  0183               	clrf	3
   623     0032  160A  118A  2D43   	ljmp	_main	;jump to C main() function
   624                           
   625                           	psect	bssCOMMON
   626     007A                     __pbssCOMMON:
   627     007A                     _EN:
   628     007A                     	ds	2
   629                           
   630                           	psect	bssBANK1
   631     00C7                     __pbssBANK1:
   632     00C7                     _port_data:
   633     00C7                     	ds	2
   634     00C9                     _D4:
   635     00C9                     	ds	2
   636     00CB                     _RS:
   637     00CB                     	ds	2
   638     00CD                     _pwm_enabled:
   639     00CD                     	ds	1
   640                           
   641                           	psect	bssBANK3
   642     01C2                     __pbssBANK3:
   643     01C2                     _port_en:
   644     01C2                     	ds	2
   645     01C4                     _port_rs:
   646     01C4                     	ds	2
   647     01C6                     _D7:
   648     01C6                     	ds	2
   649     01C8                     _D6:
   650     01C8                     	ds	2
   651     01CA                     _D5:
   652     01CA                     	ds	2
   653                           
   654                           	psect	dataBANK3
   655     01B6                     __pdataBANK3:
   656     01B6                     _lcd_pins:
   657     01B6                     	ds	12
   658                           
   659                           	psect	inittext
   660     1CF0                     init_fetch0:	
   661                           ;	Called with low address in FSR and high address in W
   662                           
   663     1CF0  087E               	movf	126,w
   664     1CF1  008A               	movwf	10
   665     1CF2  087F               	movf	127,w
   666     1CF3  0082               	movwf	2
   667     1CF4                     init_ram0:	
   668                           ;Called with:
   669                           ;	high address of idata address in btemp 
   670                           ;	low address of idata address in btemp+1 
   671                           ;	low address of data in FSR
   672                           ;	high address + 1 of data in btemp-1
   673                           
   674     1CF4  24F0  160A  158A   	fcall	init_fetch0
   675     1CF7  0080               	movwf	0
   676     1CF8  0A84               	incf	4,f
   677     1CF9  0804               	movf	4,w
   678     1CFA  067D               	xorwf	125,w
   679     1CFB  1903               	btfsc	3,2
   680     1CFC  3400               	retlw	0
   681     1CFD  0AFF               	incf	127,f
   682     1CFE  1903               	btfsc	3,2
   683     1CFF  0AFE               	incf	126,f
   684     1D00  2CF4               	goto	init_ram0
   685                           
   686                           	psect	cstackBANK3
   687     0190                     __pcstackBANK3:
   688     0190                     main@buffer:
   689                           
   690                           ; 30 bytes @ 0x0
   691     0190                     	ds	30
   692     01AE                     main@c:
   693                           
   694                           ; 1 bytes @ 0x1E
   695     01AE                     	ds	1
   696     01AF                     main@i:
   697                           
   698                           ; 2 bytes @ 0x1F
   699     01AF                     	ds	2
   700     01B1                     main@duty_cycle:
   701                           
   702                           ; 1 bytes @ 0x21
   703     01B1                     	ds	1
   704     01B2                     main@temp:
   705                           
   706                           ; 4 bytes @ 0x22
   707     01B2                     	ds	4
   708                           
   709                           	psect	cstackBANK1
   710     00A0                     __pcstackBANK1:
   711     00A0                     ?_sprintf:
   712     00A0                     ?_LM35:	
   713                           ; 2 bytes @ 0x0
   714                           
   715     00A0                     sprintf@f:	
   716                           ; 4 bytes @ 0x0
   717                           
   718                           
   719                           ; 1 bytes @ 0x0
   720     00A0                     	ds	4
   721     00A4                     ??_LM35:
   722                           
   723                           ; 1 bytes @ 0x4
   724     00A4                     	ds	3
   725     00A7                     ??_sprintf:
   726                           
   727                           ; 1 bytes @ 0x7
   728     00A7                     	ds	3
   729     00AA                     LM35@temperatura:
   730                           
   731                           ; 4 bytes @ 0xA
   732     00AA                     	ds	2
   733     00AC                     _sprintf$1058:
   734                           
   735                           ; 4 bytes @ 0xC
   736     00AC                     	ds	2
   737     00AE                     _LM35$1054:
   738                           
   739                           ; 4 bytes @ 0xE
   740     00AE                     	ds	2
   741     00B0                     sprintf@ap:
   742                           
   743                           ; 1 bytes @ 0x10
   744     00B0                     	ds	1
   745     00B1                     sprintf@flag:
   746                           
   747                           ; 2 bytes @ 0x11
   748     00B1                     	ds	1
   749     00B2                     LM35@adc_val:
   750                           
   751                           ; 2 bytes @ 0x12
   752     00B2                     	ds	1
   753     00B3                     sprintf@prec:
   754                           
   755                           ; 2 bytes @ 0x13
   756     00B3                     	ds	2
   757     00B5                     sprintf@val:
   758                           
   759                           ; 4 bytes @ 0x15
   760     00B5                     	ds	4
   761     00B9                     sprintf@eexp:
   762                           
   763                           ; 2 bytes @ 0x19
   764     00B9                     	ds	2
   765     00BB                     sprintf@tmpval:
   766                           
   767                           ; 4 bytes @ 0x1B
   768     00BB                     	ds	4
   769     00BF                     sprintf@sp:
   770                           
   771                           ; 1 bytes @ 0x1F
   772     00BF                     	ds	1
   773     00C0                     sprintf@fval:
   774                           
   775                           ; 4 bytes @ 0x20
   776     00C0                     	ds	4
   777     00C4                     sprintf@c:
   778                           
   779                           ; 1 bytes @ 0x24
   780     00C4                     	ds	1
   781     00C5                     ??_main:
   782                           
   783                           ; 1 bytes @ 0x25
   784     00C5                     	ds	2
   785                           
   786                           	psect	cstackCOMMON
   787     0070                     __pcstackCOMMON:
   788     0070                     ?_lcd_init:
   789     0070                     ?_PWM_init:	
   790                           ; 1 bytes @ 0x0
   791                           
   792     0070                     ?_Timer0_init:	
   793                           ; 1 bytes @ 0x0
   794                           
   795     0070                     ?_UART_init:	
   796                           ; 1 bytes @ 0x0
   797                           
   798     0070                     ?_velocidade:	
   799                           ; 1 bytes @ 0x0
   800                           
   801     0070                     ?_controle_pwm:	
   802                           ; 1 bytes @ 0x0
   803                           
   804     0070                     ?_main:	
   805                           ; 1 bytes @ 0x0
   806                           
   807     0070                     ?_Timers_ISR:	
   808                           ; 1 bytes @ 0x0
   809                           
   810     0070                     ??_Timers_ISR:	
   811                           ; 1 bytes @ 0x0
   812                           
   813     0070                     ?_enable:	
   814                           ; 1 bytes @ 0x0
   815                           
   816                           
   817                           ; 1 bytes @ 0x0
   818     0070                     	ds	2
   819     0072                     ?___fleq:
   820     0072                     ?___flge:	
   821                           ; 1 bit 
   822                           
   823     0072                     ??_PWM_init:	
   824                           ; 1 bit 
   825                           
   826     0072                     ??_Timer0_init:	
   827                           ; 1 bytes @ 0x2
   828                           
   829     0072                     ??_UART_init:	
   830                           ; 1 bytes @ 0x2
   831                           
   832     0072                     ??_velocidade:	
   833                           ; 1 bytes @ 0x2
   834                           
   835     0072                     ??_controle_pwm:	
   836                           ; 1 bytes @ 0x2
   837                           
   838     0072                     ?_muda_pin:	
   839                           ; 1 bytes @ 0x2
   840                           
   841     0072                     ?___lbmod:	
   842                           ; 1 bytes @ 0x2
   843                           
   844     0072                     ?__Umul8_16:	
   845                           ; 1 bytes @ 0x2
   846                           
   847     0072                     ?___wmul:	
   848                           ; 2 bytes @ 0x2
   849                           
   850     0072                     ?___awmod:	
   851                           ; 2 bytes @ 0x2
   852                           
   853     0072                     ?__tdiv_to_l_:	
   854                           ; 2 bytes @ 0x2
   855                           
   856     0072                     ?__div_to_l_:	
   857                           ; 4 bytes @ 0x2
   858                           
   859     0072                     ?___lldiv:	
   860                           ; 4 bytes @ 0x2
   861                           
   862     0072                     ?___flneg:	
   863                           ; 4 bytes @ 0x2
   864                           
   865     0072                     ?___xxtofl:	
   866                           ; 4 bytes @ 0x2
   867                           
   868     0072                     velocidade@duty:	
   869                           ; 4 bytes @ 0x2
   870                           
   871     0072                     controle_pwm@ligado:	
   872                           ; 1 bytes @ 0x2
   873                           
   874     0072                     ___lbmod@divisor:	
   875                           ; 1 bytes @ 0x2
   876                           
   877     0072                     __Umul8_16@multiplicand:	
   878                           ; 1 bytes @ 0x2
   879                           
   880     0072                     muda_pin@_port:	
   881                           ; 1 bytes @ 0x2
   882                           
   883     0072                     ___wmul@multiplier:	
   884                           ; 2 bytes @ 0x2
   885                           
   886     0072                     ___awmod@divisor:	
   887                           ; 2 bytes @ 0x2
   888                           
   889     0072                     ___lldiv@divisor:	
   890                           ; 2 bytes @ 0x2
   891                           
   892     0072                     __div_to_l_@f1:	
   893                           ; 4 bytes @ 0x2
   894                           
   895     0072                     ___fleq@ff1:	
   896                           ; 4 bytes @ 0x2
   897                           
   898     0072                     ___flge@ff1:	
   899                           ; 4 bytes @ 0x2
   900                           
   901     0072                     ___flneg@f1:	
   902                           ; 4 bytes @ 0x2
   903                           
   904     0072                     __tdiv_to_l_@f1:	
   905                           ; 4 bytes @ 0x2
   906                           
   907     0072                     ___xxtofl@val:	
   908                           ; 4 bytes @ 0x2
   909                           
   910                           
   911                           ; 4 bytes @ 0x2
   912     0072                     	ds	1
   913     0073                     ??___lbmod:
   914                           
   915                           ; 1 bytes @ 0x3
   916     0073                     	ds	1
   917     0074                     ??__Umul8_16:
   918     0074                     muda_pin@_pin:	
   919                           ; 1 bytes @ 0x4
   920                           
   921     0074                     ___wmul@multiplicand:	
   922                           ; 2 bytes @ 0x4
   923                           
   924     0074                     ___awmod@dividend:	
   925                           ; 2 bytes @ 0x4
   926                           
   927                           
   928                           ; 2 bytes @ 0x4
   929     0074                     	ds	1
   930     0075                     ___lbmod@dividend:
   931                           
   932                           ; 1 bytes @ 0x5
   933     0075                     	ds	1
   934     0076                     ??___wmul:
   935     0076                     ??___awmod:	
   936                           ; 1 bytes @ 0x6
   937                           
   938     0076                     ??___flneg:	
   939                           ; 1 bytes @ 0x6
   940                           
   941     0076                     ??___xxtofl:	
   942                           ; 1 bytes @ 0x6
   943                           
   944     0076                     ___awmod@counter:	
   945                           ; 1 bytes @ 0x6
   946                           
   947     0076                     ___lbmod@counter:	
   948                           ; 1 bytes @ 0x6
   949                           
   950     0076                     muda_pin@_val:	
   951                           ; 1 bytes @ 0x6
   952                           
   953     0076                     ___wmul@product:	
   954                           ; 2 bytes @ 0x6
   955                           
   956     0076                     ___lldiv@dividend:	
   957                           ; 2 bytes @ 0x6
   958                           
   959     0076                     __div_to_l_@f2:	
   960                           ; 4 bytes @ 0x6
   961                           
   962     0076                     ___fleq@ff2:	
   963                           ; 4 bytes @ 0x6
   964                           
   965     0076                     ___flge@ff2:	
   966                           ; 4 bytes @ 0x6
   967                           
   968     0076                     __tdiv_to_l_@f2:	
   969                           ; 4 bytes @ 0x6
   970                           
   971                           
   972                           ; 4 bytes @ 0x6
   973     0076                     	ds	1
   974     0077                     ___awmod@sign:
   975     0077                     ___lbmod@rem:	
   976                           ; 1 bytes @ 0x7
   977                           
   978                           
   979                           ; 1 bytes @ 0x7
   980     0077                     	ds	1
   981     0078                     ??_muda_pin:
   982     0078                     ??___awdiv:	
   983                           ; 1 bytes @ 0x8
   984                           
   985     0078                     ?___lbdiv:	
   986                           ; 1 bytes @ 0x8
   987                           
   988     0078                     ___lbdiv@divisor:	
   989                           ; 1 bytes @ 0x8
   990                           
   991                           
   992                           ; 1 bytes @ 0x8
   993     0078                     	ds	1
   994     0079                     ??___lbdiv:
   995     0079                     lcd_init@lcd_pins:	
   996                           ; 1 bytes @ 0x9
   997                           
   998                           
   999                           ; 1 bytes @ 0x9
  1000     0079                     	ds	1
  1001     007A                     ??___flsub:
  1002                           
  1003                           	psect	cstackBANK0
  1004     0020                     __pcstackBANK0:	
  1005                           ; 1 bytes @ 0xA
  1006                           
  1007     0020                     ??__tdiv_to_l_:
  1008     0020                     ??__div_to_l_:	
  1009                           ; 1 bytes @ 0x0
  1010                           
  1011     0020                     ??_enable:	
  1012                           ; 1 bytes @ 0x0
  1013                           
  1014     0020                     ?_nibble:	
  1015                           ; 1 bytes @ 0x0
  1016                           
  1017     0020                     ??___lldiv:	
  1018                           ; 1 bytes @ 0x0
  1019                           
  1020     0020                     ??___fleq:	
  1021                           ; 1 bytes @ 0x0
  1022                           
  1023     0020                     ??___flge:	
  1024                           ; 1 bytes @ 0x0
  1025                           
  1026     0020                     ?___awdiv:	
  1027                           ; 1 bytes @ 0x0
  1028                           
  1029     0020                     ___lbdiv@dividend:	
  1030                           ; 2 bytes @ 0x0
  1031                           
  1032     0020                     ___xxtofl@sign:	
  1033                           ; 1 bytes @ 0x0
  1034                           
  1035     0020                     nibble@dado:	
  1036                           ; 1 bytes @ 0x0
  1037                           
  1038     0020                     ___awdiv@divisor:	
  1039                           ; 2 bytes @ 0x0
  1040                           
  1041     0020                     __Umul8_16@product:	
  1042                           ; 2 bytes @ 0x0
  1043                           
  1044                           
  1045                           ; 2 bytes @ 0x0
  1046     0020                     	ds	1
  1047     0021                     ___lbdiv@counter:
  1048     0021                     ___xxtofl@exp:	
  1049                           ; 1 bytes @ 0x1
  1050                           
  1051     0021                     ___lldiv@quotient:	
  1052                           ; 1 bytes @ 0x1
  1053                           
  1054     0021                     __div_to_l_@quot:	
  1055                           ; 4 bytes @ 0x1
  1056                           
  1057                           
  1058                           ; 4 bytes @ 0x1
  1059     0021                     	ds	1
  1060     0022                     ??_nibble:
  1061     0022                     ___lbdiv@quotient:	
  1062                           ; 1 bytes @ 0x2
  1063                           
  1064     0022                     ___awdiv@dividend:	
  1065                           ; 1 bytes @ 0x2
  1066                           
  1067     0022                     __Umul8_16@word_mpld:	
  1068                           ; 2 bytes @ 0x2
  1069                           
  1070     0022                     ___xxtofl@arg:	
  1071                           ; 2 bytes @ 0x2
  1072                           
  1073                           
  1074                           ; 4 bytes @ 0x2
  1075     0022                     	ds	1
  1076     0023                     __tdiv_to_l_@quot:
  1077                           
  1078                           ; 4 bytes @ 0x3
  1079     0023                     	ds	1
  1080     0024                     ?_byte:
  1081     0024                     ___awdiv@counter:	
  1082                           ; 1 bytes @ 0x4
  1083                           
  1084     0024                     __Umul8_16@multiplier:	
  1085                           ; 1 bytes @ 0x4
  1086                           
  1087     0024                     byte@escreve:	
  1088                           ; 1 bytes @ 0x4
  1089                           
  1090                           
  1091                           ; 2 bytes @ 0x4
  1092     0024                     	ds	1
  1093     0025                     ?___fladd:
  1094     0025                     ___lldiv@counter:	
  1095                           ; 4 bytes @ 0x5
  1096                           
  1097     0025                     ___awdiv@sign:	
  1098                           ; 1 bytes @ 0x5
  1099                           
  1100     0025                     __div_to_l_@cntr:	
  1101                           ; 1 bytes @ 0x5
  1102                           
  1103     0025                     ___fladd@b:	
  1104                           ; 1 bytes @ 0x5
  1105                           
  1106                           
  1107                           ; 4 bytes @ 0x5
  1108     0025                     	ds	1
  1109     0026                     ?___llmod:
  1110     0026                     byte@dado:	
  1111                           ; 4 bytes @ 0x6
  1112                           
  1113     0026                     __div_to_l_@exp1:	
  1114                           ; 1 bytes @ 0x6
  1115                           
  1116     0026                     ___awdiv@quotient:	
  1117                           ; 1 bytes @ 0x6
  1118                           
  1119     0026                     ___llmod@divisor:	
  1120                           ; 2 bytes @ 0x6
  1121                           
  1122                           
  1123                           ; 4 bytes @ 0x6
  1124     0026                     	ds	1
  1125     0027                     ??_byte:
  1126     0027                     __tdiv_to_l_@cntr:	
  1127                           ; 1 bytes @ 0x7
  1128                           
  1129                           
  1130                           ; 1 bytes @ 0x7
  1131     0027                     	ds	1
  1132     0028                     __tdiv_to_l_@exp1:
  1133                           
  1134                           ; 1 bytes @ 0x8
  1135     0028                     	ds	1
  1136     0029                     ___fladd@a:
  1137                           
  1138                           ; 4 bytes @ 0x9
  1139     0029                     	ds	1
  1140     002A                     ??_lcd_init:
  1141     002A                     ___llmod@dividend:	
  1142                           ; 1 bytes @ 0xA
  1143                           
  1144                           
  1145                           ; 4 bytes @ 0xA
  1146     002A                     	ds	3
  1147     002D                     ??___fladd:
  1148                           
  1149                           ; 1 bytes @ 0xD
  1150     002D                     	ds	1
  1151     002E                     ??___llmod:
  1152                           
  1153                           ; 1 bytes @ 0xE
  1154     002E                     	ds	1
  1155     002F                     ___llmod@counter:
  1156                           
  1157                           ; 1 bytes @ 0xF
  1158     002F                     	ds	6
  1159     0035                     ___fladd@signs:
  1160                           
  1161                           ; 1 bytes @ 0x15
  1162     0035                     	ds	1
  1163     0036                     ___fladd@aexp:
  1164                           
  1165                           ; 1 bytes @ 0x16
  1166     0036                     	ds	1
  1167     0037                     ___fladd@bexp:
  1168                           
  1169                           ; 1 bytes @ 0x17
  1170     0037                     	ds	1
  1171     0038                     ___fladd@grs:
  1172                           
  1173                           ; 1 bytes @ 0x18
  1174     0038                     	ds	1
  1175     0039                     ?___flsub:
  1176     0039                     ?___flmul:	
  1177                           ; 4 bytes @ 0x19
  1178                           
  1179     0039                     ___flsub@a:	
  1180                           ; 4 bytes @ 0x19
  1181                           
  1182     0039                     ___flmul@b:	
  1183                           ; 4 bytes @ 0x19
  1184                           
  1185                           
  1186                           ; 4 bytes @ 0x19
  1187     0039                     	ds	4
  1188     003D                     ___flsub@b:
  1189     003D                     ___flmul@a:	
  1190                           ; 4 bytes @ 0x1D
  1191                           
  1192                           
  1193                           ; 4 bytes @ 0x1D
  1194     003D                     	ds	4
  1195     0041                     ??___flmul:
  1196                           
  1197                           ; 1 bytes @ 0x21
  1198     0041                     	ds	5
  1199     0046                     ___flmul@sign:
  1200                           
  1201                           ; 1 bytes @ 0x26
  1202     0046                     	ds	1
  1203     0047                     ___flmul@aexp:
  1204                           
  1205                           ; 1 bytes @ 0x27
  1206     0047                     	ds	1
  1207     0048                     ___flmul@bexp:
  1208                           
  1209                           ; 1 bytes @ 0x28
  1210     0048                     	ds	1
  1211     0049                     ___flmul@grs:
  1212                           
  1213                           ; 4 bytes @ 0x29
  1214     0049                     	ds	4
  1215     004D                     ___flmul@prod:
  1216                           
  1217                           ; 4 bytes @ 0x2D
  1218     004D                     	ds	4
  1219     0051                     ___flmul@temp:
  1220                           
  1221                           ; 2 bytes @ 0x31
  1222     0051                     	ds	2
  1223     0053                     ?_fround:
  1224     0053                     ?_scale:	
  1225                           ; 4 bytes @ 0x33
  1226                           
  1227     0053                     ?___fldiv:	
  1228                           ; 4 bytes @ 0x33
  1229                           
  1230     0053                     ___fldiv@a:	
  1231                           ; 4 bytes @ 0x33
  1232                           
  1233                           
  1234                           ; 4 bytes @ 0x33
  1235     0053                     	ds	4
  1236     0057                     ??_fround:
  1237     0057                     ??_scale:	
  1238                           ; 1 bytes @ 0x37
  1239                           
  1240     0057                     ___fldiv@b:	
  1241                           ; 1 bytes @ 0x37
  1242                           
  1243                           
  1244                           ; 4 bytes @ 0x37
  1245     0057                     	ds	4
  1246     005B                     ??___fldiv:
  1247                           
  1248                           ; 1 bytes @ 0x3B
  1249     005B                     	ds	1
  1250     005C                     _fround$1056:
  1251                           
  1252                           ; 4 bytes @ 0x3C
  1253     005C                     	ds	4
  1254     0060                     ___fldiv@rem:
  1255     0060                     _fround$1055:	
  1256                           ; 4 bytes @ 0x40
  1257                           
  1258                           
  1259                           ; 4 bytes @ 0x40
  1260     0060                     	ds	1
  1261     0061                     _scale$1057:
  1262                           
  1263                           ; 4 bytes @ 0x41
  1264     0061                     	ds	3
  1265     0064                     fround@prec:
  1266     0064                     ___fldiv@sign:	
  1267                           ; 1 bytes @ 0x44
  1268                           
  1269                           
  1270                           ; 1 bytes @ 0x44
  1271     0064                     	ds	1
  1272     0065                     scale@scl:
  1273     0065                     ___fldiv@new_exp:	
  1274                           ; 1 bytes @ 0x45
  1275                           
  1276                           
  1277                           ; 2 bytes @ 0x45
  1278     0065                     	ds	1
  1279     0066                     ?___fltol:
  1280     0066                     ___fltol@f1:	
  1281                           ; 4 bytes @ 0x46
  1282                           
  1283                           
  1284                           ; 4 bytes @ 0x46
  1285     0066                     	ds	1
  1286     0067                     ___fldiv@grs:
  1287                           
  1288                           ; 4 bytes @ 0x47
  1289     0067                     	ds	3
  1290     006A                     ??___fltol:
  1291                           
  1292                           ; 1 bytes @ 0x4A
  1293     006A                     	ds	1
  1294     006B                     ___fldiv@bexp:
  1295                           
  1296                           ; 1 bytes @ 0x4B
  1297     006B                     	ds	1
  1298     006C                     ___fldiv@aexp:
  1299                           
  1300                           ; 1 bytes @ 0x4C
  1301     006C                     	ds	2
  1302     006E                     ___fltol@sign1:
  1303                           
  1304                           ; 1 bytes @ 0x4E
  1305     006E                     	ds	1
  1306     006F                     ___fltol@exp1:
  1307                           
  1308                           ; 1 bytes @ 0x4F
  1309     006F                     	ds	1
  1310                           
  1311                           	psect	maintext
  1312     1543                     __pmaintext:	
  1313 ;;
  1314 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1315 ;;
  1316 ;; *************** function _main *****************
  1317 ;; Defined at:
  1318 ;;		line 146 in file "controle.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;		None
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;  c               1   30[BANK3 ] unsigned char 
  1323 ;;  i               2   31[BANK3 ] int 
  1324 ;;  buffer         30    0[BANK3 ] unsigned char [30]
  1325 ;;  temp            4   34[BANK3 ] float 
  1326 ;;  duty_cycle      1   33[BANK3 ] unsigned char 
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      void 
  1329 ;; Registers used:
  1330 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1331 ;; Tracked objects:
  1332 ;;		On entry : B00/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1336 ;;      Params:         0       0       0       0       0
  1337 ;;      Locals:         0       0       0      38       0
  1338 ;;      Temps:          0       0       2       0       0
  1339 ;;      Totals:         0       0       2      38       0
  1340 ;;Total ram usage:       40 bytes
  1341 ;; Hardware stack levels required when called: 5
  1342 ;; This function calls:
  1343 ;;		_LM35
  1344 ;;		_PWM_init
  1345 ;;		_Timer0_init
  1346 ;;		_UART_init
  1347 ;;		___fladd
  1348 ;;		___flge
  1349 ;;		___flmul
  1350 ;;		___fltol
  1351 ;;		_controle_pwm
  1352 ;;		_lcd_init
  1353 ;;		_sprintf
  1354 ;;		_velocidade
  1355 ;; This function is called by:
  1356 ;;		Startup code after reset
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360     1543                     _main:	
  1361                           ;psect for function _main
  1362                           
  1363                           
  1364                           ;controle.c: 148:     float temp;;controle.c: 149:     unsigned char duty_cycle;;control
      +                          e.c: 150:     char buffer[30];;controle.c: 151:     ANSELH = 0;
  1365                           
  1366                           ;incstack = 0
  1367                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1368     1543  1683               	bsf	3,5	;RP0=1, select bank3
  1369     1544  1703               	bsf	3,6	;RP1=1, select bank3
  1370     1545  0189               	clrf	9	;volatile
  1371                           
  1372                           ;controle.c: 152:     TRISB = 0;
  1373     1546  1303               	bcf	3,6	;RP1=0, select bank1
  1374     1547  0186               	clrf	6	;volatile
  1375                           
  1376                           ;controle.c: 154:     UART_init();
  1377     1548  160A  158A  24E2  160A  118A  	fcall	_UART_init
  1378                           
  1379                           ;controle.c: 155:     PWM_init();
  1380     154D  160A  158A  2528  160A  118A  	fcall	_PWM_init
  1381                           
  1382                           ;controle.c: 156:     Timer0_init();
  1383     1552  160A  158A  24CA  160A  118A  	fcall	_Timer0_init
  1384                           
  1385                           ;controle.c: 157:     TRISCbits.TRISC3 = 0;
  1386     1557  1683               	bsf	3,5	;RP0=1, select bank1
  1387     1558  1187               	bcf	7,3	;volatile
  1388                           
  1389                           ;controle.c: 158:     lcd_init(&lcd_pins);
  1390     1559  30B6               	movlw	(low (_lcd_pins| (0+256)))& (0+255)
  1391     155A  160A  118A  2473  160A  118A  	fcall	_lcd_init
  1392     155F                     l5032:
  1393                           
  1394                           ;controle.c: 162:         temp = LM35();
  1395     155F  160A  118A  23C5  160A  118A  	fcall	_LM35
  1396     1564  0823               	movf	(?_LM35+3)^(0+128),w
  1397     1565  1703               	bsf	3,6	;RP1=1, select bank3
  1398     1566  00B5               	movwf	(main@temp+3)^(0+384)
  1399     1567  1303               	bcf	3,6	;RP1=0, select bank1
  1400     1568  0822               	movf	(?_LM35+2)^(0+128),w
  1401     1569  1703               	bsf	3,6	;RP1=1, select bank3
  1402     156A  00B4               	movwf	(main@temp+2)^(0+384)
  1403     156B  1303               	bcf	3,6	;RP1=0, select bank1
  1404     156C  0821               	movf	(?_LM35+1)^(0+128),w
  1405     156D  1703               	bsf	3,6	;RP1=1, select bank3
  1406     156E  00B3               	movwf	(main@temp+1)^(0+384)
  1407     156F  1303               	bcf	3,6	;RP1=0, select bank1
  1408     1570  0820               	movf	?_LM35^(0+128),w
  1409     1571  1703               	bsf	3,6	;RP1=1, select bank3
  1410     1572  00B2               	movwf	main@temp^(0+384)
  1411                           
  1412                           ;controle.c: 164:         if (temp < 25) {
  1413     1573  0835               	movf	(main@temp+3)^(0+384),w
  1414     1574  00F5               	movwf	___flge@ff1+3
  1415     1575  0834               	movf	(main@temp+2)^(0+384),w
  1416     1576  00F4               	movwf	___flge@ff1+2
  1417     1577  0833               	movf	(main@temp+1)^(0+384),w
  1418     1578  00F3               	movwf	___flge@ff1+1
  1419     1579  0832               	movf	main@temp^(0+384),w
  1420     157A  00F2               	movwf	___flge@ff1
  1421     157B  3041               	movlw	65
  1422     157C  00F9               	movwf	___flge@ff2+3
  1423     157D  30C8               	movlw	200
  1424     157E  00F8               	movwf	___flge@ff2+2
  1425     157F  3000               	movlw	0
  1426     1580  00F7               	movwf	___flge@ff2+1
  1427     1581  3000               	movlw	0
  1428     1582  00F6               	movwf	___flge@ff2
  1429     1583  160A  118A  2148  160A  118A  	fcall	___flge
  1430     1588  1803               	btfsc	3,0
  1431     1589  2D8E               	goto	l5038
  1432                           
  1433                           ;controle.c: 165:             duty_cycle = 0;
  1434     158A  1683               	bsf	3,5	;RP0=1, select bank3
  1435     158B  1703               	bsf	3,6	;RP1=1, select bank3
  1436     158C  01B1               	clrf	main@duty_cycle^(0+384)
  1437                           
  1438                           ;controle.c: 166:         } else if (temp > 50) {
  1439     158D  2DF4               	goto	l5044
  1440     158E                     l5038:
  1441     158E  3042               	movlw	66
  1442     158F  00F5               	movwf	___flge@ff1+3
  1443     1590  3048               	movlw	72
  1444     1591  00F4               	movwf	___flge@ff1+2
  1445     1592  3000               	movlw	0
  1446     1593  00F3               	movwf	___flge@ff1+1
  1447     1594  3000               	movlw	0
  1448     1595  00F2               	movwf	___flge@ff1
  1449     1596  1683               	bsf	3,5	;RP0=1, select bank3
  1450     1597  1703               	bsf	3,6	;RP1=1, select bank3
  1451     1598  0835               	movf	(main@temp+3)^(0+384),w
  1452     1599  00F9               	movwf	___flge@ff2+3
  1453     159A  0834               	movf	(main@temp+2)^(0+384),w
  1454     159B  00F8               	movwf	___flge@ff2+2
  1455     159C  0833               	movf	(main@temp+1)^(0+384),w
  1456     159D  00F7               	movwf	___flge@ff2+1
  1457     159E  0832               	movf	main@temp^(0+384),w
  1458     159F  00F6               	movwf	___flge@ff2
  1459     15A0  160A  118A  2148  160A  118A  	fcall	___flge
  1460     15A5  1803               	btfsc	3,0
  1461     15A6  2DA9               	goto	l5042
  1462                           
  1463                           ;controle.c: 167:             duty_cycle = 255;
  1464     15A7  30FF               	movlw	255
  1465     15A8  2DF1               	goto	L1
  1466     15A9                     l5042:	
  1467                           ;controle.c: 168:         } else {
  1468                           
  1469                           
  1470                           ;controle.c: 169:             duty_cycle = (unsigned char)((temp - 25) * 10.2);
  1471     15A9  1683               	bsf	3,5	;RP0=1, select bank3
  1472     15AA  1703               	bsf	3,6	;RP1=1, select bank3
  1473     15AB  0835               	movf	(main@temp+3)^(0+384),w
  1474     15AC  1283               	bcf	3,5	;RP0=0, select bank0
  1475     15AD  1303               	bcf	3,6	;RP1=0, select bank0
  1476     15AE  00AC               	movwf	___fladd@a+3
  1477     15AF  1683               	bsf	3,5	;RP0=1, select bank3
  1478     15B0  1703               	bsf	3,6	;RP1=1, select bank3
  1479     15B1  0834               	movf	(main@temp+2)^(0+384),w
  1480     15B2  1283               	bcf	3,5	;RP0=0, select bank0
  1481     15B3  1303               	bcf	3,6	;RP1=0, select bank0
  1482     15B4  00AB               	movwf	___fladd@a+2
  1483     15B5  1683               	bsf	3,5	;RP0=1, select bank3
  1484     15B6  1703               	bsf	3,6	;RP1=1, select bank3
  1485     15B7  0833               	movf	(main@temp+1)^(0+384),w
  1486     15B8  1283               	bcf	3,5	;RP0=0, select bank0
  1487     15B9  1303               	bcf	3,6	;RP1=0, select bank0
  1488     15BA  00AA               	movwf	___fladd@a+1
  1489     15BB  1683               	bsf	3,5	;RP0=1, select bank3
  1490     15BC  1703               	bsf	3,6	;RP1=1, select bank3
  1491     15BD  0832               	movf	main@temp^(0+384),w
  1492     15BE  1283               	bcf	3,5	;RP0=0, select bank0
  1493     15BF  1303               	bcf	3,6	;RP1=0, select bank0
  1494     15C0  00A9               	movwf	___fladd@a
  1495     15C1  30C1               	movlw	193
  1496     15C2  00A8               	movwf	___fladd@b+3
  1497     15C3  30C8               	movlw	200
  1498     15C4  00A7               	movwf	___fladd@b+2
  1499     15C5  3000               	movlw	0
  1500     15C6  00A6               	movwf	___fladd@b+1
  1501     15C7  3000               	movlw	0
  1502     15C8  00A5               	movwf	___fladd@b
  1503     15C9  120A  118A  25DD  160A  118A  	fcall	___fladd
  1504     15CE  0828               	movf	?___fladd+3,w
  1505     15CF  00C0               	movwf	___flmul@a+3
  1506     15D0  0827               	movf	?___fladd+2,w
  1507     15D1  00BF               	movwf	___flmul@a+2
  1508     15D2  0826               	movf	?___fladd+1,w
  1509     15D3  00BE               	movwf	___flmul@a+1
  1510     15D4  0825               	movf	?___fladd,w
  1511     15D5  00BD               	movwf	___flmul@a
  1512     15D6  3041               	movlw	65
  1513     15D7  00BC               	movwf	___flmul@b+3
  1514     15D8  3023               	movlw	35
  1515     15D9  00BB               	movwf	___flmul@b+2
  1516     15DA  3033               	movlw	51
  1517     15DB  00BA               	movwf	___flmul@b+1
  1518     15DC  3033               	movlw	51
  1519     15DD  00B9               	movwf	___flmul@b
  1520     15DE  120A  158A  21FF  160A  118A  	fcall	___flmul
  1521     15E3  083C               	movf	?___flmul+3,w
  1522     15E4  00E9               	movwf	___fltol@f1+3
  1523     15E5  083B               	movf	?___flmul+2,w
  1524     15E6  00E8               	movwf	___fltol@f1+2
  1525     15E7  083A               	movf	?___flmul+1,w
  1526     15E8  00E7               	movwf	___fltol@f1+1
  1527     15E9  0839               	movf	?___flmul,w
  1528     15EA  00E6               	movwf	___fltol@f1
  1529     15EB  160A  158A  2799  160A  118A  	fcall	___fltol
  1530     15F0  0866               	movf	?___fltol,w
  1531     15F1                     L1:
  1532     15F1  1683               	bsf	3,5	;RP0=1, select bank3
  1533     15F2  1703               	bsf	3,6	;RP1=1, select bank3
  1534     15F3  00B1               	movwf	main@duty_cycle^(0+384)
  1535     15F4                     l5044:
  1536                           
  1537                           ;controle.c: 172:         sprintf(buffer, "ADC0: %f, Duty: %uc \r\n", temp, duty_cycle);
  1538     15F4  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1539     15F5  1303               	bcf	3,6	;RP1=0, select bank1
  1540     15F6  00A0               	movwf	sprintf@f^(0+128)
  1541     15F7  1703               	bsf	3,6	;RP1=1, select bank3
  1542     15F8  0835               	movf	(main@temp+3)^(0+384),w
  1543     15F9  1303               	bcf	3,6	;RP1=0, select bank1
  1544     15FA  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1545     15FB  1703               	bsf	3,6	;RP1=1, select bank3
  1546     15FC  0834               	movf	(main@temp+2)^(0+384),w
  1547     15FD  1303               	bcf	3,6	;RP1=0, select bank1
  1548     15FE  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1549     15FF  1703               	bsf	3,6	;RP1=1, select bank3
  1550     1600  0833               	movf	(main@temp+1)^(0+384),w
  1551     1601  1303               	bcf	3,6	;RP1=0, select bank1
  1552     1602  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1553     1603  1703               	bsf	3,6	;RP1=1, select bank3
  1554     1604  0832               	movf	main@temp^(0+384),w
  1555     1605  1303               	bcf	3,6	;RP1=0, select bank1
  1556     1606  00A1               	movwf	(?_sprintf^(0+128)+1)
  1557     1607  1703               	bsf	3,6	;RP1=1, select bank3
  1558     1608  0831               	movf	main@duty_cycle^(0+384),w
  1559     1609  1303               	bcf	3,6	;RP1=0, select bank1
  1560     160A  00C5               	movwf	??_main^(0+128)
  1561     160B  01C6               	clrf	(??_main^(0+128)+1)
  1562     160C  0845               	movf	??_main^(0+128),w
  1563     160D  00A5               	movwf	(?_sprintf^(0+128)+5)
  1564     160E  0846               	movf	(??_main+1)^(0+128),w
  1565     160F  00A6               	movwf	((?_sprintf+1)^(0+128)+5)
  1566     1610  3090               	movlw	(low (main@buffer| (0+256)))& (0+255)
  1567     1611  120A  118A  2035  160A  118A  	fcall	_sprintf
  1568                           
  1569                           ;controle.c: 173:         for (int i = 0; buffer[i] != '\0'; i++)
  1570     1616  1703               	bsf	3,6	;RP1=1, select bank3
  1571     1617  01AF               	clrf	main@i^(0+384)
  1572     1618  01B0               	clrf	(main@i+1)^(0+384)
  1573     1619                     l5052:
  1574     1619  082F               	movf	main@i^(0+384),w
  1575     161A  3E90               	addlw	(low (main@buffer| (0+256)))& (0+255)
  1576     161B  0084               	movwf	4
  1577     161C  1783               	bsf	3,7	;select IRP bank3
  1578     161D  0800               	movf	0,w
  1579     161E  1903               	btfsc	3,2
  1580     161F  2E32               	goto	l138
  1581                           
  1582                           ;controle.c: 174:         {;controle.c: 175:             TXREG = buffer[i];
  1583     1620  082F               	movf	main@i^(0+384),w
  1584     1621  3E90               	addlw	(low (main@buffer| (0+256)))& (0+255)
  1585     1622  0084               	movwf	4
  1586     1623  0800               	movf	0,w
  1587     1624  1283               	bcf	3,5	;RP0=0, select bank0
  1588     1625  1303               	bcf	3,6	;RP1=0, select bank0
  1589     1626  0099               	movwf	25	;volatile
  1590     1627                     l135:	
  1591                           ;controle.c: 176:             while (!TXSTAbits.TRMT);
  1592                           
  1593     1627  1683               	bsf	3,5	;RP0=1, select bank1
  1594     1628  1C98               	btfss	24,1	;volatile
  1595     1629  2E27               	goto	l135
  1596                           
  1597                           ;controle.c: 177:         }
  1598     162A  3001               	movlw	1
  1599     162B  1703               	bsf	3,6	;RP1=1, select bank3
  1600     162C  07AF               	addwf	main@i^(0+384),f
  1601     162D  1803               	skipnc
  1602     162E  0AB0               	incf	(main@i+1)^(0+384),f
  1603     162F  3000               	movlw	0
  1604     1630  07B0               	addwf	(main@i+1)^(0+384),f
  1605     1631  2E19               	goto	l5052
  1606     1632                     l138:
  1607                           
  1608                           ;controle.c: 178:         if (RCIF)
  1609     1632  1283               	bcf	3,5	;RP0=0, select bank0
  1610     1633  1303               	bcf	3,6	;RP1=0, select bank0
  1611     1634  1E8C               	btfss	12,5	;volatile
  1612     1635  2E56               	goto	l5072
  1613                           
  1614                           ;controle.c: 179:         {;controle.c: 180:             char c = RCREG;
  1615     1636  081A               	movf	26,w	;volatile
  1616     1637  1683               	bsf	3,5	;RP0=1, select bank3
  1617     1638  1703               	bsf	3,6	;RP1=1, select bank3
  1618     1639  00AE               	movwf	main@c^(0+384)
  1619                           
  1620                           ;controle.c: 181:             if (c == '0' && pwm_enabled) {
  1621     163A  3030               	movlw	48
  1622     163B  062E               	xorwf	main@c^(0+384),w
  1623     163C  1D03               	btfss	3,2
  1624     163D  2E44               	goto	l5064
  1625     163E  1303               	bcf	3,6	;RP1=0, select bank1
  1626     163F  084D               	movf	_pwm_enabled^(0+128),w
  1627     1640  1903               	btfsc	3,2
  1628     1641  2E44               	goto	l5064
  1629                           
  1630                           ;controle.c: 182:                 controle_pwm(0);
  1631     1642  3000               	movlw	0
  1632     1643  2E4E               	goto	L2
  1633     1644                     l5064:	
  1634                           ;controle.c: 184:             } else if (c == '1' && !pwm_enabled) {
  1635                           
  1636     1644  3031               	movlw	49
  1637     1645  1703               	bsf	3,6	;RP1=1, select bank3
  1638     1646  062E               	xorwf	main@c^(0+384),w
  1639     1647  1D03               	btfss	3,2
  1640     1648  2E56               	goto	l5072
  1641     1649  1303               	bcf	3,6	;RP1=0, select bank1
  1642     164A  084D               	movf	_pwm_enabled^(0+128),w
  1643     164B  1D03               	btfss	3,2
  1644     164C  2E56               	goto	l5072
  1645                           
  1646                           ;controle.c: 185:                 controle_pwm(1);
  1647     164D  3001               	movlw	1
  1648     164E                     L2:
  1649     164E  160A  158A  2501  160A  118A  	fcall	_controle_pwm
  1650                           
  1651                           ;controle.c: 183:                 TXREG = 'P';
  1652     1653  3050               	movlw	80
  1653     1654  1283               	bcf	3,5	;RP0=0, select bank0
  1654     1655  0099               	movwf	25	;volatile
  1655     1656                     l5072:
  1656                           
  1657                           ;controle.c: 189:         velocidade(duty_cycle);
  1658     1656  1683               	bsf	3,5	;RP0=1, select bank3
  1659     1657  1703               	bsf	3,6	;RP1=1, select bank3
  1660     1658  0831               	movf	main@duty_cycle^(0+384),w
  1661     1659  160A  158A  24BA  160A  118A  	fcall	_velocidade
  1662                           
  1663                           ;controle.c: 191:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1664     165E  3082               	movlw	130
  1665     165F  1683               	bsf	3,5	;RP0=1, select bank1
  1666     1660  1303               	bcf	3,6	;RP1=0, select bank1
  1667     1661  00C6               	movwf	(??_main^(0+128)+1)
  1668     1662  30DD               	movlw	221
  1669     1663  00C5               	movwf	??_main^(0+128)
  1670     1664                     u8767:
  1671     1664  0BC5               	decfsz	??_main^(0+128),f
  1672     1665  2E64               	goto	u8767
  1673     1666  0BC6               	decfsz	(??_main^(0+128)+1),f
  1674     1667  2E64               	goto	u8767
  1675     1668  2D5F               	goto	l5032
  1676     1669                     __end_of_main:
  1677                           
  1678                           	psect	text1
  1679     1CBA                     __ptext1:	
  1680 ;; *************** function _velocidade *****************
  1681 ;; Defined at:
  1682 ;;		line 113 in file "controle.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;  duty            1    wreg     unsigned char 
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;  duty            1    2[COMMON] unsigned char 
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  1    wreg      void 
  1689 ;; Registers used:
  1690 ;;		wreg, status,2
  1691 ;; Tracked objects:
  1692 ;;		On entry : 300/B00
  1693 ;;		On exit  : 300/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1696 ;;      Params:         0       0       0       0       0
  1697 ;;      Locals:         1       0       0       0       0
  1698 ;;      Temps:          0       0       0       0       0
  1699 ;;      Totals:         1       0       0       0       0
  1700 ;;Total ram usage:        1 bytes
  1701 ;; Hardware stack levels used: 1
  1702 ;; Hardware stack levels required when called: 1
  1703 ;; This function calls:
  1704 ;;		Nothing
  1705 ;; This function is called by:
  1706 ;;		_main
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710     1CBA                     _velocidade:	
  1711                           ;psect for function _velocidade
  1712                           
  1713                           
  1714                           ;incstack = 0
  1715                           ; Regs used in _velocidade: [wreg+status,2]
  1716                           ;velocidade@duty stored from wreg
  1717     1CBA  00F2               	movwf	velocidade@duty
  1718                           
  1719                           ;controle.c: 113: void velocidade(char duty);controle.c: 114: {;controle.c: 115:     CCP
      +                          R1L = duty;
  1720     1CBB  0872               	movf	velocidade@duty,w
  1721     1CBC  1283               	bcf	3,5	;RP0=0, select bank0
  1722     1CBD  1303               	bcf	3,6	;RP1=0, select bank0
  1723     1CBE  0095               	movwf	21	;volatile
  1724                           
  1725                           ;controle.c: 116:     TMR2 = 0;
  1726     1CBF  0191               	clrf	17	;volatile
  1727     1CC0  0008               	return
  1728     1CC1                     __end_of_velocidade:
  1729                           
  1730                           	psect	text2
  1731     0035                     __ptext2:	
  1732 ;; *************** function _sprintf *****************
  1733 ;; Defined at:
  1734 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;  sp              1    wreg     PTR unsigned char 
  1737 ;;		 -> main@buffer(30), 
  1738 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1739 ;;		 -> STR_1(23), 
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;  sp              1   31[BANK1 ] PTR unsigned char 
  1742 ;;		 -> main@buffer(30), 
  1743 ;;  fval            4   32[BANK1 ] PTR unsigned char 
  1744 ;;  tmpval          4   27[BANK1 ] struct .
  1745 ;;  val             4   21[BANK1 ] unsigned long 
  1746 ;;  eexp            2   25[BANK1 ] int 
  1747 ;;  prec            2   19[BANK1 ] int 
  1748 ;;  flag            2   17[BANK1 ] unsigned short 
  1749 ;;  cp              2    0        PTR const unsigned char 
  1750 ;;  len             2    0        unsigned int 
  1751 ;;  width           2    0        int 
  1752 ;;  c               1   36[BANK1 ] unsigned char 
  1753 ;;  ap              1   16[BANK1 ] PTR void [1]
  1754 ;;		 -> ?_sprintf(2), 
  1755 ;;  d               1    0        unsigned char 
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  2    0[BANK1 ] int 
  1758 ;; Registers used:
  1759 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1760 ;; Tracked objects:
  1761 ;;		On entry : 300/100
  1762 ;;		On exit  : B00/900
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1765 ;;      Params:         0       0       7       0       0
  1766 ;;      Locals:         0       0      25       0       0
  1767 ;;      Temps:          0       0       5       0       0
  1768 ;;      Totals:         0       0      37       0       0
  1769 ;;Total ram usage:       37 bytes
  1770 ;; Hardware stack levels used: 1
  1771 ;; Hardware stack levels required when called: 4
  1772 ;; This function calls:
  1773 ;;		___awdiv
  1774 ;;		___fladd
  1775 ;;		___fleq
  1776 ;;		___flge
  1777 ;;		___flmul
  1778 ;;		___flneg
  1779 ;;		___flsub
  1780 ;;		___fltol
  1781 ;;		___lldiv
  1782 ;;		___llmod
  1783 ;;		___wmul
  1784 ;;		___xxtofl
  1785 ;;		__div_to_l_
  1786 ;;		__tdiv_to_l_
  1787 ;;		_fround
  1788 ;;		_scale
  1789 ;; This function is called by:
  1790 ;;		_main
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794     0035                     _sprintf:	
  1795                           ;psect for function _sprintf
  1796                           
  1797                           
  1798                           ;incstack = 0
  1799                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1800                           ;sprintf@sp stored from wreg
  1801     0035  00BF               	movwf	sprintf@sp^(0+128)
  1802                           
  1803                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1804     0036  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1805     0037  00B0               	movwf	sprintf@ap^(0+128)
  1806     0038                     l5008:	
  1807                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1808                           
  1809                           
  1810                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1811     0038  3001               	movlw	1
  1812     0039  07A0               	addwf	sprintf@f^(0+128),f
  1813     003A  30FF               	movlw	-1
  1814     003B  0720               	addwf	sprintf@f^(0+128),w
  1815     003C  0084               	movwf	4
  1816     003D  160A  118A  2000  120A  118A  	fcall	stringdir
  1817     0042  00C4               	movwf	sprintf@c^(0+128)
  1818     0043  0844               	movf	sprintf@c^(0+128),w
  1819     0044  1903               	btfsc	3,2
  1820     0045  2DD8               	goto	l5010
  1821                           
  1822                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1823     0046  3025               	movlw	37
  1824     0047  0644               	xorwf	sprintf@c^(0+128),w
  1825     0048  1903               	btfsc	3,2
  1826     0049  2854               	goto	l4820
  1827                           
  1828                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1829     004A  083F               	movf	sprintf@sp^(0+128),w
  1830     004B  0084               	movwf	4
  1831     004C  0844               	movf	sprintf@c^(0+128),w
  1832     004D  1783               	bsf	3,7	;select IRP bank2
  1833     004E  0080               	movwf	0
  1834     004F  3001               	movlw	1
  1835     0050  00FF               	movwf	127
  1836     0051  087F               	movf	127,w
  1837     0052  07BF               	addwf	sprintf@sp^(0+128),f
  1838                           
  1839                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  1840     0053  2838               	goto	l5008
  1841     0054                     l4820:
  1842                           
  1843                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1844     0054  01B1               	clrf	sprintf@flag^(0+128)
  1845     0055  01B2               	clrf	(sprintf@flag+1)^(0+128)
  1846                           
  1847                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1848     0056  285E               	goto	l4826
  1849     0057                     l341:	
  1850                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1851                           
  1852                           
  1853                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1854     0057  1532               	bsf	(sprintf@flag^(0+128)+1),2
  1855                           
  1856                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 690:    break;
  1857     0058  287B               	goto	l4828
  1858     0059                     l4822:
  1859                           
  1860                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1861     0059  30C0               	movlw	192
  1862     005A  04B1               	iorwf	sprintf@flag^(0+128),f
  1863     005B  3000               	movlw	0
  1864     005C  04B2               	iorwf	(sprintf@flag+1)^(0+128),f
  1865                           
  1866                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 845:    break;
  1867     005D  287B               	goto	l4828
  1868     005E                     l4826:
  1869     005E  3001               	movlw	1
  1870     005F  07A0               	addwf	sprintf@f^(0+128),f
  1871     0060  30FF               	movlw	-1
  1872     0061  0720               	addwf	sprintf@f^(0+128),w
  1873     0062  0084               	movwf	4
  1874     0063  160A  118A  2000  120A  118A  	fcall	stringdir
  1875     0068  00C4               	movwf	sprintf@c^(0+128)
  1876     0069  00A7               	movwf	??_sprintf^(0+128)
  1877     006A  01A8               	clrf	(??_sprintf^(0+128)+1)
  1878                           
  1879                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1880                           ; Switch size 1, requested type "simple"
  1881                           ; Number of cases is 1, Range of values is 0 to 0
  1882                           ; switch strategies available:
  1883                           ; Name         Instructions Cycles
  1884                           ; simple_byte            4     3 (average)
  1885                           ; direct_byte           11     8 (fixed)
  1886                           ; jumptable            260     6 (fixed)
  1887                           ;	Chosen strategy is simple_byte
  1888     006B  0828               	movf	(??_sprintf+1)^(0+128),w
  1889     006C  3A00               	xorlw	0	; case 0
  1890     006D  1903               	skipnz
  1891     006E  2870               	goto	l5104
  1892     006F  2838               	goto	l5008
  1893     0070                     l5104:
  1894                           
  1895                           ; Switch size 1, requested type "simple"
  1896                           ; Number of cases is 3, Range of values is 0 to 117
  1897                           ; switch strategies available:
  1898                           ; Name         Instructions Cycles
  1899                           ; simple_byte           10     6 (average)
  1900                           ; jumptable            260     6 (fixed)
  1901                           ;	Chosen strategy is simple_byte
  1902     0070  0827               	movf	??_sprintf^(0+128),w
  1903     0071  3A00               	xorlw	0	; case 0
  1904     0072  1903               	skipnz
  1905     0073  2DD8               	goto	l5010
  1906     0074  3A66               	xorlw	102	; case 102
  1907     0075  1903               	skipnz
  1908     0076  2857               	goto	l341
  1909     0077  3A13               	xorlw	19	; case 117
  1910     0078  1903               	skipnz
  1911     0079  2859               	goto	l4822
  1912     007A  2838               	goto	l5008
  1913     007B                     l4828:
  1914                           
  1915                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1916     007B  3000               	movlw	0
  1917     007C  0531               	andwf	sprintf@flag^(0+128),w
  1918     007D  00A7               	movwf	??_sprintf^(0+128)
  1919     007E  3007               	movlw	7
  1920     007F  0532               	andwf	(sprintf@flag+1)^(0+128),w
  1921     0080  00A8               	movwf	(??_sprintf+1)^(0+128)
  1922     0081  0827               	movf	??_sprintf^(0+128),w
  1923     0082  0428               	iorwf	(??_sprintf^(0+128)+1),w
  1924     0083  1903               	btfsc	3,2
  1925     0084  2D13               	goto	l4974
  1926                           
  1927                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1928     0085  3006               	movlw	6
  1929     0086  00B3               	movwf	sprintf@prec^(0+128)
  1930     0087  3000               	movlw	0
  1931     0088  00B4               	movwf	(sprintf@prec^(0+128)+1)
  1932                           
  1933                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1934     0089  0830               	movf	sprintf@ap^(0+128),w
  1935     008A  0084               	movwf	4
  1936     008B  1383               	bcf	3,7	;select IRP bank0
  1937     008C  0800               	movf	0,w
  1938     008D  00C0               	movwf	sprintf@fval^(0+128)
  1939     008E  0A84               	incf	4,f
  1940     008F  0800               	movf	0,w
  1941     0090  00C1               	movwf	(sprintf@fval+1)^(0+128)
  1942     0091  0A84               	incf	4,f
  1943     0092  0800               	movf	0,w
  1944     0093  00C2               	movwf	(sprintf@fval+2)^(0+128)
  1945     0094  0A84               	incf	4,f
  1946     0095  0800               	movf	0,w
  1947     0096  00C3               	movwf	(sprintf@fval+3)^(0+128)
  1948     0097  3004               	movlw	4
  1949     0098  00FF               	movwf	127
  1950     0099  087F               	movf	127,w
  1951     009A  07B0               	addwf	sprintf@ap^(0+128),f
  1952                           
  1953                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1954     009B  0843               	movf	(sprintf@fval+3)^(0+128),w
  1955     009C  00F5               	movwf	___flge@ff1+3
  1956     009D  0842               	movf	(sprintf@fval+2)^(0+128),w
  1957     009E  00F4               	movwf	___flge@ff1+2
  1958     009F  0841               	movf	(sprintf@fval+1)^(0+128),w
  1959     00A0  00F3               	movwf	___flge@ff1+1
  1960     00A1  0840               	movf	sprintf@fval^(0+128),w
  1961     00A2  00F2               	movwf	___flge@ff1
  1962     00A3  3000               	movlw	0
  1963     00A4  00F9               	movwf	___flge@ff2+3
  1964     00A5  3000               	movlw	0
  1965     00A6  00F8               	movwf	___flge@ff2+2
  1966     00A7  3000               	movlw	0
  1967     00A8  00F7               	movwf	___flge@ff2+1
  1968     00A9  3000               	movlw	0
  1969     00AA  00F6               	movwf	___flge@ff2
  1970     00AB  160A  118A  2148  120A  118A  	fcall	___flge
  1971     00B0  1803               	btfsc	3,0
  1972     00B1  28CC               	goto	l4842
  1973                           
  1974                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1975     00B2  1683               	bsf	3,5	;RP0=1, select bank1
  1976     00B3  0843               	movf	(sprintf@fval+3)^(0+128),w
  1977     00B4  00F5               	movwf	___flneg@f1+3
  1978     00B5  0842               	movf	(sprintf@fval+2)^(0+128),w
  1979     00B6  00F4               	movwf	___flneg@f1+2
  1980     00B7  0841               	movf	(sprintf@fval+1)^(0+128),w
  1981     00B8  00F3               	movwf	___flneg@f1+1
  1982     00B9  0840               	movf	sprintf@fval^(0+128),w
  1983     00BA  00F2               	movwf	___flneg@f1
  1984     00BB  160A  158A  24C1  120A  118A  	fcall	___flneg
  1985     00C0  0875               	movf	?___flneg+3,w
  1986     00C1  00C3               	movwf	(sprintf@fval+3)^(0+128)
  1987     00C2  0874               	movf	?___flneg+2,w
  1988     00C3  00C2               	movwf	(sprintf@fval+2)^(0+128)
  1989     00C4  0873               	movf	?___flneg+1,w
  1990     00C5  00C1               	movwf	(sprintf@fval+1)^(0+128)
  1991     00C6  0872               	movf	?___flneg,w
  1992     00C7  00C0               	movwf	sprintf@fval^(0+128)
  1993                           
  1994                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1995     00C8  3003               	movlw	3
  1996     00C9  04B1               	iorwf	sprintf@flag^(0+128),f
  1997     00CA  3000               	movlw	0
  1998     00CB  04B2               	iorwf	(sprintf@flag+1)^(0+128),f
  1999     00CC                     l4842:
  2000                           
  2001                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2002     00CC  1683               	bsf	3,5	;RP0=1, select bank1
  2003     00CD  01B9               	clrf	sprintf@eexp^(0+128)
  2004     00CE  01BA               	clrf	(sprintf@eexp+1)^(0+128)
  2005                           
  2006                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2007     00CF  0843               	movf	(sprintf@fval+3)^(0+128),w
  2008     00D0  00F5               	movwf	___fleq@ff1+3
  2009     00D1  0842               	movf	(sprintf@fval+2)^(0+128),w
  2010     00D2  00F4               	movwf	___fleq@ff1+2
  2011     00D3  0841               	movf	(sprintf@fval+1)^(0+128),w
  2012     00D4  00F3               	movwf	___fleq@ff1+1
  2013     00D5  0840               	movf	sprintf@fval^(0+128),w
  2014     00D6  00F2               	movwf	___fleq@ff1
  2015     00D7  3000               	movlw	0
  2016     00D8  00F9               	movwf	___fleq@ff2+3
  2017     00D9  3000               	movlw	0
  2018     00DA  00F8               	movwf	___fleq@ff2+2
  2019     00DB  3000               	movlw	0
  2020     00DC  00F7               	movwf	___fleq@ff2+1
  2021     00DD  3000               	movlw	0
  2022     00DE  00F6               	movwf	___fleq@ff2
  2023     00DF  160A  158A  2601  120A  118A  	fcall	___fleq
  2024     00E4  1803               	btfsc	3,0
  2025     00E5  29AE               	goto	l4872
  2026                           
  2027                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2028     00E6  1003               	clrc
  2029     00E7  1683               	bsf	3,5	;RP0=1, select bank1
  2030     00E8  0D42               	rlf	(sprintf@fval+2)^(0+128),w
  2031     00E9  0D43               	rlf	(sprintf@fval+3)^(0+128),w
  2032     00EA  3E82               	addlw	130
  2033     00EB  00B9               	movwf	sprintf@eexp^(0+128)
  2034     00EC  30FF               	movlw	255
  2035     00ED  1803               	skipnc
  2036     00EE  3000               	movlw	0
  2037     00EF  00BA               	movwf	(sprintf@eexp^(0+128)+1)
  2038                           
  2039                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2040     00F0  30FF               	movlw	255
  2041     00F1  07B9               	addwf	sprintf@eexp^(0+128),f
  2042     00F2  1803               	skipnc
  2043     00F3  0ABA               	incf	(sprintf@eexp+1)^(0+128),f
  2044     00F4  30FF               	movlw	255
  2045     00F5  07BA               	addwf	(sprintf@eexp+1)^(0+128),f
  2046                           
  2047                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2048     00F6  3003               	movlw	3
  2049     00F7  00F2               	movwf	___wmul@multiplier
  2050     00F8  3000               	movlw	0
  2051     00F9  00F3               	movwf	___wmul@multiplier+1
  2052     00FA  083A               	movf	(sprintf@eexp+1)^(0+128),w
  2053     00FB  00F5               	movwf	___wmul@multiplicand+1
  2054     00FC  0839               	movf	sprintf@eexp^(0+128),w
  2055     00FD  00F4               	movwf	___wmul@multiplicand
  2056     00FE  160A  158A  257C  120A  118A  	fcall	___wmul
  2057     0103  0873               	movf	?___wmul+1,w
  2058     0104  00BA               	movwf	(sprintf@eexp+1)^(0+128)
  2059     0105  0872               	movf	?___wmul,w
  2060     0106  00B9               	movwf	sprintf@eexp^(0+128)
  2061                           
  2062                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2063     0107  300A               	movlw	10
  2064     0108  1283               	bcf	3,5	;RP0=0, select bank0
  2065     0109  00A0               	movwf	___awdiv@divisor
  2066     010A  3000               	movlw	0
  2067     010B  00A1               	movwf	___awdiv@divisor+1
  2068     010C  1683               	bsf	3,5	;RP0=1, select bank1
  2069     010D  083A               	movf	(sprintf@eexp+1)^(0+128),w
  2070     010E  1283               	bcf	3,5	;RP0=0, select bank0
  2071     010F  00A3               	movwf	___awdiv@dividend+1
  2072     0110  1683               	bsf	3,5	;RP0=1, select bank1
  2073     0111  0839               	movf	sprintf@eexp^(0+128),w
  2074     0112  1283               	bcf	3,5	;RP0=0, select bank0
  2075     0113  00A2               	movwf	___awdiv@dividend
  2076     0114  160A  158A  26E1  120A  118A  	fcall	___awdiv
  2077     0119  0821               	movf	?___awdiv+1,w
  2078     011A  1683               	bsf	3,5	;RP0=1, select bank1
  2079     011B  00BA               	movwf	(sprintf@eexp+1)^(0+128)
  2080     011C  1283               	bcf	3,5	;RP0=0, select bank0
  2081     011D  0820               	movf	?___awdiv,w
  2082     011E  1683               	bsf	3,5	;RP0=1, select bank1
  2083     011F  00B9               	movwf	sprintf@eexp^(0+128)
  2084                           
  2085                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2086     0120  1FBA               	btfss	(sprintf@eexp+1)^(0+128),7
  2087     0121  2928               	goto	l4858
  2088                           
  2089                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2090     0122  30FF               	movlw	255
  2091     0123  07B9               	addwf	sprintf@eexp^(0+128),f
  2092     0124  1803               	skipnc
  2093     0125  0ABA               	incf	(sprintf@eexp+1)^(0+128),f
  2094     0126  30FF               	movlw	255
  2095     0127  07BA               	addwf	(sprintf@eexp+1)^(0+128),f
  2096     0128                     l4858:
  2097                           
  2098                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2099     0128  0339               	decf	sprintf@eexp^(0+128),w
  2100     0129  3AFF               	xorlw	255
  2101     012A  120A  158A  24D8  120A  118A  	fcall	_scale
  2102     012F  0856               	movf	?_scale+3,w
  2103     0130  1683               	bsf	3,5	;RP0=1, select bank1
  2104     0131  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2105     0132  1283               	bcf	3,5	;RP0=0, select bank0
  2106     0133  0855               	movf	?_scale+2,w
  2107     0134  1683               	bsf	3,5	;RP0=1, select bank1
  2108     0135  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2109     0136  1283               	bcf	3,5	;RP0=0, select bank0
  2110     0137  0854               	movf	?_scale+1,w
  2111     0138  1683               	bsf	3,5	;RP0=1, select bank1
  2112     0139  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2113     013A  1283               	bcf	3,5	;RP0=0, select bank0
  2114     013B  0853               	movf	?_scale,w
  2115     013C  1683               	bsf	3,5	;RP0=1, select bank1
  2116     013D  00BB               	movwf	sprintf@tmpval^(0+128)
  2117                           
  2118                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2119     013E  0843               	movf	(sprintf@fval+3)^(0+128),w
  2120     013F  1283               	bcf	3,5	;RP0=0, select bank0
  2121     0140  00BC               	movwf	___flmul@b+3
  2122     0141  1683               	bsf	3,5	;RP0=1, select bank1
  2123     0142  0842               	movf	(sprintf@fval+2)^(0+128),w
  2124     0143  1283               	bcf	3,5	;RP0=0, select bank0
  2125     0144  00BB               	movwf	___flmul@b+2
  2126     0145  1683               	bsf	3,5	;RP0=1, select bank1
  2127     0146  0841               	movf	(sprintf@fval+1)^(0+128),w
  2128     0147  1283               	bcf	3,5	;RP0=0, select bank0
  2129     0148  00BA               	movwf	___flmul@b+1
  2130     0149  1683               	bsf	3,5	;RP0=1, select bank1
  2131     014A  0840               	movf	sprintf@fval^(0+128),w
  2132     014B  1283               	bcf	3,5	;RP0=0, select bank0
  2133     014C  00B9               	movwf	___flmul@b
  2134     014D  1683               	bsf	3,5	;RP0=1, select bank1
  2135     014E  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2136     014F  1283               	bcf	3,5	;RP0=0, select bank0
  2137     0150  00C0               	movwf	___flmul@a+3
  2138     0151  1683               	bsf	3,5	;RP0=1, select bank1
  2139     0152  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2140     0153  1283               	bcf	3,5	;RP0=0, select bank0
  2141     0154  00BF               	movwf	___flmul@a+2
  2142     0155  1683               	bsf	3,5	;RP0=1, select bank1
  2143     0156  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2144     0157  1283               	bcf	3,5	;RP0=0, select bank0
  2145     0158  00BE               	movwf	___flmul@a+1
  2146     0159  1683               	bsf	3,5	;RP0=1, select bank1
  2147     015A  083B               	movf	sprintf@tmpval^(0+128),w
  2148     015B  1283               	bcf	3,5	;RP0=0, select bank0
  2149     015C  00BD               	movwf	___flmul@a
  2150     015D  120A  158A  21FF  120A  118A  	fcall	___flmul
  2151     0162  083C               	movf	?___flmul+3,w
  2152     0163  1683               	bsf	3,5	;RP0=1, select bank1
  2153     0164  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2154     0165  1283               	bcf	3,5	;RP0=0, select bank0
  2155     0166  083B               	movf	?___flmul+2,w
  2156     0167  1683               	bsf	3,5	;RP0=1, select bank1
  2157     0168  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2158     0169  1283               	bcf	3,5	;RP0=0, select bank0
  2159     016A  083A               	movf	?___flmul+1,w
  2160     016B  1683               	bsf	3,5	;RP0=1, select bank1
  2161     016C  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2162     016D  1283               	bcf	3,5	;RP0=0, select bank0
  2163     016E  0839               	movf	?___flmul,w
  2164     016F  1683               	bsf	3,5	;RP0=1, select bank1
  2165     0170  00BB               	movwf	sprintf@tmpval^(0+128)
  2166                           
  2167                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2168     0171  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2169     0172  00F5               	movwf	___flge@ff1+3
  2170     0173  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2171     0174  00F4               	movwf	___flge@ff1+2
  2172     0175  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2173     0176  00F3               	movwf	___flge@ff1+1
  2174     0177  083B               	movf	sprintf@tmpval^(0+128),w
  2175     0178  00F2               	movwf	___flge@ff1
  2176     0179  303F               	movlw	63
  2177     017A  00F9               	movwf	___flge@ff2+3
  2178     017B  3080               	movlw	128
  2179     017C  00F8               	movwf	___flge@ff2+2
  2180     017D  3000               	movlw	0
  2181     017E  00F7               	movwf	___flge@ff2+1
  2182     017F  3000               	movlw	0
  2183     0180  00F6               	movwf	___flge@ff2
  2184     0181  160A  118A  2148  120A  118A  	fcall	___flge
  2185     0186  1803               	btfsc	3,0
  2186     0187  298F               	goto	l4866
  2187                           
  2188                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2189     0188  30FF               	movlw	255
  2190     0189  1683               	bsf	3,5	;RP0=1, select bank1
  2191     018A  07B9               	addwf	sprintf@eexp^(0+128),f
  2192     018B  1803               	skipnc
  2193     018C  0ABA               	incf	(sprintf@eexp+1)^(0+128),f
  2194     018D  30FF               	movlw	255
  2195     018E  29AD               	goto	L6
  2196     018F                     l4866:
  2197     018F  1683               	bsf	3,5	;RP0=1, select bank1
  2198     0190  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2199     0191  00F5               	movwf	___flge@ff1+3
  2200     0192  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2201     0193  00F4               	movwf	___flge@ff1+2
  2202     0194  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2203     0195  00F3               	movwf	___flge@ff1+1
  2204     0196  083B               	movf	sprintf@tmpval^(0+128),w
  2205     0197  00F2               	movwf	___flge@ff1
  2206     0198  3041               	movlw	65
  2207     0199  00F9               	movwf	___flge@ff2+3
  2208     019A  3020               	movlw	32
  2209     019B  00F8               	movwf	___flge@ff2+2
  2210     019C  3000               	movlw	0
  2211     019D  00F7               	movwf	___flge@ff2+1
  2212     019E  3000               	movlw	0
  2213     019F  00F6               	movwf	___flge@ff2
  2214     01A0  160A  118A  2148  120A  118A  	fcall	___flge
  2215     01A5  1C03               	btfss	3,0
  2216     01A6  29AE               	goto	l4872
  2217                           
  2218                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2219     01A7  3001               	movlw	1
  2220     01A8  1683               	bsf	3,5	;RP0=1, select bank1
  2221     01A9  07B9               	addwf	sprintf@eexp^(0+128),f
  2222     01AA  1803               	skipnc
  2223     01AB  0ABA               	incf	(sprintf@eexp+1)^(0+128),f
  2224     01AC  3000               	movlw	0
  2225     01AD                     L6:
  2226     01AD  07BA               	addwf	(sprintf@eexp+1)^(0+128),f
  2227     01AE                     l4872:	
  2228                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2229                           
  2230                           
  2231                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2232     01AE  3006               	movlw	6
  2233     01AF  120A  158A  2048  120A  118A  	fcall	_fround
  2234     01B4  0856               	movf	?_fround+3,w
  2235     01B5  00A8               	movwf	___fladd@b+3
  2236     01B6  0855               	movf	?_fround+2,w
  2237     01B7  00A7               	movwf	___fladd@b+2
  2238     01B8  0854               	movf	?_fround+1,w
  2239     01B9  00A6               	movwf	___fladd@b+1
  2240     01BA  0853               	movf	?_fround,w
  2241     01BB  00A5               	movwf	___fladd@b
  2242     01BC  1683               	bsf	3,5	;RP0=1, select bank1
  2243     01BD  0843               	movf	(sprintf@fval+3)^(0+128),w
  2244     01BE  1283               	bcf	3,5	;RP0=0, select bank0
  2245     01BF  00AC               	movwf	___fladd@a+3
  2246     01C0  1683               	bsf	3,5	;RP0=1, select bank1
  2247     01C1  0842               	movf	(sprintf@fval+2)^(0+128),w
  2248     01C2  1283               	bcf	3,5	;RP0=0, select bank0
  2249     01C3  00AB               	movwf	___fladd@a+2
  2250     01C4  1683               	bsf	3,5	;RP0=1, select bank1
  2251     01C5  0841               	movf	(sprintf@fval+1)^(0+128),w
  2252     01C6  1283               	bcf	3,5	;RP0=0, select bank0
  2253     01C7  00AA               	movwf	___fladd@a+1
  2254     01C8  1683               	bsf	3,5	;RP0=1, select bank1
  2255     01C9  0840               	movf	sprintf@fval^(0+128),w
  2256     01CA  1283               	bcf	3,5	;RP0=0, select bank0
  2257     01CB  00A9               	movwf	___fladd@a
  2258     01CC  120A  118A  25DD  120A  118A  	fcall	___fladd
  2259     01D1  0828               	movf	?___fladd+3,w
  2260     01D2  1683               	bsf	3,5	;RP0=1, select bank1
  2261     01D3  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2262     01D4  1283               	bcf	3,5	;RP0=0, select bank0
  2263     01D5  0827               	movf	?___fladd+2,w
  2264     01D6  1683               	bsf	3,5	;RP0=1, select bank1
  2265     01D7  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2266     01D8  1283               	bcf	3,5	;RP0=0, select bank0
  2267     01D9  0826               	movf	?___fladd+1,w
  2268     01DA  1683               	bsf	3,5	;RP0=1, select bank1
  2269     01DB  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2270     01DC  1283               	bcf	3,5	;RP0=0, select bank0
  2271     01DD  0825               	movf	?___fladd,w
  2272     01DE  1683               	bsf	3,5	;RP0=1, select bank1
  2273     01DF  00C0               	movwf	sprintf@fval^(0+128)
  2274                           
  2275                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2276     01E0  083A               	movf	(sprintf@eexp+1)^(0+128),w
  2277     01E1  3A80               	xorlw	128
  2278     01E2  00FF               	movwf	127
  2279     01E3  3080               	movlw	128
  2280     01E4  027F               	subwf	127,w
  2281     01E5  1D03               	skipz
  2282     01E6  29E9               	goto	u8425
  2283     01E7  300A               	movlw	10
  2284     01E8  0239               	subwf	sprintf@eexp^(0+128),w
  2285     01E9                     u8425:
  2286     01E9  1803               	skipnc
  2287     01EA  2A2B               	goto	l4882
  2288     01EB  1683               	bsf	3,5	;RP0=1, select bank1
  2289     01EC  1303               	bcf	3,6	;RP1=0, select bank1
  2290     01ED  0843               	movf	(sprintf@fval+3)^(0+128),w
  2291     01EE  00F5               	movwf	___fleq@ff1+3
  2292     01EF  0842               	movf	(sprintf@fval+2)^(0+128),w
  2293     01F0  00F4               	movwf	___fleq@ff1+2
  2294     01F1  0841               	movf	(sprintf@fval+1)^(0+128),w
  2295     01F2  00F3               	movwf	___fleq@ff1+1
  2296     01F3  0840               	movf	sprintf@fval^(0+128),w
  2297     01F4  00F2               	movwf	___fleq@ff1
  2298     01F5  3000               	movlw	0
  2299     01F6  00F9               	movwf	___fleq@ff2+3
  2300     01F7  3000               	movlw	0
  2301     01F8  00F8               	movwf	___fleq@ff2+2
  2302     01F9  3000               	movlw	0
  2303     01FA  00F7               	movwf	___fleq@ff2+1
  2304     01FB  3000               	movlw	0
  2305     01FC  00F6               	movwf	___fleq@ff2
  2306     01FD  160A  158A  2601  120A  118A  	fcall	___fleq
  2307     0202  1803               	btfsc	3,0
  2308     0203  2A89               	goto	l4896
  2309     0204  1683               	bsf	3,5	;RP0=1, select bank1
  2310     0205  0843               	movf	(sprintf@fval+3)^(0+128),w
  2311     0206  1283               	bcf	3,5	;RP0=0, select bank0
  2312     0207  00E9               	movwf	___fltol@f1+3
  2313     0208  1683               	bsf	3,5	;RP0=1, select bank1
  2314     0209  0842               	movf	(sprintf@fval+2)^(0+128),w
  2315     020A  1283               	bcf	3,5	;RP0=0, select bank0
  2316     020B  00E8               	movwf	___fltol@f1+2
  2317     020C  1683               	bsf	3,5	;RP0=1, select bank1
  2318     020D  0841               	movf	(sprintf@fval+1)^(0+128),w
  2319     020E  1283               	bcf	3,5	;RP0=0, select bank0
  2320     020F  00E7               	movwf	___fltol@f1+1
  2321     0210  1683               	bsf	3,5	;RP0=1, select bank1
  2322     0211  0840               	movf	sprintf@fval^(0+128),w
  2323     0212  1283               	bcf	3,5	;RP0=0, select bank0
  2324     0213  00E6               	movwf	___fltol@f1
  2325     0214  160A  158A  2799  120A  118A  	fcall	___fltol
  2326     0219  0869               	movf	?___fltol+3,w
  2327     021A  0468               	iorwf	?___fltol+2,w
  2328     021B  0467               	iorwf	?___fltol+1,w
  2329     021C  0466               	iorwf	?___fltol,w
  2330     021D  1D03               	skipz
  2331     021E  2A89               	goto	l4896
  2332     021F  1683               	bsf	3,5	;RP0=1, select bank1
  2333     0220  083A               	movf	(sprintf@eexp+1)^(0+128),w
  2334     0221  3A80               	xorlw	128
  2335     0222  00FF               	movwf	127
  2336     0223  3080               	movlw	128
  2337     0224  027F               	subwf	127,w
  2338     0225  1D03               	skipz
  2339     0226  2A29               	goto	u8455
  2340     0227  3002               	movlw	2
  2341     0228  0239               	subwf	sprintf@eexp^(0+128),w
  2342     0229                     u8455:
  2343     0229  1C03               	skipc
  2344     022A  2A89               	goto	l4896
  2345     022B                     l4882:
  2346                           
  2347                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2348     022B  1683               	bsf	3,5	;RP0=1, select bank1
  2349     022C  1303               	bcf	3,6	;RP1=0, select bank1
  2350     022D  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2351     022E  00F5               	movwf	___flge@ff1+3
  2352     022F  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2353     0230  00F4               	movwf	___flge@ff1+2
  2354     0231  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2355     0232  00F3               	movwf	___flge@ff1+1
  2356     0233  083B               	movf	sprintf@tmpval^(0+128),w
  2357     0234  00F2               	movwf	___flge@ff1
  2358     0235  3040               	movlw	64
  2359     0236  00F9               	movwf	___flge@ff2+3
  2360     0237  3089               	movlw	137
  2361     0238  00F8               	movwf	___flge@ff2+2
  2362     0239  3070               	movlw	112
  2363     023A  00F7               	movwf	___flge@ff2+1
  2364     023B  305F               	movlw	95
  2365     023C  00F6               	movwf	___flge@ff2
  2366     023D  160A  118A  2148  120A  118A  	fcall	___flge
  2367     0242  1803               	btfsc	3,0
  2368     0243  2A46               	goto	l4886
  2369                           
  2370                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2371     0244  30F7               	movlw	247
  2372     0245  2A47               	goto	L3
  2373     0246                     l4886:	
  2374                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2375                           
  2376                           
  2377                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2378     0246  30F8               	movlw	248
  2379     0247                     L3:
  2380     0247  1683               	bsf	3,5	;RP0=1, select bank1
  2381     0248  07B9               	addwf	sprintf@eexp^(0+128),f
  2382     0249  1803               	skipnc
  2383     024A  0ABA               	incf	(sprintf@eexp+1)^(0+128),f
  2384     024B  30FF               	movlw	255
  2385     024C  07BA               	addwf	(sprintf@eexp+1)^(0+128),f
  2386                           
  2387                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2388     024D  0839               	movf	sprintf@eexp^(0+128),w
  2389     024E  120A  158A  24D8  120A  118A  	fcall	_scale
  2390     0253  0856               	movf	?_scale+3,w
  2391     0254  1683               	bsf	3,5	;RP0=1, select bank1
  2392     0255  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2393     0256  1283               	bcf	3,5	;RP0=0, select bank0
  2394     0257  0855               	movf	?_scale+2,w
  2395     0258  1683               	bsf	3,5	;RP0=1, select bank1
  2396     0259  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2397     025A  1283               	bcf	3,5	;RP0=0, select bank0
  2398     025B  0854               	movf	?_scale+1,w
  2399     025C  1683               	bsf	3,5	;RP0=1, select bank1
  2400     025D  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2401     025E  1283               	bcf	3,5	;RP0=0, select bank0
  2402     025F  0853               	movf	?_scale,w
  2403     0260  1683               	bsf	3,5	;RP0=1, select bank1
  2404     0261  00BB               	movwf	sprintf@tmpval^(0+128)
  2405     0262  0843               	movf	(sprintf@fval+3)^(0+128),w
  2406     0263  00F5               	movwf	__div_to_l_@f1+3
  2407     0264  0842               	movf	(sprintf@fval+2)^(0+128),w
  2408     0265  00F4               	movwf	__div_to_l_@f1+2
  2409     0266  0841               	movf	(sprintf@fval+1)^(0+128),w
  2410     0267  00F3               	movwf	__div_to_l_@f1+1
  2411     0268  0840               	movf	sprintf@fval^(0+128),w
  2412     0269  00F2               	movwf	__div_to_l_@f1
  2413     026A  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2414     026B  00F9               	movwf	__div_to_l_@f2+3
  2415     026C  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2416     026D  00F8               	movwf	__div_to_l_@f2+2
  2417     026E  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2418     026F  00F7               	movwf	__div_to_l_@f2+1
  2419     0270  083B               	movf	sprintf@tmpval^(0+128),w
  2420     0271  00F6               	movwf	__div_to_l_@f2
  2421     0272  160A  118A  227F  120A  118A  	fcall	__div_to_l_
  2422     0277  0875               	movf	?__div_to_l_+3,w
  2423     0278  1683               	bsf	3,5	;RP0=1, select bank1
  2424     0279  00B8               	movwf	(sprintf@val+3)^(0+128)
  2425     027A  0874               	movf	?__div_to_l_+2,w
  2426     027B  00B7               	movwf	(sprintf@val+2)^(0+128)
  2427     027C  0873               	movf	?__div_to_l_+1,w
  2428     027D  00B6               	movwf	(sprintf@val+1)^(0+128)
  2429     027E  0872               	movf	?__div_to_l_,w
  2430     027F  00B5               	movwf	sprintf@val^(0+128)
  2431                           
  2432                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2433     0280  3000               	movlw	0
  2434     0281  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2435     0282  3000               	movlw	0
  2436     0283  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2437     0284  3000               	movlw	0
  2438     0285  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2439     0286  3000               	movlw	0
  2440     0287  00C0               	movwf	sprintf@fval^(0+128)
  2441                           
  2442                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2443     0288  2AEA               	goto	l4900
  2444     0289                     l4896:
  2445                           
  2446                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2447     0289  1683               	bsf	3,5	;RP0=1, select bank1
  2448     028A  1303               	bcf	3,6	;RP1=0, select bank1
  2449     028B  0843               	movf	(sprintf@fval+3)^(0+128),w
  2450     028C  1283               	bcf	3,5	;RP0=0, select bank0
  2451     028D  00E9               	movwf	___fltol@f1+3
  2452     028E  1683               	bsf	3,5	;RP0=1, select bank1
  2453     028F  0842               	movf	(sprintf@fval+2)^(0+128),w
  2454     0290  1283               	bcf	3,5	;RP0=0, select bank0
  2455     0291  00E8               	movwf	___fltol@f1+2
  2456     0292  1683               	bsf	3,5	;RP0=1, select bank1
  2457     0293  0841               	movf	(sprintf@fval+1)^(0+128),w
  2458     0294  1283               	bcf	3,5	;RP0=0, select bank0
  2459     0295  00E7               	movwf	___fltol@f1+1
  2460     0296  1683               	bsf	3,5	;RP0=1, select bank1
  2461     0297  0840               	movf	sprintf@fval^(0+128),w
  2462     0298  1283               	bcf	3,5	;RP0=0, select bank0
  2463     0299  00E6               	movwf	___fltol@f1
  2464     029A  160A  158A  2799  120A  118A  	fcall	___fltol
  2465     029F  0869               	movf	?___fltol+3,w
  2466     02A0  1683               	bsf	3,5	;RP0=1, select bank1
  2467     02A1  00B8               	movwf	(sprintf@val+3)^(0+128)
  2468     02A2  1283               	bcf	3,5	;RP0=0, select bank0
  2469     02A3  0868               	movf	?___fltol+2,w
  2470     02A4  1683               	bsf	3,5	;RP0=1, select bank1
  2471     02A5  00B7               	movwf	(sprintf@val+2)^(0+128)
  2472     02A6  1283               	bcf	3,5	;RP0=0, select bank0
  2473     02A7  0867               	movf	?___fltol+1,w
  2474     02A8  1683               	bsf	3,5	;RP0=1, select bank1
  2475     02A9  00B6               	movwf	(sprintf@val+1)^(0+128)
  2476     02AA  1283               	bcf	3,5	;RP0=0, select bank0
  2477     02AB  0866               	movf	?___fltol,w
  2478     02AC  1683               	bsf	3,5	;RP0=1, select bank1
  2479     02AD  00B5               	movwf	sprintf@val^(0+128)
  2480                           
  2481                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2482     02AE  0838               	movf	(sprintf@val+3)^(0+128),w
  2483     02AF  00F5               	movwf	___xxtofl@val+3
  2484     02B0  0837               	movf	(sprintf@val+2)^(0+128),w
  2485     02B1  00F4               	movwf	___xxtofl@val+2
  2486     02B2  0836               	movf	(sprintf@val+1)^(0+128),w
  2487     02B3  00F3               	movwf	___xxtofl@val+1
  2488     02B4  0835               	movf	sprintf@val^(0+128),w
  2489     02B5  00F2               	movwf	___xxtofl@val
  2490     02B6  3000               	movlw	0
  2491     02B7  160A  118A  21DD  120A  118A  	fcall	___xxtofl
  2492     02BC  0875               	movf	?___xxtofl+3,w
  2493     02BD  00BC               	movwf	___flsub@a+3
  2494     02BE  0874               	movf	?___xxtofl+2,w
  2495     02BF  00BB               	movwf	___flsub@a+2
  2496     02C0  0873               	movf	?___xxtofl+1,w
  2497     02C1  00BA               	movwf	___flsub@a+1
  2498     02C2  0872               	movf	?___xxtofl,w
  2499     02C3  00B9               	movwf	___flsub@a
  2500     02C4  1683               	bsf	3,5	;RP0=1, select bank1
  2501     02C5  0843               	movf	(sprintf@fval+3)^(0+128),w
  2502     02C6  1283               	bcf	3,5	;RP0=0, select bank0
  2503     02C7  00C0               	movwf	___flsub@b+3
  2504     02C8  1683               	bsf	3,5	;RP0=1, select bank1
  2505     02C9  0842               	movf	(sprintf@fval+2)^(0+128),w
  2506     02CA  1283               	bcf	3,5	;RP0=0, select bank0
  2507     02CB  00BF               	movwf	___flsub@b+2
  2508     02CC  1683               	bsf	3,5	;RP0=1, select bank1
  2509     02CD  0841               	movf	(sprintf@fval+1)^(0+128),w
  2510     02CE  1283               	bcf	3,5	;RP0=0, select bank0
  2511     02CF  00BE               	movwf	___flsub@b+1
  2512     02D0  1683               	bsf	3,5	;RP0=1, select bank1
  2513     02D1  0840               	movf	sprintf@fval^(0+128),w
  2514     02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2515     02D3  00BD               	movwf	___flsub@b
  2516     02D4  160A  158A  253F  120A  118A  	fcall	___flsub
  2517     02D9  083C               	movf	?___flsub+3,w
  2518     02DA  1683               	bsf	3,5	;RP0=1, select bank1
  2519     02DB  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2520     02DC  1283               	bcf	3,5	;RP0=0, select bank0
  2521     02DD  083B               	movf	?___flsub+2,w
  2522     02DE  1683               	bsf	3,5	;RP0=1, select bank1
  2523     02DF  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2524     02E0  1283               	bcf	3,5	;RP0=0, select bank0
  2525     02E1  083A               	movf	?___flsub+1,w
  2526     02E2  1683               	bsf	3,5	;RP0=1, select bank1
  2527     02E3  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2528     02E4  1283               	bcf	3,5	;RP0=0, select bank0
  2529     02E5  0839               	movf	?___flsub,w
  2530     02E6  1683               	bsf	3,5	;RP0=1, select bank1
  2531     02E7  00C0               	movwf	sprintf@fval^(0+128)
  2532                           
  2533                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2534     02E8  01B9               	clrf	sprintf@eexp^(0+128)
  2535     02E9  01BA               	clrf	(sprintf@eexp+1)^(0+128)
  2536     02EA                     l4900:
  2537                           
  2538                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2539     02EA  01C4               	clrf	sprintf@c^(0+128)
  2540     02EB  0AC4               	incf	sprintf@c^(0+128),f
  2541     02EC                     l4906:
  2542                           
  2543                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2544     02EC  0844               	movf	sprintf@c^(0+128),w
  2545     02ED  00A7               	movwf	??_sprintf^(0+128)
  2546     02EE  3001               	movlw	1
  2547     02EF                     u8475:
  2548     02EF  1003               	clrc
  2549     02F0  0DA7               	rlf	??_sprintf^(0+128),f
  2550     02F1  3EFF               	addlw	-1
  2551     02F2  1D03               	skipz
  2552     02F3  2AEF               	goto	u8475
  2553     02F4  1003               	clrc
  2554     02F5  0D27               	rlf	??_sprintf^(0+128),w
  2555     02F6  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2556     02F7  0084               	movwf	4
  2557     02F8  160A  118A  2000  120A  118A  	fcall	stringdir
  2558     02FD  00A8               	movwf	(??_sprintf+1)^(0+128)
  2559     02FE  160A  118A  2000  120A  118A  	fcall	stringdir
  2560     0303  00A9               	movwf	((??_sprintf+1)^(0+128)+1)
  2561     0304  160A  118A  2000  120A  118A  	fcall	stringdir
  2562     0309  00AA               	movwf	((??_sprintf+1)^(0+128)+2)
  2563     030A  160A  118A  2000  120A  118A  	fcall	stringdir
  2564     030F  00AB               	movwf	((??_sprintf+1)^(0+128)+3)
  2565     0310  082B               	movf	(??_sprintf+4)^(0+128),w
  2566     0311  0238               	subwf	(sprintf@val+3)^(0+128),w
  2567     0312  1D03               	skipz
  2568     0313  2B1E               	goto	u8485
  2569     0314  082A               	movf	(??_sprintf+3)^(0+128),w
  2570     0315  0237               	subwf	(sprintf@val+2)^(0+128),w
  2571     0316  1D03               	skipz
  2572     0317  2B1E               	goto	u8485
  2573     0318  0829               	movf	(??_sprintf+2)^(0+128),w
  2574     0319  0236               	subwf	(sprintf@val+1)^(0+128),w
  2575     031A  1D03               	skipz
  2576     031B  2B1E               	goto	u8485
  2577     031C  0828               	movf	(??_sprintf+1)^(0+128),w
  2578     031D  0235               	subwf	sprintf@val^(0+128),w
  2579     031E                     u8485:
  2580     031E  1C03               	btfss	3,0
  2581     031F  2B28               	goto	l4914
  2582     0320  3001               	movlw	1
  2583     0321  00FF               	movwf	127
  2584     0322  087F               	movf	127,w
  2585     0323  07C4               	addwf	sprintf@c^(0+128),f
  2586     0324  300A               	movlw	10
  2587     0325  0644               	xorwf	sprintf@c^(0+128),w
  2588     0326  1D03               	btfss	3,2
  2589     0327  2AEC               	goto	l4906
  2590     0328                     l4914:
  2591                           
  2592                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  2593     0328  0831               	movf	sprintf@flag^(0+128),w
  2594     0329  3903               	andlw	3
  2595     032A  1903               	btfsc	3,2
  2596     032B  2B35               	goto	l4928
  2597                           
  2598                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  2599     032C  083F               	movf	sprintf@sp^(0+128),w
  2600     032D  0084               	movwf	4
  2601     032E  302D               	movlw	45
  2602     032F                     L7:
  2603     032F  1783               	bsf	3,7	;select IRP bank2
  2604     0330  0080               	movwf	0
  2605     0331  3001               	movlw	1
  2606     0332  00FF               	movwf	127
  2607     0333  087F               	movf	127,w
  2608     0334  07BF               	addwf	sprintf@sp^(0+128),f
  2609     0335                     l4928:
  2610                           
  2611                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  2612     0335  3001               	movlw	1
  2613     0336  02C4               	subwf	sprintf@c^(0+128),f
  2614     0337  0A44               	incf	sprintf@c^(0+128),w
  2615     0338  1903               	btfsc	3,2
  2616     0339  2BB7               	goto	l4936
  2617                           
  2618                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2619     033A  0844               	movf	sprintf@c^(0+128),w
  2620     033B  00A7               	movwf	??_sprintf^(0+128)
  2621     033C  3001               	movlw	1
  2622     033D                     u8515:
  2623     033D  1003               	clrc
  2624     033E  0DA7               	rlf	??_sprintf^(0+128),f
  2625     033F  3EFF               	addlw	-1
  2626     0340  1D03               	skipz
  2627     0341  2B3D               	goto	u8515
  2628     0342  1003               	clrc
  2629     0343  0D27               	rlf	??_sprintf^(0+128),w
  2630     0344  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2631     0345  0084               	movwf	4
  2632     0346  160A  118A  2000  120A  118A  	fcall	stringdir
  2633     034B  00F2               	movwf	___lldiv@divisor
  2634     034C  160A  118A  2000  120A  118A  	fcall	stringdir
  2635     0351  00F3               	movwf	___lldiv@divisor+1
  2636     0352  160A  118A  2000  120A  118A  	fcall	stringdir
  2637     0357  00F4               	movwf	___lldiv@divisor+2
  2638     0358  160A  118A  2000  120A  118A  	fcall	stringdir
  2639     035D  00F5               	movwf	___lldiv@divisor+3
  2640     035E  0838               	movf	(sprintf@val+3)^(0+128),w
  2641     035F  00F9               	movwf	___lldiv@dividend+3
  2642     0360  0837               	movf	(sprintf@val+2)^(0+128),w
  2643     0361  00F8               	movwf	___lldiv@dividend+2
  2644     0362  0836               	movf	(sprintf@val+1)^(0+128),w
  2645     0363  00F7               	movwf	___lldiv@dividend+1
  2646     0364  0835               	movf	sprintf@val^(0+128),w
  2647     0365  00F6               	movwf	___lldiv@dividend
  2648     0366  160A  158A  273A  120A  118A  	fcall	___lldiv
  2649     036B  0875               	movf	?___lldiv+3,w
  2650     036C  1683               	bsf	3,5	;RP0=1, select bank1
  2651     036D  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2652     036E  0874               	movf	?___lldiv+2,w
  2653     036F  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2654     0370  0873               	movf	?___lldiv+1,w
  2655     0371  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2656     0372  0872               	movf	?___lldiv,w
  2657     0373  00BB               	movwf	sprintf@tmpval^(0+128)
  2658                           
  2659                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  2660     0374  3000               	movlw	0
  2661     0375  1283               	bcf	3,5	;RP0=0, select bank0
  2662     0376  00A9               	movwf	___llmod@divisor+3
  2663     0377  3000               	movlw	0
  2664     0378  00A8               	movwf	___llmod@divisor+2
  2665     0379  3000               	movlw	0
  2666     037A  00A7               	movwf	___llmod@divisor+1
  2667     037B  300A               	movlw	10
  2668     037C  00A6               	movwf	___llmod@divisor
  2669     037D  1683               	bsf	3,5	;RP0=1, select bank1
  2670     037E  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2671     037F  1283               	bcf	3,5	;RP0=0, select bank0
  2672     0380  00AD               	movwf	___llmod@dividend+3
  2673     0381  1683               	bsf	3,5	;RP0=1, select bank1
  2674     0382  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2675     0383  1283               	bcf	3,5	;RP0=0, select bank0
  2676     0384  00AC               	movwf	___llmod@dividend+2
  2677     0385  1683               	bsf	3,5	;RP0=1, select bank1
  2678     0386  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2679     0387  1283               	bcf	3,5	;RP0=0, select bank0
  2680     0388  00AB               	movwf	___llmod@dividend+1
  2681     0389  1683               	bsf	3,5	;RP0=1, select bank1
  2682     038A  083B               	movf	sprintf@tmpval^(0+128),w
  2683     038B  1283               	bcf	3,5	;RP0=0, select bank0
  2684     038C  00AA               	movwf	___llmod@dividend
  2685     038D  160A  158A  2695  120A  118A  	fcall	___llmod
  2686     0392  0829               	movf	?___llmod+3,w
  2687     0393  1683               	bsf	3,5	;RP0=1, select bank1
  2688     0394  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2689     0395  1283               	bcf	3,5	;RP0=0, select bank0
  2690     0396  0828               	movf	?___llmod+2,w
  2691     0397  1683               	bsf	3,5	;RP0=1, select bank1
  2692     0398  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2693     0399  1283               	bcf	3,5	;RP0=0, select bank0
  2694     039A  0827               	movf	?___llmod+1,w
  2695     039B  1683               	bsf	3,5	;RP0=1, select bank1
  2696     039C  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2697     039D  1283               	bcf	3,5	;RP0=0, select bank0
  2698     039E  0826               	movf	?___llmod,w
  2699     039F  1683               	bsf	3,5	;RP0=1, select bank1
  2700     03A0  00BB               	movwf	sprintf@tmpval^(0+128)
  2701                           
  2702                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  2703     03A1  083F               	movf	sprintf@sp^(0+128),w
  2704     03A2  0084               	movwf	4
  2705     03A3  083B               	movf	sprintf@tmpval^(0+128),w
  2706     03A4  3E30               	addlw	48
  2707     03A5  2B2F               	goto	L7
  2708     03A6                     l4930:
  2709                           
  2710                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  2711     03A6  1683               	bsf	3,5	;RP0=1, select bank1
  2712     03A7  1303               	bcf	3,6	;RP1=0, select bank1
  2713     03A8  083F               	movf	sprintf@sp^(0+128),w
  2714     03A9  0084               	movwf	4
  2715     03AA  3030               	movlw	48
  2716     03AB  1783               	bsf	3,7	;select IRP bank2
  2717     03AC  0080               	movwf	0
  2718     03AD  3001               	movlw	1
  2719     03AE  00FF               	movwf	127
  2720     03AF  087F               	movf	127,w
  2721     03B0  07BF               	addwf	sprintf@sp^(0+128),f
  2722                           
  2723                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  2724     03B1  30FF               	movlw	255
  2725     03B2  07B9               	addwf	sprintf@eexp^(0+128),f
  2726     03B3  1803               	skipnc
  2727     03B4  0ABA               	incf	(sprintf@eexp+1)^(0+128),f
  2728     03B5  30FF               	movlw	255
  2729     03B6  07BA               	addwf	(sprintf@eexp+1)^(0+128),f
  2730     03B7                     l4936:
  2731                           
  2732                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  2733     03B7  083A               	movf	(sprintf@eexp+1)^(0+128),w
  2734     03B8  3A80               	xorlw	128
  2735     03B9  00FF               	movwf	127
  2736     03BA  3080               	movlw	128
  2737     03BB  027F               	subwf	127,w
  2738     03BC  1D03               	skipz
  2739     03BD  2BC0               	goto	u8535
  2740     03BE  3001               	movlw	1
  2741     03BF  0239               	subwf	sprintf@eexp^(0+128),w
  2742     03C0                     u8535:
  2743     03C0  1803               	skipnc
  2744     03C1  2BA6               	goto	l4930
  2745                           
  2746                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2747     03C2  1683               	bsf	3,5	;RP0=1, select bank1
  2748     03C3  1303               	bcf	3,6	;RP1=0, select bank1
  2749     03C4  0834               	movf	(sprintf@prec+1)^(0+128),w
  2750     03C5  3A80               	xorlw	128
  2751     03C6  00FF               	movwf	127
  2752     03C7  3080               	movlw	128
  2753     03C8  027F               	subwf	127,w
  2754     03C9  1D03               	skipz
  2755     03CA  2BCD               	goto	u8545
  2756     03CB  3009               	movlw	9
  2757     03CC  0233               	subwf	sprintf@prec^(0+128),w
  2758     03CD                     u8545:
  2759     03CD  1C03               	skipc
  2760     03CE  2BD3               	goto	l4942
  2761                           
  2762                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  2763     03CF  3008               	movlw	8
  2764     03D0  1683               	bsf	3,5	;RP0=1, select bank1
  2765     03D1  1303               	bcf	3,6	;RP1=0, select bank1
  2766     03D2  2BD6               	goto	L4
  2767     03D3                     l4942:
  2768                           
  2769                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  2770     03D3  1683               	bsf	3,5	;RP0=1, select bank1
  2771     03D4  1303               	bcf	3,6	;RP1=0, select bank1
  2772     03D5  0833               	movf	sprintf@prec^(0+128),w
  2773     03D6                     L4:
  2774     03D6  00C4               	movwf	sprintf@c^(0+128)
  2775                           
  2776                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  2777     03D7  0844               	movf	sprintf@c^(0+128),w
  2778     03D8  00A7               	movwf	??_sprintf^(0+128)
  2779     03D9  01A8               	clrf	(??_sprintf^(0+128)+1)
  2780     03DA  0827               	movf	??_sprintf^(0+128),w
  2781     03DB  02B3               	subwf	sprintf@prec^(0+128),f
  2782     03DC  0828               	movf	(??_sprintf+1)^(0+128),w
  2783     03DD  1C03               	skipc
  2784     03DE  03B4               	decf	(sprintf@prec+1)^(0+128),f
  2785     03DF  02B4               	subwf	(sprintf@prec+1)^(0+128),f
  2786                           
  2787                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  2788     03E0  0844               	movf	sprintf@c^(0+128),w
  2789     03E1  1903               	btfsc	3,2
  2790     03E2  2BEC               	goto	l4950
  2791                           
  2792                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  2793     03E3  083F               	movf	sprintf@sp^(0+128),w
  2794     03E4  0084               	movwf	4
  2795     03E5  302E               	movlw	46
  2796     03E6  1783               	bsf	3,7	;select IRP bank2
  2797     03E7  0080               	movwf	0
  2798     03E8  3001               	movlw	1
  2799     03E9  00FF               	movwf	127
  2800     03EA  087F               	movf	127,w
  2801     03EB  07BF               	addwf	sprintf@sp^(0+128),f
  2802     03EC                     l4950:
  2803                           
  2804                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  2805     03EC  0844               	movf	sprintf@c^(0+128),w
  2806     03ED  120A  158A  24D8  120A  118A  	fcall	_scale
  2807     03F2  0856               	movf	?_scale+3,w
  2808     03F3  1683               	bsf	3,5	;RP0=1, select bank1
  2809     03F4  00AF               	movwf	(_sprintf$1058+3)^(0+128)
  2810     03F5  1283               	bcf	3,5	;RP0=0, select bank0
  2811     03F6  0855               	movf	?_scale+2,w
  2812     03F7  1683               	bsf	3,5	;RP0=1, select bank1
  2813     03F8  00AE               	movwf	(_sprintf$1058+2)^(0+128)
  2814     03F9  1283               	bcf	3,5	;RP0=0, select bank0
  2815     03FA  0854               	movf	?_scale+1,w
  2816     03FB  1683               	bsf	3,5	;RP0=1, select bank1
  2817     03FC  00AD               	movwf	(_sprintf$1058+1)^(0+128)
  2818     03FD  1283               	bcf	3,5	;RP0=0, select bank0
  2819     03FE  0853               	movf	?_scale,w
  2820     03FF  1683               	bsf	3,5	;RP0=1, select bank1
  2821     0400  00AC               	movwf	_sprintf$1058^(0+128)
  2822                           
  2823                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  2824     0401  082F               	movf	(_sprintf$1058+3)^(0+128),w
  2825     0402  1283               	bcf	3,5	;RP0=0, select bank0
  2826     0403  00C0               	movwf	___flmul@a+3
  2827     0404  1683               	bsf	3,5	;RP0=1, select bank1
  2828     0405  082E               	movf	(_sprintf$1058+2)^(0+128),w
  2829     0406  1283               	bcf	3,5	;RP0=0, select bank0
  2830     0407  00BF               	movwf	___flmul@a+2
  2831     0408  1683               	bsf	3,5	;RP0=1, select bank1
  2832     0409  082D               	movf	(_sprintf$1058+1)^(0+128),w
  2833     040A  1283               	bcf	3,5	;RP0=0, select bank0
  2834     040B  00BE               	movwf	___flmul@a+1
  2835     040C  1683               	bsf	3,5	;RP0=1, select bank1
  2836     040D  082C               	movf	_sprintf$1058^(0+128),w
  2837     040E  1283               	bcf	3,5	;RP0=0, select bank0
  2838     040F  00BD               	movwf	___flmul@a
  2839     0410  1683               	bsf	3,5	;RP0=1, select bank1
  2840     0411  0843               	movf	(sprintf@fval+3)^(0+128),w
  2841     0412  1283               	bcf	3,5	;RP0=0, select bank0
  2842     0413  00BC               	movwf	___flmul@b+3
  2843     0414  1683               	bsf	3,5	;RP0=1, select bank1
  2844     0415  0842               	movf	(sprintf@fval+2)^(0+128),w
  2845     0416  1283               	bcf	3,5	;RP0=0, select bank0
  2846     0417  00BB               	movwf	___flmul@b+2
  2847     0418  1683               	bsf	3,5	;RP0=1, select bank1
  2848     0419  0841               	movf	(sprintf@fval+1)^(0+128),w
  2849     041A  1283               	bcf	3,5	;RP0=0, select bank0
  2850     041B  00BA               	movwf	___flmul@b+1
  2851     041C  1683               	bsf	3,5	;RP0=1, select bank1
  2852     041D  0840               	movf	sprintf@fval^(0+128),w
  2853     041E  1283               	bcf	3,5	;RP0=0, select bank0
  2854     041F  00B9               	movwf	___flmul@b
  2855     0420  120A  158A  21FF  120A  118A  	fcall	___flmul
  2856     0425  083C               	movf	?___flmul+3,w
  2857     0426  00E9               	movwf	___fltol@f1+3
  2858     0427  083B               	movf	?___flmul+2,w
  2859     0428  00E8               	movwf	___fltol@f1+2
  2860     0429  083A               	movf	?___flmul+1,w
  2861     042A  00E7               	movwf	___fltol@f1+1
  2862     042B  0839               	movf	?___flmul,w
  2863     042C  00E6               	movwf	___fltol@f1
  2864     042D  160A  158A  2799  120A  118A  	fcall	___fltol
  2865     0432  0869               	movf	?___fltol+3,w
  2866     0433  1683               	bsf	3,5	;RP0=1, select bank1
  2867     0434  00B8               	movwf	(sprintf@val+3)^(0+128)
  2868     0435  1283               	bcf	3,5	;RP0=0, select bank0
  2869     0436  0868               	movf	?___fltol+2,w
  2870     0437  1683               	bsf	3,5	;RP0=1, select bank1
  2871     0438  00B7               	movwf	(sprintf@val+2)^(0+128)
  2872     0439  1283               	bcf	3,5	;RP0=0, select bank0
  2873     043A  0867               	movf	?___fltol+1,w
  2874     043B  1683               	bsf	3,5	;RP0=1, select bank1
  2875     043C  00B6               	movwf	(sprintf@val+1)^(0+128)
  2876     043D  1283               	bcf	3,5	;RP0=0, select bank0
  2877     043E  0866               	movf	?___fltol,w
  2878     043F                     L5:
  2879     043F  1683               	bsf	3,5	;RP0=1, select bank1
  2880     0440  00B5               	movwf	sprintf@val^(0+128)
  2881                           
  2882                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  2883     0441  3001               	movlw	1
  2884     0442  02C4               	subwf	sprintf@c^(0+128),f
  2885     0443  0A44               	incf	sprintf@c^(0+128),w
  2886     0444  1903               	btfsc	3,2
  2887     0445  2D0E               	goto	l4972
  2888                           
  2889                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  2890                           
  2891                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  2892     0446  0844               	movf	sprintf@c^(0+128),w
  2893     0447  00A7               	movwf	??_sprintf^(0+128)
  2894     0448  3001               	movlw	1
  2895     0449                     u8565:
  2896     0449  1003               	clrc
  2897     044A  0DA7               	rlf	??_sprintf^(0+128),f
  2898     044B  3EFF               	addlw	-1
  2899     044C  1D03               	skipz
  2900     044D  2C49               	goto	u8565
  2901     044E  1003               	clrc
  2902     044F  0D27               	rlf	??_sprintf^(0+128),w
  2903     0450  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2904     0451  0084               	movwf	4
  2905     0452  160A  118A  2000  120A  118A  	fcall	stringdir
  2906     0457  00F2               	movwf	___lldiv@divisor
  2907     0458  160A  118A  2000  120A  118A  	fcall	stringdir
  2908     045D  00F3               	movwf	___lldiv@divisor+1
  2909     045E  160A  118A  2000  120A  118A  	fcall	stringdir
  2910     0463  00F4               	movwf	___lldiv@divisor+2
  2911     0464  160A  118A  2000  120A  118A  	fcall	stringdir
  2912     0469  00F5               	movwf	___lldiv@divisor+3
  2913     046A  0838               	movf	(sprintf@val+3)^(0+128),w
  2914     046B  00F9               	movwf	___lldiv@dividend+3
  2915     046C  0837               	movf	(sprintf@val+2)^(0+128),w
  2916     046D  00F8               	movwf	___lldiv@dividend+2
  2917     046E  0836               	movf	(sprintf@val+1)^(0+128),w
  2918     046F  00F7               	movwf	___lldiv@dividend+1
  2919     0470  0835               	movf	sprintf@val^(0+128),w
  2920     0471  00F6               	movwf	___lldiv@dividend
  2921     0472  160A  158A  273A  120A  118A  	fcall	___lldiv
  2922     0477  0875               	movf	?___lldiv+3,w
  2923     0478  1683               	bsf	3,5	;RP0=1, select bank1
  2924     0479  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2925     047A  0874               	movf	?___lldiv+2,w
  2926     047B  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2927     047C  0873               	movf	?___lldiv+1,w
  2928     047D  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2929     047E  0872               	movf	?___lldiv,w
  2930     047F  00BB               	movwf	sprintf@tmpval^(0+128)
  2931                           
  2932                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  2933     0480  3000               	movlw	0
  2934     0481  1283               	bcf	3,5	;RP0=0, select bank0
  2935     0482  00A9               	movwf	___llmod@divisor+3
  2936     0483  3000               	movlw	0
  2937     0484  00A8               	movwf	___llmod@divisor+2
  2938     0485  3000               	movlw	0
  2939     0486  00A7               	movwf	___llmod@divisor+1
  2940     0487  300A               	movlw	10
  2941     0488  00A6               	movwf	___llmod@divisor
  2942     0489  1683               	bsf	3,5	;RP0=1, select bank1
  2943     048A  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2944     048B  1283               	bcf	3,5	;RP0=0, select bank0
  2945     048C  00AD               	movwf	___llmod@dividend+3
  2946     048D  1683               	bsf	3,5	;RP0=1, select bank1
  2947     048E  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2948     048F  1283               	bcf	3,5	;RP0=0, select bank0
  2949     0490  00AC               	movwf	___llmod@dividend+2
  2950     0491  1683               	bsf	3,5	;RP0=1, select bank1
  2951     0492  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2952     0493  1283               	bcf	3,5	;RP0=0, select bank0
  2953     0494  00AB               	movwf	___llmod@dividend+1
  2954     0495  1683               	bsf	3,5	;RP0=1, select bank1
  2955     0496  083B               	movf	sprintf@tmpval^(0+128),w
  2956     0497  1283               	bcf	3,5	;RP0=0, select bank0
  2957     0498  00AA               	movwf	___llmod@dividend
  2958     0499  160A  158A  2695  120A  118A  	fcall	___llmod
  2959     049E  0829               	movf	?___llmod+3,w
  2960     049F  1683               	bsf	3,5	;RP0=1, select bank1
  2961     04A0  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2962     04A1  1283               	bcf	3,5	;RP0=0, select bank0
  2963     04A2  0828               	movf	?___llmod+2,w
  2964     04A3  1683               	bsf	3,5	;RP0=1, select bank1
  2965     04A4  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2966     04A5  1283               	bcf	3,5	;RP0=0, select bank0
  2967     04A6  0827               	movf	?___llmod+1,w
  2968     04A7  1683               	bsf	3,5	;RP0=1, select bank1
  2969     04A8  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2970     04A9  1283               	bcf	3,5	;RP0=0, select bank0
  2971     04AA  0826               	movf	?___llmod,w
  2972     04AB  1683               	bsf	3,5	;RP0=1, select bank1
  2973     04AC  00BB               	movwf	sprintf@tmpval^(0+128)
  2974                           
  2975                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  2976     04AD  083F               	movf	sprintf@sp^(0+128),w
  2977     04AE  0084               	movwf	4
  2978     04AF  083B               	movf	sprintf@tmpval^(0+128),w
  2979     04B0  3E30               	addlw	48
  2980     04B1  1783               	bsf	3,7	;select IRP bank2
  2981     04B2  0080               	movwf	0
  2982     04B3  3001               	movlw	1
  2983     04B4  00FF               	movwf	127
  2984     04B5  087F               	movf	127,w
  2985     04B6  07BF               	addwf	sprintf@sp^(0+128),f
  2986                           
  2987                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  2988     04B7  0844               	movf	sprintf@c^(0+128),w
  2989     04B8  00A7               	movwf	??_sprintf^(0+128)
  2990     04B9  3001               	movlw	1
  2991     04BA                     u8575:
  2992     04BA  1003               	clrc
  2993     04BB  0DA7               	rlf	??_sprintf^(0+128),f
  2994     04BC  3EFF               	addlw	-1
  2995     04BD  1D03               	skipz
  2996     04BE  2CBA               	goto	u8575
  2997     04BF  1003               	clrc
  2998     04C0  0D27               	rlf	??_sprintf^(0+128),w
  2999     04C1  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3000     04C2  0084               	movwf	4
  3001     04C3  160A  118A  2000  120A  118A  	fcall	stringdir
  3002     04C8  1283               	bcf	3,5	;RP0=0, select bank0
  3003     04C9  00A6               	movwf	___llmod@divisor
  3004     04CA  160A  118A  2000  120A  118A  	fcall	stringdir
  3005     04CF  00A7               	movwf	___llmod@divisor+1
  3006     04D0  160A  118A  2000  120A  118A  	fcall	stringdir
  3007     04D5  00A8               	movwf	___llmod@divisor+2
  3008     04D6  160A  118A  2000  120A  118A  	fcall	stringdir
  3009     04DB  00A9               	movwf	___llmod@divisor+3
  3010     04DC  1683               	bsf	3,5	;RP0=1, select bank1
  3011     04DD  0838               	movf	(sprintf@val+3)^(0+128),w
  3012     04DE  1283               	bcf	3,5	;RP0=0, select bank0
  3013     04DF  00AD               	movwf	___llmod@dividend+3
  3014     04E0  1683               	bsf	3,5	;RP0=1, select bank1
  3015     04E1  0837               	movf	(sprintf@val+2)^(0+128),w
  3016     04E2  1283               	bcf	3,5	;RP0=0, select bank0
  3017     04E3  00AC               	movwf	___llmod@dividend+2
  3018     04E4  1683               	bsf	3,5	;RP0=1, select bank1
  3019     04E5  0836               	movf	(sprintf@val+1)^(0+128),w
  3020     04E6  1283               	bcf	3,5	;RP0=0, select bank0
  3021     04E7  00AB               	movwf	___llmod@dividend+1
  3022     04E8  1683               	bsf	3,5	;RP0=1, select bank1
  3023     04E9  0835               	movf	sprintf@val^(0+128),w
  3024     04EA  1283               	bcf	3,5	;RP0=0, select bank0
  3025     04EB  00AA               	movwf	___llmod@dividend
  3026     04EC  160A  158A  2695  120A  118A  	fcall	___llmod
  3027     04F1  0829               	movf	?___llmod+3,w
  3028     04F2  1683               	bsf	3,5	;RP0=1, select bank1
  3029     04F3  00B8               	movwf	(sprintf@val+3)^(0+128)
  3030     04F4  1283               	bcf	3,5	;RP0=0, select bank0
  3031     04F5  0828               	movf	?___llmod+2,w
  3032     04F6  1683               	bsf	3,5	;RP0=1, select bank1
  3033     04F7  00B7               	movwf	(sprintf@val+2)^(0+128)
  3034     04F8  1283               	bcf	3,5	;RP0=0, select bank0
  3035     04F9  0827               	movf	?___llmod+1,w
  3036     04FA  1683               	bsf	3,5	;RP0=1, select bank1
  3037     04FB  00B6               	movwf	(sprintf@val+1)^(0+128)
  3038     04FC  1283               	bcf	3,5	;RP0=0, select bank0
  3039     04FD  0826               	movf	?___llmod,w
  3040     04FE  2C3F               	goto	L5
  3041     04FF                     l4966:
  3042                           
  3043                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3044     04FF  083F               	movf	sprintf@sp^(0+128),w
  3045     0500  0084               	movwf	4
  3046     0501  3030               	movlw	48
  3047     0502  1783               	bsf	3,7	;select IRP bank2
  3048     0503  0080               	movwf	0
  3049     0504  3001               	movlw	1
  3050     0505  00FF               	movwf	127
  3051     0506  087F               	movf	127,w
  3052     0507  07BF               	addwf	sprintf@sp^(0+128),f
  3053                           
  3054                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3055     0508  30FF               	movlw	255
  3056     0509  07B3               	addwf	sprintf@prec^(0+128),f
  3057     050A  1803               	skipnc
  3058     050B  0AB4               	incf	(sprintf@prec+1)^(0+128),f
  3059     050C  30FF               	movlw	255
  3060     050D  07B4               	addwf	(sprintf@prec+1)^(0+128),f
  3061     050E                     l4972:
  3062                           
  3063                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3064     050E  0833               	movf	sprintf@prec^(0+128),w
  3065     050F  0434               	iorwf	(sprintf@prec+1)^(0+128),w
  3066     0510  1903               	btfsc	3,2
  3067     0511  2838               	goto	l5008
  3068     0512  2CFF               	goto	l4966
  3069     0513                     l4974:
  3070                           
  3071                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3072     0513  0830               	movf	sprintf@ap^(0+128),w
  3073     0514  0084               	movwf	4
  3074     0515  1383               	bcf	3,7	;select IRP bank0
  3075     0516  0800               	movf	0,w
  3076     0517  00A7               	movwf	??_sprintf^(0+128)
  3077     0518  0A84               	incf	4,f
  3078     0519  0800               	movf	0,w
  3079     051A  00A8               	movwf	(??_sprintf^(0+128)+1)
  3080     051B  0827               	movf	??_sprintf^(0+128),w
  3081     051C  00B5               	movwf	sprintf@val^(0+128)
  3082     051D  0828               	movf	(??_sprintf+1)^(0+128),w
  3083     051E  00B6               	movwf	(sprintf@val^(0+128)+1)
  3084     051F  01B7               	clrf	(sprintf@val^(0+128)+2)
  3085     0520  01B8               	clrf	(sprintf@val^(0+128)+3)
  3086     0521  3002               	movlw	2
  3087     0522  00FF               	movwf	127
  3088     0523  087F               	movf	127,w
  3089     0524  07B0               	addwf	sprintf@ap^(0+128),f
  3090                           
  3091                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  3092     0525  01C4               	clrf	sprintf@c^(0+128)
  3093     0526  0AC4               	incf	sprintf@c^(0+128),f
  3094     0527                     l4984:
  3095                           
  3096                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3097     0527  0844               	movf	sprintf@c^(0+128),w
  3098     0528  00A7               	movwf	??_sprintf^(0+128)
  3099     0529  3001               	movlw	1
  3100     052A                     u8605:
  3101     052A  1003               	clrc
  3102     052B  0DA7               	rlf	??_sprintf^(0+128),f
  3103     052C  3EFF               	addlw	-1
  3104     052D  1D03               	skipz
  3105     052E  2D2A               	goto	u8605
  3106     052F  1003               	clrc
  3107     0530  0D27               	rlf	??_sprintf^(0+128),w
  3108     0531  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3109     0532  0084               	movwf	4
  3110     0533  160A  118A  2000  120A  118A  	fcall	stringdir
  3111     0538  00A8               	movwf	(??_sprintf+1)^(0+128)
  3112     0539  160A  118A  2000  120A  118A  	fcall	stringdir
  3113     053E  00A9               	movwf	((??_sprintf+1)^(0+128)+1)
  3114     053F  160A  118A  2000  120A  118A  	fcall	stringdir
  3115     0544  00AA               	movwf	((??_sprintf+1)^(0+128)+2)
  3116     0545  160A  118A  2000  120A  118A  	fcall	stringdir
  3117     054A  00AB               	movwf	((??_sprintf+1)^(0+128)+3)
  3118     054B  082B               	movf	(??_sprintf+4)^(0+128),w
  3119     054C  0238               	subwf	(sprintf@val+3)^(0+128),w
  3120     054D  1D03               	skipz
  3121     054E  2D59               	goto	u8615
  3122     054F  082A               	movf	(??_sprintf+3)^(0+128),w
  3123     0550  0237               	subwf	(sprintf@val+2)^(0+128),w
  3124     0551  1D03               	skipz
  3125     0552  2D59               	goto	u8615
  3126     0553  0829               	movf	(??_sprintf+2)^(0+128),w
  3127     0554  0236               	subwf	(sprintf@val+1)^(0+128),w
  3128     0555  1D03               	skipz
  3129     0556  2D59               	goto	u8615
  3130     0557  0828               	movf	(??_sprintf+1)^(0+128),w
  3131     0558  0235               	subwf	sprintf@val^(0+128),w
  3132     0559                     u8615:
  3133     0559  1C03               	btfss	3,0
  3134     055A  2D63               	goto	l4992
  3135     055B  3001               	movlw	1
  3136     055C  00FF               	movwf	127
  3137     055D  087F               	movf	127,w
  3138     055E  07C4               	addwf	sprintf@c^(0+128),f
  3139     055F  300A               	movlw	10
  3140     0560  0644               	xorwf	sprintf@c^(0+128),w
  3141     0561  1D03               	btfss	3,2
  3142     0562  2D27               	goto	l4984
  3143     0563                     l4992:
  3144                           
  3145                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3146     0563  0831               	movf	sprintf@flag^(0+128),w
  3147     0564  3903               	andlw	3
  3148     0565  1903               	btfsc	3,2
  3149     0566  2D70               	goto	l4998
  3150                           
  3151                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3152     0567  083F               	movf	sprintf@sp^(0+128),w
  3153     0568  0084               	movwf	4
  3154     0569  302D               	movlw	45
  3155     056A  1783               	bsf	3,7	;select IRP bank2
  3156     056B  0080               	movwf	0
  3157     056C  3001               	movlw	1
  3158     056D  00FF               	movwf	127
  3159     056E  087F               	movf	127,w
  3160     056F  07BF               	addwf	sprintf@sp^(0+128),f
  3161     0570                     l4998:
  3162                           
  3163                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3164     0570  0844               	movf	sprintf@c^(0+128),w
  3165     0571  00A7               	movwf	??_sprintf^(0+128)
  3166     0572  01A8               	clrf	(??_sprintf^(0+128)+1)
  3167     0573  0827               	movf	??_sprintf^(0+128),w
  3168     0574  00B3               	movwf	sprintf@prec^(0+128)
  3169     0575  0828               	movf	(??_sprintf+1)^(0+128),w
  3170     0576  00B4               	movwf	(sprintf@prec+1)^(0+128)
  3171     0577                     l5006:	
  3172                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3173                           
  3174                           
  3175                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3176     0577  30FF               	movlw	255
  3177     0578  07B3               	addwf	sprintf@prec^(0+128),f
  3178     0579  1803               	skipnc
  3179     057A  0AB4               	incf	(sprintf@prec+1)^(0+128),f
  3180     057B  30FF               	movlw	255
  3181     057C  07B4               	addwf	(sprintf@prec+1)^(0+128),f
  3182     057D  0A33               	incf	sprintf@prec^(0+128),w
  3183     057E  1903               	btfsc	3,2
  3184     057F  0A34               	incf	(sprintf@prec+1)^(0+128),w
  3185     0580  1903               	btfsc	3,2
  3186     0581  2838               	goto	l5008
  3187                           
  3188                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
  3189     0582  3000               	movlw	0
  3190     0583  1283               	bcf	3,5	;RP0=0, select bank0
  3191     0584  00A9               	movwf	___llmod@divisor+3
  3192     0585  3000               	movlw	0
  3193     0586  00A8               	movwf	___llmod@divisor+2
  3194     0587  3000               	movlw	0
  3195     0588  00A7               	movwf	___llmod@divisor+1
  3196     0589  300A               	movlw	10
  3197     058A  00A6               	movwf	___llmod@divisor
  3198     058B  1683               	bsf	3,5	;RP0=1, select bank1
  3199     058C  0833               	movf	sprintf@prec^(0+128),w
  3200     058D  00A7               	movwf	??_sprintf^(0+128)
  3201     058E  3001               	movlw	1
  3202     058F                     u8645:
  3203     058F  1003               	clrc
  3204     0590  0DA7               	rlf	??_sprintf^(0+128),f
  3205     0591  3EFF               	addlw	-1
  3206     0592  1D03               	skipz
  3207     0593  2D8F               	goto	u8645
  3208     0594  1003               	clrc
  3209     0595  0D27               	rlf	??_sprintf^(0+128),w
  3210     0596  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3211     0597  0084               	movwf	4
  3212     0598  160A  118A  2000  120A  118A  	fcall	stringdir
  3213     059D  00F2               	movwf	___lldiv@divisor
  3214     059E  160A  118A  2000  120A  118A  	fcall	stringdir
  3215     05A3  00F3               	movwf	___lldiv@divisor+1
  3216     05A4  160A  118A  2000  120A  118A  	fcall	stringdir
  3217     05A9  00F4               	movwf	___lldiv@divisor+2
  3218     05AA  160A  118A  2000  120A  118A  	fcall	stringdir
  3219     05AF  00F5               	movwf	___lldiv@divisor+3
  3220     05B0  0838               	movf	(sprintf@val+3)^(0+128),w
  3221     05B1  00F9               	movwf	___lldiv@dividend+3
  3222     05B2  0837               	movf	(sprintf@val+2)^(0+128),w
  3223     05B3  00F8               	movwf	___lldiv@dividend+2
  3224     05B4  0836               	movf	(sprintf@val+1)^(0+128),w
  3225     05B5  00F7               	movwf	___lldiv@dividend+1
  3226     05B6  0835               	movf	sprintf@val^(0+128),w
  3227     05B7  00F6               	movwf	___lldiv@dividend
  3228     05B8  160A  158A  273A  120A  118A  	fcall	___lldiv
  3229     05BD  0875               	movf	?___lldiv+3,w
  3230     05BE  00AD               	movwf	___llmod@dividend+3
  3231     05BF  0874               	movf	?___lldiv+2,w
  3232     05C0  00AC               	movwf	___llmod@dividend+2
  3233     05C1  0873               	movf	?___lldiv+1,w
  3234     05C2  00AB               	movwf	___llmod@dividend+1
  3235     05C3  0872               	movf	?___lldiv,w
  3236     05C4  00AA               	movwf	___llmod@dividend
  3237     05C5  160A  158A  2695  120A  118A  	fcall	___llmod
  3238     05CA  0826               	movf	?___llmod,w
  3239     05CB  3E30               	addlw	48
  3240     05CC  1683               	bsf	3,5	;RP0=1, select bank1
  3241     05CD  00C4               	movwf	sprintf@c^(0+128)
  3242                           
  3243                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3244     05CE  083F               	movf	sprintf@sp^(0+128),w
  3245     05CF  0084               	movwf	4
  3246     05D0  0844               	movf	sprintf@c^(0+128),w
  3247     05D1  1783               	bsf	3,7	;select IRP bank2
  3248     05D2  0080               	movwf	0
  3249     05D3  3001               	movlw	1
  3250     05D4  00FF               	movwf	127
  3251     05D5  087F               	movf	127,w
  3252     05D6  07BF               	addwf	sprintf@sp^(0+128),f
  3253     05D7  2D77               	goto	l5006
  3254     05D8                     l5010:
  3255                           
  3256                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3257     05D8  083F               	movf	sprintf@sp^(0+128),w
  3258     05D9  0084               	movwf	4
  3259     05DA  1783               	bsf	3,7	;select IRP bank2
  3260     05DB  0180               	clrf	0
  3261     05DC  0008               	return
  3262     05DD                     __end_of_sprintf:
  3263                           
  3264                           	psect	text3
  3265     0CD8                     __ptext3:	
  3266 ;; *************** function _scale *****************
  3267 ;; Defined at:
  3268 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;  scl             1    wreg     char 
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;  scl             1   69[BANK0 ] char 
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  4   51[BANK0 ] char 
  3275 ;; Registers used:
  3276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3277 ;; Tracked objects:
  3278 ;;		On entry : 300/100
  3279 ;;		On exit  : 300/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3282 ;;      Params:         0       4       0       0       0
  3283 ;;      Locals:         0       5       0       0       0
  3284 ;;      Temps:          0      10       0       0       0
  3285 ;;      Totals:         0      19       0       0       0
  3286 ;;Total ram usage:       19 bytes
  3287 ;; Hardware stack levels used: 1
  3288 ;; Hardware stack levels required when called: 3
  3289 ;; This function calls:
  3290 ;;		___awdiv
  3291 ;;		___awmod
  3292 ;;		___flmul
  3293 ;; This function is called by:
  3294 ;;		_sprintf
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298     0CD8                     _scale:	
  3299                           ;psect for function _scale
  3300                           
  3301                           
  3302                           ;incstack = 0
  3303                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3304                           ;scale@scl stored from wreg
  3305     0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  3306     0CD9  00E5               	movwf	scale@scl
  3307                           
  3308                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3309     0CDA  1FE5               	btfss	scale@scl,7
  3310     0CDB  2E6F               	goto	l4268
  3311                           
  3312                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3313     0CDC  09E5               	comf	scale@scl,f
  3314     0CDD  0AE5               	incf	scale@scl,f
  3315                           
  3316                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3317     0CDE  0865               	movf	scale@scl,w
  3318     0CDF  3A80               	xorlw	128
  3319     0CE0  3E12               	addlw	-238
  3320     0CE1  1C03               	skipc
  3321     0CE2  2DBF               	goto	l4258
  3322                           
  3323                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3324     0CE3  300A               	movlw	10
  3325     0CE4  00A0               	movwf	___awdiv@divisor
  3326     0CE5  3000               	movlw	0
  3327     0CE6  00A1               	movwf	___awdiv@divisor+1
  3328     0CE7  0865               	movf	scale@scl,w
  3329     0CE8  00F4               	movwf	___awmod@dividend
  3330     0CE9  01F5               	clrf	___awmod@dividend+1
  3331     0CEA  1BF4               	btfsc	___awmod@dividend,7
  3332     0CEB  03F5               	decf	___awmod@dividend+1,f
  3333     0CEC  3064               	movlw	100
  3334     0CED  00F2               	movwf	___awmod@divisor
  3335     0CEE  3000               	movlw	0
  3336     0CEF  00F3               	movwf	___awmod@divisor+1
  3337     0CF0  160A  158A  264A  120A  158A  	fcall	___awmod
  3338     0CF5  0873               	movf	?___awmod+1,w
  3339     0CF6  00A3               	movwf	___awdiv@dividend+1
  3340     0CF7  0872               	movf	?___awmod,w
  3341     0CF8  00A2               	movwf	___awdiv@dividend
  3342     0CF9  160A  158A  26E1  120A  158A  	fcall	___awdiv
  3343     0CFE  0820               	movf	?___awdiv,w
  3344     0CFF  00D7               	movwf	??_scale
  3345     0D00  3001               	movlw	1
  3346     0D01                     u7105:
  3347     0D01  1003               	clrc
  3348     0D02  0DD7               	rlf	??_scale,f
  3349     0D03  3EFF               	addlw	-1
  3350     0D04  1D03               	skipz
  3351     0D05  2D01               	goto	u7105
  3352     0D06  1003               	clrc
  3353     0D07  0D57               	rlf	??_scale,w
  3354     0D08  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3355     0D09  0084               	movwf	4
  3356     0D0A  160A  118A  2000  120A  158A  	fcall	stringdir
  3357     0D0F  00D8               	movwf	??_scale+1
  3358     0D10  160A  118A  2000  120A  158A  	fcall	stringdir
  3359     0D15  00D9               	movwf	??_scale+2
  3360     0D16  160A  118A  2000  120A  158A  	fcall	stringdir
  3361     0D1B  00DA               	movwf	??_scale+3
  3362     0D1C  160A  118A  2000  120A  158A  	fcall	stringdir
  3363     0D21  00DB               	movwf	??_scale+4
  3364     0D22  085B               	movf	??_scale+4,w
  3365     0D23  00BC               	movwf	___flmul@b+3
  3366     0D24  085A               	movf	??_scale+3,w
  3367     0D25  00BB               	movwf	___flmul@b+2
  3368     0D26  0859               	movf	??_scale+2,w
  3369     0D27  00BA               	movwf	___flmul@b+1
  3370     0D28  0858               	movf	??_scale+1,w
  3371     0D29  00B9               	movwf	___flmul@b
  3372     0D2A  3064               	movlw	100
  3373     0D2B  00A0               	movwf	___awdiv@divisor
  3374     0D2C  3000               	movlw	0
  3375     0D2D  00A1               	movwf	___awdiv@divisor+1
  3376     0D2E  0865               	movf	scale@scl,w
  3377     0D2F  00A2               	movwf	___awdiv@dividend
  3378     0D30  01A3               	clrf	___awdiv@dividend+1
  3379     0D31  1BA2               	btfsc	___awdiv@dividend,7
  3380     0D32  03A3               	decf	___awdiv@dividend+1,f
  3381     0D33  160A  158A  26E1  120A  158A  	fcall	___awdiv
  3382     0D38  0820               	movf	?___awdiv,w
  3383     0D39  00DC               	movwf	??_scale+5
  3384     0D3A  3001               	movlw	1
  3385     0D3B                     u7115:
  3386     0D3B  1003               	clrc
  3387     0D3C  0DDC               	rlf	??_scale+5,f
  3388     0D3D  3EFF               	addlw	-1
  3389     0D3E  1D03               	skipz
  3390     0D3F  2D3B               	goto	u7115
  3391     0D40  1003               	clrc
  3392     0D41  0D5C               	rlf	??_scale+5,w
  3393     0D42  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3394     0D43  0084               	movwf	4
  3395     0D44  160A  118A  2000  120A  158A  	fcall	stringdir
  3396     0D49  00DD               	movwf	??_scale+6
  3397     0D4A  160A  118A  2000  120A  158A  	fcall	stringdir
  3398     0D4F  00DE               	movwf	??_scale+7
  3399     0D50  160A  118A  2000  120A  158A  	fcall	stringdir
  3400     0D55  00DF               	movwf	??_scale+8
  3401     0D56  160A  118A  2000  120A  158A  	fcall	stringdir
  3402     0D5B  00E0               	movwf	??_scale+9
  3403     0D5C  0860               	movf	??_scale+9,w
  3404     0D5D  00C0               	movwf	___flmul@a+3
  3405     0D5E  085F               	movf	??_scale+8,w
  3406     0D5F  00BF               	movwf	___flmul@a+2
  3407     0D60  085E               	movf	??_scale+7,w
  3408     0D61  00BE               	movwf	___flmul@a+1
  3409     0D62  085D               	movf	??_scale+6,w
  3410     0D63  00BD               	movwf	___flmul@a
  3411     0D64  120A  158A  21FF  120A  158A  	fcall	___flmul
  3412     0D69  083C               	movf	?___flmul+3,w
  3413     0D6A  00E4               	movwf	_scale$1057+3
  3414     0D6B  083B               	movf	?___flmul+2,w
  3415     0D6C  00E3               	movwf	_scale$1057+2
  3416     0D6D  083A               	movf	?___flmul+1,w
  3417     0D6E  00E2               	movwf	_scale$1057+1
  3418     0D6F  0839               	movf	?___flmul,w
  3419     0D70  00E1               	movwf	_scale$1057
  3420                           
  3421                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3422     0D71  300A               	movlw	10
  3423     0D72  00F2               	movwf	___awmod@divisor
  3424     0D73  3000               	movlw	0
  3425     0D74  00F3               	movwf	___awmod@divisor+1
  3426     0D75  0865               	movf	scale@scl,w
  3427     0D76  00F4               	movwf	___awmod@dividend
  3428     0D77  01F5               	clrf	___awmod@dividend+1
  3429     0D78  1BF4               	btfsc	___awmod@dividend,7
  3430     0D79  03F5               	decf	___awmod@dividend+1,f
  3431     0D7A  160A  158A  264A  120A  158A  	fcall	___awmod
  3432     0D7F  0872               	movf	?___awmod,w
  3433     0D80  00D7               	movwf	??_scale
  3434     0D81  3001               	movlw	1
  3435     0D82                     u7125:
  3436     0D82  1003               	clrc
  3437     0D83  0DD7               	rlf	??_scale,f
  3438     0D84  3EFF               	addlw	-1
  3439     0D85  1D03               	skipz
  3440     0D86  2D82               	goto	u7125
  3441     0D87  1003               	clrc
  3442     0D88  0D57               	rlf	??_scale,w
  3443     0D89  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3444     0D8A  0084               	movwf	4
  3445     0D8B  160A  118A  2000  120A  158A  	fcall	stringdir
  3446     0D90  00D8               	movwf	??_scale+1
  3447     0D91  160A  118A  2000  120A  158A  	fcall	stringdir
  3448     0D96  00D9               	movwf	??_scale+2
  3449     0D97  160A  118A  2000  120A  158A  	fcall	stringdir
  3450     0D9C  00DA               	movwf	??_scale+3
  3451     0D9D  160A  118A  2000  120A  158A  	fcall	stringdir
  3452     0DA2  00DB               	movwf	??_scale+4
  3453     0DA3  085B               	movf	??_scale+4,w
  3454     0DA4  00BC               	movwf	___flmul@b+3
  3455     0DA5  085A               	movf	??_scale+3,w
  3456     0DA6  00BB               	movwf	___flmul@b+2
  3457     0DA7  0859               	movf	??_scale+2,w
  3458     0DA8  00BA               	movwf	___flmul@b+1
  3459     0DA9  0858               	movf	??_scale+1,w
  3460     0DAA  00B9               	movwf	___flmul@b
  3461     0DAB  0864               	movf	_scale$1057+3,w
  3462     0DAC  00C0               	movwf	___flmul@a+3
  3463     0DAD  0863               	movf	_scale$1057+2,w
  3464     0DAE  00BF               	movwf	___flmul@a+2
  3465     0DAF  0862               	movf	_scale$1057+1,w
  3466     0DB0  00BE               	movwf	___flmul@a+1
  3467     0DB1  0861               	movf	_scale$1057,w
  3468     0DB2  00BD               	movwf	___flmul@a
  3469     0DB3  120A  158A  21FF   	fcall	___flmul
  3470     0DB6  083C               	movf	?___flmul+3,w
  3471     0DB7  00D6               	movwf	?_scale+3
  3472     0DB8  083B               	movf	?___flmul+2,w
  3473     0DB9  00D5               	movwf	?_scale+2
  3474     0DBA  083A               	movf	?___flmul+1,w
  3475     0DBB  00D4               	movwf	?_scale+1
  3476     0DBC  0839               	movf	?___flmul,w
  3477     0DBD  00D3               	movwf	?_scale
  3478     0DBE  0008               	return
  3479     0DBF                     l4258:
  3480     0DBF  0865               	movf	scale@scl,w
  3481     0DC0  3A80               	xorlw	128
  3482     0DC1  3E75               	addlw	-139
  3483     0DC2  1C03               	skipc
  3484     0DC3  2E44               	goto	l4264
  3485                           
  3486                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3487     0DC4  300A               	movlw	10
  3488     0DC5  00F2               	movwf	___awmod@divisor
  3489     0DC6  3000               	movlw	0
  3490     0DC7  00F3               	movwf	___awmod@divisor+1
  3491     0DC8  0865               	movf	scale@scl,w
  3492     0DC9  00F4               	movwf	___awmod@dividend
  3493     0DCA  01F5               	clrf	___awmod@dividend+1
  3494     0DCB  1BF4               	btfsc	___awmod@dividend,7
  3495     0DCC  03F5               	decf	___awmod@dividend+1,f
  3496     0DCD  160A  158A  264A  120A  158A  	fcall	___awmod
  3497     0DD2  0872               	movf	?___awmod,w
  3498     0DD3  00D7               	movwf	??_scale
  3499     0DD4  3001               	movlw	1
  3500     0DD5                     u7145:
  3501     0DD5  1003               	clrc
  3502     0DD6  0DD7               	rlf	??_scale,f
  3503     0DD7  3EFF               	addlw	-1
  3504     0DD8  1D03               	skipz
  3505     0DD9  2DD5               	goto	u7145
  3506     0DDA  1003               	clrc
  3507     0DDB  0D57               	rlf	??_scale,w
  3508     0DDC  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3509     0DDD  0084               	movwf	4
  3510     0DDE  160A  118A  2000  120A  158A  	fcall	stringdir
  3511     0DE3  00D8               	movwf	??_scale+1
  3512     0DE4  160A  118A  2000  120A  158A  	fcall	stringdir
  3513     0DE9  00D9               	movwf	??_scale+2
  3514     0DEA  160A  118A  2000  120A  158A  	fcall	stringdir
  3515     0DEF  00DA               	movwf	??_scale+3
  3516     0DF0  160A  118A  2000  120A  158A  	fcall	stringdir
  3517     0DF5  00DB               	movwf	??_scale+4
  3518     0DF6  085B               	movf	??_scale+4,w
  3519     0DF7  00BC               	movwf	___flmul@b+3
  3520     0DF8  085A               	movf	??_scale+3,w
  3521     0DF9  00BB               	movwf	___flmul@b+2
  3522     0DFA  0859               	movf	??_scale+2,w
  3523     0DFB  00BA               	movwf	___flmul@b+1
  3524     0DFC  0858               	movf	??_scale+1,w
  3525     0DFD  00B9               	movwf	___flmul@b
  3526     0DFE  300A               	movlw	10
  3527     0DFF  00A0               	movwf	___awdiv@divisor
  3528     0E00  3000               	movlw	0
  3529     0E01  00A1               	movwf	___awdiv@divisor+1
  3530     0E02  0865               	movf	scale@scl,w
  3531     0E03  00A2               	movwf	___awdiv@dividend
  3532     0E04  01A3               	clrf	___awdiv@dividend+1
  3533     0E05  1BA2               	btfsc	___awdiv@dividend,7
  3534     0E06  03A3               	decf	___awdiv@dividend+1,f
  3535     0E07  160A  158A  26E1  120A  158A  	fcall	___awdiv
  3536     0E0C  0820               	movf	?___awdiv,w
  3537     0E0D  00DC               	movwf	??_scale+5
  3538     0E0E  3001               	movlw	1
  3539     0E0F                     u7155:
  3540     0E0F  1003               	clrc
  3541     0E10  0DDC               	rlf	??_scale+5,f
  3542     0E11  3EFF               	addlw	-1
  3543     0E12  1D03               	skipz
  3544     0E13  2E0F               	goto	u7155
  3545     0E14  1003               	clrc
  3546     0E15  0D5C               	rlf	??_scale+5,w
  3547     0E16  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3548     0E17  0084               	movwf	4
  3549     0E18  160A  118A  2000  120A  158A  	fcall	stringdir
  3550     0E1D  00DD               	movwf	??_scale+6
  3551     0E1E  160A  118A  2000  120A  158A  	fcall	stringdir
  3552     0E23  00DE               	movwf	??_scale+7
  3553     0E24  160A  118A  2000  120A  158A  	fcall	stringdir
  3554     0E29  00DF               	movwf	??_scale+8
  3555     0E2A  160A  118A  2000  120A  158A  	fcall	stringdir
  3556     0E2F  00E0               	movwf	??_scale+9
  3557     0E30  0860               	movf	??_scale+9,w
  3558     0E31  00C0               	movwf	___flmul@a+3
  3559     0E32  085F               	movf	??_scale+8,w
  3560     0E33  00BF               	movwf	___flmul@a+2
  3561     0E34  085E               	movf	??_scale+7,w
  3562     0E35  00BE               	movwf	___flmul@a+1
  3563     0E36  085D               	movf	??_scale+6,w
  3564     0E37  00BD               	movwf	___flmul@a
  3565     0E38  120A  158A  21FF   	fcall	___flmul
  3566     0E3B  083C               	movf	?___flmul+3,w
  3567     0E3C  00D6               	movwf	?_scale+3
  3568     0E3D  083B               	movf	?___flmul+2,w
  3569     0E3E  00D5               	movwf	?_scale+2
  3570     0E3F  083A               	movf	?___flmul+1,w
  3571     0E40  00D4               	movwf	?_scale+1
  3572     0E41  0839               	movf	?___flmul,w
  3573     0E42  00D3               	movwf	?_scale
  3574     0E43  0008               	return
  3575     0E44                     l4264:
  3576                           
  3577                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3578     0E44  0865               	movf	scale@scl,w
  3579     0E45  00D7               	movwf	??_scale
  3580     0E46  3001               	movlw	1
  3581     0E47                     u7165:
  3582     0E47  1003               	clrc
  3583     0E48  0DD7               	rlf	??_scale,f
  3584     0E49  3EFF               	addlw	-1
  3585     0E4A  1D03               	skipz
  3586     0E4B  2E47               	goto	u7165
  3587     0E4C  1003               	clrc
  3588     0E4D  0D57               	rlf	??_scale,w
  3589     0E4E  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3590     0E4F  0084               	movwf	4
  3591     0E50  160A  118A  2000  120A  158A  	fcall	stringdir
  3592     0E55  00D8               	movwf	??_scale+1
  3593     0E56  160A  118A  2000  120A  158A  	fcall	stringdir
  3594     0E5B  00D9               	movwf	??_scale+2
  3595     0E5C  160A  118A  2000  120A  158A  	fcall	stringdir
  3596     0E61  00DA               	movwf	??_scale+3
  3597     0E62  160A  118A  2000   	fcall	stringdir
  3598     0E65  00DB               	movwf	??_scale+4
  3599     0E66  085B               	movf	??_scale+4,w
  3600     0E67  00D6               	movwf	?_scale+3
  3601     0E68  085A               	movf	??_scale+3,w
  3602     0E69  00D5               	movwf	?_scale+2
  3603     0E6A  0859               	movf	??_scale+2,w
  3604     0E6B  00D4               	movwf	?_scale+1
  3605     0E6C  0858               	movf	??_scale+1,w
  3606     0E6D  00D3               	movwf	?_scale
  3607     0E6E  0008               	return
  3608     0E6F                     l4268:
  3609                           
  3610                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3611     0E6F  0865               	movf	scale@scl,w
  3612     0E70  3A80               	xorlw	128
  3613     0E71  3E12               	addlw	-238
  3614     0E72  1C03               	skipc
  3615     0E73  2F50               	goto	l4276
  3616                           
  3617                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3618     0E74  300A               	movlw	10
  3619     0E75  00A0               	movwf	___awdiv@divisor
  3620     0E76  3000               	movlw	0
  3621     0E77  00A1               	movwf	___awdiv@divisor+1
  3622     0E78  0865               	movf	scale@scl,w
  3623     0E79  00F4               	movwf	___awmod@dividend
  3624     0E7A  01F5               	clrf	___awmod@dividend+1
  3625     0E7B  1BF4               	btfsc	___awmod@dividend,7
  3626     0E7C  03F5               	decf	___awmod@dividend+1,f
  3627     0E7D  3064               	movlw	100
  3628     0E7E  00F2               	movwf	___awmod@divisor
  3629     0E7F  3000               	movlw	0
  3630     0E80  00F3               	movwf	___awmod@divisor+1
  3631     0E81  160A  158A  264A  120A  158A  	fcall	___awmod
  3632     0E86  0873               	movf	?___awmod+1,w
  3633     0E87  00A3               	movwf	___awdiv@dividend+1
  3634     0E88  0872               	movf	?___awmod,w
  3635     0E89  00A2               	movwf	___awdiv@dividend
  3636     0E8A  160A  158A  26E1  120A  158A  	fcall	___awdiv
  3637     0E8F  0820               	movf	?___awdiv,w
  3638     0E90  00D7               	movwf	??_scale
  3639     0E91  3001               	movlw	1
  3640     0E92                     u7185:
  3641     0E92  1003               	clrc
  3642     0E93  0DD7               	rlf	??_scale,f
  3643     0E94  3EFF               	addlw	-1
  3644     0E95  1D03               	skipz
  3645     0E96  2E92               	goto	u7185
  3646     0E97  1003               	clrc
  3647     0E98  0D57               	rlf	??_scale,w
  3648     0E99  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3649     0E9A  0084               	movwf	4
  3650     0E9B  160A  118A  2000  120A  158A  	fcall	stringdir
  3651     0EA0  00D8               	movwf	??_scale+1
  3652     0EA1  160A  118A  2000  120A  158A  	fcall	stringdir
  3653     0EA6  00D9               	movwf	??_scale+2
  3654     0EA7  160A  118A  2000  120A  158A  	fcall	stringdir
  3655     0EAC  00DA               	movwf	??_scale+3
  3656     0EAD  160A  118A  2000  120A  158A  	fcall	stringdir
  3657     0EB2  00DB               	movwf	??_scale+4
  3658     0EB3  085B               	movf	??_scale+4,w
  3659     0EB4  00BC               	movwf	___flmul@b+3
  3660     0EB5  085A               	movf	??_scale+3,w
  3661     0EB6  00BB               	movwf	___flmul@b+2
  3662     0EB7  0859               	movf	??_scale+2,w
  3663     0EB8  00BA               	movwf	___flmul@b+1
  3664     0EB9  0858               	movf	??_scale+1,w
  3665     0EBA  00B9               	movwf	___flmul@b
  3666     0EBB  3064               	movlw	100
  3667     0EBC  00A0               	movwf	___awdiv@divisor
  3668     0EBD  3000               	movlw	0
  3669     0EBE  00A1               	movwf	___awdiv@divisor+1
  3670     0EBF  0865               	movf	scale@scl,w
  3671     0EC0  00A2               	movwf	___awdiv@dividend
  3672     0EC1  01A3               	clrf	___awdiv@dividend+1
  3673     0EC2  1BA2               	btfsc	___awdiv@dividend,7
  3674     0EC3  03A3               	decf	___awdiv@dividend+1,f
  3675     0EC4  160A  158A  26E1  120A  158A  	fcall	___awdiv
  3676     0EC9  0820               	movf	?___awdiv,w
  3677     0ECA  00DC               	movwf	??_scale+5
  3678     0ECB  3001               	movlw	1
  3679     0ECC                     u7195:
  3680     0ECC  1003               	clrc
  3681     0ECD  0DDC               	rlf	??_scale+5,f
  3682     0ECE  3EFF               	addlw	-1
  3683     0ECF  1D03               	skipz
  3684     0ED0  2ECC               	goto	u7195
  3685     0ED1  1003               	clrc
  3686     0ED2  0D5C               	rlf	??_scale+5,w
  3687     0ED3  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3688     0ED4  0084               	movwf	4
  3689     0ED5  160A  118A  2000  120A  158A  	fcall	stringdir
  3690     0EDA  00DD               	movwf	??_scale+6
  3691     0EDB  160A  118A  2000  120A  158A  	fcall	stringdir
  3692     0EE0  00DE               	movwf	??_scale+7
  3693     0EE1  160A  118A  2000  120A  158A  	fcall	stringdir
  3694     0EE6  00DF               	movwf	??_scale+8
  3695     0EE7  160A  118A  2000  120A  158A  	fcall	stringdir
  3696     0EEC  00E0               	movwf	??_scale+9
  3697     0EED  0860               	movf	??_scale+9,w
  3698     0EEE  00C0               	movwf	___flmul@a+3
  3699     0EEF  085F               	movf	??_scale+8,w
  3700     0EF0  00BF               	movwf	___flmul@a+2
  3701     0EF1  085E               	movf	??_scale+7,w
  3702     0EF2  00BE               	movwf	___flmul@a+1
  3703     0EF3  085D               	movf	??_scale+6,w
  3704     0EF4  00BD               	movwf	___flmul@a
  3705     0EF5  120A  158A  21FF  120A  158A  	fcall	___flmul
  3706     0EFA  083C               	movf	?___flmul+3,w
  3707     0EFB  00E4               	movwf	_scale$1057+3
  3708     0EFC  083B               	movf	?___flmul+2,w
  3709     0EFD  00E3               	movwf	_scale$1057+2
  3710     0EFE  083A               	movf	?___flmul+1,w
  3711     0EFF  00E2               	movwf	_scale$1057+1
  3712     0F00  0839               	movf	?___flmul,w
  3713     0F01  00E1               	movwf	_scale$1057
  3714                           
  3715                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3716     0F02  300A               	movlw	10
  3717     0F03  00F2               	movwf	___awmod@divisor
  3718     0F04  3000               	movlw	0
  3719     0F05  00F3               	movwf	___awmod@divisor+1
  3720     0F06  0865               	movf	scale@scl,w
  3721     0F07  00F4               	movwf	___awmod@dividend
  3722     0F08  01F5               	clrf	___awmod@dividend+1
  3723     0F09  1BF4               	btfsc	___awmod@dividend,7
  3724     0F0A  03F5               	decf	___awmod@dividend+1,f
  3725     0F0B  160A  158A  264A  120A  158A  	fcall	___awmod
  3726     0F10  0872               	movf	?___awmod,w
  3727     0F11  00D7               	movwf	??_scale
  3728     0F12  3001               	movlw	1
  3729     0F13                     u7205:
  3730     0F13  1003               	clrc
  3731     0F14  0DD7               	rlf	??_scale,f
  3732     0F15  3EFF               	addlw	-1
  3733     0F16  1D03               	skipz
  3734     0F17  2F13               	goto	u7205
  3735     0F18  1003               	clrc
  3736     0F19  0D57               	rlf	??_scale,w
  3737     0F1A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3738     0F1B  0084               	movwf	4
  3739     0F1C  160A  118A  2000  120A  158A  	fcall	stringdir
  3740     0F21  00D8               	movwf	??_scale+1
  3741     0F22  160A  118A  2000  120A  158A  	fcall	stringdir
  3742     0F27  00D9               	movwf	??_scale+2
  3743     0F28  160A  118A  2000  120A  158A  	fcall	stringdir
  3744     0F2D  00DA               	movwf	??_scale+3
  3745     0F2E  160A  118A  2000  120A  158A  	fcall	stringdir
  3746     0F33  00DB               	movwf	??_scale+4
  3747     0F34  085B               	movf	??_scale+4,w
  3748     0F35  00BC               	movwf	___flmul@b+3
  3749     0F36  085A               	movf	??_scale+3,w
  3750     0F37  00BB               	movwf	___flmul@b+2
  3751     0F38  0859               	movf	??_scale+2,w
  3752     0F39  00BA               	movwf	___flmul@b+1
  3753     0F3A  0858               	movf	??_scale+1,w
  3754     0F3B  00B9               	movwf	___flmul@b
  3755     0F3C  0864               	movf	_scale$1057+3,w
  3756     0F3D  00C0               	movwf	___flmul@a+3
  3757     0F3E  0863               	movf	_scale$1057+2,w
  3758     0F3F  00BF               	movwf	___flmul@a+2
  3759     0F40  0862               	movf	_scale$1057+1,w
  3760     0F41  00BE               	movwf	___flmul@a+1
  3761     0F42  0861               	movf	_scale$1057,w
  3762     0F43  00BD               	movwf	___flmul@a
  3763     0F44  120A  158A  21FF   	fcall	___flmul
  3764     0F47  083C               	movf	?___flmul+3,w
  3765     0F48  00D6               	movwf	?_scale+3
  3766     0F49  083B               	movf	?___flmul+2,w
  3767     0F4A  00D5               	movwf	?_scale+2
  3768     0F4B  083A               	movf	?___flmul+1,w
  3769     0F4C  00D4               	movwf	?_scale+1
  3770     0F4D  0839               	movf	?___flmul,w
  3771     0F4E  00D3               	movwf	?_scale
  3772     0F4F  0008               	return
  3773     0F50                     l4276:
  3774     0F50  0865               	movf	scale@scl,w
  3775     0F51  3A80               	xorlw	128
  3776     0F52  3E75               	addlw	-139
  3777     0F53  1C03               	skipc
  3778     0F54  2FD5               	goto	l4282
  3779                           
  3780                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3781     0F55  300A               	movlw	10
  3782     0F56  00F2               	movwf	___awmod@divisor
  3783     0F57  3000               	movlw	0
  3784     0F58  00F3               	movwf	___awmod@divisor+1
  3785     0F59  0865               	movf	scale@scl,w
  3786     0F5A  00F4               	movwf	___awmod@dividend
  3787     0F5B  01F5               	clrf	___awmod@dividend+1
  3788     0F5C  1BF4               	btfsc	___awmod@dividend,7
  3789     0F5D  03F5               	decf	___awmod@dividend+1,f
  3790     0F5E  160A  158A  264A  120A  158A  	fcall	___awmod
  3791     0F63  0872               	movf	?___awmod,w
  3792     0F64  00D7               	movwf	??_scale
  3793     0F65  3001               	movlw	1
  3794     0F66                     u7225:
  3795     0F66  1003               	clrc
  3796     0F67  0DD7               	rlf	??_scale,f
  3797     0F68  3EFF               	addlw	-1
  3798     0F69  1D03               	skipz
  3799     0F6A  2F66               	goto	u7225
  3800     0F6B  1003               	clrc
  3801     0F6C  0D57               	rlf	??_scale,w
  3802     0F6D  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3803     0F6E  0084               	movwf	4
  3804     0F6F  160A  118A  2000  120A  158A  	fcall	stringdir
  3805     0F74  00D8               	movwf	??_scale+1
  3806     0F75  160A  118A  2000  120A  158A  	fcall	stringdir
  3807     0F7A  00D9               	movwf	??_scale+2
  3808     0F7B  160A  118A  2000  120A  158A  	fcall	stringdir
  3809     0F80  00DA               	movwf	??_scale+3
  3810     0F81  160A  118A  2000  120A  158A  	fcall	stringdir
  3811     0F86  00DB               	movwf	??_scale+4
  3812     0F87  085B               	movf	??_scale+4,w
  3813     0F88  00BC               	movwf	___flmul@b+3
  3814     0F89  085A               	movf	??_scale+3,w
  3815     0F8A  00BB               	movwf	___flmul@b+2
  3816     0F8B  0859               	movf	??_scale+2,w
  3817     0F8C  00BA               	movwf	___flmul@b+1
  3818     0F8D  0858               	movf	??_scale+1,w
  3819     0F8E  00B9               	movwf	___flmul@b
  3820     0F8F  300A               	movlw	10
  3821     0F90  00A0               	movwf	___awdiv@divisor
  3822     0F91  3000               	movlw	0
  3823     0F92  00A1               	movwf	___awdiv@divisor+1
  3824     0F93  0865               	movf	scale@scl,w
  3825     0F94  00A2               	movwf	___awdiv@dividend
  3826     0F95  01A3               	clrf	___awdiv@dividend+1
  3827     0F96  1BA2               	btfsc	___awdiv@dividend,7
  3828     0F97  03A3               	decf	___awdiv@dividend+1,f
  3829     0F98  160A  158A  26E1  120A  158A  	fcall	___awdiv
  3830     0F9D  0820               	movf	?___awdiv,w
  3831     0F9E  00DC               	movwf	??_scale+5
  3832     0F9F  3001               	movlw	1
  3833     0FA0                     u7235:
  3834     0FA0  1003               	clrc
  3835     0FA1  0DDC               	rlf	??_scale+5,f
  3836     0FA2  3EFF               	addlw	-1
  3837     0FA3  1D03               	skipz
  3838     0FA4  2FA0               	goto	u7235
  3839     0FA5  1003               	clrc
  3840     0FA6  0D5C               	rlf	??_scale+5,w
  3841     0FA7  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3842     0FA8  0084               	movwf	4
  3843     0FA9  160A  118A  2000  120A  158A  	fcall	stringdir
  3844     0FAE  00DD               	movwf	??_scale+6
  3845     0FAF  160A  118A  2000  120A  158A  	fcall	stringdir
  3846     0FB4  00DE               	movwf	??_scale+7
  3847     0FB5  160A  118A  2000  120A  158A  	fcall	stringdir
  3848     0FBA  00DF               	movwf	??_scale+8
  3849     0FBB  160A  118A  2000  120A  158A  	fcall	stringdir
  3850     0FC0  00E0               	movwf	??_scale+9
  3851     0FC1  0860               	movf	??_scale+9,w
  3852     0FC2  00C0               	movwf	___flmul@a+3
  3853     0FC3  085F               	movf	??_scale+8,w
  3854     0FC4  00BF               	movwf	___flmul@a+2
  3855     0FC5  085E               	movf	??_scale+7,w
  3856     0FC6  00BE               	movwf	___flmul@a+1
  3857     0FC7  085D               	movf	??_scale+6,w
  3858     0FC8  00BD               	movwf	___flmul@a
  3859     0FC9  120A  158A  21FF   	fcall	___flmul
  3860     0FCC  083C               	movf	?___flmul+3,w
  3861     0FCD  00D6               	movwf	?_scale+3
  3862     0FCE  083B               	movf	?___flmul+2,w
  3863     0FCF  00D5               	movwf	?_scale+2
  3864     0FD0  083A               	movf	?___flmul+1,w
  3865     0FD1  00D4               	movwf	?_scale+1
  3866     0FD2  0839               	movf	?___flmul,w
  3867     0FD3  00D3               	movwf	?_scale
  3868     0FD4  0008               	return
  3869     0FD5                     l4282:
  3870                           
  3871                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3872     0FD5  0865               	movf	scale@scl,w
  3873     0FD6  00D7               	movwf	??_scale
  3874     0FD7  3001               	movlw	1
  3875     0FD8                     u7245:
  3876     0FD8  1003               	clrc
  3877     0FD9  0DD7               	rlf	??_scale,f
  3878     0FDA  3EFF               	addlw	-1
  3879     0FDB  1D03               	skipz
  3880     0FDC  2FD8               	goto	u7245
  3881     0FDD  1003               	clrc
  3882     0FDE  0D57               	rlf	??_scale,w
  3883     0FDF  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3884     0FE0  0084               	movwf	4
  3885     0FE1  160A  118A  2000  120A  158A  	fcall	stringdir
  3886     0FE6  00D8               	movwf	??_scale+1
  3887     0FE7  160A  118A  2000  120A  158A  	fcall	stringdir
  3888     0FEC  00D9               	movwf	??_scale+2
  3889     0FED  160A  118A  2000  120A  158A  	fcall	stringdir
  3890     0FF2  00DA               	movwf	??_scale+3
  3891     0FF3  160A  118A  2000   	fcall	stringdir
  3892     0FF6  00DB               	movwf	??_scale+4
  3893     0FF7  085B               	movf	??_scale+4,w
  3894     0FF8  00D6               	movwf	?_scale+3
  3895     0FF9  085A               	movf	??_scale+3,w
  3896     0FFA  00D5               	movwf	?_scale+2
  3897     0FFB  0859               	movf	??_scale+2,w
  3898     0FFC  00D4               	movwf	?_scale+1
  3899     0FFD  0858               	movf	??_scale+1,w
  3900     0FFE  00D3               	movwf	?_scale
  3901     0FFF  0008               	return
  3902     1000                     __end_of_scale:
  3903                           
  3904                           	psect	text4
  3905     1E4A                     __ptext4:	
  3906 ;; *************** function ___awmod *****************
  3907 ;; Defined at:
  3908 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  3909 ;; Parameters:    Size  Location     Type
  3910 ;;  divisor         2    2[COMMON] int 
  3911 ;;  dividend        2    4[COMMON] int 
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;  sign            1    7[COMMON] unsigned char 
  3914 ;;  counter         1    6[COMMON] unsigned char 
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  2    2[COMMON] int 
  3917 ;; Registers used:
  3918 ;;		wreg, status,2, status,0, btemp+1
  3919 ;; Tracked objects:
  3920 ;;		On entry : 300/0
  3921 ;;		On exit  : 300/0
  3922 ;;		Unchanged: 300/0
  3923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3924 ;;      Params:         4       0       0       0       0
  3925 ;;      Locals:         2       0       0       0       0
  3926 ;;      Temps:          0       0       0       0       0
  3927 ;;      Totals:         6       0       0       0       0
  3928 ;;Total ram usage:        6 bytes
  3929 ;; Hardware stack levels used: 1
  3930 ;; Hardware stack levels required when called: 1
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		_scale
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938     1E4A                     ___awmod:	
  3939                           ;psect for function ___awmod
  3940                           
  3941                           
  3942                           ;incstack = 0
  3943                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  3944     1E4A  01F7               	clrf	___awmod@sign
  3945     1E4B  1FF5               	btfss	___awmod@dividend+1,7
  3946     1E4C  2E54               	goto	l3812
  3947     1E4D  09F4               	comf	___awmod@dividend,f
  3948     1E4E  09F5               	comf	___awmod@dividend+1,f
  3949     1E4F  0AF4               	incf	___awmod@dividend,f
  3950     1E50  1903               	skipnz
  3951     1E51  0AF5               	incf	___awmod@dividend+1,f
  3952     1E52  01F7               	clrf	___awmod@sign
  3953     1E53  0AF7               	incf	___awmod@sign,f
  3954     1E54                     l3812:
  3955     1E54  1FF3               	btfss	___awmod@divisor+1,7
  3956     1E55  2E5B               	goto	l3816
  3957     1E56  09F2               	comf	___awmod@divisor,f
  3958     1E57  09F3               	comf	___awmod@divisor+1,f
  3959     1E58  0AF2               	incf	___awmod@divisor,f
  3960     1E59  1903               	skipnz
  3961     1E5A  0AF3               	incf	___awmod@divisor+1,f
  3962     1E5B                     l3816:
  3963     1E5B  0872               	movf	___awmod@divisor,w
  3964     1E5C  0473               	iorwf	___awmod@divisor+1,w
  3965     1E5D  1903               	btfsc	3,2
  3966     1E5E  2E88               	goto	l3834
  3967     1E5F  01F6               	clrf	___awmod@counter
  3968     1E60  0AF6               	incf	___awmod@counter,f
  3969     1E61                     l3824:
  3970     1E61  1BF3               	btfsc	___awmod@divisor+1,7
  3971     1E62  2E6F               	goto	l3826
  3972     1E63  3001               	movlw	1
  3973     1E64                     u6045:
  3974     1E64  1003               	clrc
  3975     1E65  0DF2               	rlf	___awmod@divisor,f
  3976     1E66  0DF3               	rlf	___awmod@divisor+1,f
  3977     1E67  3EFF               	addlw	-1
  3978     1E68  1D03               	skipz
  3979     1E69  2E64               	goto	u6045
  3980     1E6A  3001               	movlw	1
  3981     1E6B  00FF               	movwf	127
  3982     1E6C  087F               	movf	127,w
  3983     1E6D  07F6               	addwf	___awmod@counter,f
  3984     1E6E  2E61               	goto	l3824
  3985     1E6F                     l3826:
  3986     1E6F  0873               	movf	___awmod@divisor+1,w
  3987     1E70  0275               	subwf	___awmod@dividend+1,w
  3988     1E71  1D03               	skipz
  3989     1E72  2E75               	goto	u6065
  3990     1E73  0872               	movf	___awmod@divisor,w
  3991     1E74  0274               	subwf	___awmod@dividend,w
  3992     1E75                     u6065:
  3993     1E75  1C03               	skipc
  3994     1E76  2E7D               	goto	l3830
  3995     1E77  0872               	movf	___awmod@divisor,w
  3996     1E78  02F4               	subwf	___awmod@dividend,f
  3997     1E79  0873               	movf	___awmod@divisor+1,w
  3998     1E7A  1C03               	skipc
  3999     1E7B  03F5               	decf	___awmod@dividend+1,f
  4000     1E7C  02F5               	subwf	___awmod@dividend+1,f
  4001     1E7D                     l3830:
  4002     1E7D  3001               	movlw	1
  4003     1E7E                     u6075:
  4004     1E7E  1003               	clrc
  4005     1E7F  0CF3               	rrf	___awmod@divisor+1,f
  4006     1E80  0CF2               	rrf	___awmod@divisor,f
  4007     1E81  3EFF               	addlw	-1
  4008     1E82  1D03               	skipz
  4009     1E83  2E7E               	goto	u6075
  4010     1E84  3001               	movlw	1
  4011     1E85  02F6               	subwf	___awmod@counter,f
  4012     1E86  1D03               	btfss	3,2
  4013     1E87  2E6F               	goto	l3826
  4014     1E88                     l3834:
  4015     1E88  0877               	movf	___awmod@sign,w
  4016     1E89  1903               	btfsc	3,2
  4017     1E8A  2E90               	goto	l3838
  4018     1E8B  09F4               	comf	___awmod@dividend,f
  4019     1E8C  09F5               	comf	___awmod@dividend+1,f
  4020     1E8D  0AF4               	incf	___awmod@dividend,f
  4021     1E8E  1903               	skipnz
  4022     1E8F  0AF5               	incf	___awmod@dividend+1,f
  4023     1E90                     l3838:
  4024     1E90  0875               	movf	___awmod@dividend+1,w
  4025     1E91  00F3               	movwf	?___awmod+1
  4026     1E92  0874               	movf	___awmod@dividend,w
  4027     1E93  00F2               	movwf	?___awmod
  4028     1E94  0008               	return
  4029     1E95                     __end_of___awmod:
  4030                           
  4031                           	psect	text5
  4032     1EE1                     __ptext5:	
  4033 ;; *************** function ___awdiv *****************
  4034 ;; Defined at:
  4035 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;  divisor         2    0[BANK0 ] int 
  4038 ;;  dividend        2    2[BANK0 ] int 
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;  quotient        2    6[BANK0 ] int 
  4041 ;;  sign            1    5[BANK0 ] unsigned char 
  4042 ;;  counter         1    4[BANK0 ] unsigned char 
  4043 ;; Return value:  Size  Location     Type
  4044 ;;                  2    0[BANK0 ] int 
  4045 ;; Registers used:
  4046 ;;		wreg, status,2, status,0, btemp+1
  4047 ;; Tracked objects:
  4048 ;;		On entry : 300/0
  4049 ;;		On exit  : 300/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4052 ;;      Params:         0       4       0       0       0
  4053 ;;      Locals:         0       4       0       0       0
  4054 ;;      Temps:          0       0       0       0       0
  4055 ;;      Totals:         0       8       0       0       0
  4056 ;;Total ram usage:        8 bytes
  4057 ;; Hardware stack levels used: 1
  4058 ;; Hardware stack levels required when called: 1
  4059 ;; This function calls:
  4060 ;;		Nothing
  4061 ;; This function is called by:
  4062 ;;		_scale
  4063 ;;		_sprintf
  4064 ;; This function uses a non-reentrant model
  4065 ;;
  4066                           
  4067     1EE1                     ___awdiv:	
  4068                           ;psect for function ___awdiv
  4069                           
  4070                           
  4071                           ;incstack = 0
  4072                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  4073     1EE1  01A5               	clrf	___awdiv@sign
  4074     1EE2  1FA1               	btfss	___awdiv@divisor+1,7
  4075     1EE3  2EEB               	goto	l3768
  4076     1EE4  09A0               	comf	___awdiv@divisor,f
  4077     1EE5  09A1               	comf	___awdiv@divisor+1,f
  4078     1EE6  0AA0               	incf	___awdiv@divisor,f
  4079     1EE7  1903               	skipnz
  4080     1EE8  0AA1               	incf	___awdiv@divisor+1,f
  4081     1EE9  01A5               	clrf	___awdiv@sign
  4082     1EEA  0AA5               	incf	___awdiv@sign,f
  4083     1EEB                     l3768:
  4084     1EEB  1FA3               	btfss	___awdiv@dividend+1,7
  4085     1EEC  2EF6               	goto	l3774
  4086     1EED  09A2               	comf	___awdiv@dividend,f
  4087     1EEE  09A3               	comf	___awdiv@dividend+1,f
  4088     1EEF  0AA2               	incf	___awdiv@dividend,f
  4089     1EF0  1903               	skipnz
  4090     1EF1  0AA3               	incf	___awdiv@dividend+1,f
  4091     1EF2  3001               	movlw	1
  4092     1EF3  00FF               	movwf	127
  4093     1EF4  087F               	movf	127,w
  4094     1EF5  06A5               	xorwf	___awdiv@sign,f
  4095     1EF6                     l3774:
  4096     1EF6  01A6               	clrf	___awdiv@quotient
  4097     1EF7  01A7               	clrf	___awdiv@quotient+1
  4098     1EF8  0820               	movf	___awdiv@divisor,w
  4099     1EF9  0421               	iorwf	___awdiv@divisor+1,w
  4100     1EFA  1903               	btfsc	3,2
  4101     1EFB  2F2D               	goto	l3796
  4102     1EFC  01A4               	clrf	___awdiv@counter
  4103     1EFD  0AA4               	incf	___awdiv@counter,f
  4104     1EFE                     l3784:
  4105     1EFE  1BA1               	btfsc	___awdiv@divisor+1,7
  4106     1EFF  2F0C               	goto	l3786
  4107     1F00  3001               	movlw	1
  4108     1F01                     u5945:
  4109     1F01  1003               	clrc
  4110     1F02  0DA0               	rlf	___awdiv@divisor,f
  4111     1F03  0DA1               	rlf	___awdiv@divisor+1,f
  4112     1F04  3EFF               	addlw	-1
  4113     1F05  1D03               	skipz
  4114     1F06  2F01               	goto	u5945
  4115     1F07  3001               	movlw	1
  4116     1F08  00FF               	movwf	127
  4117     1F09  087F               	movf	127,w
  4118     1F0A  07A4               	addwf	___awdiv@counter,f
  4119     1F0B  2EFE               	goto	l3784
  4120     1F0C                     l3786:
  4121     1F0C  3001               	movlw	1
  4122     1F0D                     u5965:
  4123     1F0D  1003               	clrc
  4124     1F0E  0DA6               	rlf	___awdiv@quotient,f
  4125     1F0F  0DA7               	rlf	___awdiv@quotient+1,f
  4126     1F10  3EFF               	addlw	-1
  4127     1F11  1D03               	skipz
  4128     1F12  2F0D               	goto	u5965
  4129     1F13  0821               	movf	___awdiv@divisor+1,w
  4130     1F14  0223               	subwf	___awdiv@dividend+1,w
  4131     1F15  1D03               	skipz
  4132     1F16  2F19               	goto	u5975
  4133     1F17  0820               	movf	___awdiv@divisor,w
  4134     1F18  0222               	subwf	___awdiv@dividend,w
  4135     1F19                     u5975:
  4136     1F19  1C03               	skipc
  4137     1F1A  2F22               	goto	l3792
  4138     1F1B  0820               	movf	___awdiv@divisor,w
  4139     1F1C  02A2               	subwf	___awdiv@dividend,f
  4140     1F1D  0821               	movf	___awdiv@divisor+1,w
  4141     1F1E  1C03               	skipc
  4142     1F1F  03A3               	decf	___awdiv@dividend+1,f
  4143     1F20  02A3               	subwf	___awdiv@dividend+1,f
  4144     1F21  1426               	bsf	___awdiv@quotient,0
  4145     1F22                     l3792:
  4146     1F22  3001               	movlw	1
  4147     1F23                     u5985:
  4148     1F23  1003               	clrc
  4149     1F24  0CA1               	rrf	___awdiv@divisor+1,f
  4150     1F25  0CA0               	rrf	___awdiv@divisor,f
  4151     1F26  3EFF               	addlw	-1
  4152     1F27  1D03               	skipz
  4153     1F28  2F23               	goto	u5985
  4154     1F29  3001               	movlw	1
  4155     1F2A  02A4               	subwf	___awdiv@counter,f
  4156     1F2B  1D03               	btfss	3,2
  4157     1F2C  2F0C               	goto	l3786
  4158     1F2D                     l3796:
  4159     1F2D  0825               	movf	___awdiv@sign,w
  4160     1F2E  1903               	btfsc	3,2
  4161     1F2F  2F35               	goto	l3800
  4162     1F30  09A6               	comf	___awdiv@quotient,f
  4163     1F31  09A7               	comf	___awdiv@quotient+1,f
  4164     1F32  0AA6               	incf	___awdiv@quotient,f
  4165     1F33  1903               	skipnz
  4166     1F34  0AA7               	incf	___awdiv@quotient+1,f
  4167     1F35                     l3800:
  4168     1F35  0827               	movf	___awdiv@quotient+1,w
  4169     1F36  00A1               	movwf	?___awdiv+1
  4170     1F37  0826               	movf	___awdiv@quotient,w
  4171     1F38  00A0               	movwf	?___awdiv
  4172     1F39  0008               	return
  4173     1F3A                     __end_of___awdiv:
  4174                           
  4175                           	psect	text6
  4176     0848                     __ptext6:	
  4177 ;; *************** function _fround *****************
  4178 ;; Defined at:
  4179 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  4180 ;; Parameters:    Size  Location     Type
  4181 ;;  prec            1    wreg     unsigned char 
  4182 ;; Auto vars:     Size  Location     Type
  4183 ;;  prec            1   68[BANK0 ] unsigned char 
  4184 ;; Return value:  Size  Location     Type
  4185 ;;                  4   51[BANK0 ] unsigned char 
  4186 ;; Registers used:
  4187 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4188 ;; Tracked objects:
  4189 ;;		On entry : 200/0
  4190 ;;		On exit  : 300/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4193 ;;      Params:         0       4       0       0       0
  4194 ;;      Locals:         0       9       0       0       0
  4195 ;;      Temps:          0       5       0       0       0
  4196 ;;      Totals:         0      18       0       0       0
  4197 ;;Total ram usage:       18 bytes
  4198 ;; Hardware stack levels used: 1
  4199 ;; Hardware stack levels required when called: 3
  4200 ;; This function calls:
  4201 ;;		___flmul
  4202 ;;		___lbdiv
  4203 ;;		___lbmod
  4204 ;; This function is called by:
  4205 ;;		_sprintf
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           
  4209     0848                     _fround:	
  4210                           ;psect for function _fround
  4211                           
  4212                           
  4213                           ;incstack = 0
  4214                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4215                           ;fround@prec stored from wreg
  4216     0848  1283               	bcf	3,5	;RP0=0, select bank0
  4217     0849  00E4               	movwf	fround@prec
  4218                           
  4219                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4220     084A  306E               	movlw	110
  4221     084B  0264               	subwf	fround@prec,w
  4222     084C  1C03               	skipc
  4223     084D  292C               	goto	l4236
  4224                           
  4225                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4226     084E  303F               	movlw	63
  4227     084F  00BC               	movwf	___flmul@b+3
  4228     0850  3000               	movlw	0
  4229     0851  00BB               	movwf	___flmul@b+2
  4230     0852  3000               	movlw	0
  4231     0853  00BA               	movwf	___flmul@b+1
  4232     0854  3000               	movlw	0
  4233     0855  00B9               	movwf	___flmul@b
  4234     0856  3064               	movlw	100
  4235     0857  00F8               	movwf	___lbdiv@divisor
  4236     0858  0864               	movf	fround@prec,w
  4237     0859  160A  118A  20AD  120A  158A  	fcall	___lbdiv
  4238     085E  00D7               	movwf	??_fround
  4239     085F  3001               	movlw	1
  4240     0860                     u7015:
  4241     0860  1003               	clrc
  4242     0861  0DD7               	rlf	??_fround,f
  4243     0862  3EFF               	addlw	-1
  4244     0863  1D03               	skipz
  4245     0864  2860               	goto	u7015
  4246     0865  1003               	clrc
  4247     0866  0D57               	rlf	??_fround,w
  4248     0867  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4249     0868  0084               	movwf	4
  4250     0869  160A  118A  2000  120A  158A  	fcall	stringdir
  4251     086E  00D8               	movwf	??_fround+1
  4252     086F  160A  118A  2000  120A  158A  	fcall	stringdir
  4253     0874  00D9               	movwf	??_fround+2
  4254     0875  160A  118A  2000  120A  158A  	fcall	stringdir
  4255     087A  00DA               	movwf	??_fround+3
  4256     087B  160A  118A  2000  120A  158A  	fcall	stringdir
  4257     0880  00DB               	movwf	??_fround+4
  4258     0881  085B               	movf	??_fround+4,w
  4259     0882  00C0               	movwf	___flmul@a+3
  4260     0883  085A               	movf	??_fround+3,w
  4261     0884  00BF               	movwf	___flmul@a+2
  4262     0885  0859               	movf	??_fround+2,w
  4263     0886  00BE               	movwf	___flmul@a+1
  4264     0887  0858               	movf	??_fround+1,w
  4265     0888  00BD               	movwf	___flmul@a
  4266     0889  120A  158A  21FF  120A  158A  	fcall	___flmul
  4267     088E  083C               	movf	?___flmul+3,w
  4268     088F  00E3               	movwf	_fround$1055+3
  4269     0890  083B               	movf	?___flmul+2,w
  4270     0891  00E2               	movwf	_fround$1055+2
  4271     0892  083A               	movf	?___flmul+1,w
  4272     0893  00E1               	movwf	_fround$1055+1
  4273     0894  0839               	movf	?___flmul,w
  4274     0895  00E0               	movwf	_fround$1055
  4275                           
  4276                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4277     0896  300A               	movlw	10
  4278     0897  00F8               	movwf	___lbdiv@divisor
  4279     0898  3064               	movlw	100
  4280     0899  00F2               	movwf	___lbmod@divisor
  4281     089A  0864               	movf	fround@prec,w
  4282     089B  160A  158A  255D  120A  158A  	fcall	___lbmod
  4283     08A0  160A  118A  20AD  120A  158A  	fcall	___lbdiv
  4284     08A5  00D7               	movwf	??_fround
  4285     08A6  3001               	movlw	1
  4286     08A7                     u7025:
  4287     08A7  1003               	clrc
  4288     08A8  0DD7               	rlf	??_fround,f
  4289     08A9  3EFF               	addlw	-1
  4290     08AA  1D03               	skipz
  4291     08AB  28A7               	goto	u7025
  4292     08AC  1003               	clrc
  4293     08AD  0D57               	rlf	??_fround,w
  4294     08AE  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4295     08AF  0084               	movwf	4
  4296     08B0  160A  118A  2000  120A  158A  	fcall	stringdir
  4297     08B5  00D8               	movwf	??_fround+1
  4298     08B6  160A  118A  2000  120A  158A  	fcall	stringdir
  4299     08BB  00D9               	movwf	??_fround+2
  4300     08BC  160A  118A  2000  120A  158A  	fcall	stringdir
  4301     08C1  00DA               	movwf	??_fround+3
  4302     08C2  160A  118A  2000  120A  158A  	fcall	stringdir
  4303     08C7  00DB               	movwf	??_fround+4
  4304     08C8  085B               	movf	??_fround+4,w
  4305     08C9  00BC               	movwf	___flmul@b+3
  4306     08CA  085A               	movf	??_fround+3,w
  4307     08CB  00BB               	movwf	___flmul@b+2
  4308     08CC  0859               	movf	??_fround+2,w
  4309     08CD  00BA               	movwf	___flmul@b+1
  4310     08CE  0858               	movf	??_fround+1,w
  4311     08CF  00B9               	movwf	___flmul@b
  4312     08D0  0863               	movf	_fround$1055+3,w
  4313     08D1  00C0               	movwf	___flmul@a+3
  4314     08D2  0862               	movf	_fround$1055+2,w
  4315     08D3  00BF               	movwf	___flmul@a+2
  4316     08D4  0861               	movf	_fround$1055+1,w
  4317     08D5  00BE               	movwf	___flmul@a+1
  4318     08D6  0860               	movf	_fround$1055,w
  4319     08D7  00BD               	movwf	___flmul@a
  4320     08D8  120A  158A  21FF  120A  158A  	fcall	___flmul
  4321     08DD  083C               	movf	?___flmul+3,w
  4322     08DE  00DF               	movwf	_fround$1056+3
  4323     08DF  083B               	movf	?___flmul+2,w
  4324     08E0  00DE               	movwf	_fround$1056+2
  4325     08E1  083A               	movf	?___flmul+1,w
  4326     08E2  00DD               	movwf	_fround$1056+1
  4327     08E3  0839               	movf	?___flmul,w
  4328     08E4  00DC               	movwf	_fround$1056
  4329                           
  4330                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4331     08E5  300A               	movlw	10
  4332     08E6  00F2               	movwf	___lbmod@divisor
  4333     08E7  0864               	movf	fround@prec,w
  4334     08E8  160A  158A  255D  120A  158A  	fcall	___lbmod
  4335     08ED  00D7               	movwf	??_fround
  4336     08EE  3001               	movlw	1
  4337     08EF                     u7035:
  4338     08EF  1003               	clrc
  4339     08F0  0DD7               	rlf	??_fround,f
  4340     08F1  3EFF               	addlw	-1
  4341     08F2  1D03               	skipz
  4342     08F3  28EF               	goto	u7035
  4343     08F4  1003               	clrc
  4344     08F5  0D57               	rlf	??_fround,w
  4345     08F6  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4346     08F7  0084               	movwf	4
  4347     08F8  160A  118A  2000  120A  158A  	fcall	stringdir
  4348     08FD  00D8               	movwf	??_fround+1
  4349     08FE  160A  118A  2000  120A  158A  	fcall	stringdir
  4350     0903  00D9               	movwf	??_fround+2
  4351     0904  160A  118A  2000  120A  158A  	fcall	stringdir
  4352     0909  00DA               	movwf	??_fround+3
  4353     090A  160A  118A  2000  120A  158A  	fcall	stringdir
  4354     090F  00DB               	movwf	??_fround+4
  4355     0910  085B               	movf	??_fround+4,w
  4356     0911  00BC               	movwf	___flmul@b+3
  4357     0912  085A               	movf	??_fround+3,w
  4358     0913  00BB               	movwf	___flmul@b+2
  4359     0914  0859               	movf	??_fround+2,w
  4360     0915  00BA               	movwf	___flmul@b+1
  4361     0916  0858               	movf	??_fround+1,w
  4362     0917  00B9               	movwf	___flmul@b
  4363     0918  085F               	movf	_fround$1056+3,w
  4364     0919  00C0               	movwf	___flmul@a+3
  4365     091A  085E               	movf	_fround$1056+2,w
  4366     091B  00BF               	movwf	___flmul@a+2
  4367     091C  085D               	movf	_fround$1056+1,w
  4368     091D  00BE               	movwf	___flmul@a+1
  4369     091E  085C               	movf	_fround$1056,w
  4370     091F  00BD               	movwf	___flmul@a
  4371     0920  120A  158A  21FF   	fcall	___flmul
  4372     0923  083C               	movf	?___flmul+3,w
  4373     0924  00D6               	movwf	?_fround+3
  4374     0925  083B               	movf	?___flmul+2,w
  4375     0926  00D5               	movwf	?_fround+2
  4376     0927  083A               	movf	?___flmul+1,w
  4377     0928  00D4               	movwf	?_fround+1
  4378     0929  0839               	movf	?___flmul,w
  4379     092A  00D3               	movwf	?_fround
  4380     092B  0008               	return
  4381     092C                     l4236:
  4382     092C  300B               	movlw	11
  4383     092D  0264               	subwf	fround@prec,w
  4384     092E  1C03               	skipc
  4385     092F  29BF               	goto	l4242
  4386                           
  4387                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4388     0930  303F               	movlw	63
  4389     0931  00BC               	movwf	___flmul@b+3
  4390     0932  3000               	movlw	0
  4391     0933  00BB               	movwf	___flmul@b+2
  4392     0934  3000               	movlw	0
  4393     0935  00BA               	movwf	___flmul@b+1
  4394     0936  3000               	movlw	0
  4395     0937  00B9               	movwf	___flmul@b
  4396     0938  300A               	movlw	10
  4397     0939  00F8               	movwf	___lbdiv@divisor
  4398     093A  0864               	movf	fround@prec,w
  4399     093B  160A  118A  20AD  120A  158A  	fcall	___lbdiv
  4400     0940  00D7               	movwf	??_fround
  4401     0941  3001               	movlw	1
  4402     0942                     u7055:
  4403     0942  1003               	clrc
  4404     0943  0DD7               	rlf	??_fround,f
  4405     0944  3EFF               	addlw	-1
  4406     0945  1D03               	skipz
  4407     0946  2942               	goto	u7055
  4408     0947  1003               	clrc
  4409     0948  0D57               	rlf	??_fround,w
  4410     0949  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4411     094A  0084               	movwf	4
  4412     094B  160A  118A  2000  120A  158A  	fcall	stringdir
  4413     0950  00D8               	movwf	??_fround+1
  4414     0951  160A  118A  2000  120A  158A  	fcall	stringdir
  4415     0956  00D9               	movwf	??_fround+2
  4416     0957  160A  118A  2000  120A  158A  	fcall	stringdir
  4417     095C  00DA               	movwf	??_fround+3
  4418     095D  160A  118A  2000  120A  158A  	fcall	stringdir
  4419     0962  00DB               	movwf	??_fround+4
  4420     0963  085B               	movf	??_fround+4,w
  4421     0964  00C0               	movwf	___flmul@a+3
  4422     0965  085A               	movf	??_fround+3,w
  4423     0966  00BF               	movwf	___flmul@a+2
  4424     0967  0859               	movf	??_fround+2,w
  4425     0968  00BE               	movwf	___flmul@a+1
  4426     0969  0858               	movf	??_fround+1,w
  4427     096A  00BD               	movwf	___flmul@a
  4428     096B  120A  158A  21FF  120A  158A  	fcall	___flmul
  4429     0970  083C               	movf	?___flmul+3,w
  4430     0971  00E3               	movwf	_fround$1055+3
  4431     0972  083B               	movf	?___flmul+2,w
  4432     0973  00E2               	movwf	_fround$1055+2
  4433     0974  083A               	movf	?___flmul+1,w
  4434     0975  00E1               	movwf	_fround$1055+1
  4435     0976  0839               	movf	?___flmul,w
  4436     0977  00E0               	movwf	_fround$1055
  4437                           
  4438                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4439     0978  300A               	movlw	10
  4440     0979  00F2               	movwf	___lbmod@divisor
  4441     097A  0864               	movf	fround@prec,w
  4442     097B  160A  158A  255D  120A  158A  	fcall	___lbmod
  4443     0980  00D7               	movwf	??_fround
  4444     0981  3001               	movlw	1
  4445     0982                     u7065:
  4446     0982  1003               	clrc
  4447     0983  0DD7               	rlf	??_fround,f
  4448     0984  3EFF               	addlw	-1
  4449     0985  1D03               	skipz
  4450     0986  2982               	goto	u7065
  4451     0987  1003               	clrc
  4452     0988  0D57               	rlf	??_fround,w
  4453     0989  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4454     098A  0084               	movwf	4
  4455     098B  160A  118A  2000  120A  158A  	fcall	stringdir
  4456     0990  00D8               	movwf	??_fround+1
  4457     0991  160A  118A  2000  120A  158A  	fcall	stringdir
  4458     0996  00D9               	movwf	??_fround+2
  4459     0997  160A  118A  2000  120A  158A  	fcall	stringdir
  4460     099C  00DA               	movwf	??_fround+3
  4461     099D  160A  118A  2000  120A  158A  	fcall	stringdir
  4462     09A2  00DB               	movwf	??_fround+4
  4463     09A3  085B               	movf	??_fround+4,w
  4464     09A4  00BC               	movwf	___flmul@b+3
  4465     09A5  085A               	movf	??_fround+3,w
  4466     09A6  00BB               	movwf	___flmul@b+2
  4467     09A7  0859               	movf	??_fround+2,w
  4468     09A8  00BA               	movwf	___flmul@b+1
  4469     09A9  0858               	movf	??_fround+1,w
  4470     09AA  00B9               	movwf	___flmul@b
  4471     09AB  0863               	movf	_fround$1055+3,w
  4472     09AC  00C0               	movwf	___flmul@a+3
  4473     09AD  0862               	movf	_fround$1055+2,w
  4474     09AE  00BF               	movwf	___flmul@a+2
  4475     09AF  0861               	movf	_fround$1055+1,w
  4476     09B0  00BE               	movwf	___flmul@a+1
  4477     09B1  0860               	movf	_fround$1055,w
  4478     09B2  00BD               	movwf	___flmul@a
  4479     09B3  120A  158A  21FF   	fcall	___flmul
  4480     09B6  083C               	movf	?___flmul+3,w
  4481     09B7  00D6               	movwf	?_fround+3
  4482     09B8  083B               	movf	?___flmul+2,w
  4483     09B9  00D5               	movwf	?_fround+2
  4484     09BA  083A               	movf	?___flmul+1,w
  4485     09BB  00D4               	movwf	?_fround+1
  4486     09BC  0839               	movf	?___flmul,w
  4487     09BD  00D3               	movwf	?_fround
  4488     09BE  0008               	return
  4489     09BF                     l4242:
  4490                           
  4491                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4492     09BF  303F               	movlw	63
  4493     09C0  00BC               	movwf	___flmul@b+3
  4494     09C1  3000               	movlw	0
  4495     09C2  00BB               	movwf	___flmul@b+2
  4496     09C3  3000               	movlw	0
  4497     09C4  00BA               	movwf	___flmul@b+1
  4498     09C5  3000               	movlw	0
  4499     09C6  00B9               	movwf	___flmul@b
  4500     09C7  0864               	movf	fround@prec,w
  4501     09C8  00D7               	movwf	??_fround
  4502     09C9  3001               	movlw	1
  4503     09CA                     u7075:
  4504     09CA  1003               	clrc
  4505     09CB  0DD7               	rlf	??_fround,f
  4506     09CC  3EFF               	addlw	-1
  4507     09CD  1D03               	skipz
  4508     09CE  29CA               	goto	u7075
  4509     09CF  1003               	clrc
  4510     09D0  0D57               	rlf	??_fround,w
  4511     09D1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4512     09D2  0084               	movwf	4
  4513     09D3  160A  118A  2000  120A  158A  	fcall	stringdir
  4514     09D8  00D8               	movwf	??_fround+1
  4515     09D9  160A  118A  2000  120A  158A  	fcall	stringdir
  4516     09DE  00D9               	movwf	??_fround+2
  4517     09DF  160A  118A  2000  120A  158A  	fcall	stringdir
  4518     09E4  00DA               	movwf	??_fround+3
  4519     09E5  160A  118A  2000  120A  158A  	fcall	stringdir
  4520     09EA  00DB               	movwf	??_fround+4
  4521     09EB  085B               	movf	??_fround+4,w
  4522     09EC  00C0               	movwf	___flmul@a+3
  4523     09ED  085A               	movf	??_fround+3,w
  4524     09EE  00BF               	movwf	___flmul@a+2
  4525     09EF  0859               	movf	??_fround+2,w
  4526     09F0  00BE               	movwf	___flmul@a+1
  4527     09F1  0858               	movf	??_fround+1,w
  4528     09F2  00BD               	movwf	___flmul@a
  4529     09F3  120A  158A  21FF   	fcall	___flmul
  4530     09F6  083C               	movf	?___flmul+3,w
  4531     09F7  00D6               	movwf	?_fround+3
  4532     09F8  083B               	movf	?___flmul+2,w
  4533     09F9  00D5               	movwf	?_fround+2
  4534     09FA  083A               	movf	?___flmul+1,w
  4535     09FB  00D4               	movwf	?_fround+1
  4536     09FC  0839               	movf	?___flmul,w
  4537     09FD  00D3               	movwf	?_fround
  4538     09FE  0008               	return
  4539     09FF                     __end_of_fround:
  4540                           
  4541                           	psect	text7
  4542     1D5D                     __ptext7:	
  4543 ;; *************** function ___lbmod *****************
  4544 ;; Defined at:
  4545 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbmod.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;  dividend        1    wreg     unsigned char 
  4548 ;;  divisor         1    2[COMMON] unsigned char 
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;  dividend        1    5[COMMON] unsigned char 
  4551 ;;  rem             1    7[COMMON] unsigned char 
  4552 ;;  counter         1    6[COMMON] unsigned char 
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  1    wreg      unsigned char 
  4555 ;; Registers used:
  4556 ;;		wreg, status,2, status,0
  4557 ;; Tracked objects:
  4558 ;;		On entry : 300/0
  4559 ;;		On exit  : 300/0
  4560 ;;		Unchanged: 300/0
  4561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4562 ;;      Params:         1       0       0       0       0
  4563 ;;      Locals:         3       0       0       0       0
  4564 ;;      Temps:          2       0       0       0       0
  4565 ;;      Totals:         6       0       0       0       0
  4566 ;;Total ram usage:        6 bytes
  4567 ;; Hardware stack levels used: 1
  4568 ;; Hardware stack levels required when called: 1
  4569 ;; This function calls:
  4570 ;;		Nothing
  4571 ;; This function is called by:
  4572 ;;		_fround
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576     1D5D                     ___lbmod:	
  4577                           ;psect for function ___lbmod
  4578                           
  4579                           
  4580                           ;incstack = 0
  4581                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  4582                           ;___lbmod@dividend stored from wreg
  4583     1D5D  00F5               	movwf	___lbmod@dividend
  4584     1D5E  3008               	movlw	8
  4585     1D5F  00F6               	movwf	___lbmod@counter
  4586     1D60  01F7               	clrf	___lbmod@rem
  4587     1D61                     l3872:
  4588     1D61  0875               	movf	___lbmod@dividend,w
  4589     1D62  00F3               	movwf	??___lbmod
  4590     1D63  3007               	movlw	7
  4591     1D64                     u6145:
  4592     1D64  1003               	clrc
  4593     1D65  0CF3               	rrf	??___lbmod,f
  4594     1D66  3EFF               	addlw	-1
  4595     1D67  1D03               	skipz
  4596     1D68  2D64               	goto	u6145
  4597     1D69  0877               	movf	___lbmod@rem,w
  4598     1D6A  00F4               	movwf	??___lbmod+1
  4599     1D6B  0774               	addwf	??___lbmod+1,w
  4600     1D6C  0473               	iorwf	??___lbmod,w
  4601     1D6D  00F7               	movwf	___lbmod@rem
  4602     1D6E  1003               	clrc
  4603     1D6F  0DF5               	rlf	___lbmod@dividend,f
  4604     1D70  0872               	movf	___lbmod@divisor,w
  4605     1D71  0277               	subwf	___lbmod@rem,w
  4606     1D72  1C03               	skipc
  4607     1D73  2D76               	goto	l638
  4608     1D74  0872               	movf	___lbmod@divisor,w
  4609     1D75  02F7               	subwf	___lbmod@rem,f
  4610     1D76                     l638:
  4611     1D76  3001               	movlw	1
  4612     1D77  02F6               	subwf	___lbmod@counter,f
  4613     1D78  1D03               	btfss	3,2
  4614     1D79  2D61               	goto	l3872
  4615     1D7A  0877               	movf	___lbmod@rem,w
  4616     1D7B  0008               	return
  4617     1D7C                     __end_of___lbmod:
  4618                           
  4619                           	psect	text8
  4620     10AD                     __ptext8:	
  4621 ;; *************** function ___lbdiv *****************
  4622 ;; Defined at:
  4623 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbdiv.c"
  4624 ;; Parameters:    Size  Location     Type
  4625 ;;  dividend        1    wreg     unsigned char 
  4626 ;;  divisor         1    8[COMMON] unsigned char 
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;  dividend        1    0[BANK0 ] unsigned char 
  4629 ;;  quotient        1    2[BANK0 ] unsigned char 
  4630 ;;  counter         1    1[BANK0 ] unsigned char 
  4631 ;; Return value:  Size  Location     Type
  4632 ;;                  1    wreg      unsigned char 
  4633 ;; Registers used:
  4634 ;;		wreg, status,2, status,0, btemp+1
  4635 ;; Tracked objects:
  4636 ;;		On entry : 300/0
  4637 ;;		On exit  : 300/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4640 ;;      Params:         1       0       0       0       0
  4641 ;;      Locals:         0       3       0       0       0
  4642 ;;      Temps:          0       0       0       0       0
  4643 ;;      Totals:         1       3       0       0       0
  4644 ;;Total ram usage:        4 bytes
  4645 ;; Hardware stack levels used: 1
  4646 ;; Hardware stack levels required when called: 1
  4647 ;; This function calls:
  4648 ;;		Nothing
  4649 ;; This function is called by:
  4650 ;;		_fround
  4651 ;; This function uses a non-reentrant model
  4652 ;;
  4653                           
  4654     10AD                     ___lbdiv:	
  4655                           ;psect for function ___lbdiv
  4656                           
  4657                           
  4658                           ;incstack = 0
  4659                           ; Regs used in ___lbdiv: [wreg+status,2+status,0+btemp+1]
  4660                           ;___lbdiv@dividend stored from wreg
  4661     10AD  00A0               	movwf	___lbdiv@dividend
  4662     10AE  01A2               	clrf	___lbdiv@quotient
  4663     10AF  0878               	movf	___lbdiv@divisor,w
  4664     10B0  1903               	btfsc	3,2
  4665     10B1  28CC               	goto	l3864
  4666     10B2  01A1               	clrf	___lbdiv@counter
  4667     10B3  0AA1               	incf	___lbdiv@counter,f
  4668     10B4                     l3852:
  4669     10B4  1BF8               	btfsc	___lbdiv@divisor,7
  4670     10B5  28BD               	goto	l3854
  4671     10B6  1003               	clrc
  4672     10B7  0DF8               	rlf	___lbdiv@divisor,f
  4673     10B8  3001               	movlw	1
  4674     10B9  00FF               	movwf	127
  4675     10BA  087F               	movf	127,w
  4676     10BB  07A1               	addwf	___lbdiv@counter,f
  4677     10BC  28B4               	goto	l3852
  4678     10BD                     l3854:
  4679     10BD  1003               	clrc
  4680     10BE  0DA2               	rlf	___lbdiv@quotient,f
  4681     10BF  0878               	movf	___lbdiv@divisor,w
  4682     10C0  0220               	subwf	___lbdiv@dividend,w
  4683     10C1  1C03               	skipc
  4684     10C2  28C7               	goto	L8
  4685     10C3  0878               	movf	___lbdiv@divisor,w
  4686     10C4  02A0               	subwf	___lbdiv@dividend,f
  4687     10C5  1422               	bsf	___lbdiv@quotient,0
  4688     10C6  1003               	clrc
  4689     10C7                     L8:
  4690     10C7  0CF8               	rrf	___lbdiv@divisor,f
  4691     10C8  3001               	movlw	1
  4692     10C9  02A1               	subwf	___lbdiv@counter,f
  4693     10CA  1D03               	btfss	3,2
  4694     10CB  28BD               	goto	l3854
  4695     10CC                     l3864:
  4696     10CC  0822               	movf	___lbdiv@quotient,w
  4697     10CD  0008               	return
  4698     10CE                     __end_of___lbdiv:
  4699                           
  4700                           	psect	text9
  4701     1322                     __ptext9:	
  4702 ;; *************** function __tdiv_to_l_ *****************
  4703 ;; Defined at:
  4704 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftdivl.c"
  4705 ;; Parameters:    Size  Location     Type
  4706 ;;  f1              4    2[COMMON] float 
  4707 ;;  f2              4    6[COMMON] float 
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;  quot            4    3[BANK0 ] unsigned long 
  4710 ;;  exp1            1    8[BANK0 ] unsigned char 
  4711 ;;  cntr            1    7[BANK0 ] unsigned char 
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  4    2[COMMON] unsigned long 
  4714 ;; Registers used:
  4715 ;;		wreg, status,2, status,0, btemp+1
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 300/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4721 ;;      Params:         8       0       0       0       0
  4722 ;;      Locals:         0       6       0       0       0
  4723 ;;      Temps:          0       3       0       0       0
  4724 ;;      Totals:         8       9       0       0       0
  4725 ;;Total ram usage:       17 bytes
  4726 ;; Hardware stack levels used: 1
  4727 ;; Hardware stack levels required when called: 1
  4728 ;; This function calls:
  4729 ;;		Nothing
  4730 ;; This function is called by:
  4731 ;;		_sprintf
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735     1322                     __tdiv_to_l_:	
  4736                           ;psect for function __tdiv_to_l_
  4737                           
  4738                           
  4739                           ;incstack = 0
  4740                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0+btemp+1]
  4741     1322  0872               	movf	__tdiv_to_l_@f1,w
  4742     1323  1283               	bcf	3,5	;RP0=0, select bank0
  4743     1324  1303               	bcf	3,6	;RP1=0, select bank0
  4744     1325  00A0               	movwf	??__tdiv_to_l_
  4745     1326  0873               	movf	__tdiv_to_l_@f1+1,w
  4746     1327  00A1               	movwf	??__tdiv_to_l_+1
  4747     1328  0874               	movf	__tdiv_to_l_@f1+2,w
  4748     1329  00A2               	movwf	??__tdiv_to_l_+2
  4749     132A  1003               	clrc
  4750     132B  0D21               	rlf	??__tdiv_to_l_+1,w
  4751     132C  0D22               	rlf	??__tdiv_to_l_+2,w
  4752     132D  00A8               	movwf	__tdiv_to_l_@exp1
  4753     132E  0828               	movf	__tdiv_to_l_@exp1,w
  4754     132F  1D03               	btfss	3,2
  4755     1330  2B3A               	goto	l4292
  4756     1331                     l4288:
  4757     1331  3000               	movlw	0
  4758     1332  00F5               	movwf	?__tdiv_to_l_+3
  4759     1333  3000               	movlw	0
  4760     1334  00F4               	movwf	?__tdiv_to_l_+2
  4761     1335  3000               	movlw	0
  4762     1336  00F3               	movwf	?__tdiv_to_l_+1
  4763     1337  3000               	movlw	0
  4764     1338  00F2               	movwf	?__tdiv_to_l_
  4765     1339  0008               	return
  4766     133A                     l4292:
  4767     133A  0876               	movf	__tdiv_to_l_@f2,w
  4768     133B  00A0               	movwf	??__tdiv_to_l_
  4769     133C  0877               	movf	__tdiv_to_l_@f2+1,w
  4770     133D  00A1               	movwf	??__tdiv_to_l_+1
  4771     133E  0878               	movf	__tdiv_to_l_@f2+2,w
  4772     133F  00A2               	movwf	??__tdiv_to_l_+2
  4773     1340  1003               	clrc
  4774     1341  0D21               	rlf	??__tdiv_to_l_+1,w
  4775     1342  0D22               	rlf	??__tdiv_to_l_+2,w
  4776     1343  00A7               	movwf	__tdiv_to_l_@cntr
  4777     1344  0827               	movf	__tdiv_to_l_@cntr,w
  4778     1345  1903               	btfsc	3,2
  4779     1346  2B31               	goto	l4288
  4780     1347  17F3               	bsf	__tdiv_to_l_@f1+1,7
  4781     1348  30FF               	movlw	255
  4782     1349  05F2               	andwf	__tdiv_to_l_@f1,f
  4783     134A  30FF               	movlw	255
  4784     134B  05F3               	andwf	__tdiv_to_l_@f1+1,f
  4785     134C  3000               	movlw	0
  4786     134D  05F4               	andwf	__tdiv_to_l_@f1+2,f
  4787     134E  17F7               	bsf	__tdiv_to_l_@f2+1,7
  4788     134F  30FF               	movlw	255
  4789     1350  05F6               	andwf	__tdiv_to_l_@f2,f
  4790     1351  30FF               	movlw	255
  4791     1352  05F7               	andwf	__tdiv_to_l_@f2+1,f
  4792     1353  3000               	movlw	0
  4793     1354  05F8               	andwf	__tdiv_to_l_@f2+2,f
  4794     1355  3000               	movlw	0
  4795     1356  00A6               	movwf	__tdiv_to_l_@quot+3
  4796     1357  3000               	movlw	0
  4797     1358  00A5               	movwf	__tdiv_to_l_@quot+2
  4798     1359  3000               	movlw	0
  4799     135A  00A4               	movwf	__tdiv_to_l_@quot+1
  4800     135B  3000               	movlw	0
  4801     135C  00A3               	movwf	__tdiv_to_l_@quot
  4802     135D  307F               	movlw	127
  4803     135E  02A8               	subwf	__tdiv_to_l_@exp1,f
  4804     135F  3098               	movlw	152
  4805     1360  0727               	addwf	__tdiv_to_l_@cntr,w
  4806     1361  00A0               	movwf	??__tdiv_to_l_
  4807     1362  0820               	movf	??__tdiv_to_l_,w
  4808     1363  02A8               	subwf	__tdiv_to_l_@exp1,f
  4809     1364  3018               	movlw	24
  4810     1365  00A7               	movwf	__tdiv_to_l_@cntr
  4811     1366                     l4306:
  4812     1366  3001               	movlw	1
  4813     1367  00A0               	movwf	??__tdiv_to_l_
  4814     1368                     u7275:
  4815     1368  1003               	clrc
  4816     1369  0DA3               	rlf	__tdiv_to_l_@quot,f
  4817     136A  0DA4               	rlf	__tdiv_to_l_@quot+1,f
  4818     136B  0DA5               	rlf	__tdiv_to_l_@quot+2,f
  4819     136C  0DA6               	rlf	__tdiv_to_l_@quot+3,f
  4820     136D  0BA0               	decfsz	??__tdiv_to_l_,f
  4821     136E  2B68               	goto	u7275
  4822     136F  0878               	movf	__tdiv_to_l_@f2+2,w
  4823     1370  0274               	subwf	__tdiv_to_l_@f1+2,w
  4824     1371  1D03               	skipz
  4825     1372  2B79               	goto	u7285
  4826     1373  0877               	movf	__tdiv_to_l_@f2+1,w
  4827     1374  0273               	subwf	__tdiv_to_l_@f1+1,w
  4828     1375  1D03               	skipz
  4829     1376  2B79               	goto	u7285
  4830     1377  0876               	movf	__tdiv_to_l_@f2,w
  4831     1378  0272               	subwf	__tdiv_to_l_@f1,w
  4832     1379                     u7285:
  4833     1379  1C03               	skipc
  4834     137A  2B86               	goto	l4314
  4835     137B  0876               	movf	__tdiv_to_l_@f2,w
  4836     137C  02F2               	subwf	__tdiv_to_l_@f1,f
  4837     137D  0877               	movf	__tdiv_to_l_@f2+1,w
  4838     137E  1C03               	skipc
  4839     137F  0F77               	incfsz	__tdiv_to_l_@f2+1,w
  4840     1380  02F3               	subwf	__tdiv_to_l_@f1+1,f
  4841     1381  0878               	movf	__tdiv_to_l_@f2+2,w
  4842     1382  1C03               	skipc
  4843     1383  0A78               	incf	__tdiv_to_l_@f2+2,w
  4844     1384  02F4               	subwf	__tdiv_to_l_@f1+2,f
  4845     1385  1423               	bsf	__tdiv_to_l_@quot,0
  4846     1386                     l4314:
  4847     1386  3001               	movlw	1
  4848     1387                     u7295:
  4849     1387  1003               	clrc
  4850     1388  0DF2               	rlf	__tdiv_to_l_@f1,f
  4851     1389  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  4852     138A  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  4853     138B  3EFF               	addlw	-1
  4854     138C  1D03               	skipz
  4855     138D  2B87               	goto	u7295
  4856     138E  3001               	movlw	1
  4857     138F  02A7               	subwf	__tdiv_to_l_@cntr,f
  4858     1390  1D03               	btfss	3,2
  4859     1391  2B66               	goto	l4306
  4860     1392  1FA8               	btfss	__tdiv_to_l_@exp1,7
  4861     1393  2BA9               	goto	l4328
  4862     1394  0828               	movf	__tdiv_to_l_@exp1,w
  4863     1395  3A80               	xorlw	128
  4864     1396  3E97               	addlw	151
  4865     1397  1C03               	btfss	3,0
  4866     1398  2B31               	goto	l4288
  4867     1399                     l4324:
  4868     1399  3001               	movlw	1
  4869     139A                     u7335:
  4870     139A  1003               	clrc
  4871     139B  0CA6               	rrf	__tdiv_to_l_@quot+3,f
  4872     139C  0CA5               	rrf	__tdiv_to_l_@quot+2,f
  4873     139D  0CA4               	rrf	__tdiv_to_l_@quot+1,f
  4874     139E  0CA3               	rrf	__tdiv_to_l_@quot,f
  4875     139F  3EFF               	addlw	-1
  4876     13A0  1D03               	skipz
  4877     13A1  2B9A               	goto	u7335
  4878     13A2  3001               	movlw	1
  4879     13A3  00FF               	movwf	127
  4880     13A4  087F               	movf	127,w
  4881     13A5  07A8               	addwf	__tdiv_to_l_@exp1,f
  4882     13A6  1903               	btfsc	3,2
  4883     13A7  2BBC               	goto	l4336
  4884     13A8  2B99               	goto	l4324
  4885     13A9                     l4328:
  4886     13A9  3018               	movlw	24
  4887     13AA  0228               	subwf	__tdiv_to_l_@exp1,w
  4888     13AB  1803               	btfsc	3,0
  4889     13AC  2B31               	goto	l4288
  4890     13AD                     l622:
  4891     13AD  0828               	movf	__tdiv_to_l_@exp1,w
  4892     13AE  1903               	btfsc	3,2
  4893     13AF  2BBC               	goto	l4336
  4894     13B0  3001               	movlw	1
  4895     13B1  00A0               	movwf	??__tdiv_to_l_
  4896     13B2                     u7365:
  4897     13B2  1003               	clrc
  4898     13B3  0DA3               	rlf	__tdiv_to_l_@quot,f
  4899     13B4  0DA4               	rlf	__tdiv_to_l_@quot+1,f
  4900     13B5  0DA5               	rlf	__tdiv_to_l_@quot+2,f
  4901     13B6  0DA6               	rlf	__tdiv_to_l_@quot+3,f
  4902     13B7  0BA0               	decfsz	??__tdiv_to_l_,f
  4903     13B8  2BB2               	goto	u7365
  4904     13B9  3001               	movlw	1
  4905     13BA  02A8               	subwf	__tdiv_to_l_@exp1,f
  4906     13BB  2BAD               	goto	l622
  4907     13BC                     l4336:
  4908     13BC  0826               	movf	__tdiv_to_l_@quot+3,w
  4909     13BD  00F5               	movwf	?__tdiv_to_l_+3
  4910     13BE  0825               	movf	__tdiv_to_l_@quot+2,w
  4911     13BF  00F4               	movwf	?__tdiv_to_l_+2
  4912     13C0  0824               	movf	__tdiv_to_l_@quot+1,w
  4913     13C1  00F3               	movwf	?__tdiv_to_l_+1
  4914     13C2  0823               	movf	__tdiv_to_l_@quot,w
  4915     13C3  00F2               	movwf	?__tdiv_to_l_
  4916     13C4  0008               	return
  4917     13C5                     __end_of__tdiv_to_l_:
  4918                           
  4919                           	psect	text10
  4920     127F                     __ptext10:	
  4921 ;; *************** function __div_to_l_ *****************
  4922 ;; Defined at:
  4923 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fldivl.c"
  4924 ;; Parameters:    Size  Location     Type
  4925 ;;  f1              4    2[COMMON] unsigned long 
  4926 ;;  f2              4    6[COMMON] unsigned long 
  4927 ;; Auto vars:     Size  Location     Type
  4928 ;;  quot            4    1[BANK0 ] unsigned long 
  4929 ;;  exp1            1    6[BANK0 ] unsigned char 
  4930 ;;  cntr            1    5[BANK0 ] unsigned char 
  4931 ;; Return value:  Size  Location     Type
  4932 ;;                  4    2[COMMON] unsigned long 
  4933 ;; Registers used:
  4934 ;;		wreg, status,2, status,0, btemp+1
  4935 ;; Tracked objects:
  4936 ;;		On entry : 300/100
  4937 ;;		On exit  : 300/0
  4938 ;;		Unchanged: 0/0
  4939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4940 ;;      Params:         8       0       0       0       0
  4941 ;;      Locals:         0       6       0       0       0
  4942 ;;      Temps:          0       1       0       0       0
  4943 ;;      Totals:         8       7       0       0       0
  4944 ;;Total ram usage:       15 bytes
  4945 ;; Hardware stack levels used: 1
  4946 ;; Hardware stack levels required when called: 1
  4947 ;; This function calls:
  4948 ;;		Nothing
  4949 ;; This function is called by:
  4950 ;;		_sprintf
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954     127F                     __div_to_l_:	
  4955                           ;psect for function __div_to_l_
  4956                           
  4957                           
  4958                           ;incstack = 0
  4959                           ; Regs used in __div_to_l_: [wreg+status,2+status,0+btemp+1]
  4960     127F  1003               	clrc
  4961     1280  0D74               	rlf	__div_to_l_@f1+2,w
  4962     1281  0D75               	rlf	__div_to_l_@f1+3,w
  4963     1282  1283               	bcf	3,5	;RP0=0, select bank0
  4964     1283  00A6               	movwf	__div_to_l_@exp1
  4965     1284  0826               	movf	__div_to_l_@exp1,w
  4966     1285  1D03               	btfss	3,2
  4967     1286  2A90               	goto	l4346
  4968     1287                     l4342:
  4969     1287  3000               	movlw	0
  4970     1288  00F5               	movwf	?__div_to_l_+3
  4971     1289  3000               	movlw	0
  4972     128A  00F4               	movwf	?__div_to_l_+2
  4973     128B  3000               	movlw	0
  4974     128C  00F3               	movwf	?__div_to_l_+1
  4975     128D  3000               	movlw	0
  4976     128E  00F2               	movwf	?__div_to_l_
  4977     128F  0008               	return
  4978     1290                     l4346:
  4979     1290  1003               	clrc
  4980     1291  0D78               	rlf	__div_to_l_@f2+2,w
  4981     1292  0D79               	rlf	__div_to_l_@f2+3,w
  4982     1293  00A5               	movwf	__div_to_l_@cntr
  4983     1294  0825               	movf	__div_to_l_@cntr,w
  4984     1295  1903               	btfsc	3,2
  4985     1296  2A87               	goto	l4342
  4986     1297  17F4               	bsf	__div_to_l_@f1+2,7
  4987     1298  30FF               	movlw	255
  4988     1299  05F2               	andwf	__div_to_l_@f1,f
  4989     129A  30FF               	movlw	255
  4990     129B  05F3               	andwf	__div_to_l_@f1+1,f
  4991     129C  30FF               	movlw	255
  4992     129D  05F4               	andwf	__div_to_l_@f1+2,f
  4993     129E  3000               	movlw	0
  4994     129F  05F5               	andwf	__div_to_l_@f1+3,f
  4995     12A0  17F8               	bsf	__div_to_l_@f2+2,7
  4996     12A1  30FF               	movlw	255
  4997     12A2  05F6               	andwf	__div_to_l_@f2,f
  4998     12A3  30FF               	movlw	255
  4999     12A4  05F7               	andwf	__div_to_l_@f2+1,f
  5000     12A5  30FF               	movlw	255
  5001     12A6  05F8               	andwf	__div_to_l_@f2+2,f
  5002     12A7  3000               	movlw	0
  5003     12A8  05F9               	andwf	__div_to_l_@f2+3,f
  5004     12A9  3000               	movlw	0
  5005     12AA  00A4               	movwf	__div_to_l_@quot+3
  5006     12AB  3000               	movlw	0
  5007     12AC  00A3               	movwf	__div_to_l_@quot+2
  5008     12AD  3000               	movlw	0
  5009     12AE  00A2               	movwf	__div_to_l_@quot+1
  5010     12AF  3000               	movlw	0
  5011     12B0  00A1               	movwf	__div_to_l_@quot
  5012     12B1  307F               	movlw	127
  5013     12B2  02A6               	subwf	__div_to_l_@exp1,f
  5014     12B3  30A0               	movlw	160
  5015     12B4  0725               	addwf	__div_to_l_@cntr,w
  5016     12B5  00A0               	movwf	??__div_to_l_
  5017     12B6  0820               	movf	??__div_to_l_,w
  5018     12B7  02A6               	subwf	__div_to_l_@exp1,f
  5019     12B8  3020               	movlw	32
  5020     12B9  00A5               	movwf	__div_to_l_@cntr
  5021     12BA                     l4360:
  5022     12BA  3001               	movlw	1
  5023     12BB  00A0               	movwf	??__div_to_l_
  5024     12BC                     u7405:
  5025     12BC  1003               	clrc
  5026     12BD  0DA1               	rlf	__div_to_l_@quot,f
  5027     12BE  0DA2               	rlf	__div_to_l_@quot+1,f
  5028     12BF  0DA3               	rlf	__div_to_l_@quot+2,f
  5029     12C0  0DA4               	rlf	__div_to_l_@quot+3,f
  5030     12C1  0BA0               	decfsz	??__div_to_l_,f
  5031     12C2  2ABC               	goto	u7405
  5032     12C3  0879               	movf	__div_to_l_@f2+3,w
  5033     12C4  0275               	subwf	__div_to_l_@f1+3,w
  5034     12C5  1D03               	skipz
  5035     12C6  2AD1               	goto	u7415
  5036     12C7  0878               	movf	__div_to_l_@f2+2,w
  5037     12C8  0274               	subwf	__div_to_l_@f1+2,w
  5038     12C9  1D03               	skipz
  5039     12CA  2AD1               	goto	u7415
  5040     12CB  0877               	movf	__div_to_l_@f2+1,w
  5041     12CC  0273               	subwf	__div_to_l_@f1+1,w
  5042     12CD  1D03               	skipz
  5043     12CE  2AD1               	goto	u7415
  5044     12CF  0876               	movf	__div_to_l_@f2,w
  5045     12D0  0272               	subwf	__div_to_l_@f1,w
  5046     12D1                     u7415:
  5047     12D1  1C03               	skipc
  5048     12D2  2AE2               	goto	l4368
  5049     12D3  0876               	movf	__div_to_l_@f2,w
  5050     12D4  02F2               	subwf	__div_to_l_@f1,f
  5051     12D5  0877               	movf	__div_to_l_@f2+1,w
  5052     12D6  1C03               	skipc
  5053     12D7  0F77               	incfsz	__div_to_l_@f2+1,w
  5054     12D8  02F3               	subwf	__div_to_l_@f1+1,f
  5055     12D9  0878               	movf	__div_to_l_@f2+2,w
  5056     12DA  1C03               	skipc
  5057     12DB  0F78               	incfsz	__div_to_l_@f2+2,w
  5058     12DC  02F4               	subwf	__div_to_l_@f1+2,f
  5059     12DD  0879               	movf	__div_to_l_@f2+3,w
  5060     12DE  1C03               	skipc
  5061     12DF  0F79               	incfsz	__div_to_l_@f2+3,w
  5062     12E0  02F5               	subwf	__div_to_l_@f1+3,f
  5063     12E1  1421               	bsf	__div_to_l_@quot,0
  5064     12E2                     l4368:
  5065     12E2  3001               	movlw	1
  5066     12E3  00A0               	movwf	??__div_to_l_
  5067     12E4                     u7425:
  5068     12E4  1003               	clrc
  5069     12E5  0DF2               	rlf	__div_to_l_@f1,f
  5070     12E6  0DF3               	rlf	__div_to_l_@f1+1,f
  5071     12E7  0DF4               	rlf	__div_to_l_@f1+2,f
  5072     12E8  0DF5               	rlf	__div_to_l_@f1+3,f
  5073     12E9  0BA0               	decfsz	??__div_to_l_,f
  5074     12EA  2AE4               	goto	u7425
  5075     12EB  3001               	movlw	1
  5076     12EC  02A5               	subwf	__div_to_l_@cntr,f
  5077     12ED  1D03               	btfss	3,2
  5078     12EE  2ABA               	goto	l4360
  5079     12EF  1FA6               	btfss	__div_to_l_@exp1,7
  5080     12F0  2B06               	goto	l4382
  5081     12F1  0826               	movf	__div_to_l_@exp1,w
  5082     12F2  3A80               	xorlw	128
  5083     12F3  3E9F               	addlw	159
  5084     12F4  1C03               	btfss	3,0
  5085     12F5  2A87               	goto	l4342
  5086     12F6                     l4378:
  5087     12F6  3001               	movlw	1
  5088     12F7                     u7465:
  5089     12F7  1003               	clrc
  5090     12F8  0CA4               	rrf	__div_to_l_@quot+3,f
  5091     12F9  0CA3               	rrf	__div_to_l_@quot+2,f
  5092     12FA  0CA2               	rrf	__div_to_l_@quot+1,f
  5093     12FB  0CA1               	rrf	__div_to_l_@quot,f
  5094     12FC  3EFF               	addlw	-1
  5095     12FD  1D03               	skipz
  5096     12FE  2AF7               	goto	u7465
  5097     12FF  3001               	movlw	1
  5098     1300  00FF               	movwf	127
  5099     1301  087F               	movf	127,w
  5100     1302  07A6               	addwf	__div_to_l_@exp1,f
  5101     1303  1903               	btfsc	3,2
  5102     1304  2B19               	goto	l4390
  5103     1305  2AF6               	goto	l4378
  5104     1306                     l4382:
  5105     1306  3020               	movlw	32
  5106     1307  0226               	subwf	__div_to_l_@exp1,w
  5107     1308  1803               	btfsc	3,0
  5108     1309  2A87               	goto	l4342
  5109     130A                     l575:
  5110     130A  0826               	movf	__div_to_l_@exp1,w
  5111     130B  1903               	btfsc	3,2
  5112     130C  2B19               	goto	l4390
  5113     130D  3001               	movlw	1
  5114     130E  00A0               	movwf	??__div_to_l_
  5115     130F                     u7495:
  5116     130F  1003               	clrc
  5117     1310  0DA1               	rlf	__div_to_l_@quot,f
  5118     1311  0DA2               	rlf	__div_to_l_@quot+1,f
  5119     1312  0DA3               	rlf	__div_to_l_@quot+2,f
  5120     1313  0DA4               	rlf	__div_to_l_@quot+3,f
  5121     1314  0BA0               	decfsz	??__div_to_l_,f
  5122     1315  2B0F               	goto	u7495
  5123     1316  3001               	movlw	1
  5124     1317  02A6               	subwf	__div_to_l_@exp1,f
  5125     1318  2B0A               	goto	l575
  5126     1319                     l4390:
  5127     1319  0824               	movf	__div_to_l_@quot+3,w
  5128     131A  00F5               	movwf	?__div_to_l_+3
  5129     131B  0823               	movf	__div_to_l_@quot+2,w
  5130     131C  00F4               	movwf	?__div_to_l_+2
  5131     131D  0822               	movf	__div_to_l_@quot+1,w
  5132     131E  00F3               	movwf	?__div_to_l_+1
  5133     131F  0821               	movf	__div_to_l_@quot,w
  5134     1320  00F2               	movwf	?__div_to_l_
  5135     1321  0008               	return
  5136     1322                     __end_of__div_to_l_:
  5137                           
  5138                           	psect	text11
  5139     1D7C                     __ptext11:	
  5140 ;; *************** function ___wmul *****************
  5141 ;; Defined at:
  5142 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  5143 ;; Parameters:    Size  Location     Type
  5144 ;;  multiplier      2    2[COMMON] unsigned int 
  5145 ;;  multiplicand    2    4[COMMON] unsigned int 
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;  product         2    6[COMMON] unsigned int 
  5148 ;; Return value:  Size  Location     Type
  5149 ;;                  2    2[COMMON] unsigned int 
  5150 ;; Registers used:
  5151 ;;		wreg, status,2, status,0
  5152 ;; Tracked objects:
  5153 ;;		On entry : 300/100
  5154 ;;		On exit  : 300/100
  5155 ;;		Unchanged: 300/0
  5156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5157 ;;      Params:         4       0       0       0       0
  5158 ;;      Locals:         2       0       0       0       0
  5159 ;;      Temps:          0       0       0       0       0
  5160 ;;      Totals:         6       0       0       0       0
  5161 ;;Total ram usage:        6 bytes
  5162 ;; Hardware stack levels used: 1
  5163 ;; Hardware stack levels required when called: 1
  5164 ;; This function calls:
  5165 ;;		Nothing
  5166 ;; This function is called by:
  5167 ;;		_sprintf
  5168 ;; This function uses a non-reentrant model
  5169 ;;
  5170                           
  5171     1D7C                     ___wmul:	
  5172                           ;psect for function ___wmul
  5173                           
  5174                           
  5175                           ;incstack = 0
  5176                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5177     1D7C  01F6               	clrf	___wmul@product
  5178     1D7D  01F7               	clrf	___wmul@product+1
  5179     1D7E                     l4396:
  5180     1D7E  1C72               	btfss	___wmul@multiplier,0
  5181     1D7F  2D86               	goto	l394
  5182     1D80  0874               	movf	___wmul@multiplicand,w
  5183     1D81  07F6               	addwf	___wmul@product,f
  5184     1D82  1803               	skipnc
  5185     1D83  0AF7               	incf	___wmul@product+1,f
  5186     1D84  0875               	movf	___wmul@multiplicand+1,w
  5187     1D85  07F7               	addwf	___wmul@product+1,f
  5188     1D86                     l394:
  5189     1D86  3001               	movlw	1
  5190     1D87                     u7525:
  5191     1D87  1003               	clrc
  5192     1D88  0DF4               	rlf	___wmul@multiplicand,f
  5193     1D89  0DF5               	rlf	___wmul@multiplicand+1,f
  5194     1D8A  3EFF               	addlw	-1
  5195     1D8B  1D03               	skipz
  5196     1D8C  2D87               	goto	u7525
  5197     1D8D  3001               	movlw	1
  5198     1D8E                     u7535:
  5199     1D8E  1003               	clrc
  5200     1D8F  0CF3               	rrf	___wmul@multiplier+1,f
  5201     1D90  0CF2               	rrf	___wmul@multiplier,f
  5202     1D91  3EFF               	addlw	-1
  5203     1D92  1D03               	skipz
  5204     1D93  2D8E               	goto	u7535
  5205     1D94  0872               	movf	___wmul@multiplier,w
  5206     1D95  0473               	iorwf	___wmul@multiplier+1,w
  5207     1D96  1D03               	btfss	3,2
  5208     1D97  2D7E               	goto	l4396
  5209     1D98  0877               	movf	___wmul@product+1,w
  5210     1D99  00F3               	movwf	?___wmul+1
  5211     1D9A  0876               	movf	___wmul@product,w
  5212     1D9B  00F2               	movwf	?___wmul
  5213     1D9C  0008               	return
  5214     1D9D                     __end_of___wmul:
  5215                           
  5216                           	psect	text12
  5217     1E95                     __ptext12:	
  5218 ;; *************** function ___llmod *****************
  5219 ;; Defined at:
  5220 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\llmod.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;  divisor         4    6[BANK0 ] unsigned long 
  5223 ;;  dividend        4   10[BANK0 ] unsigned long 
  5224 ;; Auto vars:     Size  Location     Type
  5225 ;;  counter         1   15[BANK0 ] unsigned char 
  5226 ;; Return value:  Size  Location     Type
  5227 ;;                  4    6[BANK0 ] unsigned long 
  5228 ;; Registers used:
  5229 ;;		wreg, status,2, status,0, btemp+1
  5230 ;; Tracked objects:
  5231 ;;		On entry : 300/0
  5232 ;;		On exit  : 300/0
  5233 ;;		Unchanged: 0/0
  5234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5235 ;;      Params:         0       8       0       0       0
  5236 ;;      Locals:         0       1       0       0       0
  5237 ;;      Temps:          0       1       0       0       0
  5238 ;;      Totals:         0      10       0       0       0
  5239 ;;Total ram usage:       10 bytes
  5240 ;; Hardware stack levels used: 1
  5241 ;; Hardware stack levels required when called: 1
  5242 ;; This function calls:
  5243 ;;		Nothing
  5244 ;; This function is called by:
  5245 ;;		_sprintf
  5246 ;; This function uses a non-reentrant model
  5247 ;;
  5248                           
  5249     1E95                     ___llmod:	
  5250                           ;psect for function ___llmod
  5251                           
  5252                           
  5253                           ;incstack = 0
  5254                           ; Regs used in ___llmod: [wreg+status,2+status,0+btemp+1]
  5255     1E95  0829               	movf	___llmod@divisor+3,w
  5256     1E96  0428               	iorwf	___llmod@divisor+2,w
  5257     1E97  0427               	iorwf	___llmod@divisor+1,w
  5258     1E98  0426               	iorwf	___llmod@divisor,w
  5259     1E99  1903               	skipnz
  5260     1E9A  2ED8               	goto	l4530
  5261     1E9B  01AF               	clrf	___llmod@counter
  5262     1E9C  0AAF               	incf	___llmod@counter,f
  5263     1E9D                     l4520:
  5264     1E9D  1BA9               	btfsc	___llmod@divisor+3,7
  5265     1E9E  2EAD               	goto	l4522
  5266     1E9F  3001               	movlw	1
  5267     1EA0  00AE               	movwf	??___llmod
  5268     1EA1                     u7845:
  5269     1EA1  1003               	clrc
  5270     1EA2  0DA6               	rlf	___llmod@divisor,f
  5271     1EA3  0DA7               	rlf	___llmod@divisor+1,f
  5272     1EA4  0DA8               	rlf	___llmod@divisor+2,f
  5273     1EA5  0DA9               	rlf	___llmod@divisor+3,f
  5274     1EA6  0BAE               	decfsz	??___llmod,f
  5275     1EA7  2EA1               	goto	u7845
  5276     1EA8  3001               	movlw	1
  5277     1EA9  00FF               	movwf	127
  5278     1EAA  087F               	movf	127,w
  5279     1EAB  07AF               	addwf	___llmod@counter,f
  5280     1EAC  2E9D               	goto	l4520
  5281     1EAD                     l4522:
  5282     1EAD  0829               	movf	___llmod@divisor+3,w
  5283     1EAE  022D               	subwf	___llmod@dividend+3,w
  5284     1EAF  1D03               	skipz
  5285     1EB0  2EBB               	goto	u7865
  5286     1EB1  0828               	movf	___llmod@divisor+2,w
  5287     1EB2  022C               	subwf	___llmod@dividend+2,w
  5288     1EB3  1D03               	skipz
  5289     1EB4  2EBB               	goto	u7865
  5290     1EB5  0827               	movf	___llmod@divisor+1,w
  5291     1EB6  022B               	subwf	___llmod@dividend+1,w
  5292     1EB7  1D03               	skipz
  5293     1EB8  2EBB               	goto	u7865
  5294     1EB9  0826               	movf	___llmod@divisor,w
  5295     1EBA  022A               	subwf	___llmod@dividend,w
  5296     1EBB                     u7865:
  5297     1EBB  1C03               	skipc
  5298     1EBC  2ECB               	goto	l4526
  5299     1EBD  0826               	movf	___llmod@divisor,w
  5300     1EBE  02AA               	subwf	___llmod@dividend,f
  5301     1EBF  0827               	movf	___llmod@divisor+1,w
  5302     1EC0  1C03               	skipc
  5303     1EC1  0F27               	incfsz	___llmod@divisor+1,w
  5304     1EC2  02AB               	subwf	___llmod@dividend+1,f
  5305     1EC3  0828               	movf	___llmod@divisor+2,w
  5306     1EC4  1C03               	skipc
  5307     1EC5  0F28               	incfsz	___llmod@divisor+2,w
  5308     1EC6  02AC               	subwf	___llmod@dividend+2,f
  5309     1EC7  0829               	movf	___llmod@divisor+3,w
  5310     1EC8  1C03               	skipc
  5311     1EC9  0F29               	incfsz	___llmod@divisor+3,w
  5312     1ECA  02AD               	subwf	___llmod@dividend+3,f
  5313     1ECB                     l4526:
  5314     1ECB  3001               	movlw	1
  5315     1ECC                     u7875:
  5316     1ECC  1003               	clrc
  5317     1ECD  0CA9               	rrf	___llmod@divisor+3,f
  5318     1ECE  0CA8               	rrf	___llmod@divisor+2,f
  5319     1ECF  0CA7               	rrf	___llmod@divisor+1,f
  5320     1ED0  0CA6               	rrf	___llmod@divisor,f
  5321     1ED1  3EFF               	addlw	-1
  5322     1ED2  1D03               	skipz
  5323     1ED3  2ECC               	goto	u7875
  5324     1ED4  3001               	movlw	1
  5325     1ED5  02AF               	subwf	___llmod@counter,f
  5326     1ED6  1D03               	btfss	3,2
  5327     1ED7  2EAD               	goto	l4522
  5328     1ED8                     l4530:
  5329     1ED8  082D               	movf	___llmod@dividend+3,w
  5330     1ED9  00A9               	movwf	?___llmod+3
  5331     1EDA  082C               	movf	___llmod@dividend+2,w
  5332     1EDB  00A8               	movwf	?___llmod+2
  5333     1EDC  082B               	movf	___llmod@dividend+1,w
  5334     1EDD  00A7               	movwf	?___llmod+1
  5335     1EDE  082A               	movf	___llmod@dividend,w
  5336     1EDF  00A6               	movwf	?___llmod
  5337     1EE0  0008               	return
  5338     1EE1                     __end_of___llmod:
  5339                           
  5340                           	psect	text13
  5341     1F3A                     __ptext13:	
  5342 ;; *************** function ___lldiv *****************
  5343 ;; Defined at:
  5344 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  5345 ;; Parameters:    Size  Location     Type
  5346 ;;  divisor         4    2[COMMON] unsigned long 
  5347 ;;  dividend        4    6[COMMON] unsigned long 
  5348 ;; Auto vars:     Size  Location     Type
  5349 ;;  quotient        4    1[BANK0 ] unsigned long 
  5350 ;;  counter         1    5[BANK0 ] unsigned char 
  5351 ;; Return value:  Size  Location     Type
  5352 ;;                  4    2[COMMON] unsigned long 
  5353 ;; Registers used:
  5354 ;;		wreg, status,2, status,0, btemp+1
  5355 ;; Tracked objects:
  5356 ;;		On entry : 300/100
  5357 ;;		On exit  : 300/0
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5360 ;;      Params:         8       0       0       0       0
  5361 ;;      Locals:         0       5       0       0       0
  5362 ;;      Temps:          0       1       0       0       0
  5363 ;;      Totals:         8       6       0       0       0
  5364 ;;Total ram usage:       14 bytes
  5365 ;; Hardware stack levels used: 1
  5366 ;; Hardware stack levels required when called: 1
  5367 ;; This function calls:
  5368 ;;		Nothing
  5369 ;; This function is called by:
  5370 ;;		_sprintf
  5371 ;; This function uses a non-reentrant model
  5372 ;;
  5373                           
  5374     1F3A                     ___lldiv:	
  5375                           ;psect for function ___lldiv
  5376                           
  5377                           
  5378                           ;incstack = 0
  5379                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  5380     1F3A  3000               	movlw	0
  5381     1F3B  1283               	bcf	3,5	;RP0=0, select bank0
  5382     1F3C  00A4               	movwf	___lldiv@quotient+3
  5383     1F3D  3000               	movlw	0
  5384     1F3E  00A3               	movwf	___lldiv@quotient+2
  5385     1F3F  3000               	movlw	0
  5386     1F40  00A2               	movwf	___lldiv@quotient+1
  5387     1F41  3000               	movlw	0
  5388     1F42  00A1               	movwf	___lldiv@quotient
  5389     1F43  0875               	movf	___lldiv@divisor+3,w
  5390     1F44  0474               	iorwf	___lldiv@divisor+2,w
  5391     1F45  0473               	iorwf	___lldiv@divisor+1,w
  5392     1F46  0472               	iorwf	___lldiv@divisor,w
  5393     1F47  1903               	skipnz
  5394     1F48  2F90               	goto	l4430
  5395     1F49  01A5               	clrf	___lldiv@counter
  5396     1F4A  0AA5               	incf	___lldiv@counter,f
  5397     1F4B                     l4416:
  5398     1F4B  1BF5               	btfsc	___lldiv@divisor+3,7
  5399     1F4C  2F5B               	goto	l4418
  5400     1F4D  3001               	movlw	1
  5401     1F4E  00A0               	movwf	??___lldiv
  5402     1F4F                     u7565:
  5403     1F4F  1003               	clrc
  5404     1F50  0DF2               	rlf	___lldiv@divisor,f
  5405     1F51  0DF3               	rlf	___lldiv@divisor+1,f
  5406     1F52  0DF4               	rlf	___lldiv@divisor+2,f
  5407     1F53  0DF5               	rlf	___lldiv@divisor+3,f
  5408     1F54  0BA0               	decfsz	??___lldiv,f
  5409     1F55  2F4F               	goto	u7565
  5410     1F56  3001               	movlw	1
  5411     1F57  00FF               	movwf	127
  5412     1F58  087F               	movf	127,w
  5413     1F59  07A5               	addwf	___lldiv@counter,f
  5414     1F5A  2F4B               	goto	l4416
  5415     1F5B                     l4418:
  5416     1F5B  3001               	movlw	1
  5417     1F5C  00A0               	movwf	??___lldiv
  5418     1F5D                     u7585:
  5419     1F5D  1003               	clrc
  5420     1F5E  0DA1               	rlf	___lldiv@quotient,f
  5421     1F5F  0DA2               	rlf	___lldiv@quotient+1,f
  5422     1F60  0DA3               	rlf	___lldiv@quotient+2,f
  5423     1F61  0DA4               	rlf	___lldiv@quotient+3,f
  5424     1F62  0BA0               	decfsz	??___lldiv,f
  5425     1F63  2F5D               	goto	u7585
  5426     1F64  0875               	movf	___lldiv@divisor+3,w
  5427     1F65  0279               	subwf	___lldiv@dividend+3,w
  5428     1F66  1D03               	skipz
  5429     1F67  2F72               	goto	u7595
  5430     1F68  0874               	movf	___lldiv@divisor+2,w
  5431     1F69  0278               	subwf	___lldiv@dividend+2,w
  5432     1F6A  1D03               	skipz
  5433     1F6B  2F72               	goto	u7595
  5434     1F6C  0873               	movf	___lldiv@divisor+1,w
  5435     1F6D  0277               	subwf	___lldiv@dividend+1,w
  5436     1F6E  1D03               	skipz
  5437     1F6F  2F72               	goto	u7595
  5438     1F70  0872               	movf	___lldiv@divisor,w
  5439     1F71  0276               	subwf	___lldiv@dividend,w
  5440     1F72                     u7595:
  5441     1F72  1C03               	skipc
  5442     1F73  2F83               	goto	l4426
  5443     1F74  0872               	movf	___lldiv@divisor,w
  5444     1F75  02F6               	subwf	___lldiv@dividend,f
  5445     1F76  0873               	movf	___lldiv@divisor+1,w
  5446     1F77  1C03               	skipc
  5447     1F78  0F73               	incfsz	___lldiv@divisor+1,w
  5448     1F79  02F7               	subwf	___lldiv@dividend+1,f
  5449     1F7A  0874               	movf	___lldiv@divisor+2,w
  5450     1F7B  1C03               	skipc
  5451     1F7C  0F74               	incfsz	___lldiv@divisor+2,w
  5452     1F7D  02F8               	subwf	___lldiv@dividend+2,f
  5453     1F7E  0875               	movf	___lldiv@divisor+3,w
  5454     1F7F  1C03               	skipc
  5455     1F80  0F75               	incfsz	___lldiv@divisor+3,w
  5456     1F81  02F9               	subwf	___lldiv@dividend+3,f
  5457     1F82  1421               	bsf	___lldiv@quotient,0
  5458     1F83                     l4426:
  5459     1F83  3001               	movlw	1
  5460     1F84                     u7605:
  5461     1F84  1003               	clrc
  5462     1F85  0CF5               	rrf	___lldiv@divisor+3,f
  5463     1F86  0CF4               	rrf	___lldiv@divisor+2,f
  5464     1F87  0CF3               	rrf	___lldiv@divisor+1,f
  5465     1F88  0CF2               	rrf	___lldiv@divisor,f
  5466     1F89  3EFF               	addlw	-1
  5467     1F8A  1D03               	skipz
  5468     1F8B  2F84               	goto	u7605
  5469     1F8C  3001               	movlw	1
  5470     1F8D  02A5               	subwf	___lldiv@counter,f
  5471     1F8E  1D03               	btfss	3,2
  5472     1F8F  2F5B               	goto	l4418
  5473     1F90                     l4430:
  5474     1F90  0824               	movf	___lldiv@quotient+3,w
  5475     1F91  00F5               	movwf	?___lldiv+3
  5476     1F92  0823               	movf	___lldiv@quotient+2,w
  5477     1F93  00F4               	movwf	?___lldiv+2
  5478     1F94  0822               	movf	___lldiv@quotient+1,w
  5479     1F95  00F3               	movwf	?___lldiv+1
  5480     1F96  0821               	movf	___lldiv@quotient,w
  5481     1F97  00F2               	movwf	?___lldiv
  5482     1F98  0008               	return
  5483     1F99                     __end_of___lldiv:
  5484                           
  5485                           	psect	text14
  5486     1F99                     __ptext14:	
  5487 ;; *************** function ___fltol *****************
  5488 ;; Defined at:
  5489 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fltol.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;  f1              4   70[BANK0 ] unsigned long 
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;  exp1            1   79[BANK0 ] unsigned char 
  5494 ;;  sign1           1   78[BANK0 ] unsigned char 
  5495 ;; Return value:  Size  Location     Type
  5496 ;;                  4   70[BANK0 ] long 
  5497 ;; Registers used:
  5498 ;;		wreg, status,2, status,0, btemp+1
  5499 ;; Tracked objects:
  5500 ;;		On entry : 300/0
  5501 ;;		On exit  : 300/0
  5502 ;;		Unchanged: 0/0
  5503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5504 ;;      Params:         0       4       0       0       0
  5505 ;;      Locals:         0       2       0       0       0
  5506 ;;      Temps:          0       4       0       0       0
  5507 ;;      Totals:         0      10       0       0       0
  5508 ;;Total ram usage:       10 bytes
  5509 ;; Hardware stack levels used: 1
  5510 ;; Hardware stack levels required when called: 1
  5511 ;; This function calls:
  5512 ;;		Nothing
  5513 ;; This function is called by:
  5514 ;;		_main
  5515 ;;		_sprintf
  5516 ;; This function uses a non-reentrant model
  5517 ;;
  5518                           
  5519     1F99                     ___fltol:	
  5520                           ;psect for function ___fltol
  5521                           
  5522                           
  5523                           ;incstack = 0
  5524                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  5525     1F99  1003               	clrc
  5526     1F9A  0D68               	rlf	___fltol@f1+2,w
  5527     1F9B  0D69               	rlf	___fltol@f1+3,w
  5528     1F9C  00EF               	movwf	___fltol@exp1
  5529     1F9D  086F               	movf	___fltol@exp1,w
  5530     1F9E  1D03               	btfss	3,2
  5531     1F9F  2FA9               	goto	l4480
  5532     1FA0                     l4476:
  5533     1FA0  3000               	movlw	0
  5534     1FA1  00E9               	movwf	?___fltol+3
  5535     1FA2  3000               	movlw	0
  5536     1FA3  00E8               	movwf	?___fltol+2
  5537     1FA4  3000               	movlw	0
  5538     1FA5  00E7               	movwf	?___fltol+1
  5539     1FA6  3000               	movlw	0
  5540     1FA7  00E6               	movwf	?___fltol
  5541     1FA8  0008               	return
  5542     1FA9                     l4480:
  5543     1FA9  0866               	movf	___fltol@f1,w
  5544     1FAA  00EA               	movwf	??___fltol
  5545     1FAB  0867               	movf	___fltol@f1+1,w
  5546     1FAC  00EB               	movwf	??___fltol+1
  5547     1FAD  0868               	movf	___fltol@f1+2,w
  5548     1FAE  00EC               	movwf	??___fltol+2
  5549     1FAF  0869               	movf	___fltol@f1+3,w
  5550     1FB0  00ED               	movwf	??___fltol+3
  5551     1FB1  301F               	movlw	31
  5552     1FB2                     u7745:
  5553     1FB2  1003               	clrc
  5554     1FB3  0CED               	rrf	??___fltol+3,f
  5555     1FB4  0CEC               	rrf	??___fltol+2,f
  5556     1FB5  0CEB               	rrf	??___fltol+1,f
  5557     1FB6  0CEA               	rrf	??___fltol,f
  5558     1FB7  3EFF               	addlw	-1
  5559     1FB8  1D03               	skipz
  5560     1FB9  2FB2               	goto	u7745
  5561     1FBA  086A               	movf	??___fltol,w
  5562     1FBB  00EE               	movwf	___fltol@sign1
  5563     1FBC  17E8               	bsf	___fltol@f1+2,7
  5564     1FBD  30FF               	movlw	255
  5565     1FBE  05E6               	andwf	___fltol@f1,f
  5566     1FBF  30FF               	movlw	255
  5567     1FC0  05E7               	andwf	___fltol@f1+1,f
  5568     1FC1  30FF               	movlw	255
  5569     1FC2  05E8               	andwf	___fltol@f1+2,f
  5570     1FC3  3000               	movlw	0
  5571     1FC4  05E9               	andwf	___fltol@f1+3,f
  5572     1FC5  3096               	movlw	150
  5573     1FC6  02EF               	subwf	___fltol@exp1,f
  5574     1FC7  1FEF               	btfss	___fltol@exp1,7
  5575     1FC8  2FDE               	goto	l4500
  5576     1FC9  086F               	movf	___fltol@exp1,w
  5577     1FCA  3A80               	xorlw	128
  5578     1FCB  3E97               	addlw	151
  5579     1FCC  1C03               	btfss	3,0
  5580     1FCD  2FA0               	goto	l4476
  5581     1FCE                     l4496:
  5582     1FCE  3001               	movlw	1
  5583     1FCF                     u7775:
  5584     1FCF  1003               	clrc
  5585     1FD0  0CE9               	rrf	___fltol@f1+3,f
  5586     1FD1  0CE8               	rrf	___fltol@f1+2,f
  5587     1FD2  0CE7               	rrf	___fltol@f1+1,f
  5588     1FD3  0CE6               	rrf	___fltol@f1,f
  5589     1FD4  3EFF               	addlw	-1
  5590     1FD5  1D03               	skipz
  5591     1FD6  2FCF               	goto	u7775
  5592     1FD7  3001               	movlw	1
  5593     1FD8  00FF               	movwf	127
  5594     1FD9  087F               	movf	127,w
  5595     1FDA  07EF               	addwf	___fltol@exp1,f
  5596     1FDB  1903               	btfsc	3,2
  5597     1FDC  2FF1               	goto	l4508
  5598     1FDD  2FCE               	goto	l4496
  5599     1FDE                     l4500:
  5600     1FDE  3020               	movlw	32
  5601     1FDF  026F               	subwf	___fltol@exp1,w
  5602     1FE0  1803               	btfsc	3,0
  5603     1FE1  2FA0               	goto	l4476
  5604     1FE2                     l604:
  5605     1FE2  086F               	movf	___fltol@exp1,w
  5606     1FE3  1903               	btfsc	3,2
  5607     1FE4  2FF1               	goto	l4508
  5608     1FE5  3001               	movlw	1
  5609     1FE6  00EA               	movwf	??___fltol
  5610     1FE7                     u7805:
  5611     1FE7  1003               	clrc
  5612     1FE8  0DE6               	rlf	___fltol@f1,f
  5613     1FE9  0DE7               	rlf	___fltol@f1+1,f
  5614     1FEA  0DE8               	rlf	___fltol@f1+2,f
  5615     1FEB  0DE9               	rlf	___fltol@f1+3,f
  5616     1FEC  0BEA               	decfsz	??___fltol,f
  5617     1FED  2FE7               	goto	u7805
  5618     1FEE  3001               	movlw	1
  5619     1FEF  02EF               	subwf	___fltol@exp1,f
  5620     1FF0  2FE2               	goto	l604
  5621     1FF1                     l4508:
  5622     1FF1  086E               	movf	___fltol@sign1,w
  5623     1FF2  1903               	btfsc	3,2
  5624     1FF3  0008               	return
  5625     1FF4  09E6               	comf	___fltol@f1,f
  5626     1FF5  09E7               	comf	___fltol@f1+1,f
  5627     1FF6  09E8               	comf	___fltol@f1+2,f
  5628     1FF7  09E9               	comf	___fltol@f1+3,f
  5629     1FF8  0AE6               	incf	___fltol@f1,f
  5630     1FF9  1903               	skipnz
  5631     1FFA  0AE7               	incf	___fltol@f1+1,f
  5632     1FFB  1903               	skipnz
  5633     1FFC  0AE8               	incf	___fltol@f1+2,f
  5634     1FFD  1903               	skipnz
  5635     1FFE  0AE9               	incf	___fltol@f1+3,f
  5636     1FFF  0008               	return
  5637     2000                     __end_of___fltol:
  5638                           
  5639                           	psect	text15
  5640     1D3F                     __ptext15:	
  5641 ;; *************** function ___flsub *****************
  5642 ;; Defined at:
  5643 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcadd.c"
  5644 ;; Parameters:    Size  Location     Type
  5645 ;;  a               4   25[BANK0 ] long 
  5646 ;;  b               4   29[BANK0 ] long 
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;		None
  5649 ;; Return value:  Size  Location     Type
  5650 ;;                  4   25[BANK0 ] long 
  5651 ;; Registers used:
  5652 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5653 ;; Tracked objects:
  5654 ;;		On entry : 300/0
  5655 ;;		On exit  : 300/0
  5656 ;;		Unchanged: 0/0
  5657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5658 ;;      Params:         0       8       0       0       0
  5659 ;;      Locals:         0       0       0       0       0
  5660 ;;      Temps:          0       0       0       0       0
  5661 ;;      Totals:         0       8       0       0       0
  5662 ;;Total ram usage:        8 bytes
  5663 ;; Hardware stack levels used: 1
  5664 ;; Hardware stack levels required when called: 2
  5665 ;; This function calls:
  5666 ;;		___fladd
  5667 ;; This function is called by:
  5668 ;;		_sprintf
  5669 ;; This function uses a non-reentrant model
  5670 ;;
  5671                           
  5672     1D3F                     ___flsub:	
  5673                           ;psect for function ___flsub
  5674                           
  5675                           
  5676                           ;incstack = 0
  5677                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5678     1D3F  3080               	movlw	128
  5679     1D40  06BC               	xorwf	___flsub@a+3,f
  5680     1D41  0840               	movf	___flsub@b+3,w
  5681     1D42  00A8               	movwf	___fladd@b+3
  5682     1D43  083F               	movf	___flsub@b+2,w
  5683     1D44  00A7               	movwf	___fladd@b+2
  5684     1D45  083E               	movf	___flsub@b+1,w
  5685     1D46  00A6               	movwf	___fladd@b+1
  5686     1D47  083D               	movf	___flsub@b,w
  5687     1D48  00A5               	movwf	___fladd@b
  5688     1D49  083C               	movf	___flsub@a+3,w
  5689     1D4A  00AC               	movwf	___fladd@a+3
  5690     1D4B  083B               	movf	___flsub@a+2,w
  5691     1D4C  00AB               	movwf	___fladd@a+2
  5692     1D4D  083A               	movf	___flsub@a+1,w
  5693     1D4E  00AA               	movwf	___fladd@a+1
  5694     1D4F  0839               	movf	___flsub@a,w
  5695     1D50  00A9               	movwf	___fladd@a
  5696     1D51  120A  118A  25DD   	fcall	___fladd
  5697     1D54  0828               	movf	?___fladd+3,w
  5698     1D55  00BC               	movwf	?___flsub+3
  5699     1D56  0827               	movf	?___fladd+2,w
  5700     1D57  00BB               	movwf	?___flsub+2
  5701     1D58  0826               	movf	?___fladd+1,w
  5702     1D59  00BA               	movwf	?___flsub+1
  5703     1D5A  0825               	movf	?___fladd,w
  5704     1D5B  00B9               	movwf	?___flsub
  5705     1D5C  0008               	return
  5706     1D5D                     __end_of___flsub:
  5707                           
  5708                           	psect	text16
  5709     05DD                     __ptext16:	
  5710 ;; *************** function ___fladd *****************
  5711 ;; Defined at:
  5712 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcadd.c"
  5713 ;; Parameters:    Size  Location     Type
  5714 ;;  b               4    5[BANK0 ] long 
  5715 ;;  a               4    9[BANK0 ] long 
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;  grs             1   24[BANK0 ] unsigned char 
  5718 ;;  bexp            1   23[BANK0 ] unsigned char 
  5719 ;;  aexp            1   22[BANK0 ] unsigned char 
  5720 ;;  signs           1   21[BANK0 ] unsigned char 
  5721 ;; Return value:  Size  Location     Type
  5722 ;;                  4    5[BANK0 ] unsigned char 
  5723 ;; Registers used:
  5724 ;;		wreg, status,2, status,0, btemp+1
  5725 ;; Tracked objects:
  5726 ;;		On entry : 300/0
  5727 ;;		On exit  : 300/0
  5728 ;;		Unchanged: 0/0
  5729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5730 ;;      Params:         0       8       0       0       0
  5731 ;;      Locals:         0       4       0       0       0
  5732 ;;      Temps:          0       8       0       0       0
  5733 ;;      Totals:         0      20       0       0       0
  5734 ;;Total ram usage:       20 bytes
  5735 ;; Hardware stack levels used: 1
  5736 ;; Hardware stack levels required when called: 1
  5737 ;; This function calls:
  5738 ;;		Nothing
  5739 ;; This function is called by:
  5740 ;;		_main
  5741 ;;		_sprintf
  5742 ;;		___flsub
  5743 ;; This function uses a non-reentrant model
  5744 ;;
  5745                           
  5746     05DD                     ___fladd:	
  5747                           ;psect for function ___fladd
  5748                           
  5749                           
  5750                           ;incstack = 0
  5751                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  5752     05DD  0828               	movf	___fladd@b+3,w
  5753     05DE  3980               	andlw	128
  5754     05DF  00B5               	movwf	___fladd@signs
  5755     05E0  0828               	movf	___fladd@b+3,w
  5756     05E1  00AD               	movwf	??___fladd
  5757     05E2  072D               	addwf	??___fladd,w
  5758     05E3  00B7               	movwf	___fladd@bexp
  5759     05E4  1BA7               	btfsc	___fladd@b+2,7
  5760     05E5  1437               	bsf	___fladd@bexp,0
  5761     05E6  0837               	movf	___fladd@bexp,w
  5762     05E7  1903               	btfsc	3,2
  5763     05E8  2DF7               	goto	l3902
  5764     05E9  0A37               	incf	___fladd@bexp,w
  5765     05EA  1D03               	btfss	3,2
  5766     05EB  2DF4               	goto	l3898
  5767     05EC  3000               	movlw	0
  5768     05ED  00A8               	movwf	___fladd@b+3
  5769     05EE  3000               	movlw	0
  5770     05EF  00A7               	movwf	___fladd@b+2
  5771     05F0  3000               	movlw	0
  5772     05F1  00A6               	movwf	___fladd@b+1
  5773     05F2  3000               	movlw	0
  5774     05F3  00A5               	movwf	___fladd@b
  5775     05F4                     l3898:
  5776     05F4  17A7               	bsf	___fladd@b+2,7
  5777     05F5  01A8               	clrf	___fladd@b+3
  5778     05F6  2DFF               	goto	l3904
  5779     05F7                     l3902:
  5780     05F7  3000               	movlw	0
  5781     05F8  00A8               	movwf	___fladd@b+3
  5782     05F9  3000               	movlw	0
  5783     05FA  00A7               	movwf	___fladd@b+2
  5784     05FB  3000               	movlw	0
  5785     05FC  00A6               	movwf	___fladd@b+1
  5786     05FD  3000               	movlw	0
  5787     05FE  00A5               	movwf	___fladd@b
  5788     05FF                     l3904:
  5789     05FF  082C               	movf	___fladd@a+3,w
  5790     0600  3980               	andlw	128
  5791     0601  00B6               	movwf	___fladd@aexp
  5792     0602  0836               	movf	___fladd@aexp,w
  5793     0603  0635               	xorwf	___fladd@signs,w
  5794     0604  1D03               	btfss	3,2
  5795     0605  1735               	bsf	___fladd@signs,6
  5796     0606  082C               	movf	___fladd@a+3,w
  5797     0607  00AD               	movwf	??___fladd
  5798     0608  072D               	addwf	??___fladd,w
  5799     0609  00B6               	movwf	___fladd@aexp
  5800     060A  1BAB               	btfsc	___fladd@a+2,7
  5801     060B  1436               	bsf	___fladd@aexp,0
  5802     060C  0836               	movf	___fladd@aexp,w
  5803     060D  1903               	btfsc	3,2
  5804     060E  2E1D               	goto	l3926
  5805     060F  0A36               	incf	___fladd@aexp,w
  5806     0610  1D03               	btfss	3,2
  5807     0611  2E1A               	goto	l3922
  5808     0612  3000               	movlw	0
  5809     0613  00AC               	movwf	___fladd@a+3
  5810     0614  3000               	movlw	0
  5811     0615  00AB               	movwf	___fladd@a+2
  5812     0616  3000               	movlw	0
  5813     0617  00AA               	movwf	___fladd@a+1
  5814     0618  3000               	movlw	0
  5815     0619  00A9               	movwf	___fladd@a
  5816     061A                     l3922:
  5817     061A  17AB               	bsf	___fladd@a+2,7
  5818     061B  01AC               	clrf	___fladd@a+3
  5819     061C  2E25               	goto	l721
  5820     061D                     l3926:
  5821     061D  3000               	movlw	0
  5822     061E  00AC               	movwf	___fladd@a+3
  5823     061F  3000               	movlw	0
  5824     0620  00AB               	movwf	___fladd@a+2
  5825     0621  3000               	movlw	0
  5826     0622  00AA               	movwf	___fladd@a+1
  5827     0623  3000               	movlw	0
  5828     0624  00A9               	movwf	___fladd@a
  5829     0625                     l721:
  5830     0625  0837               	movf	___fladd@bexp,w
  5831     0626  0236               	subwf	___fladd@aexp,w
  5832     0627  1803               	skipnc
  5833     0628  2E4D               	goto	l3962
  5834     0629  1F35               	btfss	___fladd@signs,6
  5835     062A  2E2F               	goto	l3932
  5836     062B  3080               	movlw	128
  5837     062C  00FF               	movwf	127
  5838     062D  087F               	movf	127,w
  5839     062E  06B5               	xorwf	___fladd@signs,f
  5840     062F                     l3932:
  5841     062F  0837               	movf	___fladd@bexp,w
  5842     0630  00B8               	movwf	___fladd@grs
  5843     0631  0836               	movf	___fladd@aexp,w
  5844     0632  00B7               	movwf	___fladd@bexp
  5845     0633  0838               	movf	___fladd@grs,w
  5846     0634  00B6               	movwf	___fladd@aexp
  5847     0635  0825               	movf	___fladd@b,w
  5848     0636  00B8               	movwf	___fladd@grs
  5849     0637  0829               	movf	___fladd@a,w
  5850     0638  00A5               	movwf	___fladd@b
  5851     0639  0838               	movf	___fladd@grs,w
  5852     063A  00A9               	movwf	___fladd@a
  5853     063B  0826               	movf	___fladd@b+1,w
  5854     063C  00B8               	movwf	___fladd@grs
  5855     063D  082A               	movf	___fladd@a+1,w
  5856     063E  00A6               	movwf	___fladd@b+1
  5857     063F  0838               	movf	___fladd@grs,w
  5858     0640  00AA               	movwf	___fladd@a+1
  5859     0641  0827               	movf	___fladd@b+2,w
  5860     0642  00B8               	movwf	___fladd@grs
  5861     0643  082B               	movf	___fladd@a+2,w
  5862     0644  00A7               	movwf	___fladd@b+2
  5863     0645  0838               	movf	___fladd@grs,w
  5864     0646  00AB               	movwf	___fladd@a+2
  5865     0647  0828               	movf	___fladd@b+3,w
  5866     0648  00B8               	movwf	___fladd@grs
  5867     0649  082C               	movf	___fladd@a+3,w
  5868     064A  00A8               	movwf	___fladd@b+3
  5869     064B  0838               	movf	___fladd@grs,w
  5870     064C  00AC               	movwf	___fladd@a+3
  5871     064D                     l3962:
  5872     064D  01B8               	clrf	___fladd@grs
  5873     064E  0836               	movf	___fladd@aexp,w
  5874     064F  00AD               	movwf	??___fladd
  5875     0650  01AE               	clrf	??___fladd+1
  5876     0651  082E               	movf	??___fladd+1,w
  5877     0652  00B0               	movwf	??___fladd+3
  5878     0653  0837               	movf	___fladd@bexp,w
  5879     0654  022D               	subwf	??___fladd,w
  5880     0655  00AF               	movwf	??___fladd+2
  5881     0656  1C03               	skipc
  5882     0657  03B0               	decf	??___fladd+3,f
  5883     0658  0830               	movf	??___fladd+3,w
  5884     0659  3A80               	xorlw	128
  5885     065A  00FF               	movwf	127
  5886     065B  3080               	movlw	128
  5887     065C  027F               	subwf	127,w
  5888     065D  1D03               	skipz
  5889     065E  2E61               	goto	u6265
  5890     065F  301A               	movlw	26
  5891     0660  022F               	subwf	??___fladd+2,w
  5892     0661                     u6265:
  5893     0661  1C03               	skipc
  5894     0662  2E94               	goto	l3980
  5895     0663  1283               	bcf	3,5	;RP0=0, select bank0
  5896     0664  1303               	bcf	3,6	;RP1=0, select bank0
  5897     0665  0828               	movf	___fladd@b+3,w
  5898     0666  0427               	iorwf	___fladd@b+2,w
  5899     0667  0426               	iorwf	___fladd@b+1,w
  5900     0668  0425               	iorwf	___fladd@b,w
  5901     0669  1903               	btfsc	3,2
  5902     066A  2E6D               	goto	u6270
  5903     066B  3001               	movlw	1
  5904     066C  2E6E               	goto	u6280
  5905     066D                     u6270:
  5906     066D  3000               	movlw	0
  5907     066E                     u6280:
  5908     066E  00B8               	movwf	___fladd@grs
  5909     066F  3000               	movlw	0
  5910     0670  00A8               	movwf	___fladd@b+3
  5911     0671  3000               	movlw	0
  5912     0672  00A7               	movwf	___fladd@b+2
  5913     0673  3000               	movlw	0
  5914     0674  00A6               	movwf	___fladd@b+1
  5915     0675  3000               	movlw	0
  5916     0676  00A5               	movwf	___fladd@b
  5917     0677  0836               	movf	___fladd@aexp,w
  5918     0678  00B7               	movwf	___fladd@bexp
  5919     0679  2E9A               	goto	l725
  5920     067A                     l727:
  5921     067A  1C38               	btfss	___fladd@grs,0
  5922     067B  2E83               	goto	l3970
  5923     067C  0838               	movf	___fladd@grs,w
  5924     067D  00AD               	movwf	??___fladd
  5925     067E  1003               	clrc
  5926     067F  0C2D               	rrf	??___fladd,w
  5927     0680  3801               	iorlw	1
  5928     0681  00B8               	movwf	___fladd@grs
  5929     0682  2E85               	goto	l3972
  5930     0683                     l3970:
  5931     0683  1003               	clrc
  5932     0684  0CB8               	rrf	___fladd@grs,f
  5933     0685                     l3972:
  5934     0685  1825               	btfsc	___fladd@b,0
  5935     0686  17B8               	bsf	___fladd@grs,7
  5936     0687  3001               	movlw	1
  5937     0688  00AD               	movwf	??___fladd
  5938     0689                     u6315:
  5939     0689  0D28               	rlf	___fladd@b+3,w
  5940     068A  0CA8               	rrf	___fladd@b+3,f
  5941     068B  0CA7               	rrf	___fladd@b+2,f
  5942     068C  0CA6               	rrf	___fladd@b+1,f
  5943     068D  0CA5               	rrf	___fladd@b,f
  5944     068E  0BAD               	decfsz	??___fladd& (0+127),f
  5945     068F  2E89               	goto	u6315
  5946     0690  3001               	movlw	1
  5947     0691  00FF               	movwf	127
  5948     0692  087F               	movf	127,w
  5949     0693  07B7               	addwf	___fladd@bexp,f
  5950     0694                     l3980:
  5951     0694  1283               	bcf	3,5	;RP0=0, select bank0
  5952     0695  1303               	bcf	3,6	;RP1=0, select bank0
  5953     0696  0836               	movf	___fladd@aexp,w
  5954     0697  0237               	subwf	___fladd@bexp,w
  5955     0698  1C03               	skipc
  5956     0699  2E7A               	goto	l727
  5957     069A                     l725:
  5958     069A  1B35               	btfsc	___fladd@signs,6
  5959     069B  2ED9               	goto	l4006
  5960     069C  0837               	movf	___fladd@bexp,w
  5961     069D  1D03               	btfss	3,2
  5962     069E  2EA8               	goto	l3988
  5963     069F  3000               	movlw	0
  5964     06A0  00A8               	movwf	?___fladd+3
  5965     06A1  3000               	movlw	0
  5966     06A2  00A7               	movwf	?___fladd+2
  5967     06A3  3000               	movlw	0
  5968     06A4  00A6               	movwf	?___fladd+1
  5969     06A5  3000               	movlw	0
  5970     06A6  00A5               	movwf	?___fladd
  5971     06A7  0008               	return
  5972     06A8                     l3988:
  5973     06A8  0829               	movf	___fladd@a,w
  5974     06A9  07A5               	addwf	___fladd@b,f
  5975     06AA  082A               	movf	___fladd@a+1,w
  5976     06AB  1103               	clrz
  5977     06AC  1803               	skipnc
  5978     06AD  3E01               	addlw	1
  5979     06AE  1D03               	btfss	3,2
  5980     06AF  07A6               	addwf	___fladd@b+1,f
  5981     06B0  082B               	movf	___fladd@a+2,w
  5982     06B1  1103               	clrz
  5983     06B2  1803               	skipnc
  5984     06B3  3E01               	addlw	1
  5985     06B4  1D03               	btfss	3,2
  5986     06B5  07A7               	addwf	___fladd@b+2,f
  5987     06B6  082C               	movf	___fladd@a+3,w
  5988     06B7  1103               	clrz
  5989     06B8  1803               	skipnc
  5990     06B9  3E01               	addlw	1
  5991     06BA  1D03               	btfss	3,2
  5992     06BB  07A8               	addwf	___fladd@b+3,f
  5993     06BC  1C28               	btfss	___fladd@b+3,0
  5994     06BD  2F7B               	goto	l4042
  5995     06BE  1C38               	btfss	___fladd@grs,0
  5996     06BF  2EC7               	goto	l3996
  5997     06C0  0838               	movf	___fladd@grs,w
  5998     06C1  00AD               	movwf	??___fladd
  5999     06C2  1003               	clrc
  6000     06C3  0C2D               	rrf	??___fladd,w
  6001     06C4  3801               	iorlw	1
  6002     06C5  00B8               	movwf	___fladd@grs
  6003     06C6  2EC9               	goto	l3998
  6004     06C7                     l3996:
  6005     06C7  1003               	clrc
  6006     06C8  0CB8               	rrf	___fladd@grs,f
  6007     06C9                     l3998:
  6008     06C9  1825               	btfsc	___fladd@b,0
  6009     06CA  17B8               	bsf	___fladd@grs,7
  6010     06CB  3001               	movlw	1
  6011     06CC  00AD               	movwf	??___fladd
  6012     06CD                     u6395:
  6013     06CD  0D28               	rlf	___fladd@b+3,w
  6014     06CE  0CA8               	rrf	___fladd@b+3,f
  6015     06CF  0CA7               	rrf	___fladd@b+2,f
  6016     06D0  0CA6               	rrf	___fladd@b+1,f
  6017     06D1  0CA5               	rrf	___fladd@b,f
  6018     06D2  0BAD               	decfsz	??___fladd& (0+127),f
  6019     06D3  2ECD               	goto	u6395
  6020     06D4  3001               	movlw	1
  6021     06D5  00FF               	movwf	127
  6022     06D6  087F               	movf	127,w
  6023     06D7  07B7               	addwf	___fladd@bexp,f
  6024     06D8  2F7B               	goto	l4042
  6025     06D9                     l4006:
  6026     06D9  0828               	movf	___fladd@b+3,w
  6027     06DA  3A80               	xorlw	128
  6028     06DB  00FF               	movwf	127
  6029     06DC  082C               	movf	___fladd@a+3,w
  6030     06DD  3A80               	xorlw	128
  6031     06DE  027F               	subwf	127,w
  6032     06DF  1D03               	skipz
  6033     06E0  2EEB               	goto	u6403
  6034     06E1  082B               	movf	___fladd@a+2,w
  6035     06E2  0227               	subwf	___fladd@b+2,w
  6036     06E3  1D03               	skipz
  6037     06E4  2EEB               	goto	u6403
  6038     06E5  082A               	movf	___fladd@a+1,w
  6039     06E6  0226               	subwf	___fladd@b+1,w
  6040     06E7  1D03               	skipz
  6041     06E8  2EEB               	goto	u6403
  6042     06E9  0829               	movf	___fladd@a,w
  6043     06EA  0225               	subwf	___fladd@b,w
  6044     06EB                     u6403:
  6045     06EB  1803               	skipnc
  6046     06EC  2F43               	goto	l4018
  6047     06ED  30FF               	movlw	255
  6048     06EE  00AD               	movwf	??___fladd
  6049     06EF  30FF               	movlw	255
  6050     06F0  00AE               	movwf	??___fladd+1
  6051     06F1  30FF               	movlw	255
  6052     06F2  00AF               	movwf	??___fladd+2
  6053     06F3  30FF               	movlw	255
  6054     06F4  00B0               	movwf	??___fladd+3
  6055     06F5  0829               	movf	___fladd@a,w
  6056     06F6  00B1               	movwf	??___fladd+4
  6057     06F7  082A               	movf	___fladd@a+1,w
  6058     06F8  00B2               	movwf	??___fladd+5
  6059     06F9  082B               	movf	___fladd@a+2,w
  6060     06FA  00B3               	movwf	??___fladd+6
  6061     06FB  082C               	movf	___fladd@a+3,w
  6062     06FC  00B4               	movwf	??___fladd+7
  6063     06FD  0825               	movf	___fladd@b,w
  6064     06FE  02B1               	subwf	??___fladd+4,f
  6065     06FF  0826               	movf	___fladd@b+1,w
  6066     0700  1C03               	skipc
  6067     0701  0F26               	incfsz	___fladd@b+1,w
  6068     0702  2F04               	goto	u6411
  6069     0703  2F05               	goto	u6412
  6070     0704                     u6411:
  6071     0704  02B2               	subwf	??___fladd+5,f
  6072     0705                     u6412:
  6073     0705  0827               	movf	___fladd@b+2,w
  6074     0706  1C03               	skipc
  6075     0707  0F27               	incfsz	___fladd@b+2,w
  6076     0708  2F0A               	goto	u6413
  6077     0709  2F0B               	goto	u6414
  6078     070A                     u6413:
  6079     070A  02B3               	subwf	??___fladd+6,f
  6080     070B                     u6414:
  6081     070B  0828               	movf	___fladd@b+3,w
  6082     070C  1C03               	skipc
  6083     070D  0F28               	incfsz	___fladd@b+3,w
  6084     070E  2F10               	goto	u6415
  6085     070F  2F11               	goto	u6416
  6086     0710                     u6415:
  6087     0710  02B4               	subwf	??___fladd+7,f
  6088     0711                     u6416:
  6089     0711  0831               	movf	??___fladd+4,w
  6090     0712  07AD               	addwf	??___fladd,f
  6091     0713  0832               	movf	??___fladd+5,w
  6092     0714  1803               	skipnc
  6093     0715  0F32               	incfsz	??___fladd+5,w
  6094     0716  2F18               	goto	u6420
  6095     0717  2F19               	goto	u6421
  6096     0718                     u6420:
  6097     0718  07AE               	addwf	??___fladd+1,f
  6098     0719                     u6421:
  6099     0719  0833               	movf	??___fladd+6,w
  6100     071A  1803               	skipnc
  6101     071B  0F33               	incfsz	??___fladd+6,w
  6102     071C  2F1E               	goto	u6422
  6103     071D  2F1F               	goto	u6423
  6104     071E                     u6422:
  6105     071E  07AF               	addwf	??___fladd+2,f
  6106     071F                     u6423:
  6107     071F  0834               	movf	??___fladd+7,w
  6108     0720  1803               	skipnc
  6109     0721  0A34               	incf	??___fladd+7,w
  6110     0722  07B0               	addwf	??___fladd+3,f
  6111     0723  0830               	movf	??___fladd+3,w
  6112     0724  00A8               	movwf	___fladd@b+3
  6113     0725  082F               	movf	??___fladd+2,w
  6114     0726  00A7               	movwf	___fladd@b+2
  6115     0727  082E               	movf	??___fladd+1,w
  6116     0728  00A6               	movwf	___fladd@b+1
  6117     0729  082D               	movf	??___fladd,w
  6118     072A  00A5               	movwf	___fladd@b
  6119     072B  3080               	movlw	128
  6120     072C  00FF               	movwf	127
  6121     072D  087F               	movf	127,w
  6122     072E  06B5               	xorwf	___fladd@signs,f
  6123     072F  09B8               	comf	___fladd@grs,f
  6124     0730  0AB8               	incf	___fladd@grs,f
  6125     0731  0838               	movf	___fladd@grs,w
  6126     0732  1D03               	btfss	3,2
  6127     0733  2F51               	goto	l742
  6128     0734  3001               	movlw	1
  6129     0735  07A5               	addwf	___fladd@b,f
  6130     0736  3000               	movlw	0
  6131     0737  1803               	skipnc
  6132     0738  3001               	movlw	1
  6133     0739  07A6               	addwf	___fladd@b+1,f
  6134     073A  3000               	movlw	0
  6135     073B  1803               	skipnc
  6136     073C  3001               	movlw	1
  6137     073D  07A7               	addwf	___fladd@b+2,f
  6138     073E  3000               	movlw	0
  6139     073F  1803               	skipnc
  6140     0740  3001               	movlw	1
  6141     0741  07A8               	addwf	___fladd@b+3,f
  6142     0742  2F51               	goto	l742
  6143     0743                     l4018:
  6144     0743  0829               	movf	___fladd@a,w
  6145     0744  02A5               	subwf	___fladd@b,f
  6146     0745  082A               	movf	___fladd@a+1,w
  6147     0746  1C03               	skipc
  6148     0747  0F2A               	incfsz	___fladd@a+1,w
  6149     0748  02A6               	subwf	___fladd@b+1,f
  6150     0749  082B               	movf	___fladd@a+2,w
  6151     074A  1C03               	skipc
  6152     074B  0F2B               	incfsz	___fladd@a+2,w
  6153     074C  02A7               	subwf	___fladd@b+2,f
  6154     074D  082C               	movf	___fladd@a+3,w
  6155     074E  1C03               	skipc
  6156     074F  0F2C               	incfsz	___fladd@a+3,w
  6157     0750  02A8               	subwf	___fladd@b+3,f
  6158     0751                     l742:
  6159     0751  0828               	movf	___fladd@b+3,w
  6160     0752  0427               	iorwf	___fladd@b+2,w
  6161     0753  0426               	iorwf	___fladd@b+1,w
  6162     0754  0425               	iorwf	___fladd@b,w
  6163     0755  1D03               	skipz
  6164     0756  2F79               	goto	l4040
  6165     0757  0838               	movf	___fladd@grs,w
  6166     0758  1D03               	btfss	3,2
  6167     0759  2F79               	goto	l4040
  6168     075A  3000               	movlw	0
  6169     075B  00A8               	movwf	?___fladd+3
  6170     075C  3000               	movlw	0
  6171     075D  00A7               	movwf	?___fladd+2
  6172     075E  3000               	movlw	0
  6173     075F  00A6               	movwf	?___fladd+1
  6174     0760  3000               	movlw	0
  6175     0761  00A5               	movwf	?___fladd
  6176     0762  0008               	return
  6177     0763                     l4026:
  6178     0763  3001               	movlw	1
  6179     0764  00AD               	movwf	??___fladd
  6180     0765                     u6465:
  6181     0765  1003               	clrc
  6182     0766  0DA5               	rlf	___fladd@b,f
  6183     0767  0DA6               	rlf	___fladd@b+1,f
  6184     0768  0DA7               	rlf	___fladd@b+2,f
  6185     0769  0DA8               	rlf	___fladd@b+3,f
  6186     076A  0BAD               	decfsz	??___fladd,f
  6187     076B  2F65               	goto	u6465
  6188     076C  1BB8               	btfsc	___fladd@grs,7
  6189     076D  1425               	bsf	___fladd@b,0
  6190     076E  1C38               	btfss	___fladd@grs,0
  6191     076F  2F72               	goto	l4034
  6192     0770  1403               	setc
  6193     0771  2F73               	goto	L9
  6194     0772                     l4034:
  6195     0772  1003               	clrc
  6196     0773                     L9:
  6197     0773  0DB8               	rlf	___fladd@grs,f
  6198     0774  0837               	movf	___fladd@bexp,w
  6199     0775  1903               	btfsc	3,2
  6200     0776  2F79               	goto	l4040
  6201     0777  3001               	movlw	1
  6202     0778  02B7               	subwf	___fladd@bexp,f
  6203     0779                     l4040:
  6204     0779  1FA7               	btfss	___fladd@b+2,7
  6205     077A  2F63               	goto	l4026
  6206     077B                     l4042:
  6207     077B  01B6               	clrf	___fladd@aexp
  6208     077C  1FB8               	btfss	___fladd@grs,7
  6209     077D  2F86               	goto	l4052
  6210     077E  0838               	movf	___fladd@grs,w
  6211     077F  397F               	andlw	127
  6212     0780  1903               	btfsc	3,2
  6213     0781  1825               	btfsc	___fladd@b,0
  6214     0782  2F84               	goto	l4048
  6215     0783  2F86               	goto	l4052
  6216     0784                     l4048:
  6217     0784  01B6               	clrf	___fladd@aexp
  6218     0785  0AB6               	incf	___fladd@aexp,f
  6219     0786                     l4052:
  6220     0786  0836               	movf	___fladd@aexp,w
  6221     0787  1903               	btfsc	3,2
  6222     0788  2FB9               	goto	l4062
  6223     0789  3001               	movlw	1
  6224     078A  07A5               	addwf	___fladd@b,f
  6225     078B  3000               	movlw	0
  6226     078C  1803               	skipnc
  6227     078D  3001               	movlw	1
  6228     078E  07A6               	addwf	___fladd@b+1,f
  6229     078F  3000               	movlw	0
  6230     0790  1803               	skipnc
  6231     0791  3001               	movlw	1
  6232     0792  07A7               	addwf	___fladd@b+2,f
  6233     0793  3000               	movlw	0
  6234     0794  1803               	skipnc
  6235     0795  3001               	movlw	1
  6236     0796  07A8               	addwf	___fladd@b+3,f
  6237     0797  1C28               	btfss	___fladd@b+3,0
  6238     0798  2FB9               	goto	l4062
  6239     0799  0825               	movf	___fladd@b,w
  6240     079A  00AD               	movwf	??___fladd
  6241     079B  0826               	movf	___fladd@b+1,w
  6242     079C  00AE               	movwf	??___fladd+1
  6243     079D  0827               	movf	___fladd@b+2,w
  6244     079E  00AF               	movwf	??___fladd+2
  6245     079F  0828               	movf	___fladd@b+3,w
  6246     07A0  00B0               	movwf	??___fladd+3
  6247     07A1  3001               	movlw	1
  6248     07A2  00B1               	movwf	??___fladd+4
  6249     07A3                     u6565:
  6250     07A3  0D30               	rlf	??___fladd+3,w
  6251     07A4  0CB0               	rrf	??___fladd+3,f
  6252     07A5  0CAF               	rrf	??___fladd+2,f
  6253     07A6  0CAE               	rrf	??___fladd+1,f
  6254     07A7  0CAD               	rrf	??___fladd,f
  6255     07A8  0BB1               	decfsz	??___fladd+4,f
  6256     07A9  2FA3               	goto	u6565
  6257     07AA  0830               	movf	??___fladd+3,w
  6258     07AB  00A8               	movwf	___fladd@b+3
  6259     07AC  082F               	movf	??___fladd+2,w
  6260     07AD  00A7               	movwf	___fladd@b+2
  6261     07AE  082E               	movf	??___fladd+1,w
  6262     07AF  00A6               	movwf	___fladd@b+1
  6263     07B0  082D               	movf	??___fladd,w
  6264     07B1  00A5               	movwf	___fladd@b
  6265     07B2  0A37               	incf	___fladd@bexp,w
  6266     07B3  1903               	btfsc	3,2
  6267     07B4  2FB9               	goto	l4062
  6268     07B5  3001               	movlw	1
  6269     07B6  00FF               	movwf	127
  6270     07B7  087F               	movf	127,w
  6271     07B8  07B7               	addwf	___fladd@bexp,f
  6272     07B9                     l4062:
  6273     07B9  0A37               	incf	___fladd@bexp,w
  6274     07BA  1D03               	btfss	3,2
  6275     07BB  0837               	movf	___fladd@bexp,w
  6276     07BC  1D03               	btfss	3,2
  6277     07BD  2FC9               	goto	l4072
  6278     07BE  3000               	movlw	0
  6279     07BF  00A8               	movwf	___fladd@b+3
  6280     07C0  3000               	movlw	0
  6281     07C1  00A7               	movwf	___fladd@b+2
  6282     07C2  3000               	movlw	0
  6283     07C3  00A6               	movwf	___fladd@b+1
  6284     07C4  3000               	movlw	0
  6285     07C5  00A5               	movwf	___fladd@b
  6286     07C6  0837               	movf	___fladd@bexp,w
  6287     07C7  1903               	btfsc	3,2
  6288     07C8  01B5               	clrf	___fladd@signs
  6289     07C9                     l4072:
  6290     07C9  1C37               	btfss	___fladd@bexp,0
  6291     07CA  2FCD               	goto	l4076
  6292     07CB  17A7               	bsf	___fladd@b+2,7
  6293     07CC  2FD1               	goto	l4078
  6294     07CD                     l4076:
  6295     07CD  307F               	movlw	127
  6296     07CE  00FF               	movwf	127
  6297     07CF  087F               	movf	127,w
  6298     07D0  05A7               	andwf	___fladd@b+2,f
  6299     07D1                     l4078:
  6300     07D1  0837               	movf	___fladd@bexp,w
  6301     07D2  00AD               	movwf	??___fladd
  6302     07D3  1003               	clrc
  6303     07D4  0C2D               	rrf	??___fladd,w
  6304     07D5  00A8               	movwf	___fladd@b+3
  6305     07D6  1FB5               	btfss	___fladd@signs,7
  6306     07D7  0008               	return
  6307     07D8  17A8               	bsf	___fladd@b+3,7
  6308     07D9  0008               	return
  6309     07DA                     __end_of___fladd:
  6310                           
  6311                           	psect	text17
  6312     1CC1                     __ptext17:	
  6313 ;; *************** function ___flneg *****************
  6314 ;; Defined at:
  6315 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\flneg.c"
  6316 ;; Parameters:    Size  Location     Type
  6317 ;;  f1              4    2[COMMON] unsigned char 
  6318 ;; Auto vars:     Size  Location     Type
  6319 ;;		None
  6320 ;; Return value:  Size  Location     Type
  6321 ;;                  4    2[COMMON] unsigned char 
  6322 ;; Registers used:
  6323 ;;		wreg
  6324 ;; Tracked objects:
  6325 ;;		On entry : 300/100
  6326 ;;		On exit  : 300/100
  6327 ;;		Unchanged: 300/0
  6328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6329 ;;      Params:         4       0       0       0       0
  6330 ;;      Locals:         0       0       0       0       0
  6331 ;;      Temps:          0       0       0       0       0
  6332 ;;      Totals:         4       0       0       0       0
  6333 ;;Total ram usage:        4 bytes
  6334 ;; Hardware stack levels used: 1
  6335 ;; Hardware stack levels required when called: 1
  6336 ;; This function calls:
  6337 ;;		Nothing
  6338 ;; This function is called by:
  6339 ;;		_sprintf
  6340 ;; This function uses a non-reentrant model
  6341 ;;
  6342                           
  6343     1CC1                     ___flneg:	
  6344                           ;psect for function ___flneg
  6345                           
  6346                           
  6347                           ;incstack = 0
  6348                           ; Regs used in ___flneg: [wreg]
  6349     1CC1  0875               	movf	___flneg@f1+3,w
  6350     1CC2  0474               	iorwf	___flneg@f1+2,w
  6351     1CC3  0473               	iorwf	___flneg@f1+1,w
  6352     1CC4  0472               	iorwf	___flneg@f1,w
  6353     1CC5  1903               	skipnz
  6354     1CC6  0008               	return
  6355     1CC7  3080               	movlw	128
  6356     1CC8  06F5               	xorwf	___flneg@f1+3,f
  6357     1CC9  0008               	return
  6358     1CCA                     __end_of___flneg:
  6359                           
  6360                           	psect	text18
  6361     1148                     __ptext18:	
  6362 ;; *************** function ___flge *****************
  6363 ;; Defined at:
  6364 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\flge.c"
  6365 ;; Parameters:    Size  Location     Type
  6366 ;;  ff1             4    2[COMMON] unsigned char 
  6367 ;;  ff2             4    6[COMMON] unsigned char 
  6368 ;; Auto vars:     Size  Location     Type
  6369 ;;		None
  6370 ;; Return value:  Size  Location     Type
  6371 ;;		None               void
  6372 ;; Registers used:
  6373 ;;		wreg, status,2, status,0
  6374 ;; Tracked objects:
  6375 ;;		On entry : 100/300
  6376 ;;		On exit  : 300/0
  6377 ;;		Unchanged: 0/0
  6378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6379 ;;      Params:         8       0       0       0       0
  6380 ;;      Locals:         0       0       0       0       0
  6381 ;;      Temps:          0       4       0       0       0
  6382 ;;      Totals:         8       4       0       0       0
  6383 ;;Total ram usage:       12 bytes
  6384 ;; Hardware stack levels used: 1
  6385 ;; Hardware stack levels required when called: 1
  6386 ;; This function calls:
  6387 ;;		Nothing
  6388 ;; This function is called by:
  6389 ;;		_main
  6390 ;;		_sprintf
  6391 ;; This function uses a non-reentrant model
  6392 ;;
  6393                           
  6394     1148                     ___flge:	
  6395                           ;psect for function ___flge
  6396                           
  6397                           
  6398                           ;incstack = 0
  6399                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6400     1148  3000               	movlw	0
  6401     1149  0572               	andwf	___flge@ff1,w
  6402     114A  1283               	bcf	3,5	;RP0=0, select bank0
  6403     114B  1303               	bcf	3,6	;RP1=0, select bank0
  6404     114C  00A0               	movwf	??___flge
  6405     114D  3000               	movlw	0
  6406     114E  0573               	andwf	___flge@ff1+1,w
  6407     114F  00A1               	movwf	??___flge+1
  6408     1150  3080               	movlw	128
  6409     1151  0574               	andwf	___flge@ff1+2,w
  6410     1152  00A2               	movwf	??___flge+2
  6411     1153  307F               	movlw	127
  6412     1154  0575               	andwf	___flge@ff1+3,w
  6413     1155  00A3               	movwf	??___flge+3
  6414     1156  0823               	movf	??___flge+3,w
  6415     1157  0422               	iorwf	??___flge+2,w
  6416     1158  0421               	iorwf	??___flge+1,w
  6417     1159  0420               	iorwf	??___flge,w
  6418     115A  1D03               	skipz
  6419     115B  2964               	goto	l585
  6420     115C  3000               	movlw	0
  6421     115D  00F5               	movwf	___flge@ff1+3
  6422     115E  3000               	movlw	0
  6423     115F  00F4               	movwf	___flge@ff1+2
  6424     1160  3000               	movlw	0
  6425     1161  00F3               	movwf	___flge@ff1+1
  6426     1162  3000               	movlw	0
  6427     1163  00F2               	movwf	___flge@ff1
  6428     1164                     l585:
  6429     1164  3000               	movlw	0
  6430     1165  0576               	andwf	___flge@ff2,w
  6431     1166  00A0               	movwf	??___flge
  6432     1167  3000               	movlw	0
  6433     1168  0577               	andwf	___flge@ff2+1,w
  6434     1169  00A1               	movwf	??___flge+1
  6435     116A  3080               	movlw	128
  6436     116B  0578               	andwf	___flge@ff2+2,w
  6437     116C  00A2               	movwf	??___flge+2
  6438     116D  307F               	movlw	127
  6439     116E  0579               	andwf	___flge@ff2+3,w
  6440     116F  00A3               	movwf	??___flge+3
  6441     1170  0823               	movf	??___flge+3,w
  6442     1171  0422               	iorwf	??___flge+2,w
  6443     1172  0421               	iorwf	??___flge+1,w
  6444     1173  0420               	iorwf	??___flge,w
  6445     1174  1D03               	skipz
  6446     1175  297E               	goto	l4452
  6447     1176  3000               	movlw	0
  6448     1177  00F9               	movwf	___flge@ff2+3
  6449     1178  3000               	movlw	0
  6450     1179  00F8               	movwf	___flge@ff2+2
  6451     117A  3000               	movlw	0
  6452     117B  00F7               	movwf	___flge@ff2+1
  6453     117C  3000               	movlw	0
  6454     117D  00F6               	movwf	___flge@ff2
  6455     117E                     l4452:
  6456     117E  1FF5               	btfss	___flge@ff1+3,7
  6457     117F  29A4               	goto	l4456
  6458     1180  3000               	movlw	0
  6459     1181  00A0               	movwf	??___flge
  6460     1182  3000               	movlw	0
  6461     1183  00A1               	movwf	??___flge+1
  6462     1184  3000               	movlw	0
  6463     1185  00A2               	movwf	??___flge+2
  6464     1186  3080               	movlw	128
  6465     1187  00A3               	movwf	??___flge+3
  6466     1188  0872               	movf	___flge@ff1,w
  6467     1189  02A0               	subwf	??___flge,f
  6468     118A  0873               	movf	___flge@ff1+1,w
  6469     118B  1C03               	skipc
  6470     118C  0F73               	incfsz	___flge@ff1+1,w
  6471     118D  298F               	goto	u7681
  6472     118E  2990               	goto	u7682
  6473     118F                     u7681:
  6474     118F  02A1               	subwf	??___flge+1,f
  6475     1190                     u7682:
  6476     1190  0874               	movf	___flge@ff1+2,w
  6477     1191  1C03               	skipc
  6478     1192  0F74               	incfsz	___flge@ff1+2,w
  6479     1193  2995               	goto	u7683
  6480     1194  2996               	goto	u7684
  6481     1195                     u7683:
  6482     1195  02A2               	subwf	??___flge+2,f
  6483     1196                     u7684:
  6484     1196  0875               	movf	___flge@ff1+3,w
  6485     1197  1C03               	skipc
  6486     1198  0F75               	incfsz	___flge@ff1+3,w
  6487     1199  299B               	goto	u7685
  6488     119A  299C               	goto	u7686
  6489     119B                     u7685:
  6490     119B  02A3               	subwf	??___flge+3,f
  6491     119C                     u7686:
  6492     119C  0823               	movf	??___flge+3,w
  6493     119D  00F5               	movwf	___flge@ff1+3
  6494     119E  0822               	movf	??___flge+2,w
  6495     119F  00F4               	movwf	___flge@ff1+2
  6496     11A0  0821               	movf	??___flge+1,w
  6497     11A1  00F3               	movwf	___flge@ff1+1
  6498     11A2  0820               	movf	??___flge,w
  6499     11A3  00F2               	movwf	___flge@ff1
  6500     11A4                     l4456:
  6501     11A4  1FF9               	btfss	___flge@ff2+3,7
  6502     11A5  29CA               	goto	l588
  6503     11A6  3000               	movlw	0
  6504     11A7  00A0               	movwf	??___flge
  6505     11A8  3000               	movlw	0
  6506     11A9  00A1               	movwf	??___flge+1
  6507     11AA  3000               	movlw	0
  6508     11AB  00A2               	movwf	??___flge+2
  6509     11AC  3080               	movlw	128
  6510     11AD  00A3               	movwf	??___flge+3
  6511     11AE  0876               	movf	___flge@ff2,w
  6512     11AF  02A0               	subwf	??___flge,f
  6513     11B0  0877               	movf	___flge@ff2+1,w
  6514     11B1  1C03               	skipc
  6515     11B2  0F77               	incfsz	___flge@ff2+1,w
  6516     11B3  29B5               	goto	u7701
  6517     11B4  29B6               	goto	u7702
  6518     11B5                     u7701:
  6519     11B5  02A1               	subwf	??___flge+1,f
  6520     11B6                     u7702:
  6521     11B6  0878               	movf	___flge@ff2+2,w
  6522     11B7  1C03               	skipc
  6523     11B8  0F78               	incfsz	___flge@ff2+2,w
  6524     11B9  29BB               	goto	u7703
  6525     11BA  29BC               	goto	u7704
  6526     11BB                     u7703:
  6527     11BB  02A2               	subwf	??___flge+2,f
  6528     11BC                     u7704:
  6529     11BC  0879               	movf	___flge@ff2+3,w
  6530     11BD  1C03               	skipc
  6531     11BE  0F79               	incfsz	___flge@ff2+3,w
  6532     11BF  29C1               	goto	u7705
  6533     11C0  29C2               	goto	u7706
  6534     11C1                     u7705:
  6535     11C1  02A3               	subwf	??___flge+3,f
  6536     11C2                     u7706:
  6537     11C2  0823               	movf	??___flge+3,w
  6538     11C3  00F9               	movwf	___flge@ff2+3
  6539     11C4  0822               	movf	??___flge+2,w
  6540     11C5  00F8               	movwf	___flge@ff2+2
  6541     11C6  0821               	movf	??___flge+1,w
  6542     11C7  00F7               	movwf	___flge@ff2+1
  6543     11C8  0820               	movf	??___flge,w
  6544     11C9  00F6               	movwf	___flge@ff2
  6545     11CA                     l588:
  6546     11CA  3080               	movlw	128
  6547     11CB  06F5               	xorwf	___flge@ff1+3,f
  6548     11CC  3080               	movlw	128
  6549     11CD  06F9               	xorwf	___flge@ff2+3,f
  6550     11CE  0879               	movf	___flge@ff2+3,w
  6551     11CF  0275               	subwf	___flge@ff1+3,w
  6552     11D0  1D03               	skipz
  6553     11D1  0008               	return
  6554     11D2  0878               	movf	___flge@ff2+2,w
  6555     11D3  0274               	subwf	___flge@ff1+2,w
  6556     11D4  1D03               	skipz
  6557     11D5  0008               	return
  6558     11D6  0877               	movf	___flge@ff2+1,w
  6559     11D7  0273               	subwf	___flge@ff1+1,w
  6560     11D8  1D03               	skipz
  6561     11D9  0008               	return
  6562     11DA  0876               	movf	___flge@ff2,w
  6563     11DB  0272               	subwf	___flge@ff1,w
  6564     11DC  0008               	return
  6565     11DD                     __end_of___flge:
  6566                           
  6567                           	psect	text19
  6568     1E01                     __ptext19:	
  6569 ;; *************** function ___fleq *****************
  6570 ;; Defined at:
  6571 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fleq.c"
  6572 ;; Parameters:    Size  Location     Type
  6573 ;;  ff1             4    2[COMMON] unsigned char 
  6574 ;;  ff2             4    6[COMMON] unsigned char 
  6575 ;; Auto vars:     Size  Location     Type
  6576 ;;		None
  6577 ;; Return value:  Size  Location     Type
  6578 ;;		None               void
  6579 ;; Registers used:
  6580 ;;		wreg, status,2, status,0
  6581 ;; Tracked objects:
  6582 ;;		On entry : 300/100
  6583 ;;		On exit  : 300/0
  6584 ;;		Unchanged: 0/0
  6585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6586 ;;      Params:         8       0       0       0       0
  6587 ;;      Locals:         0       0       0       0       0
  6588 ;;      Temps:          0       4       0       0       0
  6589 ;;      Totals:         8       4       0       0       0
  6590 ;;Total ram usage:       12 bytes
  6591 ;; Hardware stack levels used: 1
  6592 ;; Hardware stack levels required when called: 1
  6593 ;; This function calls:
  6594 ;;		Nothing
  6595 ;; This function is called by:
  6596 ;;		_sprintf
  6597 ;; This function uses a non-reentrant model
  6598 ;;
  6599                           
  6600     1E01                     ___fleq:	
  6601                           ;psect for function ___fleq
  6602                           
  6603                           
  6604                           ;incstack = 0
  6605                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  6606     1E01  3000               	movlw	0
  6607     1E02  0572               	andwf	___fleq@ff1,w
  6608     1E03  1283               	bcf	3,5	;RP0=0, select bank0
  6609     1E04  00A0               	movwf	??___fleq
  6610     1E05  3000               	movlw	0
  6611     1E06  0573               	andwf	___fleq@ff1+1,w
  6612     1E07  00A1               	movwf	??___fleq+1
  6613     1E08  3080               	movlw	128
  6614     1E09  0574               	andwf	___fleq@ff1+2,w
  6615     1E0A  00A2               	movwf	??___fleq+2
  6616     1E0B  307F               	movlw	127
  6617     1E0C  0575               	andwf	___fleq@ff1+3,w
  6618     1E0D  00A3               	movwf	??___fleq+3
  6619     1E0E  0823               	movf	??___fleq+3,w
  6620     1E0F  0422               	iorwf	??___fleq+2,w
  6621     1E10  0421               	iorwf	??___fleq+1,w
  6622     1E11  0420               	iorwf	??___fleq,w
  6623     1E12  1D03               	skipz
  6624     1E13  2E1C               	goto	l580
  6625     1E14  3000               	movlw	0
  6626     1E15  00F5               	movwf	___fleq@ff1+3
  6627     1E16  3000               	movlw	0
  6628     1E17  00F4               	movwf	___fleq@ff1+2
  6629     1E18  3000               	movlw	0
  6630     1E19  00F3               	movwf	___fleq@ff1+1
  6631     1E1A  3000               	movlw	0
  6632     1E1B  00F2               	movwf	___fleq@ff1
  6633     1E1C                     l580:
  6634     1E1C  3000               	movlw	0
  6635     1E1D  0576               	andwf	___fleq@ff2,w
  6636     1E1E  00A0               	movwf	??___fleq
  6637     1E1F  3000               	movlw	0
  6638     1E20  0577               	andwf	___fleq@ff2+1,w
  6639     1E21  00A1               	movwf	??___fleq+1
  6640     1E22  3080               	movlw	128
  6641     1E23  0578               	andwf	___fleq@ff2+2,w
  6642     1E24  00A2               	movwf	??___fleq+2
  6643     1E25  307F               	movlw	127
  6644     1E26  0579               	andwf	___fleq@ff2+3,w
  6645     1E27  00A3               	movwf	??___fleq+3
  6646     1E28  0823               	movf	??___fleq+3,w
  6647     1E29  0422               	iorwf	??___fleq+2,w
  6648     1E2A  0421               	iorwf	??___fleq+1,w
  6649     1E2B  0420               	iorwf	??___fleq,w
  6650     1E2C  1D03               	skipz
  6651     1E2D  2E36               	goto	l581
  6652     1E2E  3000               	movlw	0
  6653     1E2F  00F9               	movwf	___fleq@ff2+3
  6654     1E30  3000               	movlw	0
  6655     1E31  00F8               	movwf	___fleq@ff2+2
  6656     1E32  3000               	movlw	0
  6657     1E33  00F7               	movwf	___fleq@ff2+1
  6658     1E34  3000               	movlw	0
  6659     1E35  00F6               	movwf	___fleq@ff2
  6660     1E36                     l581:
  6661     1E36  0879               	movf	___fleq@ff2+3,w
  6662     1E37  0675               	xorwf	___fleq@ff1+3,w
  6663     1E38  1D03               	skipz
  6664     1E39  2E44               	goto	u7645
  6665     1E3A  0878               	movf	___fleq@ff2+2,w
  6666     1E3B  0674               	xorwf	___fleq@ff1+2,w
  6667     1E3C  1D03               	skipz
  6668     1E3D  2E44               	goto	u7645
  6669     1E3E  0877               	movf	___fleq@ff2+1,w
  6670     1E3F  0673               	xorwf	___fleq@ff1+1,w
  6671     1E40  1D03               	skipz
  6672     1E41  2E44               	goto	u7645
  6673     1E42  0876               	movf	___fleq@ff2,w
  6674     1E43  0672               	xorwf	___fleq@ff1,w
  6675     1E44                     u7645:
  6676     1E44  1903               	skipnz
  6677     1E45  2E48               	goto	l4442
  6678     1E46  1003               	clrc
  6679     1E47  0008               	return
  6680     1E48                     l4442:
  6681     1E48  1403               	setc
  6682     1E49  0008               	return
  6683     1E4A                     __end_of___fleq:
  6684                           
  6685                           	psect	text20
  6686     1473                     __ptext20:	
  6687 ;; *************** function _lcd_init *****************
  6688 ;; Defined at:
  6689 ;;		line 47 in file "bibliotec_lcd.c"
  6690 ;; Parameters:    Size  Location     Type
  6691 ;;  lcd_pins        1    wreg     PTR struct .
  6692 ;;		 -> lcd_pins(12), 
  6693 ;; Auto vars:     Size  Location     Type
  6694 ;;  lcd_pins        1    9[COMMON] PTR struct .
  6695 ;;		 -> lcd_pins(12), 
  6696 ;; Return value:  Size  Location     Type
  6697 ;;                  1    wreg      void 
  6698 ;; Registers used:
  6699 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6700 ;; Tracked objects:
  6701 ;;		On entry : B00/100
  6702 ;;		On exit  : 0/0
  6703 ;;		Unchanged: 0/0
  6704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6705 ;;      Params:         0       0       0       0       0
  6706 ;;      Locals:         1       0       0       0       0
  6707 ;;      Temps:          0       2       0       0       0
  6708 ;;      Totals:         1       2       0       0       0
  6709 ;;Total ram usage:        3 bytes
  6710 ;; Hardware stack levels used: 1
  6711 ;; Hardware stack levels required when called: 4
  6712 ;; This function calls:
  6713 ;;		_byte
  6714 ;;		_enable
  6715 ;;		_nibble
  6716 ;; This function is called by:
  6717 ;;		_main
  6718 ;; This function uses a non-reentrant model
  6719 ;;
  6720                           
  6721     1473                     _lcd_init:	
  6722                           ;psect for function _lcd_init
  6723                           
  6724                           
  6725                           ;incstack = 0
  6726                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6727                           ;lcd_init@lcd_pins stored from wreg
  6728     1473  00F9               	movwf	lcd_init@lcd_pins
  6729                           
  6730                           ;bibliotec_lcd.c: 47: void lcd_init( lcd_pin_t *lcd_pins);bibliotec_lcd.c: 48: {;bibliot
      +                          ec_lcd.c: 50:     port_rs = lcd_pins->port_rs;
  6731     1474  0879               	movf	lcd_init@lcd_pins,w
  6732     1475  0084               	movwf	4
  6733     1476  1783               	bsf	3,7	;select IRP bank2
  6734     1477  0800               	movf	0,w
  6735     1478  1703               	bsf	3,6	;RP1=1, select bank3
  6736     1479  00C4               	movwf	_port_rs^(0+384)
  6737     147A  0A84               	incf	4,f
  6738     147B  0800               	movf	0,w
  6739     147C  0384               	decf	4,f
  6740     147D  00C5               	movwf	(_port_rs+1)^(0+384)
  6741                           
  6742                           ;bibliotec_lcd.c: 51:     port_en = lcd_pins->port_en;
  6743     147E  0879               	movf	lcd_init@lcd_pins,w
  6744     147F  3E03               	addlw	3
  6745     1480  0084               	movwf	4
  6746     1481  0800               	movf	0,w
  6747     1482  00C2               	movwf	_port_en^(0+384)
  6748     1483  0A84               	incf	4,f
  6749     1484  0800               	movf	0,w
  6750     1485  0384               	decf	4,f
  6751     1486  00C3               	movwf	(_port_en+1)^(0+384)
  6752                           
  6753                           ;bibliotec_lcd.c: 52:     port_data = lcd_pins->port_data;
  6754     1487  0879               	movf	lcd_init@lcd_pins,w
  6755     1488  3E06               	addlw	6
  6756     1489  0084               	movwf	4
  6757     148A  0800               	movf	0,w
  6758     148B  1303               	bcf	3,6	;RP1=0, select bank1
  6759     148C  00C7               	movwf	_port_data^(0+128)
  6760     148D  0A84               	incf	4,f
  6761     148E  0800               	movf	0,w
  6762     148F  0384               	decf	4,f
  6763     1490  00C8               	movwf	(_port_data+1)^(0+128)
  6764                           
  6765                           ;bibliotec_lcd.c: 53:     RS = lcd_pins->pino_rs;
  6766     1491  0879               	movf	lcd_init@lcd_pins,w
  6767     1492  3E02               	addlw	2
  6768     1493  0084               	movwf	4
  6769     1494  0800               	movf	0,w
  6770     1495  1283               	bcf	3,5	;RP0=0, select bank0
  6771     1496  00AA               	movwf	??_lcd_init
  6772     1497  01AB               	clrf	??_lcd_init+1
  6773     1498  082A               	movf	??_lcd_init,w
  6774     1499  1683               	bsf	3,5	;RP0=1, select bank1
  6775     149A  00CB               	movwf	_RS^(0+128)	;volatile
  6776     149B  1283               	bcf	3,5	;RP0=0, select bank0
  6777     149C  082B               	movf	??_lcd_init+1,w
  6778     149D  1683               	bsf	3,5	;RP0=1, select bank1
  6779     149E  00CC               	movwf	(_RS+1)^(0+128)	;volatile
  6780                           
  6781                           ;bibliotec_lcd.c: 54:     EN = lcd_pins->pino_en;
  6782     149F  0879               	movf	lcd_init@lcd_pins,w
  6783     14A0  3E05               	addlw	5
  6784     14A1  0084               	movwf	4
  6785     14A2  0800               	movf	0,w
  6786     14A3  1283               	bcf	3,5	;RP0=0, select bank0
  6787     14A4  00AA               	movwf	??_lcd_init
  6788     14A5  01AB               	clrf	??_lcd_init+1
  6789     14A6  082A               	movf	??_lcd_init,w
  6790     14A7  00FA               	movwf	_EN	;volatile
  6791     14A8  082B               	movf	??_lcd_init+1,w
  6792     14A9  00FB               	movwf	_EN+1	;volatile
  6793                           
  6794                           ;bibliotec_lcd.c: 55:     D4 = lcd_pins->pino_d4;
  6795     14AA  0879               	movf	lcd_init@lcd_pins,w
  6796     14AB  3E08               	addlw	8
  6797     14AC  0084               	movwf	4
  6798     14AD  0800               	movf	0,w
  6799     14AE  00AA               	movwf	??_lcd_init
  6800     14AF  01AB               	clrf	??_lcd_init+1
  6801     14B0  082A               	movf	??_lcd_init,w
  6802     14B1  1683               	bsf	3,5	;RP0=1, select bank1
  6803     14B2  00C9               	movwf	_D4^(0+128)	;volatile
  6804     14B3  1283               	bcf	3,5	;RP0=0, select bank0
  6805     14B4  082B               	movf	??_lcd_init+1,w
  6806     14B5  1683               	bsf	3,5	;RP0=1, select bank1
  6807     14B6  00CA               	movwf	(_D4+1)^(0+128)	;volatile
  6808                           
  6809                           ;bibliotec_lcd.c: 56:     D5 = lcd_pins->pino_d5;
  6810     14B7  0879               	movf	lcd_init@lcd_pins,w
  6811     14B8  3E09               	addlw	9
  6812     14B9  0084               	movwf	4
  6813     14BA  0800               	movf	0,w
  6814     14BB  1283               	bcf	3,5	;RP0=0, select bank0
  6815     14BC  00AA               	movwf	??_lcd_init
  6816     14BD  01AB               	clrf	??_lcd_init+1
  6817     14BE  082A               	movf	??_lcd_init,w
  6818     14BF  1683               	bsf	3,5	;RP0=1, select bank3
  6819     14C0  1703               	bsf	3,6	;RP1=1, select bank3
  6820     14C1  00CA               	movwf	_D5^(0+384)	;volatile
  6821     14C2  1283               	bcf	3,5	;RP0=0, select bank0
  6822     14C3  1303               	bcf	3,6	;RP1=0, select bank0
  6823     14C4  082B               	movf	??_lcd_init+1,w
  6824     14C5  1683               	bsf	3,5	;RP0=1, select bank3
  6825     14C6  1703               	bsf	3,6	;RP1=1, select bank3
  6826     14C7  00CB               	movwf	(_D5+1)^(0+384)	;volatile
  6827                           
  6828                           ;bibliotec_lcd.c: 57:     D6 = lcd_pins->pino_d6;
  6829     14C8  0879               	movf	lcd_init@lcd_pins,w
  6830     14C9  3E0A               	addlw	10
  6831     14CA  0084               	movwf	4
  6832     14CB  0800               	movf	0,w
  6833     14CC  1283               	bcf	3,5	;RP0=0, select bank0
  6834     14CD  1303               	bcf	3,6	;RP1=0, select bank0
  6835     14CE  00AA               	movwf	??_lcd_init
  6836     14CF  01AB               	clrf	??_lcd_init+1
  6837     14D0  082A               	movf	??_lcd_init,w
  6838     14D1  1683               	bsf	3,5	;RP0=1, select bank3
  6839     14D2  1703               	bsf	3,6	;RP1=1, select bank3
  6840     14D3  00C8               	movwf	_D6^(0+384)	;volatile
  6841     14D4  1283               	bcf	3,5	;RP0=0, select bank0
  6842     14D5  1303               	bcf	3,6	;RP1=0, select bank0
  6843     14D6  082B               	movf	??_lcd_init+1,w
  6844     14D7  1683               	bsf	3,5	;RP0=1, select bank3
  6845     14D8  1703               	bsf	3,6	;RP1=1, select bank3
  6846     14D9  00C9               	movwf	(_D6+1)^(0+384)	;volatile
  6847                           
  6848                           ;bibliotec_lcd.c: 58:     D7 = lcd_pins->pino_d7;
  6849     14DA  0879               	movf	lcd_init@lcd_pins,w
  6850     14DB  3E0B               	addlw	11
  6851     14DC  0084               	movwf	4
  6852     14DD  0800               	movf	0,w
  6853     14DE  1283               	bcf	3,5	;RP0=0, select bank0
  6854     14DF  1303               	bcf	3,6	;RP1=0, select bank0
  6855     14E0  00AA               	movwf	??_lcd_init
  6856     14E1  01AB               	clrf	??_lcd_init+1
  6857     14E2  082A               	movf	??_lcd_init,w
  6858     14E3  1683               	bsf	3,5	;RP0=1, select bank3
  6859     14E4  1703               	bsf	3,6	;RP1=1, select bank3
  6860     14E5  00C6               	movwf	_D7^(0+384)	;volatile
  6861     14E6  1283               	bcf	3,5	;RP0=0, select bank0
  6862     14E7  1303               	bcf	3,6	;RP1=0, select bank0
  6863     14E8  082B               	movf	??_lcd_init+1,w
  6864     14E9  1683               	bsf	3,5	;RP0=1, select bank3
  6865     14EA  1703               	bsf	3,6	;RP1=1, select bank3
  6866     14EB  00C7               	movwf	(_D7+1)^(0+384)	;volatile
  6867                           
  6868                           ;bibliotec_lcd.c: 60:     _delay((unsigned long)((50)*(4000000/4000.0)));
  6869     14EC  3041               	movlw	65
  6870     14ED  1283               	bcf	3,5	;RP0=0, select bank0
  6871     14EE  1303               	bcf	3,6	;RP1=0, select bank0
  6872     14EF  00AB               	movwf	??_lcd_init+1
  6873     14F0  30ED               	movlw	237
  6874     14F1  00AA               	movwf	??_lcd_init
  6875     14F2                     u8777:
  6876     14F2  0BAA               	decfsz	??_lcd_init,f
  6877     14F3  2CF2               	goto	u8777
  6878     14F4  0BAB               	decfsz	??_lcd_init+1,f
  6879     14F5  2CF2               	goto	u8777
  6880     14F6  2CF7               	nop2
  6881                           
  6882                           ;bibliotec_lcd.c: 61:     nibble(0x2);
  6883     14F7  3002               	movlw	2
  6884     14F8  1283               	bcf	3,5	;RP0=0, select bank0
  6885     14F9  1303               	bcf	3,6	;RP1=0, select bank0
  6886     14FA  00A0               	movwf	nibble@dado
  6887     14FB  3000               	movlw	0
  6888     14FC  00A1               	movwf	nibble@dado+1
  6889     14FD  160A  118A  20CE  160A  118A  	fcall	_nibble
  6890                           
  6891                           ;bibliotec_lcd.c: 62:     enable();
  6892     1502  160A  158A  25C8  160A  118A  	fcall	_enable
  6893                           
  6894                           ;bibliotec_lcd.c: 64:     byte(0, 0x28);
  6895     1507  3000               	movlw	0
  6896     1508  1283               	bcf	3,5	;RP0=0, select bank0
  6897     1509  1303               	bcf	3,6	;RP1=0, select bank0
  6898     150A  00A4               	movwf	byte@escreve
  6899     150B  00A5               	movwf	byte@escreve+1
  6900     150C  3028               	movlw	40
  6901     150D  00A6               	movwf	byte@dado
  6902     150E  120A  158A  2003  160A  118A  	fcall	_byte
  6903                           
  6904                           ;bibliotec_lcd.c: 65:     byte(0, 0x0C);
  6905     1513  3000               	movlw	0
  6906     1514  1283               	bcf	3,5	;RP0=0, select bank0
  6907     1515  1303               	bcf	3,6	;RP1=0, select bank0
  6908     1516  00A4               	movwf	byte@escreve
  6909     1517  00A5               	movwf	byte@escreve+1
  6910     1518  300C               	movlw	12
  6911     1519  00A6               	movwf	byte@dado
  6912     151A  120A  158A  2003  160A  118A  	fcall	_byte
  6913                           
  6914                           ;bibliotec_lcd.c: 66:     byte(0, 0x06);
  6915     151F  3000               	movlw	0
  6916     1520  1283               	bcf	3,5	;RP0=0, select bank0
  6917     1521  1303               	bcf	3,6	;RP1=0, select bank0
  6918     1522  00A4               	movwf	byte@escreve
  6919     1523  00A5               	movwf	byte@escreve+1
  6920     1524  3006               	movlw	6
  6921     1525  00A6               	movwf	byte@dado
  6922     1526  120A  158A  2003  160A  118A  	fcall	_byte
  6923                           
  6924                           ;bibliotec_lcd.c: 67:     byte(0, 0x01);
  6925     152B  3000               	movlw	0
  6926     152C  1283               	bcf	3,5	;RP0=0, select bank0
  6927     152D  1303               	bcf	3,6	;RP1=0, select bank0
  6928     152E  00A4               	movwf	byte@escreve
  6929     152F  00A5               	movwf	byte@escreve+1
  6930     1530  01A6               	clrf	byte@dado
  6931     1531  0AA6               	incf	byte@dado,f
  6932     1532  120A  158A  2003  160A  118A  	fcall	_byte
  6933                           
  6934                           ;bibliotec_lcd.c: 69:     _delay((unsigned long)((5)*(4000000/4000.0)));
  6935     1537  3007               	movlw	7
  6936     1538  1283               	bcf	3,5	;RP0=0, select bank0
  6937     1539  1303               	bcf	3,6	;RP1=0, select bank0
  6938     153A  00AB               	movwf	??_lcd_init+1
  6939     153B  307C               	movlw	124
  6940     153C  00AA               	movwf	??_lcd_init
  6941     153D                     u8787:
  6942     153D  0BAA               	decfsz	??_lcd_init,f
  6943     153E  2D3D               	goto	u8787
  6944     153F  0BAB               	decfsz	??_lcd_init+1,f
  6945     1540  2D3D               	goto	u8787
  6946     1541  0000               	nop
  6947     1542  0008               	return
  6948     1543                     __end_of_lcd_init:
  6949                           
  6950                           	psect	text21
  6951     0803                     __ptext21:	
  6952 ;; *************** function _byte *****************
  6953 ;; Defined at:
  6954 ;;		line 37 in file "bibliotec_lcd.c"
  6955 ;; Parameters:    Size  Location     Type
  6956 ;;  escreve         2    4[BANK0 ] int 
  6957 ;;  dado            1    6[BANK0 ] unsigned char 
  6958 ;; Auto vars:     Size  Location     Type
  6959 ;;		None
  6960 ;; Return value:  Size  Location     Type
  6961 ;;                  1    wreg      void 
  6962 ;; Registers used:
  6963 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6964 ;; Tracked objects:
  6965 ;;		On entry : 300/800
  6966 ;;		On exit  : 0/0
  6967 ;;		Unchanged: 0/0
  6968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6969 ;;      Params:         0       3       0       0       0
  6970 ;;      Locals:         0       0       0       0       0
  6971 ;;      Temps:          0       3       0       0       0
  6972 ;;      Totals:         0       6       0       0       0
  6973 ;;Total ram usage:        6 bytes
  6974 ;; Hardware stack levels used: 1
  6975 ;; Hardware stack levels required when called: 3
  6976 ;; This function calls:
  6977 ;;		_enable
  6978 ;;		_muda_pin
  6979 ;;		_nibble
  6980 ;; This function is called by:
  6981 ;;		_lcd_init
  6982 ;; This function uses a non-reentrant model
  6983 ;;
  6984                           
  6985     0803                     _byte:	
  6986                           ;psect for function _byte
  6987                           
  6988                           
  6989                           ;bibliotec_lcd.c: 37: void byte (int escreve, char dado);bibliotec_lcd.c: 38: {;bibliote
      +                          c_lcd.c: 39:     muda_pin(port_rs, RS, escreve & 0x01);
  6990                           
  6991                           ;incstack = 0
  6992                           ; Regs used in _byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6993     0803  1683               	bsf	3,5	;RP0=1, select bank3
  6994     0804  1703               	bsf	3,6	;RP1=1, select bank3
  6995     0805  0844               	movf	_port_rs^(0+384),w
  6996     0806  00F2               	movwf	muda_pin@_port
  6997     0807  0845               	movf	(_port_rs+1)^(0+384),w
  6998     0808  00F3               	movwf	muda_pin@_port+1
  6999     0809  1303               	bcf	3,6	;RP1=0, select bank1
  7000     080A  084C               	movf	(_RS+1)^(0+128),w	;volatile
  7001     080B  00F5               	movwf	muda_pin@_pin+1
  7002     080C  084B               	movf	_RS^(0+128),w	;volatile
  7003     080D  00F4               	movwf	muda_pin@_pin
  7004     080E  3001               	movlw	1
  7005     080F  1283               	bcf	3,5	;RP0=0, select bank0
  7006     0810  0524               	andwf	byte@escreve,w
  7007     0811  00F6               	movwf	muda_pin@_val
  7008     0812  3000               	movlw	0
  7009     0813  0525               	andwf	byte@escreve+1,w
  7010     0814  00F7               	movwf	muda_pin@_val+1
  7011     0815  160A  158A  259D  120A  158A  	fcall	_muda_pin
  7012                           
  7013                           ;bibliotec_lcd.c: 41:     nibble(dado >> 4);
  7014     081A  1283               	bcf	3,5	;RP0=0, select bank0
  7015     081B  1303               	bcf	3,6	;RP1=0, select bank0
  7016     081C  0826               	movf	byte@dado,w
  7017     081D  00A7               	movwf	??_byte
  7018     081E  3004               	movlw	4
  7019     081F                     u6995:
  7020     081F  1003               	clrc
  7021     0820  0CA7               	rrf	??_byte,f
  7022     0821  3EFF               	addlw	-1
  7023     0822  1D03               	skipz
  7024     0823  281F               	goto	u6995
  7025     0824  0827               	movf	??_byte,w
  7026     0825  00A8               	movwf	??_byte+1
  7027     0826  01A9               	clrf	??_byte+2
  7028     0827  0828               	movf	??_byte+1,w
  7029     0828  00A0               	movwf	nibble@dado
  7030     0829  0829               	movf	??_byte+2,w
  7031     082A  00A1               	movwf	nibble@dado+1
  7032     082B  160A  118A  20CE  120A  158A  	fcall	_nibble
  7033                           
  7034                           ;bibliotec_lcd.c: 42:     enable();
  7035     0830  160A  158A  25C8  120A  158A  	fcall	_enable
  7036                           
  7037                           ;bibliotec_lcd.c: 43:     nibble(dado & 0x0F);
  7038     0835  1283               	bcf	3,5	;RP0=0, select bank0
  7039     0836  1303               	bcf	3,6	;RP1=0, select bank0
  7040     0837  0826               	movf	byte@dado,w
  7041     0838  390F               	andlw	15
  7042     0839  00A7               	movwf	??_byte
  7043     083A  01A8               	clrf	??_byte+1
  7044     083B  0827               	movf	??_byte,w
  7045     083C  00A0               	movwf	nibble@dado
  7046     083D  0828               	movf	??_byte+1,w
  7047     083E  00A1               	movwf	nibble@dado+1
  7048     083F  160A  118A  20CE  120A  158A  	fcall	_nibble
  7049                           
  7050                           ;bibliotec_lcd.c: 44:     enable();
  7051     0844  160A  158A  25C8   	fcall	_enable
  7052     0847  0008               	return
  7053     0848                     __end_of_byte:
  7054                           
  7055                           	psect	text22
  7056     10CE                     __ptext22:	
  7057 ;; *************** function _nibble *****************
  7058 ;; Defined at:
  7059 ;;		line 28 in file "bibliotec_lcd.c"
  7060 ;; Parameters:    Size  Location     Type
  7061 ;;  dado            2    0[BANK0 ] int 
  7062 ;; Auto vars:     Size  Location     Type
  7063 ;;		None
  7064 ;; Return value:  Size  Location     Type
  7065 ;;                  1    wreg      void 
  7066 ;; Registers used:
  7067 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7068 ;; Tracked objects:
  7069 ;;		On entry : 300/800
  7070 ;;		On exit  : 0/0
  7071 ;;		Unchanged: 0/0
  7072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7073 ;;      Params:         0       2       0       0       0
  7074 ;;      Locals:         0       0       0       0       0
  7075 ;;      Temps:          0       2       0       0       0
  7076 ;;      Totals:         0       4       0       0       0
  7077 ;;Total ram usage:        4 bytes
  7078 ;; Hardware stack levels used: 1
  7079 ;; Hardware stack levels required when called: 2
  7080 ;; This function calls:
  7081 ;;		_muda_pin
  7082 ;; This function is called by:
  7083 ;;		_byte
  7084 ;;		_lcd_init
  7085 ;; This function uses a non-reentrant model
  7086 ;;
  7087                           
  7088     10CE                     _nibble:	
  7089                           ;psect for function _nibble
  7090                           
  7091                           
  7092                           ;bibliotec_lcd.c: 28: void nibble(int dado);bibliotec_lcd.c: 29: {;bibliotec_lcd.c: 30: 
      +                              muda_pin(port_data, D4, dado & 0x01);
  7093                           
  7094                           ;incstack = 0
  7095                           ; Regs used in _nibble: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7096     10CE  1683               	bsf	3,5	;RP0=1, select bank1
  7097     10CF  0847               	movf	_port_data^(0+128),w
  7098     10D0  00F2               	movwf	muda_pin@_port
  7099     10D1  0848               	movf	(_port_data+1)^(0+128),w
  7100     10D2  00F3               	movwf	muda_pin@_port+1
  7101     10D3  084A               	movf	(_D4+1)^(0+128),w	;volatile
  7102     10D4  00F5               	movwf	muda_pin@_pin+1
  7103     10D5  0849               	movf	_D4^(0+128),w	;volatile
  7104     10D6  00F4               	movwf	muda_pin@_pin
  7105     10D7  3001               	movlw	1
  7106     10D8  1283               	bcf	3,5	;RP0=0, select bank0
  7107     10D9  0520               	andwf	nibble@dado,w
  7108     10DA  00F6               	movwf	muda_pin@_val
  7109     10DB  3000               	movlw	0
  7110     10DC  0521               	andwf	nibble@dado+1,w
  7111     10DD  00F7               	movwf	muda_pin@_val+1
  7112     10DE  160A  158A  259D  160A  118A  	fcall	_muda_pin
  7113                           
  7114                           ;bibliotec_lcd.c: 31:     muda_pin(port_data, D5, dado >> 1 & 0x01);
  7115     10E3  1683               	bsf	3,5	;RP0=1, select bank1
  7116     10E4  1303               	bcf	3,6	;RP1=0, select bank1
  7117     10E5  0847               	movf	_port_data^(0+128),w
  7118     10E6  00F2               	movwf	muda_pin@_port
  7119     10E7  0848               	movf	(_port_data+1)^(0+128),w
  7120     10E8  00F3               	movwf	muda_pin@_port+1
  7121     10E9  1703               	bsf	3,6	;RP1=1, select bank3
  7122     10EA  084B               	movf	(_D5+1)^(0+384),w	;volatile
  7123     10EB  00F5               	movwf	muda_pin@_pin+1
  7124     10EC  084A               	movf	_D5^(0+384),w	;volatile
  7125     10ED  00F4               	movwf	muda_pin@_pin
  7126     10EE  1283               	bcf	3,5	;RP0=0, select bank0
  7127     10EF  1303               	bcf	3,6	;RP1=0, select bank0
  7128     10F0  0821               	movf	nibble@dado+1,w
  7129     10F1  00A3               	movwf	??_nibble+1
  7130     10F2  0820               	movf	nibble@dado,w
  7131     10F3  00A2               	movwf	??_nibble
  7132     10F4  0D23               	rlf	??_nibble+1,w
  7133     10F5  0CA3               	rrf	??_nibble+1,f
  7134     10F6  0CA2               	rrf	??_nibble,f
  7135     10F7  3001               	movlw	1
  7136     10F8  0522               	andwf	??_nibble,w
  7137     10F9  00F6               	movwf	muda_pin@_val
  7138     10FA  3000               	movlw	0
  7139     10FB  0523               	andwf	??_nibble+1,w
  7140     10FC  00F7               	movwf	muda_pin@_val+1
  7141     10FD  160A  158A  259D  160A  118A  	fcall	_muda_pin
  7142                           
  7143                           ;bibliotec_lcd.c: 32:     muda_pin(port_data, D6, dado >> 2 & 0x01);
  7144     1102  1683               	bsf	3,5	;RP0=1, select bank1
  7145     1103  1303               	bcf	3,6	;RP1=0, select bank1
  7146     1104  0847               	movf	_port_data^(0+128),w
  7147     1105  00F2               	movwf	muda_pin@_port
  7148     1106  0848               	movf	(_port_data+1)^(0+128),w
  7149     1107  00F3               	movwf	muda_pin@_port+1
  7150     1108  1703               	bsf	3,6	;RP1=1, select bank3
  7151     1109  0849               	movf	(_D6+1)^(0+384),w	;volatile
  7152     110A  00F5               	movwf	muda_pin@_pin+1
  7153     110B  0848               	movf	_D6^(0+384),w	;volatile
  7154     110C  00F4               	movwf	muda_pin@_pin
  7155     110D  1283               	bcf	3,5	;RP0=0, select bank0
  7156     110E  1303               	bcf	3,6	;RP1=0, select bank0
  7157     110F  0821               	movf	nibble@dado+1,w
  7158     1110  00A3               	movwf	??_nibble+1
  7159     1111  0820               	movf	nibble@dado,w
  7160     1112  00A2               	movwf	??_nibble
  7161     1113  0D23               	rlf	??_nibble+1,w
  7162     1114  0CA3               	rrf	??_nibble+1,f
  7163     1115  0CA2               	rrf	??_nibble,f
  7164     1116  0D23               	rlf	??_nibble+1,w
  7165     1117  0CA3               	rrf	??_nibble+1,f
  7166     1118  0CA2               	rrf	??_nibble,f
  7167     1119  3001               	movlw	1
  7168     111A  0522               	andwf	??_nibble,w
  7169     111B  00F6               	movwf	muda_pin@_val
  7170     111C  3000               	movlw	0
  7171     111D  0523               	andwf	??_nibble+1,w
  7172     111E  00F7               	movwf	muda_pin@_val+1
  7173     111F  160A  158A  259D  160A  118A  	fcall	_muda_pin
  7174                           
  7175                           ;bibliotec_lcd.c: 33:     muda_pin(port_data, D7, dado >> 3 & 0x01);
  7176     1124  1683               	bsf	3,5	;RP0=1, select bank1
  7177     1125  1303               	bcf	3,6	;RP1=0, select bank1
  7178     1126  0847               	movf	_port_data^(0+128),w
  7179     1127  00F2               	movwf	muda_pin@_port
  7180     1128  0848               	movf	(_port_data+1)^(0+128),w
  7181     1129  00F3               	movwf	muda_pin@_port+1
  7182     112A  1703               	bsf	3,6	;RP1=1, select bank3
  7183     112B  0847               	movf	(_D7+1)^(0+384),w	;volatile
  7184     112C  00F5               	movwf	muda_pin@_pin+1
  7185     112D  0846               	movf	_D7^(0+384),w	;volatile
  7186     112E  00F4               	movwf	muda_pin@_pin
  7187     112F  1283               	bcf	3,5	;RP0=0, select bank0
  7188     1130  1303               	bcf	3,6	;RP1=0, select bank0
  7189     1131  0821               	movf	nibble@dado+1,w
  7190     1132  00A3               	movwf	??_nibble+1
  7191     1133  0820               	movf	nibble@dado,w
  7192     1134  00A2               	movwf	??_nibble
  7193     1135  0D23               	rlf	??_nibble+1,w
  7194     1136  0CA3               	rrf	??_nibble+1,f
  7195     1137  0CA2               	rrf	??_nibble,f
  7196     1138  0D23               	rlf	??_nibble+1,w
  7197     1139  0CA3               	rrf	??_nibble+1,f
  7198     113A  0CA2               	rrf	??_nibble,f
  7199     113B  0D23               	rlf	??_nibble+1,w
  7200     113C  0CA3               	rrf	??_nibble+1,f
  7201     113D  0CA2               	rrf	??_nibble,f
  7202     113E  3001               	movlw	1
  7203     113F  0522               	andwf	??_nibble,w
  7204     1140  00F6               	movwf	muda_pin@_val
  7205     1141  3000               	movlw	0
  7206     1142  0523               	andwf	??_nibble+1,w
  7207     1143  00F7               	movwf	muda_pin@_val+1
  7208     1144  160A  158A  259D   	fcall	_muda_pin
  7209     1147  0008               	return
  7210     1148                     __end_of_nibble:
  7211                           
  7212                           	psect	text23
  7213     1DC8                     __ptext23:	
  7214 ;; *************** function _enable *****************
  7215 ;; Defined at:
  7216 ;;		line 20 in file "bibliotec_lcd.c"
  7217 ;; Parameters:    Size  Location     Type
  7218 ;;		None
  7219 ;; Auto vars:     Size  Location     Type
  7220 ;;		None
  7221 ;; Return value:  Size  Location     Type
  7222 ;;                  1    wreg      void 
  7223 ;; Registers used:
  7224 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7225 ;; Tracked objects:
  7226 ;;		On entry : 0/B00
  7227 ;;		On exit  : 0/0
  7228 ;;		Unchanged: 0/0
  7229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7230 ;;      Params:         0       0       0       0       0
  7231 ;;      Locals:         0       0       0       0       0
  7232 ;;      Temps:          0       2       0       0       0
  7233 ;;      Totals:         0       2       0       0       0
  7234 ;;Total ram usage:        2 bytes
  7235 ;; Hardware stack levels used: 1
  7236 ;; Hardware stack levels required when called: 2
  7237 ;; This function calls:
  7238 ;;		_muda_pin
  7239 ;; This function is called by:
  7240 ;;		_byte
  7241 ;;		_lcd_init
  7242 ;; This function uses a non-reentrant model
  7243 ;;
  7244                           
  7245     1DC8                     _enable:	
  7246                           ;psect for function _enable
  7247                           
  7248                           
  7249                           ;bibliotec_lcd.c: 22:     muda_pin(port_en, EN, 1);
  7250                           
  7251                           ;incstack = 0
  7252                           ; Regs used in _enable: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7253     1DC8  1683               	bsf	3,5	;RP0=1, select bank3
  7254     1DC9  1703               	bsf	3,6	;RP1=1, select bank3
  7255     1DCA  0842               	movf	_port_en^(0+384),w
  7256     1DCB  00F2               	movwf	muda_pin@_port
  7257     1DCC  0843               	movf	(_port_en+1)^(0+384),w
  7258     1DCD  00F3               	movwf	muda_pin@_port+1
  7259     1DCE  087B               	movf	_EN+1,w	;volatile
  7260     1DCF  00F5               	movwf	muda_pin@_pin+1
  7261     1DD0  087A               	movf	_EN,w	;volatile
  7262     1DD1  00F4               	movwf	muda_pin@_pin
  7263     1DD2  3001               	movlw	1
  7264     1DD3  00F6               	movwf	muda_pin@_val
  7265     1DD4  3000               	movlw	0
  7266     1DD5  00F7               	movwf	muda_pin@_val+1
  7267     1DD6  160A  158A  259D  160A  158A  	fcall	_muda_pin
  7268                           
  7269                           ;bibliotec_lcd.c: 23:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7270     1DDB  3007               	movlw	7
  7271     1DDC  1283               	bcf	3,5	;RP0=0, select bank0
  7272     1DDD  1303               	bcf	3,6	;RP1=0, select bank0
  7273     1DDE  00A1               	movwf	??_enable+1
  7274     1DDF  307C               	movlw	124
  7275     1DE0  00A0               	movwf	??_enable
  7276     1DE1                     u8797:
  7277     1DE1  0BA0               	decfsz	??_enable,f
  7278     1DE2  2DE1               	goto	u8797
  7279     1DE3  0BA1               	decfsz	??_enable+1,f
  7280     1DE4  2DE1               	goto	u8797
  7281     1DE5  0000               	nop
  7282                           
  7283                           ;bibliotec_lcd.c: 24:     muda_pin(port_en, EN, 0);
  7284     1DE6  1683               	bsf	3,5	;RP0=1, select bank3
  7285     1DE7  1703               	bsf	3,6	;RP1=1, select bank3
  7286     1DE8  0842               	movf	_port_en^(0+384),w
  7287     1DE9  00F2               	movwf	muda_pin@_port
  7288     1DEA  0843               	movf	(_port_en+1)^(0+384),w
  7289     1DEB  00F3               	movwf	muda_pin@_port+1
  7290     1DEC  087B               	movf	_EN+1,w	;volatile
  7291     1DED  00F5               	movwf	muda_pin@_pin+1
  7292     1DEE  087A               	movf	_EN,w	;volatile
  7293     1DEF  00F4               	movwf	muda_pin@_pin
  7294     1DF0  3000               	movlw	0
  7295     1DF1  00F6               	movwf	muda_pin@_val
  7296     1DF2  00F7               	movwf	muda_pin@_val+1
  7297     1DF3  160A  158A  259D  160A  158A  	fcall	_muda_pin
  7298                           
  7299                           ;bibliotec_lcd.c: 25:     _delay((unsigned long)((1)*(4000000/4000.0)));
  7300     1DF8  30C7               	movlw	199
  7301     1DF9  1283               	bcf	3,5	;RP0=0, select bank0
  7302     1DFA  1303               	bcf	3,6	;RP1=0, select bank0
  7303     1DFB  00A0               	movwf	??_enable
  7304     1DFC                     u8807:
  7305     1DFC  2DFD               	nop2
  7306     1DFD  0BA0               	decfsz	??_enable,f
  7307     1DFE  2DFC               	goto	u8807
  7308     1DFF  2E00               	nop2
  7309     1E00  0008               	return
  7310     1E01                     __end_of_enable:
  7311                           
  7312                           	psect	text24
  7313     1D9D                     __ptext24:	
  7314 ;; *************** function _muda_pin *****************
  7315 ;; Defined at:
  7316 ;;		line 7 in file "bibliotec_lcd.c"
  7317 ;; Parameters:    Size  Location     Type
  7318 ;;  _port           2    2[COMMON] PTR volatile unsigned ch
  7319 ;;		 -> NULL(0), PORTB(1), 
  7320 ;;  _pin            2    4[COMMON] int 
  7321 ;;  _val            2    6[COMMON] int 
  7322 ;; Auto vars:     Size  Location     Type
  7323 ;;		None
  7324 ;; Return value:  Size  Location     Type
  7325 ;;                  1    wreg      void 
  7326 ;; Registers used:
  7327 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  7328 ;; Tracked objects:
  7329 ;;		On entry : 0/800
  7330 ;;		On exit  : 0/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7333 ;;      Params:         6       0       0       0       0
  7334 ;;      Locals:         0       0       0       0       0
  7335 ;;      Temps:          1       0       0       0       0
  7336 ;;      Totals:         7       0       0       0       0
  7337 ;;Total ram usage:        7 bytes
  7338 ;; Hardware stack levels used: 1
  7339 ;; Hardware stack levels required when called: 1
  7340 ;; This function calls:
  7341 ;;		Nothing
  7342 ;; This function is called by:
  7343 ;;		_enable
  7344 ;;		_nibble
  7345 ;;		_byte
  7346 ;; This function uses a non-reentrant model
  7347 ;;
  7348                           
  7349     1D9D                     _muda_pin:	
  7350                           ;psect for function _muda_pin
  7351                           
  7352                           
  7353                           ;bibliotec_lcd.c: 7: void muda_pin(volatile unsigned char *_port, int _pin, int _val);bi
      +                          bliotec_lcd.c: 8: {;bibliotec_lcd.c: 9:     if(_val == 1)
  7354                           
  7355                           ;incstack = 0
  7356                           ; Regs used in _muda_pin: [wreg-fsr0h+status,2+status,0+btemp+1]
  7357     1D9D  0376               	decf	muda_pin@_val,w
  7358     1D9E  0477               	iorwf	muda_pin@_val+1,w
  7359     1D9F  1D03               	btfss	3,2
  7360     1DA0  2DB4               	goto	l3736
  7361                           
  7362                           ;bibliotec_lcd.c: 10:     {;bibliotec_lcd.c: 11:         *_port |= 1 << _pin;
  7363     1DA1  3001               	movlw	1
  7364     1DA2  00F8               	movwf	??_muda_pin
  7365     1DA3  0A74               	incf	muda_pin@_pin,w
  7366     1DA4  2DA7               	goto	u5864
  7367     1DA5                     u5865:
  7368     1DA5  1003               	clrc
  7369     1DA6  0DF8               	rlf	??_muda_pin,f
  7370     1DA7                     u5864:
  7371     1DA7  3EFF               	addlw	-1
  7372     1DA8  1D03               	skipz
  7373     1DA9  2DA5               	goto	u5865
  7374     1DAA  0878               	movf	??_muda_pin,w
  7375     1DAB  00FF               	movwf	127
  7376     1DAC  0872               	movf	muda_pin@_port,w
  7377     1DAD  0084               	movwf	4
  7378     1DAE  1783               	bsf	3,7
  7379     1DAF  1C73               	btfss	muda_pin@_port+1,0
  7380     1DB0  1383               	bcf	3,7
  7381     1DB1  087F               	movf	127,w
  7382     1DB2  0480               	iorwf	0,f
  7383                           
  7384                           ;bibliotec_lcd.c: 12:     }
  7385     1DB3  0008               	return
  7386     1DB4                     l3736:
  7387                           
  7388                           ;bibliotec_lcd.c: 14:     {;bibliotec_lcd.c: 15:         *_port &= ~(1 << _pin);
  7389     1DB4  3001               	movlw	1
  7390     1DB5  00F8               	movwf	??_muda_pin
  7391     1DB6  0A74               	incf	muda_pin@_pin,w
  7392     1DB7  2DBA               	goto	u5874
  7393     1DB8                     u5875:
  7394     1DB8  1003               	clrc
  7395     1DB9  0DF8               	rlf	??_muda_pin,f
  7396     1DBA                     u5874:
  7397     1DBA  3EFF               	addlw	-1
  7398     1DBB  1D03               	skipz
  7399     1DBC  2DB8               	goto	u5875
  7400     1DBD  0878               	movf	??_muda_pin,w
  7401     1DBE  3AFF               	xorlw	255
  7402     1DBF  00FF               	movwf	127
  7403     1DC0  0872               	movf	muda_pin@_port,w
  7404     1DC1  0084               	movwf	4
  7405     1DC2  1783               	bsf	3,7
  7406     1DC3  1C73               	btfss	muda_pin@_port+1,0
  7407     1DC4  1383               	bcf	3,7
  7408     1DC5  087F               	movf	127,w
  7409     1DC6  0580               	andwf	0,f
  7410     1DC7  0008               	return
  7411     1DC8                     __end_of_muda_pin:
  7412                           
  7413                           	psect	text25
  7414     1D01                     __ptext25:	
  7415 ;; *************** function _controle_pwm *****************
  7416 ;; Defined at:
  7417 ;;		line 129 in file "controle.c"
  7418 ;; Parameters:    Size  Location     Type
  7419 ;;  ligado          1    wreg     unsigned char 
  7420 ;; Auto vars:     Size  Location     Type
  7421 ;;  ligado          1    2[COMMON] unsigned char 
  7422 ;; Return value:  Size  Location     Type
  7423 ;;                  1    wreg      void 
  7424 ;; Registers used:
  7425 ;;		wreg, status,2, status,0
  7426 ;; Tracked objects:
  7427 ;;		On entry : B00/900
  7428 ;;		On exit  : B00/900
  7429 ;;		Unchanged: 800/0
  7430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7431 ;;      Params:         0       0       0       0       0
  7432 ;;      Locals:         1       0       0       0       0
  7433 ;;      Temps:          0       0       0       0       0
  7434 ;;      Totals:         1       0       0       0       0
  7435 ;;Total ram usage:        1 bytes
  7436 ;; Hardware stack levels used: 1
  7437 ;; Hardware stack levels required when called: 1
  7438 ;; This function calls:
  7439 ;;		Nothing
  7440 ;; This function is called by:
  7441 ;;		_main
  7442 ;; This function uses a non-reentrant model
  7443 ;;
  7444                           
  7445     1D01                     _controle_pwm:	
  7446                           ;psect for function _controle_pwm
  7447                           
  7448                           
  7449                           ;incstack = 0
  7450                           ; Regs used in _controle_pwm: [wreg+status,2+status,0]
  7451                           ;controle_pwm@ligado stored from wreg
  7452     1D01  00F2               	movwf	controle_pwm@ligado
  7453                           
  7454                           ;controle.c: 129: void controle_pwm(char ligado);controle.c: 130: {;controle.c: 131:    
      +                           if(ligado)
  7455     1D02  0872               	movf	controle_pwm@ligado,w
  7456     1D03  1903               	btfsc	3,2
  7457     1D04  2D0E               	goto	l121
  7458                           
  7459                           ;controle.c: 132:     {;controle.c: 133:         CCP1CON = 0b00001100;
  7460     1D05  300C               	movlw	12
  7461     1D06  1283               	bcf	3,5	;RP0=0, select bank0
  7462     1D07  0097               	movwf	23	;volatile
  7463                           
  7464                           ;controle.c: 134:         TMR2 = 0;
  7465     1D08  0191               	clrf	17	;volatile
  7466                           
  7467                           ;controle.c: 135:         TRISC2 = 0;
  7468     1D09  1683               	bsf	3,5	;RP0=1, select bank1
  7469     1D0A  1107               	bcf	7,2	;volatile
  7470                           
  7471                           ;controle.c: 136:         pwm_enabled = 1;
  7472     1D0B  01CD               	clrf	_pwm_enabled^(0+128)
  7473     1D0C  0ACD               	incf	_pwm_enabled^(0+128),f
  7474                           
  7475                           ;controle.c: 137:     }
  7476     1D0D  0008               	return
  7477     1D0E                     l121:	
  7478                           ;controle.c: 138:     else
  7479                           
  7480                           
  7481                           ;controle.c: 139:     {;controle.c: 140:         TRISC2 = 1;
  7482     1D0E  1507               	bsf	7,2	;volatile
  7483                           
  7484                           ;controle.c: 141:         CCP1CON = 0b00000000;
  7485     1D0F  1283               	bcf	3,5	;RP0=0, select bank0
  7486     1D10  0197               	clrf	23	;volatile
  7487                           
  7488                           ;controle.c: 142:         pwm_enabled = 0;
  7489     1D11  1683               	bsf	3,5	;RP0=1, select bank1
  7490     1D12  01CD               	clrf	_pwm_enabled^(0+128)
  7491     1D13  0008               	return
  7492     1D14                     __end_of_controle_pwm:
  7493                           
  7494                           	psect	text26
  7495     1CE2                     __ptext26:	
  7496 ;; *************** function _UART_init *****************
  7497 ;; Defined at:
  7498 ;;		line 94 in file "controle.c"
  7499 ;; Parameters:    Size  Location     Type
  7500 ;;		None
  7501 ;; Auto vars:     Size  Location     Type
  7502 ;;		None
  7503 ;; Return value:  Size  Location     Type
  7504 ;;                  1    wreg      void 
  7505 ;; Registers used:
  7506 ;;		wreg
  7507 ;; Tracked objects:
  7508 ;;		On entry : B00/100
  7509 ;;		On exit  : B00/100
  7510 ;;		Unchanged: 800/0
  7511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7512 ;;      Params:         0       0       0       0       0
  7513 ;;      Locals:         0       0       0       0       0
  7514 ;;      Temps:          0       0       0       0       0
  7515 ;;      Totals:         0       0       0       0       0
  7516 ;;Total ram usage:        0 bytes
  7517 ;; Hardware stack levels used: 1
  7518 ;; Hardware stack levels required when called: 1
  7519 ;; This function calls:
  7520 ;;		Nothing
  7521 ;; This function is called by:
  7522 ;;		_main
  7523 ;; This function uses a non-reentrant model
  7524 ;;
  7525                           
  7526     1CE2                     _UART_init:	
  7527                           ;psect for function _UART_init
  7528                           
  7529                           
  7530                           ;controle.c: 96:     SPBRG = 25;
  7531                           
  7532                           ;incstack = 0
  7533                           ; Regs used in _UART_init: [wreg]
  7534     1CE2  3019               	movlw	25
  7535     1CE3  0099               	movwf	25	;volatile
  7536                           
  7537                           ;controle.c: 98:     TXSTAbits.TXEN = 1;
  7538     1CE4  1698               	bsf	24,5	;volatile
  7539                           
  7540                           ;controle.c: 99:     RCSTAbits.CREN = 1;
  7541     1CE5  1283               	bcf	3,5	;RP0=0, select bank0
  7542     1CE6  1618               	bsf	24,4	;volatile
  7543                           
  7544                           ;controle.c: 101:     TXSTAbits.SYNC = 0;
  7545     1CE7  1683               	bsf	3,5	;RP0=1, select bank1
  7546     1CE8  1218               	bcf	24,4	;volatile
  7547                           
  7548                           ;controle.c: 102:     TXSTAbits.BRGH = 1;
  7549     1CE9  1518               	bsf	24,2	;volatile
  7550                           
  7551                           ;controle.c: 103:     RCSTAbits.SPEN = 1;
  7552     1CEA  1283               	bcf	3,5	;RP0=0, select bank0
  7553     1CEB  1798               	bsf	24,7	;volatile
  7554                           
  7555                           ;controle.c: 104:     RCSTAbits.RX9 = 0;
  7556     1CEC  1318               	bcf	24,6	;volatile
  7557                           
  7558                           ;controle.c: 105:     TXSTAbits.TX9 = 0;
  7559     1CED  1683               	bsf	3,5	;RP0=1, select bank1
  7560     1CEE  1318               	bcf	24,6	;volatile
  7561     1CEF  0008               	return
  7562     1CF0                     __end_of_UART_init:
  7563                           
  7564                           	psect	text27
  7565     1CCA                     __ptext27:	
  7566 ;; *************** function _Timer0_init *****************
  7567 ;; Defined at:
  7568 ;;		line 81 in file "controle.c"
  7569 ;; Parameters:    Size  Location     Type
  7570 ;;		None
  7571 ;; Auto vars:     Size  Location     Type
  7572 ;;		None
  7573 ;; Return value:  Size  Location     Type
  7574 ;;                  1    wreg      void 
  7575 ;; Registers used:
  7576 ;;		wreg
  7577 ;; Tracked objects:
  7578 ;;		On entry : B00/100
  7579 ;;		On exit  : B00/0
  7580 ;;		Unchanged: 800/0
  7581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7582 ;;      Params:         0       0       0       0       0
  7583 ;;      Locals:         0       0       0       0       0
  7584 ;;      Temps:          0       0       0       0       0
  7585 ;;      Totals:         0       0       0       0       0
  7586 ;;Total ram usage:        0 bytes
  7587 ;; Hardware stack levels used: 1
  7588 ;; Hardware stack levels required when called: 1
  7589 ;; This function calls:
  7590 ;;		Nothing
  7591 ;; This function is called by:
  7592 ;;		_main
  7593 ;; This function uses a non-reentrant model
  7594 ;;
  7595                           
  7596     1CCA                     _Timer0_init:	
  7597                           ;psect for function _Timer0_init
  7598                           
  7599                           
  7600                           ;controle.c: 83:     PSA = 0;
  7601                           
  7602                           ;incstack = 0
  7603                           ; Regs used in _Timer0_init: [wreg]
  7604     1CCA  1181               	bcf	1,3	;volatile
  7605                           
  7606                           ;controle.c: 84:     PS2 = 0b1;
  7607     1CCB  1501               	bsf	1,2	;volatile
  7608                           
  7609                           ;controle.c: 85:     PS1 = 0b0;
  7610     1CCC  1081               	bcf	1,1	;volatile
  7611                           
  7612                           ;controle.c: 86:     PS0 = 0b1;
  7613     1CCD  1401               	bsf	1,0	;volatile
  7614                           
  7615                           ;controle.c: 87:     T0CS = 0;
  7616     1CCE  1281               	bcf	1,5	;volatile
  7617                           
  7618                           ;controle.c: 88:     T0IE = 1;
  7619     1CCF  168B               	bsf	11,5	;volatile
  7620                           
  7621                           ;controle.c: 89:     T0IF = 0;
  7622     1CD0  110B               	bcf	11,2	;volatile
  7623                           
  7624                           ;controle.c: 90:     TMR0 = 100;
  7625     1CD1  3064               	movlw	100
  7626     1CD2  1283               	bcf	3,5	;RP0=0, select bank0
  7627     1CD3  0081               	movwf	1	;volatile
  7628                           
  7629                           ;controle.c: 91:     GIE = 1;
  7630     1CD4  178B               	bsf	11,7	;volatile
  7631     1CD5  0008               	return
  7632     1CD6                     __end_of_Timer0_init:
  7633                           
  7634                           	psect	text28
  7635     1D28                     __ptext28:	
  7636 ;; *************** function _PWM_init *****************
  7637 ;; Defined at:
  7638 ;;		line 44 in file "controle.c"
  7639 ;; Parameters:    Size  Location     Type
  7640 ;;		None
  7641 ;; Auto vars:     Size  Location     Type
  7642 ;;		None
  7643 ;; Return value:  Size  Location     Type
  7644 ;;                  1    wreg      void 
  7645 ;; Registers used:
  7646 ;;		wreg
  7647 ;; Tracked objects:
  7648 ;;		On entry : B00/100
  7649 ;;		On exit  : B00/100
  7650 ;;		Unchanged: 800/0
  7651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7652 ;;      Params:         0       0       0       0       0
  7653 ;;      Locals:         0       0       0       0       0
  7654 ;;      Temps:          0       0       0       0       0
  7655 ;;      Totals:         0       0       0       0       0
  7656 ;;Total ram usage:        0 bytes
  7657 ;; Hardware stack levels used: 1
  7658 ;; Hardware stack levels required when called: 1
  7659 ;; This function calls:
  7660 ;;		Nothing
  7661 ;; This function is called by:
  7662 ;;		_main
  7663 ;; This function uses a non-reentrant model
  7664 ;;
  7665                           
  7666     1D28                     _PWM_init:	
  7667                           ;psect for function _PWM_init
  7668                           
  7669                           
  7670                           ;controle.c: 46:     TRISC2 = 1;
  7671                           
  7672                           ;incstack = 0
  7673                           ; Regs used in _PWM_init: [wreg]
  7674     1D28  1507               	bsf	7,2	;volatile
  7675                           
  7676                           ;controle.c: 47:     PR2 = 255;
  7677     1D29  30FF               	movlw	255
  7678     1D2A  0092               	movwf	18	;volatile
  7679                           
  7680                           ;controle.c: 48:     CCP1CON = 0b00001100;
  7681     1D2B  300C               	movlw	12
  7682     1D2C  1283               	bcf	3,5	;RP0=0, select bank0
  7683     1D2D  0097               	movwf	23	;volatile
  7684                           
  7685                           ;controle.c: 49:     CCPR1L = 100;
  7686     1D2E  3064               	movlw	100
  7687     1D2F  0095               	movwf	21	;volatile
  7688                           
  7689                           ;controle.c: 50:     TMR2IF = 0;
  7690     1D30  108C               	bcf	12,1	;volatile
  7691                           
  7692                           ;controle.c: 51:     T2CON = 0b00000010;
  7693     1D31  3002               	movlw	2
  7694     1D32  0092               	movwf	18	;volatile
  7695                           
  7696                           ;controle.c: 52:     T2CON = 0b00000110;
  7697     1D33  3006               	movlw	6
  7698     1D34  0092               	movwf	18	;volatile
  7699     1D35                     l91:	
  7700                           ;controle.c: 53:     while(!TMR2IF);
  7701                           
  7702     1D35  1C8C               	btfss	12,1	;volatile
  7703     1D36  2D35               	goto	l91
  7704                           
  7705                           ;controle.c: 54:     TRISC2 = 0;
  7706     1D37  1683               	bsf	3,5	;RP0=1, select bank1
  7707     1D38  1107               	bcf	7,2	;volatile
  7708                           
  7709                           ;controle.c: 55:     TMR2IF = 0;
  7710     1D39  1283               	bcf	3,5	;RP0=0, select bank0
  7711     1D3A  108C               	bcf	12,1	;volatile
  7712                           
  7713                           ;controle.c: 56:     pwm_enabled = 1;
  7714     1D3B  1683               	bsf	3,5	;RP0=1, select bank1
  7715     1D3C  01CD               	clrf	_pwm_enabled^(0+128)
  7716     1D3D  0ACD               	incf	_pwm_enabled^(0+128),f
  7717     1D3E  0008               	return
  7718     1D3F                     __end_of_PWM_init:
  7719                           
  7720                           	psect	text29
  7721     13C5                     __ptext29:	
  7722 ;; *************** function _LM35 *****************
  7723 ;; Defined at:
  7724 ;;		line 59 in file "controle.c"
  7725 ;; Parameters:    Size  Location     Type
  7726 ;;		None
  7727 ;; Auto vars:     Size  Location     Type
  7728 ;;  temperatura     4   10[BANK1 ] float 
  7729 ;;  adc_val         2   18[BANK1 ] unsigned int 
  7730 ;; Return value:  Size  Location     Type
  7731 ;;                  4    0[BANK1 ] float 
  7732 ;; Registers used:
  7733 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7734 ;; Tracked objects:
  7735 ;;		On entry : 0/100
  7736 ;;		On exit  : 300/100
  7737 ;;		Unchanged: 0/0
  7738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7739 ;;      Params:         0       0       4       0       0
  7740 ;;      Locals:         0       0      10       0       0
  7741 ;;      Temps:          0       0       6       0       0
  7742 ;;      Totals:         0       0      20       0       0
  7743 ;;Total ram usage:       20 bytes
  7744 ;; Hardware stack levels used: 1
  7745 ;; Hardware stack levels required when called: 3
  7746 ;; This function calls:
  7747 ;;		___fldiv
  7748 ;;		___flmul
  7749 ;;		___xxtofl
  7750 ;; This function is called by:
  7751 ;;		_main
  7752 ;; This function uses a non-reentrant model
  7753 ;;
  7754                           
  7755     13C5                     _LM35:	
  7756                           ;psect for function _LM35
  7757                           
  7758                           
  7759                           ;controle.c: 61:     unsigned int adc_val;;controle.c: 62:     float temperatura;;contro
      +                          le.c: 63:     ADON = 1;
  7760                           
  7761                           ;incstack = 0
  7762                           ; Regs used in _LM35: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7763     13C5  1283               	bcf	3,5	;RP0=0, select bank0
  7764     13C6  1303               	bcf	3,6	;RP1=0, select bank0
  7765     13C7  141F               	bsf	31,0	;volatile
  7766                           
  7767                           ;controle.c: 64:     ADFM = 0;
  7768     13C8  1683               	bsf	3,5	;RP0=1, select bank1
  7769     13C9  139F               	bcf	31,7	;volatile
  7770                           
  7771                           ;controle.c: 65:     ADCS1 = 0;
  7772     13CA  1283               	bcf	3,5	;RP0=0, select bank0
  7773     13CB  139F               	bcf	31,7	;volatile
  7774                           
  7775                           ;controle.c: 66:     ADCS0 = 1;
  7776     13CC  171F               	bsf	31,6	;volatile
  7777                           
  7778                           ;controle.c: 67:     CHS3 = 0;
  7779     13CD  129F               	bcf	31,5	;volatile
  7780                           
  7781                           ;controle.c: 68:     CHS2 = 0;
  7782     13CE  121F               	bcf	31,4	;volatile
  7783                           
  7784                           ;controle.c: 69:     CHS1 = 0;
  7785     13CF  119F               	bcf	31,3	;volatile
  7786                           
  7787                           ;controle.c: 70:     CHS0 = 0;
  7788     13D0  111F               	bcf	31,2	;volatile
  7789                           
  7790                           ;controle.c: 71:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  7791     13D1  3005               	movlw	5
  7792     13D2  1683               	bsf	3,5	;RP0=1, select bank1
  7793     13D3  1303               	bcf	3,6	;RP1=0, select bank1
  7794     13D4  00A4               	movwf	??_LM35^(0+128)
  7795     13D5                     u8817:
  7796     13D5  0BA4               	decfsz	??_LM35^(0+128),f
  7797     13D6  2BD5               	goto	u8817
  7798     13D7  2BD8               	nop2
  7799                           
  7800                           ;controle.c: 72:     GO_DONE = 1;
  7801     13D8  1283               	bcf	3,5	;RP0=0, select bank0
  7802     13D9  1303               	bcf	3,6	;RP1=0, select bank0
  7803     13DA  149F               	bsf	31,1	;volatile
  7804     13DB                     l97:	
  7805                           ;controle.c: 73:     while (GO_DONE);
  7806                           
  7807     13DB  189F               	btfsc	31,1	;volatile
  7808     13DC  2BDB               	goto	l97
  7809                           
  7810                           ;controle.c: 74:     adc_val = ADRESH;
  7811     13DD  081E               	movf	30,w	;volatile
  7812     13DE  1683               	bsf	3,5	;RP0=1, select bank1
  7813     13DF  00A4               	movwf	??_LM35^(0+128)
  7814     13E0  01A5               	clrf	(??_LM35^(0+128)+1)
  7815     13E1  0824               	movf	??_LM35^(0+128),w
  7816     13E2  00B2               	movwf	LM35@adc_val^(0+128)
  7817     13E3  0825               	movf	(??_LM35+1)^(0+128),w
  7818     13E4  00B3               	movwf	(LM35@adc_val+1)^(0+128)
  7819                           
  7820                           ;controle.c: 75:     adc_val = (adc_val << 8) | ADRESL;
  7821     13E5  081E               	movf	30,w	;volatile
  7822     13E6  00A4               	movwf	??_LM35^(0+128)
  7823     13E7  01A5               	clrf	(??_LM35^(0+128)+1)
  7824     13E8  0832               	movf	LM35@adc_val^(0+128),w
  7825     13E9  00A7               	movwf	((??_LM35+2)^(0+128)+1)
  7826     13EA  01A6               	clrf	(??_LM35+2)^(0+128)
  7827     13EB  0824               	movf	??_LM35^(0+128),w
  7828     13EC  0426               	iorwf	(??_LM35+2)^(0+128),w
  7829     13ED  00A8               	movwf	(??_LM35+4)^(0+128)
  7830     13EE  0825               	movf	(??_LM35+1)^(0+128),w
  7831     13EF  0427               	iorwf	(??_LM35+3)^(0+128),w
  7832     13F0  00A9               	movwf	(??_LM35+5)^(0+128)
  7833     13F1  0828               	movf	(??_LM35+4)^(0+128),w
  7834     13F2  00B2               	movwf	LM35@adc_val^(0+128)
  7835     13F3  0829               	movf	(??_LM35+5)^(0+128),w
  7836     13F4  00B3               	movwf	(LM35@adc_val+1)^(0+128)
  7837                           
  7838                           ;controle.c: 76:     temperatura = adc_val * 5.0f / 1023 * 1.543319f ;
  7839     13F5  3044               	movlw	68
  7840     13F6  1283               	bcf	3,5	;RP0=0, select bank0
  7841     13F7  00D6               	movwf	___fldiv@a+3
  7842     13F8  307F               	movlw	127
  7843     13F9  00D5               	movwf	___fldiv@a+2
  7844     13FA  30C0               	movlw	192
  7845     13FB  00D4               	movwf	___fldiv@a+1
  7846     13FC  3000               	movlw	0
  7847     13FD  00D3               	movwf	___fldiv@a
  7848     13FE  3040               	movlw	64
  7849     13FF  00BC               	movwf	___flmul@b+3
  7850     1400  30A0               	movlw	160
  7851     1401  00BB               	movwf	___flmul@b+2
  7852     1402  3000               	movlw	0
  7853     1403  00BA               	movwf	___flmul@b+1
  7854     1404  3000               	movlw	0
  7855     1405  00B9               	movwf	___flmul@b
  7856     1406  1683               	bsf	3,5	;RP0=1, select bank1
  7857     1407  0832               	movf	LM35@adc_val^(0+128),w
  7858     1408  00F2               	movwf	___xxtofl@val
  7859     1409  0833               	movf	(LM35@adc_val+1)^(0+128),w
  7860     140A  00F3               	movwf	___xxtofl@val+1
  7861     140B  01F4               	clrf	___xxtofl@val+2
  7862     140C  01F5               	clrf	___xxtofl@val+3
  7863     140D  3000               	movlw	0
  7864     140E  160A  118A  21DD  160A  118A  	fcall	___xxtofl
  7865     1413  0875               	movf	?___xxtofl+3,w
  7866     1414  00C0               	movwf	___flmul@a+3
  7867     1415  0874               	movf	?___xxtofl+2,w
  7868     1416  00BF               	movwf	___flmul@a+2
  7869     1417  0873               	movf	?___xxtofl+1,w
  7870     1418  00BE               	movwf	___flmul@a+1
  7871     1419  0872               	movf	?___xxtofl,w
  7872     141A  00BD               	movwf	___flmul@a
  7873     141B  120A  158A  21FF  160A  118A  	fcall	___flmul
  7874     1420  083C               	movf	?___flmul+3,w
  7875     1421  00DA               	movwf	___fldiv@b+3
  7876     1422  083B               	movf	?___flmul+2,w
  7877     1423  00D9               	movwf	___fldiv@b+2
  7878     1424  083A               	movf	?___flmul+1,w
  7879     1425  00D8               	movwf	___fldiv@b+1
  7880     1426  0839               	movf	?___flmul,w
  7881     1427  00D7               	movwf	___fldiv@b
  7882     1428  160A  118A  2669  160A  118A  	fcall	___fldiv
  7883     142D  0856               	movf	?___fldiv+3,w
  7884     142E  1683               	bsf	3,5	;RP0=1, select bank1
  7885     142F  00B1               	movwf	(_LM35$1054+3)^(0+128)
  7886     1430  1283               	bcf	3,5	;RP0=0, select bank0
  7887     1431  0855               	movf	?___fldiv+2,w
  7888     1432  1683               	bsf	3,5	;RP0=1, select bank1
  7889     1433  00B0               	movwf	(_LM35$1054+2)^(0+128)
  7890     1434  1283               	bcf	3,5	;RP0=0, select bank0
  7891     1435  0854               	movf	?___fldiv+1,w
  7892     1436  1683               	bsf	3,5	;RP0=1, select bank1
  7893     1437  00AF               	movwf	(_LM35$1054+1)^(0+128)
  7894     1438  1283               	bcf	3,5	;RP0=0, select bank0
  7895     1439  0853               	movf	?___fldiv,w
  7896     143A  1683               	bsf	3,5	;RP0=1, select bank1
  7897     143B  00AE               	movwf	_LM35$1054^(0+128)
  7898                           
  7899                           ;controle.c: 76:     temperatura = adc_val * 5.0f / 1023 * 1.543319f ;
  7900     143C  303F               	movlw	63
  7901     143D  1283               	bcf	3,5	;RP0=0, select bank0
  7902     143E  00BC               	movwf	___flmul@b+3
  7903     143F  30C5               	movlw	197
  7904     1440  00BB               	movwf	___flmul@b+2
  7905     1441  308B               	movlw	139
  7906     1442  00BA               	movwf	___flmul@b+1
  7907     1443  307A               	movlw	122
  7908     1444  00B9               	movwf	___flmul@b
  7909     1445  1683               	bsf	3,5	;RP0=1, select bank1
  7910     1446  0831               	movf	(_LM35$1054+3)^(0+128),w
  7911     1447  1283               	bcf	3,5	;RP0=0, select bank0
  7912     1448  00C0               	movwf	___flmul@a+3
  7913     1449  1683               	bsf	3,5	;RP0=1, select bank1
  7914     144A  0830               	movf	(_LM35$1054+2)^(0+128),w
  7915     144B  1283               	bcf	3,5	;RP0=0, select bank0
  7916     144C  00BF               	movwf	___flmul@a+2
  7917     144D  1683               	bsf	3,5	;RP0=1, select bank1
  7918     144E  082F               	movf	(_LM35$1054+1)^(0+128),w
  7919     144F  1283               	bcf	3,5	;RP0=0, select bank0
  7920     1450  00BE               	movwf	___flmul@a+1
  7921     1451  1683               	bsf	3,5	;RP0=1, select bank1
  7922     1452  082E               	movf	_LM35$1054^(0+128),w
  7923     1453  1283               	bcf	3,5	;RP0=0, select bank0
  7924     1454  00BD               	movwf	___flmul@a
  7925     1455  120A  158A  21FF   	fcall	___flmul
  7926     1458  083C               	movf	?___flmul+3,w
  7927     1459  1683               	bsf	3,5	;RP0=1, select bank1
  7928     145A  00AD               	movwf	(LM35@temperatura+3)^(0+128)
  7929     145B  1283               	bcf	3,5	;RP0=0, select bank0
  7930     145C  083B               	movf	?___flmul+2,w
  7931     145D  1683               	bsf	3,5	;RP0=1, select bank1
  7932     145E  00AC               	movwf	(LM35@temperatura+2)^(0+128)
  7933     145F  1283               	bcf	3,5	;RP0=0, select bank0
  7934     1460  083A               	movf	?___flmul+1,w
  7935     1461  1683               	bsf	3,5	;RP0=1, select bank1
  7936     1462  00AB               	movwf	(LM35@temperatura+1)^(0+128)
  7937     1463  1283               	bcf	3,5	;RP0=0, select bank0
  7938     1464  0839               	movf	?___flmul,w
  7939     1465  1683               	bsf	3,5	;RP0=1, select bank1
  7940     1466  00AA               	movwf	LM35@temperatura^(0+128)
  7941                           
  7942                           ;controle.c: 77:     ADON = 0;
  7943     1467  1283               	bcf	3,5	;RP0=0, select bank0
  7944     1468  101F               	bcf	31,0	;volatile
  7945                           
  7946                           ;controle.c: 78:     return temperatura;
  7947     1469  1683               	bsf	3,5	;RP0=1, select bank1
  7948     146A  082D               	movf	(LM35@temperatura+3)^(0+128),w
  7949     146B  00A3               	movwf	(?_LM35+3)^(0+128)
  7950     146C  082C               	movf	(LM35@temperatura+2)^(0+128),w
  7951     146D  00A2               	movwf	(?_LM35+2)^(0+128)
  7952     146E  082B               	movf	(LM35@temperatura+1)^(0+128),w
  7953     146F  00A1               	movwf	(?_LM35+1)^(0+128)
  7954     1470  082A               	movf	LM35@temperatura^(0+128),w
  7955     1471  00A0               	movwf	?_LM35^(0+128)
  7956     1472  0008               	return
  7957     1473                     __end_of_LM35:
  7958                           
  7959                           	psect	text30
  7960     11DD                     __ptext30:	
  7961 ;; *************** function ___xxtofl *****************
  7962 ;; Defined at:
  7963 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\xxtofl.c"
  7964 ;; Parameters:    Size  Location     Type
  7965 ;;  sign            1    wreg     unsigned char 
  7966 ;;  val             4    2[COMMON] long 
  7967 ;; Auto vars:     Size  Location     Type
  7968 ;;  sign            1    0[BANK0 ] unsigned char 
  7969 ;;  arg             4    2[BANK0 ] unsigned long 
  7970 ;;  exp             1    1[BANK0 ] unsigned char 
  7971 ;; Return value:  Size  Location     Type
  7972 ;;                  4    2[COMMON] unsigned char 
  7973 ;; Registers used:
  7974 ;;		wreg, status,2, status,0, btemp+1
  7975 ;; Tracked objects:
  7976 ;;		On entry : 300/100
  7977 ;;		On exit  : 300/0
  7978 ;;		Unchanged: 0/0
  7979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7980 ;;      Params:         4       0       0       0       0
  7981 ;;      Locals:         0       6       0       0       0
  7982 ;;      Temps:          4       0       0       0       0
  7983 ;;      Totals:         8       6       0       0       0
  7984 ;;Total ram usage:       14 bytes
  7985 ;; Hardware stack levels used: 1
  7986 ;; Hardware stack levels required when called: 1
  7987 ;; This function calls:
  7988 ;;		Nothing
  7989 ;; This function is called by:
  7990 ;;		_LM35
  7991 ;;		_sprintf
  7992 ;; This function uses a non-reentrant model
  7993 ;;
  7994                           
  7995     11DD                     ___xxtofl:	
  7996                           ;psect for function ___xxtofl
  7997                           
  7998                           
  7999                           ;incstack = 0
  8000                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  8001                           ;___xxtofl@sign stored from wreg
  8002     11DD  1283               	bcf	3,5	;RP0=0, select bank0
  8003     11DE  00A0               	movwf	___xxtofl@sign
  8004     11DF  0820               	movf	___xxtofl@sign,w
  8005     11E0  1D03               	btfss	3,2
  8006     11E1  1FF5               	btfss	___xxtofl@val+3,7
  8007     11E2  29F3               	goto	l4692
  8008     11E3  0972               	comf	___xxtofl@val,w
  8009     11E4  00A2               	movwf	___xxtofl@arg
  8010     11E5  0973               	comf	___xxtofl@val+1,w
  8011     11E6  00A3               	movwf	___xxtofl@arg+1
  8012     11E7  0974               	comf	___xxtofl@val+2,w
  8013     11E8  00A4               	movwf	___xxtofl@arg+2
  8014     11E9  0975               	comf	___xxtofl@val+3,w
  8015     11EA  00A5               	movwf	___xxtofl@arg+3
  8016     11EB  0AA2               	incf	___xxtofl@arg,f
  8017     11EC  1903               	skipnz
  8018     11ED  0AA3               	incf	___xxtofl@arg+1,f
  8019     11EE  1903               	skipnz
  8020     11EF  0AA4               	incf	___xxtofl@arg+2,f
  8021     11F0  1903               	skipnz
  8022     11F1  0AA5               	incf	___xxtofl@arg+3,f
  8023     11F2  29FB               	goto	l861
  8024     11F3                     l4692:
  8025     11F3  0875               	movf	___xxtofl@val+3,w
  8026     11F4  00A5               	movwf	___xxtofl@arg+3
  8027     11F5  0874               	movf	___xxtofl@val+2,w
  8028     11F6  00A4               	movwf	___xxtofl@arg+2
  8029     11F7  0873               	movf	___xxtofl@val+1,w
  8030     11F8  00A3               	movwf	___xxtofl@arg+1
  8031     11F9  0872               	movf	___xxtofl@val,w
  8032     11FA  00A2               	movwf	___xxtofl@arg
  8033     11FB                     l861:
  8034     11FB  0875               	movf	___xxtofl@val+3,w
  8035     11FC  0474               	iorwf	___xxtofl@val+2,w
  8036     11FD  0473               	iorwf	___xxtofl@val+1,w
  8037     11FE  0472               	iorwf	___xxtofl@val,w
  8038     11FF  1D03               	skipz
  8039     1200  2A0A               	goto	l4698
  8040     1201  3000               	movlw	0
  8041     1202  00F5               	movwf	?___xxtofl+3
  8042     1203  3000               	movlw	0
  8043     1204  00F4               	movwf	?___xxtofl+2
  8044     1205  3000               	movlw	0
  8045     1206  00F3               	movwf	?___xxtofl+1
  8046     1207  3000               	movlw	0
  8047     1208  00F2               	movwf	?___xxtofl
  8048     1209  0008               	return
  8049     120A                     l4698:
  8050     120A  3096               	movlw	150
  8051     120B  00A1               	movwf	___xxtofl@exp
  8052     120C                     l4704:
  8053     120C  30FE               	movlw	254
  8054     120D  0525               	andwf	___xxtofl@arg+3,w
  8055     120E  1903               	btfsc	3,2
  8056     120F  2A39               	goto	l4712
  8057     1210  3001               	movlw	1
  8058     1211  00FF               	movwf	127
  8059     1212  087F               	movf	127,w
  8060     1213  07A1               	addwf	___xxtofl@exp,f
  8061     1214  3001               	movlw	1
  8062     1215                     u8215:
  8063     1215  1003               	clrc
  8064     1216  0CA5               	rrf	___xxtofl@arg+3,f
  8065     1217  0CA4               	rrf	___xxtofl@arg+2,f
  8066     1218  0CA3               	rrf	___xxtofl@arg+1,f
  8067     1219  0CA2               	rrf	___xxtofl@arg,f
  8068     121A  3EFF               	addlw	-1
  8069     121B  1D03               	skipz
  8070     121C  2A15               	goto	u8215
  8071     121D  2A0C               	goto	l4704
  8072     121E                     l4706:
  8073     121E  3001               	movlw	1
  8074     121F  00FF               	movwf	127
  8075     1220  087F               	movf	127,w
  8076     1221  07A1               	addwf	___xxtofl@exp,f
  8077     1222  3001               	movlw	1
  8078     1223  07A2               	addwf	___xxtofl@arg,f
  8079     1224  3000               	movlw	0
  8080     1225  1803               	skipnc
  8081     1226  3001               	movlw	1
  8082     1227  07A3               	addwf	___xxtofl@arg+1,f
  8083     1228  3000               	movlw	0
  8084     1229  1803               	skipnc
  8085     122A  3001               	movlw	1
  8086     122B  07A4               	addwf	___xxtofl@arg+2,f
  8087     122C  3000               	movlw	0
  8088     122D  1803               	skipnc
  8089     122E  3001               	movlw	1
  8090     122F  07A5               	addwf	___xxtofl@arg+3,f
  8091     1230  3001               	movlw	1
  8092     1231                     u8235:
  8093     1231  1003               	clrc
  8094     1232  0CA5               	rrf	___xxtofl@arg+3,f
  8095     1233  0CA4               	rrf	___xxtofl@arg+2,f
  8096     1234  0CA3               	rrf	___xxtofl@arg+1,f
  8097     1235  0CA2               	rrf	___xxtofl@arg,f
  8098     1236  3EFF               	addlw	-1
  8099     1237  1D03               	skipz
  8100     1238  2A31               	goto	u8235
  8101     1239                     l4712:
  8102     1239  30FF               	movlw	255
  8103     123A  0525               	andwf	___xxtofl@arg+3,w
  8104     123B  1903               	btfsc	3,2
  8105     123C  2A4D               	goto	l4716
  8106     123D  2A1E               	goto	l4706
  8107     123E                     l4718:
  8108     123E  3002               	movlw	2
  8109     123F  0221               	subwf	___xxtofl@exp,w
  8110     1240  1C03               	btfss	3,0
  8111     1241  2A4F               	goto	l874
  8112     1242  3001               	movlw	1
  8113     1243  02A1               	subwf	___xxtofl@exp,f
  8114     1244  3001               	movlw	1
  8115     1245  00F6               	movwf	??___xxtofl
  8116     1246                     u8255:
  8117     1246  1003               	clrc
  8118     1247  0DA2               	rlf	___xxtofl@arg,f
  8119     1248  0DA3               	rlf	___xxtofl@arg+1,f
  8120     1249  0DA4               	rlf	___xxtofl@arg+2,f
  8121     124A  0DA5               	rlf	___xxtofl@arg+3,f
  8122     124B  0BF6               	decfsz	??___xxtofl,f
  8123     124C  2A46               	goto	u8255
  8124     124D                     l4716:
  8125     124D  1FA4               	btfss	___xxtofl@arg+2,7
  8126     124E  2A3E               	goto	l4718
  8127     124F                     l874:
  8128     124F  1821               	btfsc	___xxtofl@exp,0
  8129     1250  2A59               	goto	l875
  8130     1251  30FF               	movlw	255
  8131     1252  05A2               	andwf	___xxtofl@arg,f
  8132     1253  30FF               	movlw	255
  8133     1254  05A3               	andwf	___xxtofl@arg+1,f
  8134     1255  307F               	movlw	127
  8135     1256  05A4               	andwf	___xxtofl@arg+2,f
  8136     1257  30FF               	movlw	255
  8137     1258  05A5               	andwf	___xxtofl@arg+3,f
  8138     1259                     l875:
  8139     1259  1003               	clrc
  8140     125A  0CA1               	rrf	___xxtofl@exp,f
  8141     125B  0821               	movf	___xxtofl@exp,w
  8142     125C  00F6               	movwf	??___xxtofl
  8143     125D  01F7               	clrf	??___xxtofl+1
  8144     125E  01F8               	clrf	??___xxtofl+2
  8145     125F  01F9               	clrf	??___xxtofl+3
  8146     1260  3018               	movlw	24
  8147     1261                     u8295:
  8148     1261  1003               	clrc
  8149     1262  0DF6               	rlf	??___xxtofl,f
  8150     1263  0DF7               	rlf	??___xxtofl+1,f
  8151     1264  0DF8               	rlf	??___xxtofl+2,f
  8152     1265  0DF9               	rlf	??___xxtofl+3,f
  8153     1266  3EFF               	addlw	-1
  8154     1267  1D03               	skipz
  8155     1268  2A61               	goto	u8295
  8156     1269  0876               	movf	??___xxtofl,w
  8157     126A  04A2               	iorwf	___xxtofl@arg,f
  8158     126B  0877               	movf	??___xxtofl+1,w
  8159     126C  04A3               	iorwf	___xxtofl@arg+1,f
  8160     126D  0878               	movf	??___xxtofl+2,w
  8161     126E  04A4               	iorwf	___xxtofl@arg+2,f
  8162     126F  0879               	movf	??___xxtofl+3,w
  8163     1270  04A5               	iorwf	___xxtofl@arg+3,f
  8164     1271  0820               	movf	___xxtofl@sign,w
  8165     1272  1D03               	btfss	3,2
  8166     1273  1FF5               	btfss	___xxtofl@val+3,7
  8167     1274  2A76               	goto	l4730
  8168     1275  17A5               	bsf	___xxtofl@arg+3,7
  8169     1276                     l4730:
  8170     1276  0825               	movf	___xxtofl@arg+3,w
  8171     1277  00F5               	movwf	?___xxtofl+3
  8172     1278  0824               	movf	___xxtofl@arg+2,w
  8173     1279  00F4               	movwf	?___xxtofl+2
  8174     127A  0823               	movf	___xxtofl@arg+1,w
  8175     127B  00F3               	movwf	?___xxtofl+1
  8176     127C  0822               	movf	___xxtofl@arg,w
  8177     127D  00F2               	movwf	?___xxtofl
  8178     127E  0008               	return
  8179     127F                     __end_of___xxtofl:
  8180                           
  8181                           	psect	text31
  8182     09FF                     __ptext31:	
  8183 ;; *************** function ___flmul *****************
  8184 ;; Defined at:
  8185 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcmul.c"
  8186 ;; Parameters:    Size  Location     Type
  8187 ;;  b               4   25[BANK0 ] unsigned char 
  8188 ;;  a               4   29[BANK0 ] unsigned char 
  8189 ;; Auto vars:     Size  Location     Type
  8190 ;;  prod            4   45[BANK0 ] struct .
  8191 ;;  grs             4   41[BANK0 ] unsigned long 
  8192 ;;  temp            2   49[BANK0 ] struct .
  8193 ;;  bexp            1   40[BANK0 ] unsigned char 
  8194 ;;  aexp            1   39[BANK0 ] unsigned char 
  8195 ;;  sign            1   38[BANK0 ] unsigned char 
  8196 ;; Return value:  Size  Location     Type
  8197 ;;                  4   25[BANK0 ] unsigned char 
  8198 ;; Registers used:
  8199 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8200 ;; Tracked objects:
  8201 ;;		On entry : 300/0
  8202 ;;		On exit  : 300/0
  8203 ;;		Unchanged: 0/0
  8204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8205 ;;      Params:         0       8       0       0       0
  8206 ;;      Locals:         0      13       0       0       0
  8207 ;;      Temps:          0       5       0       0       0
  8208 ;;      Totals:         0      26       0       0       0
  8209 ;;Total ram usage:       26 bytes
  8210 ;; Hardware stack levels used: 1
  8211 ;; Hardware stack levels required when called: 2
  8212 ;; This function calls:
  8213 ;;		__Umul8_16
  8214 ;; This function is called by:
  8215 ;;		_LM35
  8216 ;;		_main
  8217 ;;		_fround
  8218 ;;		_scale
  8219 ;;		_sprintf
  8220 ;; This function uses a non-reentrant model
  8221 ;;
  8222                           
  8223     09FF                     ___flmul:	
  8224                           ;psect for function ___flmul
  8225                           
  8226                           
  8227                           ;incstack = 0
  8228                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8229     09FF  083C               	movf	___flmul@b+3,w
  8230     0A00  3980               	andlw	128
  8231     0A01  00C6               	movwf	___flmul@sign
  8232     0A02  083C               	movf	___flmul@b+3,w
  8233     0A03  00C1               	movwf	??___flmul
  8234     0A04  0741               	addwf	??___flmul,w
  8235     0A05  00C8               	movwf	___flmul@bexp
  8236     0A06  1BBB               	btfsc	___flmul@b+2,7
  8237     0A07  1448               	bsf	___flmul@bexp,0
  8238     0A08  0848               	movf	___flmul@bexp,w
  8239     0A09  1903               	btfsc	3,2
  8240     0A0A  2A18               	goto	l4100
  8241     0A0B  0A48               	incf	___flmul@bexp,w
  8242     0A0C  1D03               	btfss	3,2
  8243     0A0D  2A16               	goto	l4098
  8244     0A0E  3000               	movlw	0
  8245     0A0F  00BC               	movwf	___flmul@b+3
  8246     0A10  3000               	movlw	0
  8247     0A11  00BB               	movwf	___flmul@b+2
  8248     0A12  3000               	movlw	0
  8249     0A13  00BA               	movwf	___flmul@b+1
  8250     0A14  3000               	movlw	0
  8251     0A15  00B9               	movwf	___flmul@b
  8252     0A16                     l4098:
  8253     0A16  17BB               	bsf	___flmul@b+2,7
  8254     0A17  2A20               	goto	l4102
  8255     0A18                     l4100:
  8256     0A18  3000               	movlw	0
  8257     0A19  00BC               	movwf	___flmul@b+3
  8258     0A1A  3000               	movlw	0
  8259     0A1B  00BB               	movwf	___flmul@b+2
  8260     0A1C  3000               	movlw	0
  8261     0A1D  00BA               	movwf	___flmul@b+1
  8262     0A1E  3000               	movlw	0
  8263     0A1F  00B9               	movwf	___flmul@b
  8264     0A20                     l4102:
  8265     0A20  0840               	movf	___flmul@a+3,w
  8266     0A21  3980               	andlw	128
  8267     0A22  00FF               	movwf	127
  8268     0A23  087F               	movf	127,w
  8269     0A24  06C6               	xorwf	___flmul@sign,f
  8270     0A25  0840               	movf	___flmul@a+3,w
  8271     0A26  00C1               	movwf	??___flmul
  8272     0A27  0741               	addwf	??___flmul,w
  8273     0A28  00C7               	movwf	___flmul@aexp
  8274     0A29  1BBF               	btfsc	___flmul@a+2,7
  8275     0A2A  1447               	bsf	___flmul@aexp,0
  8276     0A2B  0847               	movf	___flmul@aexp,w
  8277     0A2C  1903               	btfsc	3,2
  8278     0A2D  2A3B               	goto	l4118
  8279     0A2E  0A47               	incf	___flmul@aexp,w
  8280     0A2F  1D03               	btfss	3,2
  8281     0A30  2A39               	goto	l4116
  8282     0A31  3000               	movlw	0
  8283     0A32  00C0               	movwf	___flmul@a+3
  8284     0A33  3000               	movlw	0
  8285     0A34  00BF               	movwf	___flmul@a+2
  8286     0A35  3000               	movlw	0
  8287     0A36  00BE               	movwf	___flmul@a+1
  8288     0A37  3000               	movlw	0
  8289     0A38  00BD               	movwf	___flmul@a
  8290     0A39                     l4116:
  8291     0A39  17BF               	bsf	___flmul@a+2,7
  8292     0A3A  2A43               	goto	l4120
  8293     0A3B                     l4118:
  8294     0A3B  3000               	movlw	0
  8295     0A3C  00C0               	movwf	___flmul@a+3
  8296     0A3D  3000               	movlw	0
  8297     0A3E  00BF               	movwf	___flmul@a+2
  8298     0A3F  3000               	movlw	0
  8299     0A40  00BE               	movwf	___flmul@a+1
  8300     0A41  3000               	movlw	0
  8301     0A42  00BD               	movwf	___flmul@a
  8302     0A43                     l4120:
  8303     0A43  0847               	movf	___flmul@aexp,w
  8304     0A44  1D03               	btfss	3,2
  8305     0A45  0848               	movf	___flmul@bexp,w
  8306     0A46  1D03               	btfss	3,2
  8307     0A47  2A51               	goto	l4128
  8308     0A48  3000               	movlw	0
  8309     0A49  00BC               	movwf	?___flmul+3
  8310     0A4A  3000               	movlw	0
  8311     0A4B  00BB               	movwf	?___flmul+2
  8312     0A4C  3000               	movlw	0
  8313     0A4D  00BA               	movwf	?___flmul+1
  8314     0A4E  3000               	movlw	0
  8315     0A4F  00B9               	movwf	?___flmul
  8316     0A50  0008               	return
  8317     0A51                     l4128:
  8318     0A51  0839               	movf	___flmul@b,w
  8319     0A52  00F2               	movwf	__Umul8_16@multiplicand
  8320     0A53  083F               	movf	___flmul@a+2,w
  8321     0A54  120A  118A  27DA  120A  158A  	fcall	__Umul8_16
  8322     0A59  0873               	movf	?__Umul8_16+1,w
  8323     0A5A  00D2               	movwf	___flmul@temp+1
  8324     0A5B  0872               	movf	?__Umul8_16,w
  8325     0A5C  00D1               	movwf	___flmul@temp
  8326     0A5D  0851               	movf	___flmul@temp,w
  8327     0A5E  00C1               	movwf	??___flmul
  8328     0A5F  01C2               	clrf	??___flmul+1
  8329     0A60  01C3               	clrf	??___flmul+2
  8330     0A61  01C4               	clrf	??___flmul+3
  8331     0A62  0844               	movf	??___flmul+3,w
  8332     0A63  00CC               	movwf	___flmul@grs+3
  8333     0A64  0843               	movf	??___flmul+2,w
  8334     0A65  00CB               	movwf	___flmul@grs+2
  8335     0A66  0842               	movf	??___flmul+1,w
  8336     0A67  00CA               	movwf	___flmul@grs+1
  8337     0A68  0841               	movf	??___flmul,w
  8338     0A69  00C9               	movwf	___flmul@grs
  8339     0A6A  0852               	movf	___flmul@temp+1,w
  8340     0A6B  00C1               	movwf	??___flmul
  8341     0A6C  01C2               	clrf	??___flmul+1
  8342     0A6D  01C3               	clrf	??___flmul+2
  8343     0A6E  01C4               	clrf	??___flmul+3
  8344     0A6F  0844               	movf	??___flmul+3,w
  8345     0A70  00D0               	movwf	___flmul@prod+3
  8346     0A71  0843               	movf	??___flmul+2,w
  8347     0A72  00CF               	movwf	___flmul@prod+2
  8348     0A73  0842               	movf	??___flmul+1,w
  8349     0A74  00CE               	movwf	___flmul@prod+1
  8350     0A75  0841               	movf	??___flmul,w
  8351     0A76  00CD               	movwf	___flmul@prod
  8352     0A77  083A               	movf	___flmul@b+1,w
  8353     0A78  00F2               	movwf	__Umul8_16@multiplicand
  8354     0A79  083E               	movf	___flmul@a+1,w
  8355     0A7A  120A  118A  27DA  120A  158A  	fcall	__Umul8_16
  8356     0A7F  0873               	movf	?__Umul8_16+1,w
  8357     0A80  00D2               	movwf	___flmul@temp+1
  8358     0A81  0872               	movf	?__Umul8_16,w
  8359     0A82  00D1               	movwf	___flmul@temp
  8360     0A83  0851               	movf	___flmul@temp,w
  8361     0A84  00C1               	movwf	??___flmul
  8362     0A85  01C2               	clrf	??___flmul+1
  8363     0A86  01C3               	clrf	??___flmul+2
  8364     0A87  01C4               	clrf	??___flmul+3
  8365     0A88  0841               	movf	??___flmul,w
  8366     0A89  07C9               	addwf	___flmul@grs,f
  8367     0A8A  0842               	movf	??___flmul+1,w
  8368     0A8B  1103               	clrz
  8369     0A8C  1803               	skipnc
  8370     0A8D  3E01               	addlw	1
  8371     0A8E  1D03               	btfss	3,2
  8372     0A8F  07CA               	addwf	___flmul@grs+1,f
  8373     0A90  0843               	movf	??___flmul+2,w
  8374     0A91  1103               	clrz
  8375     0A92  1803               	skipnc
  8376     0A93  3E01               	addlw	1
  8377     0A94  1D03               	btfss	3,2
  8378     0A95  07CB               	addwf	___flmul@grs+2,f
  8379     0A96  0844               	movf	??___flmul+3,w
  8380     0A97  1103               	clrz
  8381     0A98  1803               	skipnc
  8382     0A99  3E01               	addlw	1
  8383     0A9A  1D03               	btfss	3,2
  8384     0A9B  07CC               	addwf	___flmul@grs+3,f
  8385     0A9C  0852               	movf	___flmul@temp+1,w
  8386     0A9D  00C1               	movwf	??___flmul
  8387     0A9E  01C2               	clrf	??___flmul+1
  8388     0A9F  01C3               	clrf	??___flmul+2
  8389     0AA0  01C4               	clrf	??___flmul+3
  8390     0AA1  0841               	movf	??___flmul,w
  8391     0AA2  07CD               	addwf	___flmul@prod,f
  8392     0AA3  0842               	movf	??___flmul+1,w
  8393     0AA4  1103               	clrz
  8394     0AA5  1803               	skipnc
  8395     0AA6  3E01               	addlw	1
  8396     0AA7  1D03               	btfss	3,2
  8397     0AA8  07CE               	addwf	___flmul@prod+1,f
  8398     0AA9  0843               	movf	??___flmul+2,w
  8399     0AAA  1103               	clrz
  8400     0AAB  1803               	skipnc
  8401     0AAC  3E01               	addlw	1
  8402     0AAD  1D03               	btfss	3,2
  8403     0AAE  07CF               	addwf	___flmul@prod+2,f
  8404     0AAF  0844               	movf	??___flmul+3,w
  8405     0AB0  1103               	clrz
  8406     0AB1  1803               	skipnc
  8407     0AB2  3E01               	addlw	1
  8408     0AB3  1D03               	btfss	3,2
  8409     0AB4  07D0               	addwf	___flmul@prod+3,f
  8410     0AB5  083B               	movf	___flmul@b+2,w
  8411     0AB6  00F2               	movwf	__Umul8_16@multiplicand
  8412     0AB7  083D               	movf	___flmul@a,w
  8413     0AB8  120A  118A  27DA  120A  158A  	fcall	__Umul8_16
  8414     0ABD  0873               	movf	?__Umul8_16+1,w
  8415     0ABE  00D2               	movwf	___flmul@temp+1
  8416     0ABF  0872               	movf	?__Umul8_16,w
  8417     0AC0  00D1               	movwf	___flmul@temp
  8418     0AC1  0851               	movf	___flmul@temp,w
  8419     0AC2  00C1               	movwf	??___flmul
  8420     0AC3  01C2               	clrf	??___flmul+1
  8421     0AC4  01C3               	clrf	??___flmul+2
  8422     0AC5  01C4               	clrf	??___flmul+3
  8423     0AC6  0841               	movf	??___flmul,w
  8424     0AC7  07C9               	addwf	___flmul@grs,f
  8425     0AC8  0842               	movf	??___flmul+1,w
  8426     0AC9  1103               	clrz
  8427     0ACA  1803               	skipnc
  8428     0ACB  3E01               	addlw	1
  8429     0ACC  1D03               	btfss	3,2
  8430     0ACD  07CA               	addwf	___flmul@grs+1,f
  8431     0ACE  0843               	movf	??___flmul+2,w
  8432     0ACF  1103               	clrz
  8433     0AD0  1803               	skipnc
  8434     0AD1  3E01               	addlw	1
  8435     0AD2  1D03               	btfss	3,2
  8436     0AD3  07CB               	addwf	___flmul@grs+2,f
  8437     0AD4  0844               	movf	??___flmul+3,w
  8438     0AD5  1103               	clrz
  8439     0AD6  1803               	skipnc
  8440     0AD7  3E01               	addlw	1
  8441     0AD8  1D03               	btfss	3,2
  8442     0AD9  07CC               	addwf	___flmul@grs+3,f
  8443     0ADA  0852               	movf	___flmul@temp+1,w
  8444     0ADB  00C1               	movwf	??___flmul
  8445     0ADC  01C2               	clrf	??___flmul+1
  8446     0ADD  01C3               	clrf	??___flmul+2
  8447     0ADE  01C4               	clrf	??___flmul+3
  8448     0ADF  0841               	movf	??___flmul,w
  8449     0AE0  07CD               	addwf	___flmul@prod,f
  8450     0AE1  0842               	movf	??___flmul+1,w
  8451     0AE2  1103               	clrz
  8452     0AE3  1803               	skipnc
  8453     0AE4  3E01               	addlw	1
  8454     0AE5  1D03               	btfss	3,2
  8455     0AE6  07CE               	addwf	___flmul@prod+1,f
  8456     0AE7  0843               	movf	??___flmul+2,w
  8457     0AE8  1103               	clrz
  8458     0AE9  1803               	skipnc
  8459     0AEA  3E01               	addlw	1
  8460     0AEB  1D03               	btfss	3,2
  8461     0AEC  07CF               	addwf	___flmul@prod+2,f
  8462     0AED  0844               	movf	??___flmul+3,w
  8463     0AEE  1103               	clrz
  8464     0AEF  1803               	skipnc
  8465     0AF0  3E01               	addlw	1
  8466     0AF1  1D03               	btfss	3,2
  8467     0AF2  07D0               	addwf	___flmul@prod+3,f
  8468     0AF3  3008               	movlw	8
  8469     0AF4  00C1               	movwf	??___flmul
  8470     0AF5                     u6755:
  8471     0AF5  1003               	clrc
  8472     0AF6  0DC9               	rlf	___flmul@grs,f
  8473     0AF7  0DCA               	rlf	___flmul@grs+1,f
  8474     0AF8  0DCB               	rlf	___flmul@grs+2,f
  8475     0AF9  0DCC               	rlf	___flmul@grs+3,f
  8476     0AFA  0BC1               	decfsz	??___flmul,f
  8477     0AFB  2AF5               	goto	u6755
  8478     0AFC  083A               	movf	___flmul@b+1,w
  8479     0AFD  00F2               	movwf	__Umul8_16@multiplicand
  8480     0AFE  083D               	movf	___flmul@a,w
  8481     0AFF  120A  118A  27DA  120A  158A  	fcall	__Umul8_16
  8482     0B04  0873               	movf	?__Umul8_16+1,w
  8483     0B05  00D2               	movwf	___flmul@temp+1
  8484     0B06  0872               	movf	?__Umul8_16,w
  8485     0B07  00D1               	movwf	___flmul@temp
  8486     0B08  0851               	movf	___flmul@temp,w
  8487     0B09  00C1               	movwf	??___flmul
  8488     0B0A  0852               	movf	___flmul@temp+1,w
  8489     0B0B  00C2               	movwf	??___flmul+1
  8490     0B0C  01C3               	clrf	??___flmul+2
  8491     0B0D  01C4               	clrf	??___flmul+3
  8492     0B0E  0841               	movf	??___flmul,w
  8493     0B0F  07C9               	addwf	___flmul@grs,f
  8494     0B10  0842               	movf	??___flmul+1,w
  8495     0B11  1103               	clrz
  8496     0B12  1803               	skipnc
  8497     0B13  3E01               	addlw	1
  8498     0B14  1D03               	btfss	3,2
  8499     0B15  07CA               	addwf	___flmul@grs+1,f
  8500     0B16  0843               	movf	??___flmul+2,w
  8501     0B17  1103               	clrz
  8502     0B18  1803               	skipnc
  8503     0B19  3E01               	addlw	1
  8504     0B1A  1D03               	btfss	3,2
  8505     0B1B  07CB               	addwf	___flmul@grs+2,f
  8506     0B1C  0844               	movf	??___flmul+3,w
  8507     0B1D  1103               	clrz
  8508     0B1E  1803               	skipnc
  8509     0B1F  3E01               	addlw	1
  8510     0B20  1D03               	btfss	3,2
  8511     0B21  07CC               	addwf	___flmul@grs+3,f
  8512     0B22  0839               	movf	___flmul@b,w
  8513     0B23  00F2               	movwf	__Umul8_16@multiplicand
  8514     0B24  083E               	movf	___flmul@a+1,w
  8515     0B25  120A  118A  27DA  120A  158A  	fcall	__Umul8_16
  8516     0B2A  0873               	movf	?__Umul8_16+1,w
  8517     0B2B  00D2               	movwf	___flmul@temp+1
  8518     0B2C  0872               	movf	?__Umul8_16,w
  8519     0B2D  00D1               	movwf	___flmul@temp
  8520     0B2E  0851               	movf	___flmul@temp,w
  8521     0B2F  00C1               	movwf	??___flmul
  8522     0B30  0852               	movf	___flmul@temp+1,w
  8523     0B31  00C2               	movwf	??___flmul+1
  8524     0B32  01C3               	clrf	??___flmul+2
  8525     0B33  01C4               	clrf	??___flmul+3
  8526     0B34  0841               	movf	??___flmul,w
  8527     0B35  07C9               	addwf	___flmul@grs,f
  8528     0B36  0842               	movf	??___flmul+1,w
  8529     0B37  1103               	clrz
  8530     0B38  1803               	skipnc
  8531     0B39  3E01               	addlw	1
  8532     0B3A  1D03               	btfss	3,2
  8533     0B3B  07CA               	addwf	___flmul@grs+1,f
  8534     0B3C  0843               	movf	??___flmul+2,w
  8535     0B3D  1103               	clrz
  8536     0B3E  1803               	skipnc
  8537     0B3F  3E01               	addlw	1
  8538     0B40  1D03               	btfss	3,2
  8539     0B41  07CB               	addwf	___flmul@grs+2,f
  8540     0B42  0844               	movf	??___flmul+3,w
  8541     0B43  1103               	clrz
  8542     0B44  1803               	skipnc
  8543     0B45  3E01               	addlw	1
  8544     0B46  1D03               	btfss	3,2
  8545     0B47  07CC               	addwf	___flmul@grs+3,f
  8546     0B48  3008               	movlw	8
  8547     0B49  00C1               	movwf	??___flmul
  8548     0B4A                     u6785:
  8549     0B4A  1003               	clrc
  8550     0B4B  0DC9               	rlf	___flmul@grs,f
  8551     0B4C  0DCA               	rlf	___flmul@grs+1,f
  8552     0B4D  0DCB               	rlf	___flmul@grs+2,f
  8553     0B4E  0DCC               	rlf	___flmul@grs+3,f
  8554     0B4F  0BC1               	decfsz	??___flmul,f
  8555     0B50  2B4A               	goto	u6785
  8556     0B51  0839               	movf	___flmul@b,w
  8557     0B52  00F2               	movwf	__Umul8_16@multiplicand
  8558     0B53  083D               	movf	___flmul@a,w
  8559     0B54  120A  118A  27DA  120A  158A  	fcall	__Umul8_16
  8560     0B59  0873               	movf	?__Umul8_16+1,w
  8561     0B5A  00D2               	movwf	___flmul@temp+1
  8562     0B5B  0872               	movf	?__Umul8_16,w
  8563     0B5C  00D1               	movwf	___flmul@temp
  8564     0B5D  0851               	movf	___flmul@temp,w
  8565     0B5E  00C1               	movwf	??___flmul
  8566     0B5F  0852               	movf	___flmul@temp+1,w
  8567     0B60  00C2               	movwf	??___flmul+1
  8568     0B61  01C3               	clrf	??___flmul+2
  8569     0B62  01C4               	clrf	??___flmul+3
  8570     0B63  0841               	movf	??___flmul,w
  8571     0B64  07C9               	addwf	___flmul@grs,f
  8572     0B65  0842               	movf	??___flmul+1,w
  8573     0B66  1103               	clrz
  8574     0B67  1803               	skipnc
  8575     0B68  3E01               	addlw	1
  8576     0B69  1D03               	btfss	3,2
  8577     0B6A  07CA               	addwf	___flmul@grs+1,f
  8578     0B6B  0843               	movf	??___flmul+2,w
  8579     0B6C  1103               	clrz
  8580     0B6D  1803               	skipnc
  8581     0B6E  3E01               	addlw	1
  8582     0B6F  1D03               	btfss	3,2
  8583     0B70  07CB               	addwf	___flmul@grs+2,f
  8584     0B71  0844               	movf	??___flmul+3,w
  8585     0B72  1103               	clrz
  8586     0B73  1803               	skipnc
  8587     0B74  3E01               	addlw	1
  8588     0B75  1D03               	btfss	3,2
  8589     0B76  07CC               	addwf	___flmul@grs+3,f
  8590     0B77  083A               	movf	___flmul@b+1,w
  8591     0B78  00F2               	movwf	__Umul8_16@multiplicand
  8592     0B79  083F               	movf	___flmul@a+2,w
  8593     0B7A  120A  118A  27DA  120A  158A  	fcall	__Umul8_16
  8594     0B7F  0873               	movf	?__Umul8_16+1,w
  8595     0B80  00D2               	movwf	___flmul@temp+1
  8596     0B81  0872               	movf	?__Umul8_16,w
  8597     0B82  00D1               	movwf	___flmul@temp
  8598     0B83  0851               	movf	___flmul@temp,w
  8599     0B84  00C1               	movwf	??___flmul
  8600     0B85  0852               	movf	___flmul@temp+1,w
  8601     0B86  00C2               	movwf	??___flmul+1
  8602     0B87  01C3               	clrf	??___flmul+2
  8603     0B88  01C4               	clrf	??___flmul+3
  8604     0B89  0841               	movf	??___flmul,w
  8605     0B8A  07CD               	addwf	___flmul@prod,f
  8606     0B8B  0842               	movf	??___flmul+1,w
  8607     0B8C  1103               	clrz
  8608     0B8D  1803               	skipnc
  8609     0B8E  3E01               	addlw	1
  8610     0B8F  1D03               	btfss	3,2
  8611     0B90  07CE               	addwf	___flmul@prod+1,f
  8612     0B91  0843               	movf	??___flmul+2,w
  8613     0B92  1103               	clrz
  8614     0B93  1803               	skipnc
  8615     0B94  3E01               	addlw	1
  8616     0B95  1D03               	btfss	3,2
  8617     0B96  07CF               	addwf	___flmul@prod+2,f
  8618     0B97  0844               	movf	??___flmul+3,w
  8619     0B98  1103               	clrz
  8620     0B99  1803               	skipnc
  8621     0B9A  3E01               	addlw	1
  8622     0B9B  1D03               	btfss	3,2
  8623     0B9C  07D0               	addwf	___flmul@prod+3,f
  8624     0B9D  083B               	movf	___flmul@b+2,w
  8625     0B9E  00F2               	movwf	__Umul8_16@multiplicand
  8626     0B9F  083E               	movf	___flmul@a+1,w
  8627     0BA0  120A  118A  27DA  120A  158A  	fcall	__Umul8_16
  8628     0BA5  0873               	movf	?__Umul8_16+1,w
  8629     0BA6  00D2               	movwf	___flmul@temp+1
  8630     0BA7  0872               	movf	?__Umul8_16,w
  8631     0BA8  00D1               	movwf	___flmul@temp
  8632     0BA9  0851               	movf	___flmul@temp,w
  8633     0BAA  00C1               	movwf	??___flmul
  8634     0BAB  0852               	movf	___flmul@temp+1,w
  8635     0BAC  00C2               	movwf	??___flmul+1
  8636     0BAD  01C3               	clrf	??___flmul+2
  8637     0BAE  01C4               	clrf	??___flmul+3
  8638     0BAF  0841               	movf	??___flmul,w
  8639     0BB0  07CD               	addwf	___flmul@prod,f
  8640     0BB1  0842               	movf	??___flmul+1,w
  8641     0BB2  1103               	clrz
  8642     0BB3  1803               	skipnc
  8643     0BB4  3E01               	addlw	1
  8644     0BB5  1D03               	btfss	3,2
  8645     0BB6  07CE               	addwf	___flmul@prod+1,f
  8646     0BB7  0843               	movf	??___flmul+2,w
  8647     0BB8  1103               	clrz
  8648     0BB9  1803               	skipnc
  8649     0BBA  3E01               	addlw	1
  8650     0BBB  1D03               	btfss	3,2
  8651     0BBC  07CF               	addwf	___flmul@prod+2,f
  8652     0BBD  0844               	movf	??___flmul+3,w
  8653     0BBE  1103               	clrz
  8654     0BBF  1803               	skipnc
  8655     0BC0  3E01               	addlw	1
  8656     0BC1  1D03               	btfss	3,2
  8657     0BC2  07D0               	addwf	___flmul@prod+3,f
  8658     0BC3  083B               	movf	___flmul@b+2,w
  8659     0BC4  00F2               	movwf	__Umul8_16@multiplicand
  8660     0BC5  083F               	movf	___flmul@a+2,w
  8661     0BC6  120A  118A  27DA  120A  158A  	fcall	__Umul8_16
  8662     0BCB  0873               	movf	?__Umul8_16+1,w
  8663     0BCC  00D2               	movwf	___flmul@temp+1
  8664     0BCD  0872               	movf	?__Umul8_16,w
  8665     0BCE  00D1               	movwf	___flmul@temp
  8666     0BCF  0851               	movf	___flmul@temp,w
  8667     0BD0  00C1               	movwf	??___flmul
  8668     0BD1  0852               	movf	___flmul@temp+1,w
  8669     0BD2  00C2               	movwf	??___flmul+1
  8670     0BD3  01C3               	clrf	??___flmul+2
  8671     0BD4  01C4               	clrf	??___flmul+3
  8672     0BD5  3008               	movlw	8
  8673     0BD6                     u6825:
  8674     0BD6  1003               	clrc
  8675     0BD7  0DC1               	rlf	??___flmul,f
  8676     0BD8  0DC2               	rlf	??___flmul+1,f
  8677     0BD9  0DC3               	rlf	??___flmul+2,f
  8678     0BDA  0DC4               	rlf	??___flmul+3,f
  8679     0BDB  3EFF               	addlw	-1
  8680     0BDC  1D03               	skipz
  8681     0BDD  2BD6               	goto	u6825
  8682     0BDE  0841               	movf	??___flmul,w
  8683     0BDF  07CD               	addwf	___flmul@prod,f
  8684     0BE0  0842               	movf	??___flmul+1,w
  8685     0BE1  1103               	clrz
  8686     0BE2  1803               	skipnc
  8687     0BE3  3E01               	addlw	1
  8688     0BE4  1D03               	btfss	3,2
  8689     0BE5  07CE               	addwf	___flmul@prod+1,f
  8690     0BE6  0843               	movf	??___flmul+2,w
  8691     0BE7  1103               	clrz
  8692     0BE8  1803               	skipnc
  8693     0BE9  3E01               	addlw	1
  8694     0BEA  1D03               	btfss	3,2
  8695     0BEB  07CF               	addwf	___flmul@prod+2,f
  8696     0BEC  0844               	movf	??___flmul+3,w
  8697     0BED  1103               	clrz
  8698     0BEE  1803               	skipnc
  8699     0BEF  3E01               	addlw	1
  8700     0BF0  1D03               	btfss	3,2
  8701     0BF1  07D0               	addwf	___flmul@prod+3,f
  8702     0BF2  084C               	movf	___flmul@grs+3,w
  8703     0BF3  00C1               	movwf	??___flmul
  8704     0BF4  01C2               	clrf	??___flmul+1
  8705     0BF5  01C3               	clrf	??___flmul+2
  8706     0BF6  01C4               	clrf	??___flmul+3
  8707     0BF7  0841               	movf	??___flmul,w
  8708     0BF8  07CD               	addwf	___flmul@prod,f
  8709     0BF9  0842               	movf	??___flmul+1,w
  8710     0BFA  1103               	clrz
  8711     0BFB  1803               	skipnc
  8712     0BFC  3E01               	addlw	1
  8713     0BFD  1D03               	btfss	3,2
  8714     0BFE  07CE               	addwf	___flmul@prod+1,f
  8715     0BFF  0843               	movf	??___flmul+2,w
  8716     0C00  1103               	clrz
  8717     0C01  1803               	skipnc
  8718     0C02  3E01               	addlw	1
  8719     0C03  1D03               	btfss	3,2
  8720     0C04  07CF               	addwf	___flmul@prod+2,f
  8721     0C05  0844               	movf	??___flmul+3,w
  8722     0C06  1103               	clrz
  8723     0C07  1803               	skipnc
  8724     0C08  3E01               	addlw	1
  8725     0C09  1D03               	btfss	3,2
  8726     0C0A  07D0               	addwf	___flmul@prod+3,f
  8727     0C0B  3008               	movlw	8
  8728     0C0C  00C1               	movwf	??___flmul
  8729     0C0D                     u6855:
  8730     0C0D  1003               	clrc
  8731     0C0E  0DC9               	rlf	___flmul@grs,f
  8732     0C0F  0DCA               	rlf	___flmul@grs+1,f
  8733     0C10  0DCB               	rlf	___flmul@grs+2,f
  8734     0C11  0DCC               	rlf	___flmul@grs+3,f
  8735     0C12  0BC1               	decfsz	??___flmul,f
  8736     0C13  2C0D               	goto	u6855
  8737     0C14  0848               	movf	___flmul@bexp,w
  8738     0C15  0747               	addwf	___flmul@aexp,w
  8739     0C16  00C1               	movwf	??___flmul
  8740     0C17  01C2               	clrf	??___flmul+1
  8741     0C18  0DC2               	rlf	??___flmul+1,f
  8742     0C19  0841               	movf	??___flmul,w
  8743     0C1A  3E82               	addlw	130
  8744     0C1B  00D1               	movwf	___flmul@temp
  8745     0C1C  0842               	movf	??___flmul+1,w
  8746     0C1D  1803               	skipnc
  8747     0C1E  3E01               	addlw	1
  8748     0C1F  3EFF               	addlw	255
  8749     0C20  00D2               	movwf	___flmul@temp+1
  8750     0C21                     l4180:
  8751     0C21  1BCF               	btfsc	___flmul@prod+2,7
  8752     0C22  2C3E               	goto	l4182
  8753     0C23  3001               	movlw	1
  8754     0C24  00C1               	movwf	??___flmul
  8755     0C25                     u6865:
  8756     0C25  1003               	clrc
  8757     0C26  0DCD               	rlf	___flmul@prod,f
  8758     0C27  0DCE               	rlf	___flmul@prod+1,f
  8759     0C28  0DCF               	rlf	___flmul@prod+2,f
  8760     0C29  0DD0               	rlf	___flmul@prod+3,f
  8761     0C2A  0BC1               	decfsz	??___flmul,f
  8762     0C2B  2C25               	goto	u6865
  8763     0C2C  1BCC               	btfsc	___flmul@grs+3,7
  8764     0C2D  144D               	bsf	___flmul@prod,0
  8765     0C2E  3001               	movlw	1
  8766     0C2F  00C1               	movwf	??___flmul
  8767     0C30                     u6885:
  8768     0C30  1003               	clrc
  8769     0C31  0DC9               	rlf	___flmul@grs,f
  8770     0C32  0DCA               	rlf	___flmul@grs+1,f
  8771     0C33  0DCB               	rlf	___flmul@grs+2,f
  8772     0C34  0DCC               	rlf	___flmul@grs+3,f
  8773     0C35  0BC1               	decfsz	??___flmul,f
  8774     0C36  2C30               	goto	u6885
  8775     0C37  30FF               	movlw	255
  8776     0C38  07D1               	addwf	___flmul@temp,f
  8777     0C39  1803               	skipnc
  8778     0C3A  0AD2               	incf	___flmul@temp+1,f
  8779     0C3B  30FF               	movlw	255
  8780     0C3C  07D2               	addwf	___flmul@temp+1,f
  8781     0C3D  2C21               	goto	l4180
  8782     0C3E                     l4182:
  8783     0C3E  01C7               	clrf	___flmul@aexp
  8784     0C3F  1FCC               	btfss	___flmul@grs+3,7
  8785     0C40  2C57               	goto	l4192
  8786     0C41  30FF               	movlw	255
  8787     0C42  0549               	andwf	___flmul@grs,w
  8788     0C43  00C1               	movwf	??___flmul
  8789     0C44  30FF               	movlw	255
  8790     0C45  054A               	andwf	___flmul@grs+1,w
  8791     0C46  00C2               	movwf	??___flmul+1
  8792     0C47  30FF               	movlw	255
  8793     0C48  054B               	andwf	___flmul@grs+2,w
  8794     0C49  00C3               	movwf	??___flmul+2
  8795     0C4A  307F               	movlw	127
  8796     0C4B  054C               	andwf	___flmul@grs+3,w
  8797     0C4C  00C4               	movwf	??___flmul+3
  8798     0C4D  0844               	movf	??___flmul+3,w
  8799     0C4E  0443               	iorwf	??___flmul+2,w
  8800     0C4F  0442               	iorwf	??___flmul+1,w
  8801     0C50  0441               	iorwf	??___flmul,w
  8802     0C51  1903               	skipnz
  8803     0C52  184D               	btfsc	___flmul@prod,0
  8804     0C53  2C55               	goto	l4188
  8805     0C54  2C57               	goto	l4192
  8806     0C55                     l4188:
  8807     0C55  01C7               	clrf	___flmul@aexp
  8808     0C56  0AC7               	incf	___flmul@aexp,f
  8809     0C57                     l4192:
  8810     0C57  0847               	movf	___flmul@aexp,w
  8811     0C58  1903               	btfsc	3,2
  8812     0C59  2C89               	goto	l4202
  8813     0C5A  3001               	movlw	1
  8814     0C5B  07CD               	addwf	___flmul@prod,f
  8815     0C5C  3000               	movlw	0
  8816     0C5D  1803               	skipnc
  8817     0C5E  3001               	movlw	1
  8818     0C5F  07CE               	addwf	___flmul@prod+1,f
  8819     0C60  3000               	movlw	0
  8820     0C61  1803               	skipnc
  8821     0C62  3001               	movlw	1
  8822     0C63  07CF               	addwf	___flmul@prod+2,f
  8823     0C64  3000               	movlw	0
  8824     0C65  1803               	skipnc
  8825     0C66  3001               	movlw	1
  8826     0C67  07D0               	addwf	___flmul@prod+3,f
  8827     0C68  1C50               	btfss	___flmul@prod+3,0
  8828     0C69  2C89               	goto	l4202
  8829     0C6A  084D               	movf	___flmul@prod,w
  8830     0C6B  00C1               	movwf	??___flmul
  8831     0C6C  084E               	movf	___flmul@prod+1,w
  8832     0C6D  00C2               	movwf	??___flmul+1
  8833     0C6E  084F               	movf	___flmul@prod+2,w
  8834     0C6F  00C3               	movwf	??___flmul+2
  8835     0C70  0850               	movf	___flmul@prod+3,w
  8836     0C71  00C4               	movwf	??___flmul+3
  8837     0C72  3001               	movlw	1
  8838     0C73  00C5               	movwf	??___flmul+4
  8839     0C74                     u6955:
  8840     0C74  0D44               	rlf	??___flmul+3,w
  8841     0C75  0CC4               	rrf	??___flmul+3,f
  8842     0C76  0CC3               	rrf	??___flmul+2,f
  8843     0C77  0CC2               	rrf	??___flmul+1,f
  8844     0C78  0CC1               	rrf	??___flmul,f
  8845     0C79  0BC5               	decfsz	??___flmul+4,f
  8846     0C7A  2C74               	goto	u6955
  8847     0C7B  0844               	movf	??___flmul+3,w
  8848     0C7C  00D0               	movwf	___flmul@prod+3
  8849     0C7D  0843               	movf	??___flmul+2,w
  8850     0C7E  00CF               	movwf	___flmul@prod+2
  8851     0C7F  0842               	movf	??___flmul+1,w
  8852     0C80  00CE               	movwf	___flmul@prod+1
  8853     0C81  0841               	movf	??___flmul,w
  8854     0C82  00CD               	movwf	___flmul@prod
  8855     0C83  3001               	movlw	1
  8856     0C84  07D1               	addwf	___flmul@temp,f
  8857     0C85  1803               	skipnc
  8858     0C86  0AD2               	incf	___flmul@temp+1,f
  8859     0C87  3000               	movlw	0
  8860     0C88  07D2               	addwf	___flmul@temp+1,f
  8861     0C89                     l4202:
  8862     0C89  0852               	movf	___flmul@temp+1,w
  8863     0C8A  3A80               	xorlw	128
  8864     0C8B  00FF               	movwf	127
  8865     0C8C  3080               	movlw	128
  8866     0C8D  027F               	subwf	127,w
  8867     0C8E  1D03               	skipz
  8868     0C8F  2C92               	goto	u6965
  8869     0C90  30FF               	movlw	255
  8870     0C91  0251               	subwf	___flmul@temp,w
  8871     0C92                     u6965:
  8872     0C92  1C03               	skipc
  8873     0C93  2C9F               	goto	l4206
  8874     0C94  307F               	movlw	127
  8875     0C95  1283               	bcf	3,5	;RP0=0, select bank0
  8876     0C96  1303               	bcf	3,6	;RP1=0, select bank0
  8877     0C97  00D0               	movwf	___flmul@prod+3
  8878     0C98  3080               	movlw	128
  8879     0C99  00CF               	movwf	___flmul@prod+2
  8880     0C9A  3000               	movlw	0
  8881     0C9B  00CE               	movwf	___flmul@prod+1
  8882     0C9C  3000               	movlw	0
  8883     0C9D  00CD               	movwf	___flmul@prod
  8884     0C9E  2CCB               	goto	l4220
  8885     0C9F                     l4206:
  8886     0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  8887     0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  8888     0CA1  0852               	movf	___flmul@temp+1,w
  8889     0CA2  3A80               	xorlw	128
  8890     0CA3  00FF               	movwf	127
  8891     0CA4  3080               	movlw	128
  8892     0CA5  027F               	subwf	127,w
  8893     0CA6  1D03               	skipz
  8894     0CA7  2CAA               	goto	u6975
  8895     0CA8  3001               	movlw	1
  8896     0CA9  0251               	subwf	___flmul@temp,w
  8897     0CAA                     u6975:
  8898     0CAA  1803               	skipnc
  8899     0CAB  2CB8               	goto	l4212
  8900     0CAC  3000               	movlw	0
  8901     0CAD  1283               	bcf	3,5	;RP0=0, select bank0
  8902     0CAE  1303               	bcf	3,6	;RP1=0, select bank0
  8903     0CAF  00D0               	movwf	___flmul@prod+3
  8904     0CB0  3000               	movlw	0
  8905     0CB1  00CF               	movwf	___flmul@prod+2
  8906     0CB2  3000               	movlw	0
  8907     0CB3  00CE               	movwf	___flmul@prod+1
  8908     0CB4  3000               	movlw	0
  8909     0CB5  00CD               	movwf	___flmul@prod
  8910     0CB6  01C6               	clrf	___flmul@sign
  8911     0CB7  2CCB               	goto	l4220
  8912     0CB8                     l4212:
  8913     0CB8  1283               	bcf	3,5	;RP0=0, select bank0
  8914     0CB9  1303               	bcf	3,6	;RP1=0, select bank0
  8915     0CBA  0851               	movf	___flmul@temp,w
  8916     0CBB  00C8               	movwf	___flmul@bexp
  8917     0CBC  30FF               	movlw	255
  8918     0CBD  05CD               	andwf	___flmul@prod,f
  8919     0CBE  30FF               	movlw	255
  8920     0CBF  05CE               	andwf	___flmul@prod+1,f
  8921     0CC0  307F               	movlw	127
  8922     0CC1  05CF               	andwf	___flmul@prod+2,f
  8923     0CC2  3000               	movlw	0
  8924     0CC3  05D0               	andwf	___flmul@prod+3,f
  8925     0CC4  1848               	btfsc	___flmul@bexp,0
  8926     0CC5  17CF               	bsf	___flmul@prod+2,7
  8927     0CC6  0848               	movf	___flmul@bexp,w
  8928     0CC7  00C1               	movwf	??___flmul
  8929     0CC8  1003               	clrc
  8930     0CC9  0C41               	rrf	??___flmul,w
  8931     0CCA  00D0               	movwf	___flmul@prod+3
  8932     0CCB                     l4220:
  8933     0CCB  0846               	movf	___flmul@sign,w
  8934     0CCC  00FF               	movwf	127
  8935     0CCD  087F               	movf	127,w
  8936     0CCE  04D0               	iorwf	___flmul@prod+3,f
  8937     0CCF  0850               	movf	___flmul@prod+3,w
  8938     0CD0  00BC               	movwf	?___flmul+3
  8939     0CD1  084F               	movf	___flmul@prod+2,w
  8940     0CD2  00BB               	movwf	?___flmul+2
  8941     0CD3  084E               	movf	___flmul@prod+1,w
  8942     0CD4  00BA               	movwf	?___flmul+1
  8943     0CD5  084D               	movf	___flmul@prod,w
  8944     0CD6  00B9               	movwf	?___flmul
  8945     0CD7  0008               	return
  8946     0CD8                     __end_of___flmul:
  8947                           
  8948                           	psect	text32
  8949     07DA                     __ptext32:	
  8950 ;; *************** function __Umul8_16 *****************
  8951 ;; Defined at:
  8952 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8_16.c"
  8953 ;; Parameters:    Size  Location     Type
  8954 ;;  multiplier      1    wreg     unsigned char 
  8955 ;;  multiplicand    1    2[COMMON] unsigned char 
  8956 ;; Auto vars:     Size  Location     Type
  8957 ;;  multiplier      1    4[BANK0 ] unsigned char 
  8958 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  8959 ;;  product         2    0[BANK0 ] unsigned int 
  8960 ;; Return value:  Size  Location     Type
  8961 ;;                  2    2[COMMON] unsigned int 
  8962 ;; Registers used:
  8963 ;;		wreg, status,2, status,0
  8964 ;; Tracked objects:
  8965 ;;		On entry : 300/0
  8966 ;;		On exit  : 300/0
  8967 ;;		Unchanged: 0/0
  8968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8969 ;;      Params:         2       0       0       0       0
  8970 ;;      Locals:         0       5       0       0       0
  8971 ;;      Temps:          2       0       0       0       0
  8972 ;;      Totals:         4       5       0       0       0
  8973 ;;Total ram usage:        9 bytes
  8974 ;; Hardware stack levels used: 1
  8975 ;; Hardware stack levels required when called: 1
  8976 ;; This function calls:
  8977 ;;		Nothing
  8978 ;; This function is called by:
  8979 ;;		___flmul
  8980 ;; This function uses a non-reentrant model
  8981 ;;
  8982                           
  8983     07DA                     __Umul8_16:	
  8984                           ;psect for function __Umul8_16
  8985                           
  8986                           
  8987                           ;incstack = 0
  8988                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8989                           ;__Umul8_16@multiplier stored from wreg
  8990     07DA  00A4               	movwf	__Umul8_16@multiplier
  8991     07DB  01A0               	clrf	__Umul8_16@product
  8992     07DC  01A1               	clrf	__Umul8_16@product+1
  8993     07DD  0872               	movf	__Umul8_16@multiplicand,w
  8994     07DE  00F4               	movwf	??__Umul8_16
  8995     07DF  01F5               	clrf	??__Umul8_16+1
  8996     07E0  0874               	movf	??__Umul8_16,w
  8997     07E1  00A2               	movwf	__Umul8_16@word_mpld
  8998     07E2  0875               	movf	??__Umul8_16+1,w
  8999     07E3  00A3               	movwf	__Umul8_16@word_mpld+1
  9000     07E4                     l3742:
  9001     07E4  1C24               	btfss	__Umul8_16@multiplier,0
  9002     07E5  2FEC               	goto	l836
  9003     07E6  0822               	movf	__Umul8_16@word_mpld,w
  9004     07E7  07A0               	addwf	__Umul8_16@product,f
  9005     07E8  1803               	skipnc
  9006     07E9  0AA1               	incf	__Umul8_16@product+1,f
  9007     07EA  0823               	movf	__Umul8_16@word_mpld+1,w
  9008     07EB  07A1               	addwf	__Umul8_16@product+1,f
  9009     07EC                     l836:
  9010     07EC  3001               	movlw	1
  9011     07ED                     u5895:
  9012     07ED  1003               	clrc
  9013     07EE  0DA2               	rlf	__Umul8_16@word_mpld,f
  9014     07EF  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  9015     07F0  3EFF               	addlw	-1
  9016     07F1  1D03               	skipz
  9017     07F2  2FED               	goto	u5895
  9018     07F3  1003               	clrc
  9019     07F4  0CA4               	rrf	__Umul8_16@multiplier,f
  9020     07F5  0824               	movf	__Umul8_16@multiplier,w
  9021     07F6  1D03               	btfss	3,2
  9022     07F7  2FE4               	goto	l3742
  9023     07F8  0821               	movf	__Umul8_16@product+1,w
  9024     07F9  00F3               	movwf	?__Umul8_16+1
  9025     07FA  0820               	movf	__Umul8_16@product,w
  9026     07FB  00F2               	movwf	?__Umul8_16
  9027     07FC  0008               	return
  9028     07FD                     __end_of__Umul8_16:
  9029                           
  9030                           	psect	text33
  9031     1669                     __ptext33:	
  9032 ;; *************** function ___fldiv *****************
  9033 ;; Defined at:
  9034 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcdiv.c"
  9035 ;; Parameters:    Size  Location     Type
  9036 ;;  a               4   51[BANK0 ] unsigned int 
  9037 ;;  b               4   55[BANK0 ] unsigned int 
  9038 ;; Auto vars:     Size  Location     Type
  9039 ;;  grs             4   71[BANK0 ] unsigned long 
  9040 ;;  rem             4   64[BANK0 ] unsigned long 
  9041 ;;  new_exp         2   69[BANK0 ] int 
  9042 ;;  aexp            1   76[BANK0 ] unsigned char 
  9043 ;;  bexp            1   75[BANK0 ] unsigned char 
  9044 ;;  sign            1   68[BANK0 ] unsigned char 
  9045 ;; Return value:  Size  Location     Type
  9046 ;;                  4   51[BANK0 ] unsigned char 
  9047 ;; Registers used:
  9048 ;;		wreg, status,2, status,0, btemp+1
  9049 ;; Tracked objects:
  9050 ;;		On entry : 300/0
  9051 ;;		On exit  : 300/0
  9052 ;;		Unchanged: 0/0
  9053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9054 ;;      Params:         0       8       0       0       0
  9055 ;;      Locals:         0      13       0       0       0
  9056 ;;      Temps:          0       5       0       0       0
  9057 ;;      Totals:         0      26       0       0       0
  9058 ;;Total ram usage:       26 bytes
  9059 ;; Hardware stack levels used: 1
  9060 ;; Hardware stack levels required when called: 1
  9061 ;; This function calls:
  9062 ;;		Nothing
  9063 ;; This function is called by:
  9064 ;;		_LM35
  9065 ;; This function uses a non-reentrant model
  9066 ;;
  9067                           
  9068     1669                     ___fldiv:	
  9069                           ;psect for function ___fldiv
  9070                           
  9071                           
  9072                           ;incstack = 0
  9073                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  9074     1669  085A               	movf	___fldiv@b+3,w
  9075     166A  3980               	andlw	128
  9076     166B  00E4               	movwf	___fldiv@sign
  9077     166C  085A               	movf	___fldiv@b+3,w
  9078     166D  00DB               	movwf	??___fldiv
  9079     166E  075B               	addwf	??___fldiv,w
  9080     166F  00EB               	movwf	___fldiv@bexp
  9081     1670  1BD9               	btfsc	___fldiv@b+2,7
  9082     1671  146B               	bsf	___fldiv@bexp,0
  9083     1672  086B               	movf	___fldiv@bexp,w
  9084     1673  1903               	btfsc	3,2
  9085     1674  2E83               	goto	l4558
  9086     1675  0A6B               	incf	___fldiv@bexp,w
  9087     1676  1D03               	btfss	3,2
  9088     1677  2E80               	goto	l4554
  9089     1678  3000               	movlw	0
  9090     1679  00DA               	movwf	___fldiv@b+3
  9091     167A  3000               	movlw	0
  9092     167B  00D9               	movwf	___fldiv@b+2
  9093     167C  3000               	movlw	0
  9094     167D  00D8               	movwf	___fldiv@b+1
  9095     167E  3000               	movlw	0
  9096     167F  00D7               	movwf	___fldiv@b
  9097     1680                     l4554:
  9098     1680  17D9               	bsf	___fldiv@b+2,7
  9099     1681  01DA               	clrf	___fldiv@b+3
  9100     1682  2E8B               	goto	l4560
  9101     1683                     l4558:
  9102     1683  3000               	movlw	0
  9103     1684  00DA               	movwf	___fldiv@b+3
  9104     1685  3000               	movlw	0
  9105     1686  00D9               	movwf	___fldiv@b+2
  9106     1687  3000               	movlw	0
  9107     1688  00D8               	movwf	___fldiv@b+1
  9108     1689  3000               	movlw	0
  9109     168A  00D7               	movwf	___fldiv@b
  9110     168B                     l4560:
  9111     168B  0856               	movf	___fldiv@a+3,w
  9112     168C  3980               	andlw	128
  9113     168D  00FF               	movwf	127
  9114     168E  087F               	movf	127,w
  9115     168F  06E4               	xorwf	___fldiv@sign,f
  9116     1690  0856               	movf	___fldiv@a+3,w
  9117     1691  00DB               	movwf	??___fldiv
  9118     1692  075B               	addwf	??___fldiv,w
  9119     1693  00EC               	movwf	___fldiv@aexp
  9120     1694  1BD5               	btfsc	___fldiv@a+2,7
  9121     1695  146C               	bsf	___fldiv@aexp,0
  9122     1696  086C               	movf	___fldiv@aexp,w
  9123     1697  1903               	btfsc	3,2
  9124     1698  2EA7               	goto	l4578
  9125     1699  0A6C               	incf	___fldiv@aexp,w
  9126     169A  1D03               	btfss	3,2
  9127     169B  2EA4               	goto	l4574
  9128     169C  3000               	movlw	0
  9129     169D  00D6               	movwf	___fldiv@a+3
  9130     169E  3000               	movlw	0
  9131     169F  00D5               	movwf	___fldiv@a+2
  9132     16A0  3000               	movlw	0
  9133     16A1  00D4               	movwf	___fldiv@a+1
  9134     16A2  3000               	movlw	0
  9135     16A3  00D3               	movwf	___fldiv@a
  9136     16A4                     l4574:
  9137     16A4  17D5               	bsf	___fldiv@a+2,7
  9138     16A5  01D6               	clrf	___fldiv@a+3
  9139     16A6  2EAF               	goto	l777
  9140     16A7                     l4578:
  9141     16A7  3000               	movlw	0
  9142     16A8  00D6               	movwf	___fldiv@a+3
  9143     16A9  3000               	movlw	0
  9144     16AA  00D5               	movwf	___fldiv@a+2
  9145     16AB  3000               	movlw	0
  9146     16AC  00D4               	movwf	___fldiv@a+1
  9147     16AD  3000               	movlw	0
  9148     16AE  00D3               	movwf	___fldiv@a
  9149     16AF                     l777:
  9150     16AF  0856               	movf	___fldiv@a+3,w
  9151     16B0  0455               	iorwf	___fldiv@a+2,w
  9152     16B1  0454               	iorwf	___fldiv@a+1,w
  9153     16B2  0453               	iorwf	___fldiv@a,w
  9154     16B3  1D03               	skipz
  9155     16B4  2ECE               	goto	l4588
  9156     16B5  3000               	movlw	0
  9157     16B6  00DA               	movwf	___fldiv@b+3
  9158     16B7  3000               	movlw	0
  9159     16B8  00D9               	movwf	___fldiv@b+2
  9160     16B9  3000               	movlw	0
  9161     16BA  00D8               	movwf	___fldiv@b+1
  9162     16BB  3000               	movlw	0
  9163     16BC  00D7               	movwf	___fldiv@b
  9164     16BD  3080               	movlw	128
  9165     16BE  04D9               	iorwf	___fldiv@b+2,f
  9166     16BF  307F               	movlw	127
  9167     16C0  04DA               	iorwf	___fldiv@b+3,f
  9168     16C1                     l4582:
  9169     16C1  0864               	movf	___fldiv@sign,w
  9170     16C2  00FF               	movwf	127
  9171     16C3  087F               	movf	127,w
  9172     16C4  04DA               	iorwf	___fldiv@b+3,f
  9173     16C5  085A               	movf	___fldiv@b+3,w
  9174     16C6  00D6               	movwf	?___fldiv+3
  9175     16C7  0859               	movf	___fldiv@b+2,w
  9176     16C8  00D5               	movwf	?___fldiv+2
  9177     16C9  0858               	movf	___fldiv@b+1,w
  9178     16CA  00D4               	movwf	?___fldiv+1
  9179     16CB  0857               	movf	___fldiv@b,w
  9180     16CC  00D3               	movwf	?___fldiv
  9181     16CD  0008               	return
  9182     16CE                     l4588:
  9183     16CE  086B               	movf	___fldiv@bexp,w
  9184     16CF  1D03               	btfss	3,2
  9185     16D0  2EDA               	goto	l4594
  9186     16D1  3000               	movlw	0
  9187     16D2  00D6               	movwf	?___fldiv+3
  9188     16D3  3000               	movlw	0
  9189     16D4  00D5               	movwf	?___fldiv+2
  9190     16D5  3000               	movlw	0
  9191     16D6  00D4               	movwf	?___fldiv+1
  9192     16D7  3000               	movlw	0
  9193     16D8  00D3               	movwf	?___fldiv
  9194     16D9  0008               	return
  9195     16DA                     l4594:
  9196     16DA  086B               	movf	___fldiv@bexp,w
  9197     16DB  00DB               	movwf	??___fldiv
  9198     16DC  01DC               	clrf	??___fldiv+1
  9199     16DD  085C               	movf	??___fldiv+1,w
  9200     16DE  00DE               	movwf	??___fldiv+3
  9201     16DF  086C               	movf	___fldiv@aexp,w
  9202     16E0  025B               	subwf	??___fldiv,w
  9203     16E1  00DD               	movwf	??___fldiv+2
  9204     16E2  1C03               	skipc
  9205     16E3  03DE               	decf	??___fldiv+3,f
  9206     16E4  085D               	movf	??___fldiv+2,w
  9207     16E5  3E7F               	addlw	127
  9208     16E6  00E5               	movwf	___fldiv@new_exp
  9209     16E7  085E               	movf	??___fldiv+3,w
  9210     16E8  1803               	skipnc
  9211     16E9  3E01               	addlw	1
  9212     16EA  3E00               	addlw	0
  9213     16EB  00E6               	movwf	___fldiv@new_exp+1
  9214     16EC  085A               	movf	___fldiv@b+3,w
  9215     16ED  00E3               	movwf	___fldiv@rem+3
  9216     16EE  0859               	movf	___fldiv@b+2,w
  9217     16EF  00E2               	movwf	___fldiv@rem+2
  9218     16F0  0858               	movf	___fldiv@b+1,w
  9219     16F1  00E1               	movwf	___fldiv@rem+1
  9220     16F2  0857               	movf	___fldiv@b,w
  9221     16F3  00E0               	movwf	___fldiv@rem
  9222     16F4  3000               	movlw	0
  9223     16F5  00DA               	movwf	___fldiv@b+3
  9224     16F6  3000               	movlw	0
  9225     16F7  00D9               	movwf	___fldiv@b+2
  9226     16F8  3000               	movlw	0
  9227     16F9  00D8               	movwf	___fldiv@b+1
  9228     16FA  3000               	movlw	0
  9229     16FB  00D7               	movwf	___fldiv@b
  9230     16FC  3000               	movlw	0
  9231     16FD  00EA               	movwf	___fldiv@grs+3
  9232     16FE  3000               	movlw	0
  9233     16FF  00E9               	movwf	___fldiv@grs+2
  9234     1700  3000               	movlw	0
  9235     1701  00E8               	movwf	___fldiv@grs+1
  9236     1702  3000               	movlw	0
  9237     1703  00E7               	movwf	___fldiv@grs
  9238     1704  01EC               	clrf	___fldiv@aexp
  9239     1705                     l4622:
  9240     1705  301A               	movlw	26
  9241     1706  026C               	subwf	___fldiv@aexp,w
  9242     1707  1803               	btfsc	3,0
  9243     1708  2F4D               	goto	l4624
  9244     1709  086C               	movf	___fldiv@aexp,w
  9245     170A  1903               	btfsc	3,2
  9246     170B  2F29               	goto	l4614
  9247     170C  3001               	movlw	1
  9248     170D  00DB               	movwf	??___fldiv
  9249     170E                     u7985:
  9250     170E  1003               	clrc
  9251     170F  0DE0               	rlf	___fldiv@rem,f
  9252     1710  0DE1               	rlf	___fldiv@rem+1,f
  9253     1711  0DE2               	rlf	___fldiv@rem+2,f
  9254     1712  0DE3               	rlf	___fldiv@rem+3,f
  9255     1713  0BDB               	decfsz	??___fldiv,f
  9256     1714  2F0E               	goto	u7985
  9257     1715  3001               	movlw	1
  9258     1716  00DB               	movwf	??___fldiv
  9259     1717                     u7995:
  9260     1717  1003               	clrc
  9261     1718  0DD7               	rlf	___fldiv@b,f
  9262     1719  0DD8               	rlf	___fldiv@b+1,f
  9263     171A  0DD9               	rlf	___fldiv@b+2,f
  9264     171B  0DDA               	rlf	___fldiv@b+3,f
  9265     171C  0BDB               	decfsz	??___fldiv,f
  9266     171D  2F17               	goto	u7995
  9267     171E  1BEA               	btfsc	___fldiv@grs+3,7
  9268     171F  1457               	bsf	___fldiv@b,0
  9269     1720  3001               	movlw	1
  9270     1721  00DB               	movwf	??___fldiv
  9271     1722                     u8015:
  9272     1722  1003               	clrc
  9273     1723  0DE7               	rlf	___fldiv@grs,f
  9274     1724  0DE8               	rlf	___fldiv@grs+1,f
  9275     1725  0DE9               	rlf	___fldiv@grs+2,f
  9276     1726  0DEA               	rlf	___fldiv@grs+3,f
  9277     1727  0BDB               	decfsz	??___fldiv,f
  9278     1728  2F22               	goto	u8015
  9279     1729                     l4614:
  9280     1729  0856               	movf	___fldiv@a+3,w
  9281     172A  0263               	subwf	___fldiv@rem+3,w
  9282     172B  1D03               	skipz
  9283     172C  2F37               	goto	u8025
  9284     172D  0855               	movf	___fldiv@a+2,w
  9285     172E  0262               	subwf	___fldiv@rem+2,w
  9286     172F  1D03               	skipz
  9287     1730  2F37               	goto	u8025
  9288     1731  0854               	movf	___fldiv@a+1,w
  9289     1732  0261               	subwf	___fldiv@rem+1,w
  9290     1733  1D03               	skipz
  9291     1734  2F37               	goto	u8025
  9292     1735  0853               	movf	___fldiv@a,w
  9293     1736  0260               	subwf	___fldiv@rem,w
  9294     1737                     u8025:
  9295     1737  1C03               	skipc
  9296     1738  2F48               	goto	l4620
  9297     1739  176A               	bsf	___fldiv@grs+3,6
  9298     173A  0853               	movf	___fldiv@a,w
  9299     173B  02E0               	subwf	___fldiv@rem,f
  9300     173C  0854               	movf	___fldiv@a+1,w
  9301     173D  1C03               	skipc
  9302     173E  0F54               	incfsz	___fldiv@a+1,w
  9303     173F  02E1               	subwf	___fldiv@rem+1,f
  9304     1740  0855               	movf	___fldiv@a+2,w
  9305     1741  1C03               	skipc
  9306     1742  0F55               	incfsz	___fldiv@a+2,w
  9307     1743  02E2               	subwf	___fldiv@rem+2,f
  9308     1744  0856               	movf	___fldiv@a+3,w
  9309     1745  1C03               	skipc
  9310     1746  0F56               	incfsz	___fldiv@a+3,w
  9311     1747  02E3               	subwf	___fldiv@rem+3,f
  9312     1748                     l4620:
  9313     1748  3001               	movlw	1
  9314     1749  00FF               	movwf	127
  9315     174A  087F               	movf	127,w
  9316     174B  07EC               	addwf	___fldiv@aexp,f
  9317     174C  2F05               	goto	l4622
  9318     174D                     l4624:
  9319     174D  0863               	movf	___fldiv@rem+3,w
  9320     174E  0462               	iorwf	___fldiv@rem+2,w
  9321     174F  0461               	iorwf	___fldiv@rem+1,w
  9322     1750  0460               	iorwf	___fldiv@rem,w
  9323     1751  1D03               	btfss	3,2
  9324     1752  1467               	bsf	___fldiv@grs,0
  9325     1753                     l4638:
  9326     1753  1BD9               	btfsc	___fldiv@b+2,7
  9327     1754  2F70               	goto	l4640
  9328     1755  3001               	movlw	1
  9329     1756  00DB               	movwf	??___fldiv
  9330     1757                     u8055:
  9331     1757  1003               	clrc
  9332     1758  0DD7               	rlf	___fldiv@b,f
  9333     1759  0DD8               	rlf	___fldiv@b+1,f
  9334     175A  0DD9               	rlf	___fldiv@b+2,f
  9335     175B  0DDA               	rlf	___fldiv@b+3,f
  9336     175C  0BDB               	decfsz	??___fldiv,f
  9337     175D  2F57               	goto	u8055
  9338     175E  1BEA               	btfsc	___fldiv@grs+3,7
  9339     175F  1457               	bsf	___fldiv@b,0
  9340     1760  3001               	movlw	1
  9341     1761  00DB               	movwf	??___fldiv
  9342     1762                     u8075:
  9343     1762  1003               	clrc
  9344     1763  0DE7               	rlf	___fldiv@grs,f
  9345     1764  0DE8               	rlf	___fldiv@grs+1,f
  9346     1765  0DE9               	rlf	___fldiv@grs+2,f
  9347     1766  0DEA               	rlf	___fldiv@grs+3,f
  9348     1767  0BDB               	decfsz	??___fldiv,f
  9349     1768  2F62               	goto	u8075
  9350     1769  30FF               	movlw	255
  9351     176A  07E5               	addwf	___fldiv@new_exp,f
  9352     176B  1803               	skipnc
  9353     176C  0AE6               	incf	___fldiv@new_exp+1,f
  9354     176D  30FF               	movlw	255
  9355     176E  07E6               	addwf	___fldiv@new_exp+1,f
  9356     176F  2F53               	goto	l4638
  9357     1770                     l4640:
  9358     1770  01EC               	clrf	___fldiv@aexp
  9359     1771  1FEA               	btfss	___fldiv@grs+3,7
  9360     1772  2F89               	goto	l4650
  9361     1773  30FF               	movlw	255
  9362     1774  0567               	andwf	___fldiv@grs,w
  9363     1775  00DB               	movwf	??___fldiv
  9364     1776  30FF               	movlw	255
  9365     1777  0568               	andwf	___fldiv@grs+1,w
  9366     1778  00DC               	movwf	??___fldiv+1
  9367     1779  30FF               	movlw	255
  9368     177A  0569               	andwf	___fldiv@grs+2,w
  9369     177B  00DD               	movwf	??___fldiv+2
  9370     177C  307F               	movlw	127
  9371     177D  056A               	andwf	___fldiv@grs+3,w
  9372     177E  00DE               	movwf	??___fldiv+3
  9373     177F  085E               	movf	??___fldiv+3,w
  9374     1780  045D               	iorwf	??___fldiv+2,w
  9375     1781  045C               	iorwf	??___fldiv+1,w
  9376     1782  045B               	iorwf	??___fldiv,w
  9377     1783  1903               	skipnz
  9378     1784  1857               	btfsc	___fldiv@b,0
  9379     1785  2F87               	goto	l4646
  9380     1786  2F89               	goto	l4650
  9381     1787                     l4646:
  9382     1787  01EC               	clrf	___fldiv@aexp
  9383     1788  0AEC               	incf	___fldiv@aexp,f
  9384     1789                     l4650:
  9385     1789  086C               	movf	___fldiv@aexp,w
  9386     178A  1903               	btfsc	3,2
  9387     178B  2FBB               	goto	l4660
  9388     178C  3001               	movlw	1
  9389     178D  07D7               	addwf	___fldiv@b,f
  9390     178E  3000               	movlw	0
  9391     178F  1803               	skipnc
  9392     1790  3001               	movlw	1
  9393     1791  07D8               	addwf	___fldiv@b+1,f
  9394     1792  3000               	movlw	0
  9395     1793  1803               	skipnc
  9396     1794  3001               	movlw	1
  9397     1795  07D9               	addwf	___fldiv@b+2,f
  9398     1796  3000               	movlw	0
  9399     1797  1803               	skipnc
  9400     1798  3001               	movlw	1
  9401     1799  07DA               	addwf	___fldiv@b+3,f
  9402     179A  1C5A               	btfss	___fldiv@b+3,0
  9403     179B  2FBB               	goto	l4660
  9404     179C  0857               	movf	___fldiv@b,w
  9405     179D  00DB               	movwf	??___fldiv
  9406     179E  0858               	movf	___fldiv@b+1,w
  9407     179F  00DC               	movwf	??___fldiv+1
  9408     17A0  0859               	movf	___fldiv@b+2,w
  9409     17A1  00DD               	movwf	??___fldiv+2
  9410     17A2  085A               	movf	___fldiv@b+3,w
  9411     17A3  00DE               	movwf	??___fldiv+3
  9412     17A4  3001               	movlw	1
  9413     17A5  00DF               	movwf	??___fldiv+4
  9414     17A6                     u8145:
  9415     17A6  0D5E               	rlf	??___fldiv+3,w
  9416     17A7  0CDE               	rrf	??___fldiv+3,f
  9417     17A8  0CDD               	rrf	??___fldiv+2,f
  9418     17A9  0CDC               	rrf	??___fldiv+1,f
  9419     17AA  0CDB               	rrf	??___fldiv,f
  9420     17AB  0BDF               	decfsz	??___fldiv+4,f
  9421     17AC  2FA6               	goto	u8145
  9422     17AD  085E               	movf	??___fldiv+3,w
  9423     17AE  00DA               	movwf	___fldiv@b+3
  9424     17AF  085D               	movf	??___fldiv+2,w
  9425     17B0  00D9               	movwf	___fldiv@b+2
  9426     17B1  085C               	movf	??___fldiv+1,w
  9427     17B2  00D8               	movwf	___fldiv@b+1
  9428     17B3  085B               	movf	??___fldiv,w
  9429     17B4  00D7               	movwf	___fldiv@b
  9430     17B5  3001               	movlw	1
  9431     17B6  07E5               	addwf	___fldiv@new_exp,f
  9432     17B7  1803               	skipnc
  9433     17B8  0AE6               	incf	___fldiv@new_exp+1,f
  9434     17B9  3000               	movlw	0
  9435     17BA  07E6               	addwf	___fldiv@new_exp+1,f
  9436     17BB                     l4660:
  9437     17BB  0866               	movf	___fldiv@new_exp+1,w
  9438     17BC  3A80               	xorlw	128
  9439     17BD  00FF               	movwf	127
  9440     17BE  3080               	movlw	128
  9441     17BF  027F               	subwf	127,w
  9442     17C0  1D03               	skipz
  9443     17C1  2FC4               	goto	u8155
  9444     17C2  30FF               	movlw	255
  9445     17C3  0265               	subwf	___fldiv@new_exp,w
  9446     17C4                     u8155:
  9447     17C4  1C03               	skipc
  9448     17C5  2FD4               	goto	l4664
  9449     17C6  30FF               	movlw	255
  9450     17C7  1283               	bcf	3,5	;RP0=0, select bank0
  9451     17C8  1303               	bcf	3,6	;RP1=0, select bank0
  9452     17C9  00E5               	movwf	___fldiv@new_exp
  9453     17CA  3000               	movlw	0
  9454     17CB  00E6               	movwf	___fldiv@new_exp+1
  9455     17CC  3000               	movlw	0
  9456     17CD  00DA               	movwf	___fldiv@b+3
  9457     17CE  3000               	movlw	0
  9458     17CF  00D9               	movwf	___fldiv@b+2
  9459     17D0  3000               	movlw	0
  9460     17D1  00D8               	movwf	___fldiv@b+1
  9461     17D2  3000               	movlw	0
  9462     17D3  00D7               	movwf	___fldiv@b
  9463     17D4                     l4664:
  9464     17D4  1283               	bcf	3,5	;RP0=0, select bank0
  9465     17D5  1303               	bcf	3,6	;RP1=0, select bank0
  9466     17D6  0866               	movf	___fldiv@new_exp+1,w
  9467     17D7  3A80               	xorlw	128
  9468     17D8  00FF               	movwf	127
  9469     17D9  3080               	movlw	128
  9470     17DA  027F               	subwf	127,w
  9471     17DB  1D03               	skipz
  9472     17DC  2FDF               	goto	u8165
  9473     17DD  3001               	movlw	1
  9474     17DE  0265               	subwf	___fldiv@new_exp,w
  9475     17DF                     u8165:
  9476     17DF  1803               	skipnc
  9477     17E0  2FEE               	goto	l799
  9478     17E1  1283               	bcf	3,5	;RP0=0, select bank0
  9479     17E2  1303               	bcf	3,6	;RP1=0, select bank0
  9480     17E3  01E5               	clrf	___fldiv@new_exp
  9481     17E4  01E6               	clrf	___fldiv@new_exp+1
  9482     17E5  3000               	movlw	0
  9483     17E6  00DA               	movwf	___fldiv@b+3
  9484     17E7  3000               	movlw	0
  9485     17E8  00D9               	movwf	___fldiv@b+2
  9486     17E9  3000               	movlw	0
  9487     17EA  00D8               	movwf	___fldiv@b+1
  9488     17EB  3000               	movlw	0
  9489     17EC  00D7               	movwf	___fldiv@b
  9490     17ED  01E4               	clrf	___fldiv@sign
  9491     17EE                     l799:
  9492     17EE  1283               	bcf	3,5	;RP0=0, select bank0
  9493     17EF  1303               	bcf	3,6	;RP1=0, select bank0
  9494     17F0  0865               	movf	___fldiv@new_exp,w
  9495     17F1  00EB               	movwf	___fldiv@bexp
  9496     17F2  1C6B               	btfss	___fldiv@bexp,0
  9497     17F3  2FF6               	goto	l4676
  9498     17F4  17D9               	bsf	___fldiv@b+2,7
  9499     17F5  2FFA               	goto	l4678
  9500     17F6                     l4676:
  9501     17F6  307F               	movlw	127
  9502     17F7  00FF               	movwf	127
  9503     17F8  087F               	movf	127,w
  9504     17F9  05D9               	andwf	___fldiv@b+2,f
  9505     17FA                     l4678:
  9506     17FA  086B               	movf	___fldiv@bexp,w
  9507     17FB  00DB               	movwf	??___fldiv
  9508     17FC  1003               	clrc
  9509     17FD  0C5B               	rrf	??___fldiv,w
  9510     17FE  00DA               	movwf	___fldiv@b+3
  9511     17FF  2EC1               	goto	l4582
  9512     1800                     __end_of___fldiv:
  9513                           
  9514                           	psect	text34
  9515     1D14                     __ptext34:	
  9516 ;; *************** function _Timers_ISR *****************
  9517 ;; Defined at:
  9518 ;;		line 195 in file "controle.c"
  9519 ;; Parameters:    Size  Location     Type
  9520 ;;		None
  9521 ;; Auto vars:     Size  Location     Type
  9522 ;;		None
  9523 ;; Return value:  Size  Location     Type
  9524 ;;                  1    wreg      void 
  9525 ;; Registers used:
  9526 ;;		wreg
  9527 ;; Tracked objects:
  9528 ;;		On entry : 0/0
  9529 ;;		On exit  : 300/0
  9530 ;;		Unchanged: 0/0
  9531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9532 ;;      Params:         0       0       0       0       0
  9533 ;;      Locals:         0       0       0       0       0
  9534 ;;      Temps:          2       0       0       0       0
  9535 ;;      Totals:         2       0       0       0       0
  9536 ;;Total ram usage:        2 bytes
  9537 ;; Hardware stack levels used: 1
  9538 ;; This function calls:
  9539 ;;		Nothing
  9540 ;; This function is called by:
  9541 ;;		Interrupt level 1
  9542 ;; This function uses a non-reentrant model
  9543 ;;
  9544                           
  9545     1D14                     _Timers_ISR:	
  9546                           ;psect for function _Timers_ISR
  9547                           
  9548                           
  9549                           ;controle.c: 197:     if (INTCONbits.T0IF)
  9550     1D14  1D0B               	btfss	11,2	;volatile
  9551     1D15  2D1D               	goto	i1l2310
  9552                           
  9553                           ;controle.c: 198:     {;controle.c: 199:         INTCONbits.T0IF = 0;
  9554     1D16  110B               	bcf	11,2	;volatile
  9555                           
  9556                           ;controle.c: 200:         TMR0 = 100;
  9557     1D17  3064               	movlw	100
  9558     1D18  1283               	bcf	3,5	;RP0=0, select bank0
  9559     1D19  1303               	bcf	3,6	;RP1=0, select bank0
  9560     1D1A  0081               	movwf	1	;volatile
  9561                           
  9562                           ;controle.c: 201:         RC3 = !RC3;
  9563     1D1B  3008               	movlw	8
  9564     1D1C  0687               	xorwf	7,f
  9565     1D1D                     i1l2310:
  9566                           
  9567                           ;controle.c: 203:     if (TMR2IF)
  9568     1D1D  1283               	bcf	3,5	;RP0=0, select bank0
  9569     1D1E  1303               	bcf	3,6	;RP1=0, select bank0
  9570     1D1F  188C               	btfsc	12,1	;volatile
  9571                           
  9572                           ;controle.c: 204:     {;controle.c: 205:         TMR2IF = 0;
  9573     1D20  108C               	bcf	12,1	;volatile
  9574     1D21  0871               	movf	??_Timers_ISR+1,w
  9575     1D22  008A               	movwf	10
  9576     1D23  0E70               	swapf	??_Timers_ISR,w
  9577     1D24  0083               	movwf	3
  9578     1D25  0EFE               	swapf	126,f
  9579     1D26  0E7E               	swapf	126,w
  9580     1D27  0009               	retfie
  9581     1D28                     __end_of_Timers_ISR:
  9582     007E                     btemp	set	126	;btemp
  9583     007E                     wtemp0	set	126
  9584                           
  9585                           	psect	intentry
  9586     0004                     __pintentry:	
  9587                           ;incstack = 0
  9588                           ; Regs used in _Timers_ISR: [wreg]
  9589                           
  9590     0004                     interrupt_function:
  9591     007E                     saved_w	set	btemp
  9592     0004  00FE               	movwf	btemp
  9593     0005  0E03               	swapf	3,w
  9594     0006  00F0               	movwf	??_Timers_ISR
  9595     0007  080A               	movf	10,w
  9596     0008  00F1               	movwf	??_Timers_ISR+1
  9597     0009  160A  158A  2D14   	ljmp	_Timers_ISR
  9598                           
  9599                           	psect	idloc
  9600                           
  9601                           ;Config register IDLOC0 @ 0x2000
  9602                           ;	unspecified, using default values
  9603     2000                     	org	8192
  9604     2000  3FFF               	dw	16383
  9605                           
  9606                           ;Config register IDLOC1 @ 0x2001
  9607                           ;	unspecified, using default values
  9608     2001                     	org	8193
  9609     2001  3FFF               	dw	16383
  9610                           
  9611                           ;Config register IDLOC2 @ 0x2002
  9612                           ;	unspecified, using default values
  9613     2002                     	org	8194
  9614     2002  3FFF               	dw	16383
  9615                           
  9616                           ;Config register IDLOC3 @ 0x2003
  9617                           ;	unspecified, using default values
  9618     2003                     	org	8195
  9619     2003  3FFF               	dw	16383
  9620                           
  9621                           	psect	config
  9622                           
  9623                           ;Config register CONFIG1 @ 0x2007
  9624                           ;	Oscillator Selection bits
  9625                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  9626                           ;	Watchdog Timer Enable bit
  9627                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9628                           ;	Power-up Timer Enable bit
  9629                           ;	PWRTE = 0x1, unprogrammed default
  9630                           ;	RE3/MCLR pin function select bit
  9631                           ;	MCLRE = 0x1, unprogrammed default
  9632                           ;	Code Protection bit
  9633                           ;	CP = 0x1, unprogrammed default
  9634                           ;	Data Code Protection bit
  9635                           ;	CPD = 0x1, unprogrammed default
  9636                           ;	Brown Out Reset Selection bits
  9637                           ;	BOREN = 0x3, unprogrammed default
  9638                           ;	Internal External Switchover bit
  9639                           ;	IESO = 0x1, unprogrammed default
  9640                           ;	Fail-Safe Clock Monitor Enabled bit
  9641                           ;	FCMEN = 0x1, unprogrammed default
  9642                           ;	Low Voltage Programming Enable bit
  9643                           ;	LVP = 0x1, unprogrammed default
  9644                           ;	In-Circuit Debugger Mode bit
  9645                           ;	DEBUG = 0x1, unprogrammed default
  9646     2007                     	org	8199
  9647     2007  3FF4               	dw	16372
  9648                           
  9649                           ;Config register CONFIG2 @ 0x2008
  9650                           ;	unspecified, using default values
  9651                           ;	Brown-out Reset Selection bit
  9652                           ;	BOR4V = 0x1, unprogrammed default
  9653                           ;	Flash Program Memory Self Write Enable bits
  9654                           ;	WRT = 0x3, unprogrammed default
  9655     2008                     	org	8200
  9656     2008  3FFF               	dw	16383

Data Sizes:
    Strings     23
    Constant    144
    Data        12
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     80      80
    BANK1            80     39      46
    BANK3            96     38      60
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_1(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 30
		 -> main@buffer(BANK3[30]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    lcd_init@lcd_pins.port_data	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    lcd_init@lcd_pins.port_en	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    lcd_init@lcd_pins.port_rs	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    lcd_init@lcd_pins	PTR struct . size(1) Largest target is 12
		 -> lcd_pins(BANK3[12]), 

    port_rs	PTR volatile unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTB(SFR0[1]), 

    port_data	PTR volatile unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTB(SFR0[1]), 

    port_en	PTR volatile unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTB(SFR0[1]), 

    muda_pin@_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTB(SFR0[1]), 

    S22$port_data	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    lcd_pins.port_data	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    S22$port_en	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    lcd_pins.port_en	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    S22$port_rs	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    lcd_pins.port_rs	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->___flge
    _main->_lcd_init
    _sprintf->___fleq
    _sprintf->___flge
    _sprintf->___lldiv
    _sprintf->___xxtofl
    _sprintf->__div_to_l_
    _sprintf->__tdiv_to_l_
    ___awdiv->___awmod
    ___lbdiv->___lbmod
    ___llmod->___lldiv
    ___flsub->___xxtofl
    ___fladd->___lbdiv
    _byte->_muda_pin
    _nibble->_muda_pin
    _enable->_muda_pin
    _LM35->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _Timers_ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fltol
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->__Umul8_16
    _lcd_init->_byte
    _byte->_nibble
    _LM35->___fldiv
    ___flmul->___fladd
    ___fldiv->___flmul

Critical Paths under _Timers_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _Timers_ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timers_ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timers_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                40    40      0   77055
                                             37 BANK1      2     2      0
                                              0 BANK3     38    38      0
                               _LM35
                           _PWM_init
                        _Timer0_init
                          _UART_init
                            ___fladd
                             ___flge
                            ___flmul
                            ___fltol
                       _controle_pwm
                           _lcd_init
                            _sprintf
                         _velocidade
 ---------------------------------------------------------------------------------
 (1) _velocidade                                           1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             44    37      7   42310
                                              0 BANK1     37    30      7
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4   10083
                                             51 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1513
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1705
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _fround                                              18    14      4    7599
                                             51 BANK0     18    14      4
                            ___fladd (ARG)
                            ___flmul
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              6     5      1     502
                                              2 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     511
                                              8 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     634
                                              2 COMMON     8     0      8
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     634
                                              2 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     952
                                              6 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     781
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     697
                                             70 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3727
                                             25 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3482
                                              5 BANK0     20    12      8
                          __Umul8_16 (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     155
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1346
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0   13541
                                              9 COMMON     1     1      0
                                             10 BANK0      2     2      0
                               _byte
                             _enable
                             _nibble
 ---------------------------------------------------------------------------------
 (2) _byte                                                 6     3      3    8742
                                              4 BANK0      6     3      3
                             _enable
                           _muda_pin
                             _nibble
 ---------------------------------------------------------------------------------
 (2) _nibble                                               4     2      2    2439
                                              0 BANK0      4     2      2
                           _muda_pin
 ---------------------------------------------------------------------------------
 (2) _enable                                               2     2      0    2045
                                              0 BANK0      2     2      0
                           _muda_pin
 ---------------------------------------------------------------------------------
 (3) _muda_pin                                             7     1      6    2045
                                              2 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (1) _controle_pwm                                         1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LM35                                                20    16      4    8891
                                              0 BANK1     20    16      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     656
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    6236
                                             25 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fladd (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              2 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1863
                                             51 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Timers_ISR                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LM35
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
         ___lbdiv (ARG)
         ___lbmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___xxtofl
   _PWM_init
   _Timer0_init
   _UART_init
   ___fladd
   ___flge
   ___flmul
   ___fltol
     ___fladd (ARG)
     ___flmul (ARG)
     _scale (ARG)
       ___awdiv
       ___awmod
       ___flmul
   _controle_pwm
   _lcd_init
     _byte
       _enable
         _muda_pin
       _muda_pin
       _nibble
         _muda_pin
     _enable
     _nibble
   _sprintf
     ___awdiv
     ___fladd
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___fladd (ARG)
       ___flmul (ARG)
       ___lbdiv (ARG)
       ___lbmod (ARG)
     _scale
   _velocidade

 _Timers_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     26      3C       9       62.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     27      2E       7       57.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      C6      12        0.0%
ABS                  0      0      C6       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Apr 22 15:38:48 2023

           ___fldiv@aexp 006C             ___fldiv@bexp 006B                        pc 0002  
           ___fldiv@sign 0064                       _D4 00C9                       _D5 01CA  
                     _D6 01C8                       _D7 01C6                       l91 1D35  
                     _EN 007A                       l97 13DB                       _RS 00CB  
           ___awdiv@sign 0025                       fsr 0004      ___wmul@multiplicand 0074  
    __Umul8_16@word_mpld 0022                      l121 1D0E                      l135 1627  
                    l138 1632                      l341 0057                      l604 1FE2  
                    l622 13AD                      l721 0625                      l394 1D86  
                    l580 1E1C                      l581 1E36                      l725 069A  
                    l742 0751                      l638 1D76                      l727 067A  
                    l575 130A                      l585 1164                      l836 07EC  
                    l588 11CA                      l861 11FB                      l777 16AF  
                    l874 124F                      l875 1259                      l799 17EE  
                    _GIE 005F                      _RC3 003B                      _PS0 0408  
                    _PR2 0092                      _PS1 0409                      _PS2 040A  
                    _PSA 040B                      fsr0 0004                      indf 0000  
           ___awmod@sign 0077             ___flmul@aexp 0047             ___flmul@bexp 0048  
           ___flmul@sign 0046             ___flmul@temp 0051             ___flmul@prod 004D  
           ___fltol@exp1 006F                     l4100 0A18                     l4102 0A20  
                   l4006 06D9                     l4120 0A43                     l4040 0779  
                   l4202 0C89                     l4034 0772                     l4026 0763  
                   l4018 0743                     l4042 077B                     l5010 05D8  
                   l4212 0CB8                     l4220 0CCB                     l4116 0A39  
                   l4052 0786                     l4206 0C9F                     l4118 0A3B  
                   l4062 07B9                     l5006 0577                     l4128 0A51  
                   l4072 07C9                     l4048 0784                     l5104 0070  
                   l5008 0038                     l5032 155F                     l4314 1386  
                   l4306 1366                     l4242 09BF                     l5042 15A9  
                   l4180 0C21                     l4076 07CD                     l4500 1FDE  
                   l4324 1399                     l4236 092C                     l5052 1619  
                   l5044 15F4                     l4182 0C3E                     l4078 07D1  
                   l4430 1F90                     l4342 1287                     l5038 158E  
                   l4192 0C57                     l4416 1F4B                     l4520 1E9D  
                   l4360 12BA                     l4336 13BC                     l4328 13A9  
                   l3800 1F35                     l4264 0E44                     l5064 1644  
                   l5072 1656                     l4098 0A16                     l4442 1E48  
                   l4426 1F83                     l4418 1F5B                     l4522 1EAD  
                   l4530 1ED8                     l4346 1290                     l4282 0FD5  
                   l4258 0DBF                     l4620 1748                     l4188 0C55  
                   l4452 117E                     l4508 1FF1                     l4292 133A  
                   l3812 1E54                     l4276 0F50                     l4268 0E6F  
                   l4614 1729                     l4622 1705                     l3742 07E4  
                   l3902 05F7                     l4526 1ECB                     l4390 1319  
                   l4382 1306                     l3830 1E7D                     l4640 1770  
                   l4624 174D                     l4560 168B                     l4712 1239  
                   l4704 120C                     l3736 1DB4                     l4456 11A4  
                   l3904 05FF                     l4480 1FA9                     l4368 12E2  
                   l4288 1331                     l3824 1E61                     l3816 1E5B  
                   l4650 1789                     l4554 1680                     l4730 1276  
                   l4706 121E                     l3922 061A                     l4378 12F6  
                   l3826 1E6F                     l3834 1E88                     l4660 17BB  
                   l4716 124D                     l3932 062F                     l4476 1FA0  
                   l4396 1D7E                     l3852 10B4                     l4900 02EA  
                   l4820 0054                     l4646 1787                     l4638 1753  
                   l4582 16C1                     l4574 16A4                     l4558 1683  
                   l4718 123E                     l3926 061D                     l3854 10BD  
                   l3774 1EF6                     l3838 1E90                     l4822 0059  
                   l4664 17D4                     l4496 1FCE                     l3864 10CC  
                   l3872 1D61                     l3792 1F22                     l3784 1EFE  
                   l3768 1EEB                     l4594 16DA                     l4578 16A7  
                   l3970 0683                     l3962 064D                     l3786 1F0C  
                   l4930 03A6                     l4914 0328                     l4906 02EC  
                   l4842 00CC                     l4826 005E                     l4676 17F6  
                   l4588 16CE                     l4692 11F3                     l3972 0685  
                   l3980 0694                     l3796 1F2D                     l4828 007B  
                   l4678 17FA                     l4950 03EC                     l4942 03D3  
                   l4936 03B7                     l4928 0335                     l4872 01AE  
                   _ADFM 04FF                     l4698 120A                     l3898 05F4  
                   l4882 022B                     l4866 018F                     l4858 0128  
                   l3996 06C7                     l3988 06A8                     l4972 050E  
                   l3998 06C9                     l4966 04FF                     l4886 0246  
                   l4974 0513                     l4992 0563                     l4984 0527  
                   l4896 0289                     l4998 0570                     _ADON 00F8  
                   _CHS0 00FA                     _CHS1 00FB                     _CHS2 00FC  
                   _CHS3 00FD                     STR_1 1096                     _LM35 13C5  
                   _T0IE 005D                     _T0IF 005A                     _T0CS 040D  
                   u6045 1E64                     u7015 0860                     u6145 1D64  
                   u7025 08A7                     u6065 1E75                     u7105 0D01  
                   u6411 0704                     u6403 06EB                     u6315 0689  
                   u7035 08EF                     u6075 1E7E                     u7115 0D3B  
                   u6420 0718                     u6412 0705                     _RCIF 0065  
                   u6421 0719                     u6413 070A                     u7205 0F13  
                   u7125 0D82                     u6422 071E                     u6414 070B  
                   u6270 066D                     u8015 1722                     u6423 071F  
                   u6415 0710                     u7055 0942                     u6416 0711  
                   u6280 066E                     u8025 1737                     u6265 0661  
                   u7065 0982                     u7225 0F66                     u7145 0DD5  
                   u7075 09CA                     u7235 0FA0                     u7155 0E0F  
                   u7405 12BC                     u7245 0FD8                     u7165 0E47  
                   u8055 1757                     u8215 1215                     u7415 12D1  
                   u7335 139A                     u8145 17A6                     u6465 0765  
                   u7425 12E4                     u7185 0E92                     u8155 17C4  
                   u8075 1762                     u8235 1231                     u6395 06CD  
                   u7275 1368                     u7195 0ECC                     u8165 17DF  
                   u7701 11B5                     u6565 07A3                     u7605 1F84  
                   u7525 1D87                     u7365 13B2                     u7285 1379  
                   u7702 11B6                     u8255 1246                     u7703 11BB  
                   u7535 1D8E                     u7295 1387                     u5864 1DA7  
                   u7704 11BC                     u6825 0BD6                     u5865 1DA5  
                   u7705 11C1                     u7465 12F7                     u5945 1F01  
                   u8425 01E9                     u5874 1DBA                     u7706 11C2  
                   u6755 0AF5                     u5875 1DB8                     u8515 033D  
                   u7645 1E44                     u7805 1FE7                     u7565 1F4F  
                   u5965 1F0D                     u8605 052A                     u5895 07ED  
                   u6855 0C0D                     u8295 1261                     u7495 130F  
                   u5975 1F19                     u8615 0559                     u8535 03C0  
                   u8455 0229                     u6865 0C25                     u6785 0B4A  
                   u7681 118F                     u7745 1FB2                     u7585 1F5D  
                   u5985 1F23                     u8545 03CD                     u7682 1190  
                   u6955 0C74                     u7683 1195                     u7595 1F72  
                   u8475 02EF                     u7684 1196                     u6965 0C92  
                   u6885 0C30                     u7685 119B                     u7845 1EA1  
                   u8645 058F                     u8565 0449                     u8485 031E  
                   u7686 119C                     u6975 0CAA                     u8807 1DFC  
                   u7775 1FCF                     u8575 04BA                     u8817 13D5  
                   u7865 1EBB                     u6995 081F                     u7875 1ECC  
                   u8767 1664                     u7985 170E                     u8777 14F2  
                   u7995 1717                     u8787 153D                     u8797 1DE1  
                   _TMR0 0001                     _TMR2 0011                     _main 1543  
                   _byte 0803                     btemp 007E                     start 000C  
        ___fldiv@new_exp 0065             _sprintf$1058 00AC                    ?_LM35 00A0  
          ___fltol@sign1 006E                    _ADCS0 00FE                    _ADCS1 00FF  
        __end_of___fladd 07DA                    ?_main 0070            ?_controle_pwm 0070  
                  ?_byte 0024          __end_of___fldiv 1800          __end_of___awdiv 1F3A  
        __end_of___lbdiv 10CE          __end_of___flneg 1CCA          __end_of___awmod 1E95  
        __end_of___lbmod 1D7C          __end_of___flmul 0CD8          __end_of___flsub 1D5D  
        __end_of___fltol 2000          __end_of___lldiv 1F99          ___awdiv@divisor 0020  
        __end_of___llmod 1EE1                    _T2CON 0012          ___awdiv@counter 0024  
                  _RCREG 001A                    _SPBRG 0099                    _PORTB 0006  
                  _TRISB 0086                    _TXREG 0019           velocidade@duty 0072  
        __end_of_dpowers 1096                    _scale 0CD8                    main@c 01AE  
                  main@i 01AF                    pclath 000A         __end_of_PWM_init 1D3F  
                  status 0003                    wtemp0 007E          __end_of_sprintf 05DD  
        ___lbdiv@divisor 0078          ___lbdiv@counter 0021             __end_of_LM35 1473  
            byte@escreve 0024          __initialization 000F             __end_of_main 1669  
           __end_of_byte 0848                   ??_LM35 00A4           ??_controle_pwm 0072  
                 ??_main 00C5                   ??_byte 0027         ___llmod@dividend 002A  
                 ?_scale 0053                   _ADRESH 001E                   _ADRESL 009E  
                 _CCPR1L 0015         ___awdiv@dividend 0022                   _ANSELH 0189  
                 i1l2310 1D1D                   _TMR2IF 0061                   _TRISC2 043A  
       __end_of___xxtofl 127F            ??_Timer0_init 0072         __end_of__powers_ 103A  
       __end_of_lcd_init 1543                   ___flge 1148                   ___fleq 1E01  
              ??___fladd 002D                   ___wmul 1D7C        __end_of_UART_init 1CF0  
              ??___fldiv 005B                ??___awdiv 0078                ??___lbdiv 0079  
              ??___flneg 0076                ??___awmod 0076                ??___lbmod 0073  
              ??___flmul 0041                ??___flsub 007A                ??___fltol 006A  
              ??___lldiv 0020                ??___llmod 002E                   _enable 1DC8  
                 _nibble 10CE                   _fround 0848               _Timers_ISR 1D14  
       ___awdiv@quotient 0026          ___awmod@divisor 0072          ___awmod@counter 0076  
       __end_of_muda_pin 1DC8                   saved_w 007E                ??_sprintf 00A7  
       ___lbdiv@dividend 0020               ___flge@ff1 0072               ___flge@ff2 0076  
           ___xxtofl@arg 0022             ___xxtofl@exp 0021             ___xxtofl@val 0072  
             ___fleq@ff1 0072               ___fleq@ff2 0076          ___lbmod@divisor 0072  
__end_of__initialization 0031          ___lbmod@counter 0076               ___flneg@f1 0072  
             ___fltol@f1 0066           __pcstackCOMMON 0070             __pidataBANK3 1CD6  
          __end_of_scale 1000         ___lbdiv@quotient 0022      __end_of_Timer0_init 1CD6  
              ?_PWM_init 0070               __div_to_l_ 127F          __div_to_l_@exp1 0026  
        __div_to_l_@cntr 0025                  ??_scale 0057          __div_to_l_@quot 0021  
             __pbssBANK1 00C7               __pbssBANK3 01C2     __end_of_controle_pwm 1D14  
          __div_to_l_@f1 0072            __div_to_l_@f2 0076        __end_of__Umul8_16 07FD  
             __pmaintext 1543                  ?___flge 0072                  ?___fleq 0072  
                ?___wmul 0072               __pintentry 0004                  ?_enable 0070  
                _CCP1CON 0017                  ?_nibble 0020                  ?_fround 0053  
            ?_Timers_ISR 0070               ??_PWM_init 0072                ?___xxtofl 0072  
                _GO_DONE 00F9                ?_lcd_init 0070               __stringtab 1000  
              _LM35$1054 00AE                ?_muda_pin 0072           main@duty_cycle 01B1  
      __end_of__npowers_ 106E               _scale$1057 0061              _Timer0_init 1CCA  
                ___fladd 05DD                  ___fldiv 1669                  ___awdiv 1EE1  
                ___lbdiv 10AD                  ___flneg 1CC1                  ___awmod 1E4A  
                ___lbmod 1D5D                  ___flmul 09FF                  ___flsub 1D3F  
                ___fltol 1F99                  ___lldiv 1F3A                  ___llmod 1E95  
          muda_pin@_port 0072                  __ptext1 1CBA                  __ptext2 0035  
                __ptext3 0CD8                  __ptext4 1E4A                  __ptext5 1EE1  
                __ptext6 0848                  __ptext7 1D5D                  __ptext8 10AD  
                __ptext9 1322              ?__div_to_l_ 0072          LM35@temperatura 00AA  
                _dpowers 106E               ??___xxtofl 0076         ___awmod@dividend 0074  
                _port_en 01C2                  _port_rs 01C4                  _sprintf 0035  
             ??_lcd_init 002A     end_of_initialization 0031          ___lldiv@divisor 0072  
             ??_muda_pin 0078          ___lldiv@counter 0025                _RCSTAbits 0018  
         __tdiv_to_l_@f1 0072           __tdiv_to_l_@f2 0076            ??__tdiv_to_l_ 0020  
              _UART_init 1CE2               _velocidade 1CBA              ___fladd@grs 0038  
       ___lbmod@dividend 0075            ___xxtofl@sign 0020                _TRISCbits 0087  
            ___fldiv@grs 0067              ___fldiv@rem 0060              ___lbmod@rem 0077  
            ___flmul@grs 0049               main@buffer 0190                _TXSTAbits 0098  
         __end_of___flge 11DD           __end_of___fleq 1E4A           __end_of___wmul 1D9D  
         __end_of_enable 1E01               ?_UART_init 0070           __end_of_nibble 1148  
         __end_of_fround 09FF             _controle_pwm 1D01      start_initialization 000F  
    __end_of__tdiv_to_l_ 13C5               nibble@dado 0020          ___llmod@divisor 0026  
        ___llmod@counter 002F                 ??___flge 0020                 ??___fleq 0020  
               ??___wmul 0076               init_fetch0 1CF0                 ??_enable 0020  
              __Umul8_16 07DA              __pdataBANK3 01B6                 ??_nibble 0022  
           ??_Timers_ISR 0070                 ??_fround 0057            sprintf@tmpval 00BB  
            ?_velocidade 0070                ___fladd@a 0029                ___fladd@b 0025  
             fround@prec 0064                ___fldiv@a 0053                ___fldiv@b 0057  
              ___flmul@a 003D                ___flmul@b 0039              __pbssCOMMON 007A  
              ___flsub@a 0039                ___flsub@b 003D                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00A0            __pcstackBANK3 0190  
     controle_pwm@ligado 0072              sprintf@flag 00B1              sprintf@eexp 00B9  
            sprintf@fval 00C0              sprintf@prec 00B3       __end_of_Timers_ISR 1D28  
           ?_Timer0_init 0070                 ?___fladd 0025                 ?___fldiv 0053  
               ?___awdiv 0020                 ?___lbdiv 0078                 ?___flneg 0072  
               ?___awmod 0072                 ?___lbmod 0072                 ?___flmul 0039  
               ?___flsub 0039                 ?___fltol 0066                 ?___lldiv 0072  
               ?___llmod 0026                __npowers_ 103A               ?__Umul8_16 0072  
              __pstrings 1000              __tdiv_to_l_ 1322              ??_UART_init 0072  
           ??__div_to_l_ 0020                 ?_sprintf 00A0             muda_pin@_pin 0074  
           muda_pin@_val 0076        interrupt_function 0004           ___wmul@product 0076  
     __end_of__div_to_l_ 1322                _port_data 00C7              __stringbase 1005  
      ___wmul@multiplier 0072                 _PWM_init 1D28              ??__Umul8_16 0074  
            _fround$1055 0060              _fround$1056 005C       __end_of__stringtab 1006  
             sprintf@val 00B5                 ___xxtofl 11DD                 __ptext10 127F  
               __ptext11 1D7C                 __ptext20 1473                 __ptext12 1E95  
               __ptext21 0803                 __ptext13 1F3A                 __ptext30 11DD  
               __ptext22 10CE                 __ptext14 1F99                 __ptext31 09FF  
               __ptext23 1DC8                 __ptext15 1D3F                 __ptext32 07DA  
               __ptext24 1D9D                 __ptext16 05DD                 __ptext33 1669  
               __ptext25 1D01                 __ptext17 1CC1                 __ptext34 1D14  
               __ptext26 1CE2                 __ptext18 1148                 __ptext27 1CCA  
               __ptext19 1E01                 __ptext28 1D28                 __ptext29 13C5  
               __powers_ 1006                 _lcd_init 1473                 _lcd_pins 01B6  
               _muda_pin 1D9D              LM35@adc_val 00B2                 main@temp 01B2  
       lcd_init@lcd_pins 0079             ??_velocidade 0072                 byte@dado 0026  
             _INTCONbits 000B                 init_ram0 1CF4                 scale@scl 0065  
               intlevel1 0000                sprintf@ap 00B0         __tdiv_to_l_@exp1 0028  
       __tdiv_to_l_@cntr 0027                sprintf@sp 00BF         __tdiv_to_l_@quot 0023  
       ___lldiv@dividend 0076       __end_of_velocidade 1CC1                stringcode 1000  
           ?__tdiv_to_l_ 0072   __Umul8_16@multiplicand 0072                 sprintf@c 00C4  
               sprintf@f 00A0         ___lldiv@quotient 0021                 stringdir 1000  
               stringtab 1000            ___fladd@signs 0035             ___fladd@aexp 0036  
           ___fladd@bexp 0037     __Umul8_16@multiplier 0024              _pwm_enabled 00CD  
      __Umul8_16@product 0020  
