

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Apr 22 15:38:36 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    53                           	dabs	1,0x7E,2
    54     0000                     
    55                           ; Version 2.40
    56                           ; Generated 17/11/2021 GMT
    57                           ; 
    58                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F887 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90     0000                     	;# 
    91     0001                     	;# 
    92     0002                     	;# 
    93     0003                     	;# 
    94     0004                     	;# 
    95     0005                     	;# 
    96     0006                     	;# 
    97     0007                     	;# 
    98     0008                     	;# 
    99     0009                     	;# 
   100     000A                     	;# 
   101     000B                     	;# 
   102     000C                     	;# 
   103     000D                     	;# 
   104     000E                     	;# 
   105     000E                     	;# 
   106     000F                     	;# 
   107     0010                     	;# 
   108     0011                     	;# 
   109     0012                     	;# 
   110     0013                     	;# 
   111     0014                     	;# 
   112     0015                     	;# 
   113     0015                     	;# 
   114     0016                     	;# 
   115     0017                     	;# 
   116     0018                     	;# 
   117     0019                     	;# 
   118     001A                     	;# 
   119     001B                     	;# 
   120     001B                     	;# 
   121     001C                     	;# 
   122     001D                     	;# 
   123     001E                     	;# 
   124     001F                     	;# 
   125     0081                     	;# 
   126     0085                     	;# 
   127     0086                     	;# 
   128     0087                     	;# 
   129     0088                     	;# 
   130     0089                     	;# 
   131     008C                     	;# 
   132     008D                     	;# 
   133     008E                     	;# 
   134     008F                     	;# 
   135     0090                     	;# 
   136     0091                     	;# 
   137     0092                     	;# 
   138     0093                     	;# 
   139     0093                     	;# 
   140     0093                     	;# 
   141     0094                     	;# 
   142     0095                     	;# 
   143     0096                     	;# 
   144     0097                     	;# 
   145     0098                     	;# 
   146     0099                     	;# 
   147     009A                     	;# 
   148     009B                     	;# 
   149     009C                     	;# 
   150     009D                     	;# 
   151     009E                     	;# 
   152     009F                     	;# 
   153     0105                     	;# 
   154     0107                     	;# 
   155     0108                     	;# 
   156     0109                     	;# 
   157     010C                     	;# 
   158     010C                     	;# 
   159     010D                     	;# 
   160     010E                     	;# 
   161     010F                     	;# 
   162     0185                     	;# 
   163     0187                     	;# 
   164     0188                     	;# 
   165     0189                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     0000                     	;# 
   169     0001                     	;# 
   170     0002                     	;# 
   171     0003                     	;# 
   172     0004                     	;# 
   173     0005                     	;# 
   174     0006                     	;# 
   175     0007                     	;# 
   176     0008                     	;# 
   177     0009                     	;# 
   178     000A                     	;# 
   179     000B                     	;# 
   180     000C                     	;# 
   181     000D                     	;# 
   182     000E                     	;# 
   183     000E                     	;# 
   184     000F                     	;# 
   185     0010                     	;# 
   186     0011                     	;# 
   187     0012                     	;# 
   188     0013                     	;# 
   189     0014                     	;# 
   190     0015                     	;# 
   191     0015                     	;# 
   192     0016                     	;# 
   193     0017                     	;# 
   194     0018                     	;# 
   195     0019                     	;# 
   196     001A                     	;# 
   197     001B                     	;# 
   198     001B                     	;# 
   199     001C                     	;# 
   200     001D                     	;# 
   201     001E                     	;# 
   202     001F                     	;# 
   203     0081                     	;# 
   204     0085                     	;# 
   205     0086                     	;# 
   206     0087                     	;# 
   207     0088                     	;# 
   208     0089                     	;# 
   209     008C                     	;# 
   210     008D                     	;# 
   211     008E                     	;# 
   212     008F                     	;# 
   213     0090                     	;# 
   214     0091                     	;# 
   215     0092                     	;# 
   216     0093                     	;# 
   217     0093                     	;# 
   218     0093                     	;# 
   219     0094                     	;# 
   220     0095                     	;# 
   221     0096                     	;# 
   222     0097                     	;# 
   223     0098                     	;# 
   224     0099                     	;# 
   225     009A                     	;# 
   226     009B                     	;# 
   227     009C                     	;# 
   228     009D                     	;# 
   229     009E                     	;# 
   230     009F                     	;# 
   231     0105                     	;# 
   232     0107                     	;# 
   233     0108                     	;# 
   234     0109                     	;# 
   235     010C                     	;# 
   236     010C                     	;# 
   237     010D                     	;# 
   238     010E                     	;# 
   239     010F                     	;# 
   240     0185                     	;# 
   241     0187                     	;# 
   242     0188                     	;# 
   243     0189                     	;# 
   244     018C                     	;# 
   245     018D                     	;# 
   246     0000                     	;# 
   247     0001                     	;# 
   248     0002                     	;# 
   249     0003                     	;# 
   250     0004                     	;# 
   251     0005                     	;# 
   252     0006                     	;# 
   253     0007                     	;# 
   254     0008                     	;# 
   255     0009                     	;# 
   256     000A                     	;# 
   257     000B                     	;# 
   258     000C                     	;# 
   259     000D                     	;# 
   260     000E                     	;# 
   261     000E                     	;# 
   262     000F                     	;# 
   263     0010                     	;# 
   264     0011                     	;# 
   265     0012                     	;# 
   266     0013                     	;# 
   267     0014                     	;# 
   268     0015                     	;# 
   269     0015                     	;# 
   270     0016                     	;# 
   271     0017                     	;# 
   272     0018                     	;# 
   273     0019                     	;# 
   274     001A                     	;# 
   275     001B                     	;# 
   276     001B                     	;# 
   277     001C                     	;# 
   278     001D                     	;# 
   279     001E                     	;# 
   280     001F                     	;# 
   281     0081                     	;# 
   282     0085                     	;# 
   283     0086                     	;# 
   284     0087                     	;# 
   285     0088                     	;# 
   286     0089                     	;# 
   287     008C                     	;# 
   288     008D                     	;# 
   289     008E                     	;# 
   290     008F                     	;# 
   291     0090                     	;# 
   292     0091                     	;# 
   293     0092                     	;# 
   294     0093                     	;# 
   295     0093                     	;# 
   296     0093                     	;# 
   297     0094                     	;# 
   298     0095                     	;# 
   299     0096                     	;# 
   300     0097                     	;# 
   301     0098                     	;# 
   302     0099                     	;# 
   303     009A                     	;# 
   304     009B                     	;# 
   305     009C                     	;# 
   306     009D                     	;# 
   307     009E                     	;# 
   308     009F                     	;# 
   309     0105                     	;# 
   310     0107                     	;# 
   311     0108                     	;# 
   312     0109                     	;# 
   313     010C                     	;# 
   314     010C                     	;# 
   315     010D                     	;# 
   316     010E                     	;# 
   317     010F                     	;# 
   318     0185                     	;# 
   319     0187                     	;# 
   320     0188                     	;# 
   321     0189                     	;# 
   322     018C                     	;# 
   323     018D                     	;# 
   324                           
   325                           	psect	idataBANK3
   326     1AC5                     __pidataBANK3:
   327                           
   328                           ;initializer for _lcd_pins
   329     1AC5  3406               	retlw	6
   330     1AC6  3400               	retlw	0
   331     1AC7  3402               	retlw	2
   332     1AC8  3406               	retlw	6
   333     1AC9  3400               	retlw	0
   334     1ACA  3403               	retlw	3
   335     1ACB  3406               	retlw	6
   336     1ACC  3400               	retlw	0
   337     1ACD  3404               	retlw	4
   338     1ACE  3405               	retlw	5
   339     1ACF  3406               	retlw	6
   340     1AD0  3407               	retlw	7
   341                           
   342                           	psect	strings
   343     1000                     __pstrings:
   344     1000                     stringtab:
   345     1000                     __stringtab:
   346     1000                     stringcode:	
   347                           ;	String table - string pointers are 1 byte each
   348                           
   349     1000                     stringdir:
   350     1000  3010               	movlw	high stringdir
   351     1001  008A               	movwf	10
   352     1002  0804               	movf	4,w
   353     1003  0A84               	incf	4,f
   354     1004  0782               	addwf	2,f
   355     1005                     __stringbase:
   356     1005  3400               	retlw	0
   357     1006                     __end_of__stringtab:
   358     1006                     __powers_:
   359     1006  3400               	retlw	0
   360     1007  3400               	retlw	0
   361     1008  3480               	retlw	128
   362     1009  343F               	retlw	63
   363     100A  3400               	retlw	0
   364     100B  3400               	retlw	0
   365     100C  3420               	retlw	32
   366     100D  3441               	retlw	65
   367     100E  3400               	retlw	0
   368     100F  3400               	retlw	0
   369     1010  34C8               	retlw	200
   370     1011  3442               	retlw	66
   371     1012  3400               	retlw	0
   372     1013  3400               	retlw	0
   373     1014  347A               	retlw	122
   374     1015  3444               	retlw	68
   375     1016  3400               	retlw	0
   376     1017  3440               	retlw	64
   377     1018  341C               	retlw	28
   378     1019  3446               	retlw	70
   379     101A  3400               	retlw	0
   380     101B  3450               	retlw	80
   381     101C  34C3               	retlw	195
   382     101D  3447               	retlw	71
   383     101E  3400               	retlw	0
   384     101F  3424               	retlw	36
   385     1020  3474               	retlw	116
   386     1021  3449               	retlw	73
   387     1022  3480               	retlw	128
   388     1023  3496               	retlw	150
   389     1024  3418               	retlw	24
   390     1025  344B               	retlw	75
   391     1026  3420               	retlw	32
   392     1027  34BC               	retlw	188
   393     1028  34BE               	retlw	190
   394     1029  344C               	retlw	76
   395     102A  3428               	retlw	40
   396     102B  346B               	retlw	107
   397     102C  346E               	retlw	110
   398     102D  344E               	retlw	78
   399     102E  34F9               	retlw	249
   400     102F  3402               	retlw	2
   401     1030  3415               	retlw	21
   402     1031  3450               	retlw	80
   403     1032  34EC               	retlw	236
   404     1033  3478               	retlw	120
   405     1034  34AD               	retlw	173
   406     1035  3460               	retlw	96
   407     1036  34CA               	retlw	202
   408     1037  34F2               	retlw	242
   409     1038  3449               	retlw	73
   410     1039  3471               	retlw	113
   411     103A                     __end_of__powers_:
   412     103A                     __npowers_:
   413     103A  3400               	retlw	0
   414     103B  3400               	retlw	0
   415     103C  3480               	retlw	128
   416     103D  343F               	retlw	63
   417     103E  34CD               	retlw	205
   418     103F  34CC               	retlw	204
   419     1040  34CC               	retlw	204
   420     1041  343D               	retlw	61
   421     1042  340A               	retlw	10
   422     1043  34D7               	retlw	215
   423     1044  3423               	retlw	35
   424     1045  343C               	retlw	60
   425     1046  346F               	retlw	111
   426     1047  3412               	retlw	18
   427     1048  3483               	retlw	131
   428     1049  343A               	retlw	58
   429     104A  3417               	retlw	23
   430     104B  34B7               	retlw	183
   431     104C  34D1               	retlw	209
   432     104D  3438               	retlw	56
   433     104E  34AC               	retlw	172
   434     104F  34C5               	retlw	197
   435     1050  3427               	retlw	39
   436     1051  3437               	retlw	55
   437     1052  34BD               	retlw	189
   438     1053  3437               	retlw	55
   439     1054  3486               	retlw	134
   440     1055  3435               	retlw	53
   441     1056  3495               	retlw	149
   442     1057  34BF               	retlw	191
   443     1058  34D6               	retlw	214
   444     1059  3433               	retlw	51
   445     105A  3477               	retlw	119
   446     105B  34CC               	retlw	204
   447     105C  342B               	retlw	43
   448     105D  3432               	retlw	50
   449     105E  345F               	retlw	95
   450     105F  3470               	retlw	112
   451     1060  3489               	retlw	137
   452     1061  3430               	retlw	48
   453     1062  34FF               	retlw	255
   454     1063  34E6               	retlw	230
   455     1064  34DB               	retlw	219
   456     1065  342E               	retlw	46
   457     1066  3408               	retlw	8
   458     1067  34E5               	retlw	229
   459     1068  343C               	retlw	60
   460     1069  341E               	retlw	30
   461     106A  3460               	retlw	96
   462     106B  3442               	retlw	66
   463     106C  34A2               	retlw	162
   464     106D  340D               	retlw	13
   465     106E                     __end_of__npowers_:
   466     106E                     _dpowers:
   467     106E  3401               	retlw	1
   468     106F  3400               	retlw	0
   469     1070  3400               	retlw	0
   470     1071  3400               	retlw	0
   471     1072  340A               	retlw	10
   472     1073  3400               	retlw	0
   473     1074  3400               	retlw	0
   474     1075  3400               	retlw	0
   475     1076  3464               	retlw	100
   476     1077  3400               	retlw	0
   477     1078  3400               	retlw	0
   478     1079  3400               	retlw	0
   479     107A  34E8               	retlw	232
   480     107B  3403               	retlw	3
   481     107C  3400               	retlw	0
   482     107D  3400               	retlw	0
   483     107E  3410               	retlw	16
   484     107F  3427               	retlw	39
   485     1080  3400               	retlw	0
   486     1081  3400               	retlw	0
   487     1082  34A0               	retlw	160
   488     1083  3486               	retlw	134
   489     1084  3401               	retlw	1
   490     1085  3400               	retlw	0
   491     1086  3440               	retlw	64
   492     1087  3442               	retlw	66
   493     1088  340F               	retlw	15
   494     1089  3400               	retlw	0
   495     108A  3480               	retlw	128
   496     108B  3496               	retlw	150
   497     108C  3498               	retlw	152
   498     108D  3400               	retlw	0
   499     108E  3400               	retlw	0
   500     108F  34E1               	retlw	225
   501     1090  34F5               	retlw	245
   502     1091  3405               	retlw	5
   503     1092  3400               	retlw	0
   504     1093  34CA               	retlw	202
   505     1094  349A               	retlw	154
   506     1095  343B               	retlw	59
   507     1096                     __end_of_dpowers:
   508     000B                     _INTCONbits	set	11
   509     001A                     _RCREG	set	26
   510     0019                     _TXREG	set	25
   511     0011                     _TMR2	set	17
   512     0018                     _RCSTAbits	set	24
   513     0001                     _TMR0	set	1
   514     001E                     _ADRESH	set	30
   515     0012                     _T2CON	set	18
   516     0015                     _CCPR1L	set	21
   517     0017                     _CCP1CON	set	23
   518     0006                     _PORTB	set	6
   519     003B                     _RC3	set	59
   520     0065                     _RCIF	set	101
   521     005F                     _GIE	set	95
   522     005A                     _T0IF	set	90
   523     005D                     _T0IE	set	93
   524     00F9                     _GO_DONE	set	249
   525     00FA                     _CHS0	set	250
   526     00FB                     _CHS1	set	251
   527     00FC                     _CHS2	set	252
   528     00FD                     _CHS3	set	253
   529     00FE                     _ADCS0	set	254
   530     00FF                     _ADCS1	set	255
   531     00F8                     _ADON	set	248
   532     0061                     _TMR2IF	set	97
   533     0087                     _TRISCbits	set	135
   534     0086                     _TRISB	set	134
   535     0098                     _TXSTAbits	set	152
   536     0099                     _SPBRG	set	153
   537     009E                     _ADRESL	set	158
   538     0092                     _PR2	set	146
   539     040D                     _T0CS	set	1037
   540     0408                     _PS0	set	1032
   541     0409                     _PS1	set	1033
   542     040A                     _PS2	set	1034
   543     040B                     _PSA	set	1035
   544     04FF                     _ADFM	set	1279
   545     043A                     _TRISC2	set	1082
   546     0189                     _ANSELH	set	393
   547     1096                     STR_1:
   548     1096  3441               	retlw	65	;'A'
   549     1097  3444               	retlw	68	;'D'
   550     1098  3443               	retlw	67	;'C'
   551     1099  3430               	retlw	48	;'0'
   552     109A  343A               	retlw	58	;':'
   553     109B  3420               	retlw	32	;' '
   554     109C  3425               	retlw	37	;'%'
   555     109D  3466               	retlw	102	;'f'
   556     109E  342C               	retlw	44	;','
   557     109F  3420               	retlw	32	;' '
   558     10A0  3444               	retlw	68	;'D'
   559     10A1  3475               	retlw	117	;'u'
   560     10A2  3474               	retlw	116	;'t'
   561     10A3  3479               	retlw	121	;'y'
   562     10A4  343A               	retlw	58	;':'
   563     10A5  3420               	retlw	32	;' '
   564     10A6  3425               	retlw	37	;'%'
   565     10A7  3475               	retlw	117	;'u'
   566     10A8  3463               	retlw	99	;'c'
   567     10A9  3420               	retlw	32	;' '
   568     10AA  340D               	retlw	13
   569     10AB  340A               	retlw	10
   570     10AC  3400               	retlw	0
   571                           
   572                           	psect	cinit
   573     000F                     start_initialization:	
   574                           ; #config settings
   575                           
   576     000F                     __initialization:
   577                           
   578                           ; Initialize objects allocated to BANK3
   579     000F  1783               	bsf	3,7	;select IRP bank2
   580     0010  30AA               	movlw	low (__pdataBANK3+12)
   581     0011  00FD               	movwf	btemp+-1
   582     0012  301A               	movlw	high __pidataBANK3
   583     0013  00FE               	movwf	btemp
   584     0014  30C5               	movlw	low __pidataBANK3
   585     0015  00FF               	movwf	btemp+1
   586     0016  309E               	movlw	low __pdataBANK3
   587     0017  0084               	movwf	4
   588     0018  160A  158A  22E4   	fcall	init_ram0
   589                           
   590                           ; Clear objects allocated to BANK3
   591     001B  1683               	bsf	3,5	;RP0=1, select bank3
   592     001C  1703               	bsf	3,6	;RP1=1, select bank3
   593     001D  0190               	clrf	__pbssBANK3& (0+127)
   594     001E  0191               	clrf	(__pbssBANK3+1)& (0+127)
   595     001F  0192               	clrf	(__pbssBANK3+2)& (0+127)
   596     0020  0193               	clrf	(__pbssBANK3+3)& (0+127)
   597     0021  0194               	clrf	(__pbssBANK3+4)& (0+127)
   598     0022  0195               	clrf	(__pbssBANK3+5)& (0+127)
   599     0023  0196               	clrf	(__pbssBANK3+6)& (0+127)
   600     0024  0197               	clrf	(__pbssBANK3+7)& (0+127)
   601     0025  0198               	clrf	(__pbssBANK3+8)& (0+127)
   602     0026  0199               	clrf	(__pbssBANK3+9)& (0+127)
   603     0027  019A               	clrf	(__pbssBANK3+10)& (0+127)
   604     0028  019B               	clrf	(__pbssBANK3+11)& (0+127)
   605     0029  019C               	clrf	(__pbssBANK3+12)& (0+127)
   606     002A  019D               	clrf	(__pbssBANK3+13)& (0+127)
   607                           
   608                           ; Clear objects allocated to BANK1
   609     002B  1683               	bsf	3,5	;RP0=1, select bank1
   610     002C  1303               	bcf	3,6	;RP1=0, select bank1
   611     002D  01ED               	clrf	__pbssBANK1& (0+127)
   612     002E  01EE               	clrf	(__pbssBANK1+1)& (0+127)
   613     002F  01EF               	clrf	(__pbssBANK1+2)& (0+127)
   614                           
   615                           ; Clear objects allocated to COMMON
   616     0030  01FA               	clrf	__pbssCOMMON& (0+127)
   617     0031  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   618     0032                     end_of_initialization:	
   619                           ;End of C runtime variable initialization code
   620                           
   621     0032                     __end_of__initialization:
   622     0032  0183               	clrf	3
   623     0033  120A  118A  2ECE   	ljmp	_main	;jump to C main() function
   624                           
   625                           	psect	bssCOMMON
   626     007A                     __pbssCOMMON:
   627     007A                     _EN:
   628     007A                     	ds	2
   629                           
   630                           	psect	bssBANK1
   631     00ED                     __pbssBANK1:
   632     00ED                     _port_data:
   633     00ED                     	ds	2
   634     00EF                     _pwm_enabled:
   635     00EF                     	ds	1
   636                           
   637                           	psect	bssBANK3
   638     0190                     __pbssBANK3:
   639     0190                     _port_en:
   640     0190                     	ds	2
   641     0192                     _port_rs:
   642     0192                     	ds	2
   643     0194                     _D7:
   644     0194                     	ds	2
   645     0196                     _D6:
   646     0196                     	ds	2
   647     0198                     _D5:
   648     0198                     	ds	2
   649     019A                     _D4:
   650     019A                     	ds	2
   651     019C                     _RS:
   652     019C                     	ds	2
   653                           
   654                           	psect	dataBANK3
   655     019E                     __pdataBANK3:
   656     019E                     _lcd_pins:
   657     019E                     	ds	12
   658                           
   659                           	psect	inittext
   660     1AE0                     init_fetch0:	
   661                           ;	Called with low address in FSR and high address in W
   662                           
   663     1AE0  087E               	movf	126,w
   664     1AE1  008A               	movwf	10
   665     1AE2  087F               	movf	127,w
   666     1AE3  0082               	movwf	2
   667     1AE4                     init_ram0:	
   668                           ;Called with:
   669                           ;	high address of idata address in btemp 
   670                           ;	low address of idata address in btemp+1 
   671                           ;	low address of data in FSR
   672                           ;	high address + 1 of data in btemp-1
   673                           
   674     1AE4  22E0  160A  158A   	fcall	init_fetch0
   675     1AE7  0080               	movwf	0
   676     1AE8  0A84               	incf	4,f
   677     1AE9  0804               	movf	4,w
   678     1AEA  067D               	xorwf	125,w
   679     1AEB  1903               	btfsc	3,2
   680     1AEC  3400               	retlw	0
   681     1AED  0AFF               	incf	127,f
   682     1AEE  1903               	btfsc	3,2
   683     1AEF  0AFE               	incf	126,f
   684     1AF0  2AE4               	goto	init_ram0
   685                           
   686                           	psect	cstackBANK1
   687     00A0                     __pcstackBANK1:
   688     00A0                     ?_sprintf:
   689     00A0                     ?_LM35:	
   690                           ; 2 bytes @ 0x0
   691                           
   692     00A0                     sprintf@f:	
   693                           ; 4 bytes @ 0x0
   694                           
   695                           
   696                           ; 1 bytes @ 0x0
   697     00A0                     	ds	4
   698     00A4                     ??_LM35:
   699                           
   700                           ; 1 bytes @ 0x4
   701     00A4                     	ds	3
   702     00A7                     ??_sprintf:
   703                           
   704                           ; 1 bytes @ 0x7
   705     00A7                     	ds	3
   706     00AA                     LM35@temperatura:
   707                           
   708                           ; 4 bytes @ 0xA
   709     00AA                     	ds	2
   710     00AC                     _sprintf$1058:
   711                           
   712                           ; 4 bytes @ 0xC
   713     00AC                     	ds	2
   714     00AE                     _LM35$1054:
   715                           
   716                           ; 4 bytes @ 0xE
   717     00AE                     	ds	2
   718     00B0                     sprintf@ap:
   719                           
   720                           ; 1 bytes @ 0x10
   721     00B0                     	ds	1
   722     00B1                     sprintf@flag:
   723                           
   724                           ; 2 bytes @ 0x11
   725     00B1                     	ds	1
   726     00B2                     LM35@adc_val:
   727                           
   728                           ; 2 bytes @ 0x12
   729     00B2                     	ds	1
   730     00B3                     sprintf@prec:
   731                           
   732                           ; 2 bytes @ 0x13
   733     00B3                     	ds	2
   734     00B5                     sprintf@val:
   735                           
   736                           ; 4 bytes @ 0x15
   737     00B5                     	ds	4
   738     00B9                     sprintf@eexp:
   739                           
   740                           ; 2 bytes @ 0x19
   741     00B9                     	ds	2
   742     00BB                     sprintf@tmpval:
   743                           
   744                           ; 4 bytes @ 0x1B
   745     00BB                     	ds	4
   746     00BF                     sprintf@sp:
   747                           
   748                           ; 1 bytes @ 0x1F
   749     00BF                     	ds	1
   750     00C0                     sprintf@fval:
   751                           
   752                           ; 4 bytes @ 0x20
   753     00C0                     	ds	4
   754     00C4                     sprintf@c:
   755                           
   756                           ; 1 bytes @ 0x24
   757     00C4                     	ds	1
   758     00C5                     ??_main:
   759                           
   760                           ; 1 bytes @ 0x25
   761     00C5                     	ds	2
   762     00C7                     main@buffer:
   763                           
   764                           ; 30 bytes @ 0x27
   765     00C7                     	ds	30
   766     00E5                     main@c:
   767                           
   768                           ; 1 bytes @ 0x45
   769     00E5                     	ds	1
   770     00E6                     main@i:
   771                           
   772                           ; 2 bytes @ 0x46
   773     00E6                     	ds	2
   774     00E8                     main@duty_cycle:
   775                           
   776                           ; 1 bytes @ 0x48
   777     00E8                     	ds	1
   778     00E9                     main@temp:
   779                           
   780                           ; 4 bytes @ 0x49
   781     00E9                     	ds	4
   782                           
   783                           	psect	cstackCOMMON
   784     0070                     __pcstackCOMMON:
   785     0070                     ?_lcd_init:
   786     0070                     ?_PWM_init:	
   787                           ; 1 bytes @ 0x0
   788                           
   789     0070                     ?_Timer0_init:	
   790                           ; 1 bytes @ 0x0
   791                           
   792     0070                     ?_UART_init:	
   793                           ; 1 bytes @ 0x0
   794                           
   795     0070                     ?_velocidade:	
   796                           ; 1 bytes @ 0x0
   797                           
   798     0070                     ?_controle_pwm:	
   799                           ; 1 bytes @ 0x0
   800                           
   801     0070                     ?_main:	
   802                           ; 1 bytes @ 0x0
   803                           
   804     0070                     ?_Timers_ISR:	
   805                           ; 1 bytes @ 0x0
   806                           
   807     0070                     ??_Timers_ISR:	
   808                           ; 1 bytes @ 0x0
   809                           
   810     0070                     ?_enable:	
   811                           ; 1 bytes @ 0x0
   812                           
   813                           
   814                           ; 1 bytes @ 0x0
   815     0070                     	ds	2
   816     0072                     ?___fleq:
   817     0072                     ?___flge:	
   818                           ; 1 bit 
   819                           
   820     0072                     ??_PWM_init:	
   821                           ; 1 bit 
   822                           
   823     0072                     ??_Timer0_init:	
   824                           ; 1 bytes @ 0x2
   825                           
   826     0072                     ??_UART_init:	
   827                           ; 1 bytes @ 0x2
   828                           
   829     0072                     ??_velocidade:	
   830                           ; 1 bytes @ 0x2
   831                           
   832     0072                     ??_controle_pwm:	
   833                           ; 1 bytes @ 0x2
   834                           
   835     0072                     ?_muda_pin:	
   836                           ; 1 bytes @ 0x2
   837                           
   838     0072                     ?__Umul8_16:	
   839                           ; 1 bytes @ 0x2
   840                           
   841     0072                     ?___wmul:	
   842                           ; 2 bytes @ 0x2
   843                           
   844     0072                     ?___awmod:	
   845                           ; 2 bytes @ 0x2
   846                           
   847     0072                     ?___lwmod:	
   848                           ; 2 bytes @ 0x2
   849                           
   850     0072                     ?__tdiv_to_l_:	
   851                           ; 2 bytes @ 0x2
   852                           
   853     0072                     ?__div_to_l_:	
   854                           ; 4 bytes @ 0x2
   855                           
   856     0072                     ?___lldiv:	
   857                           ; 4 bytes @ 0x2
   858                           
   859     0072                     ?___flneg:	
   860                           ; 4 bytes @ 0x2
   861                           
   862     0072                     ?___xxtofl:	
   863                           ; 4 bytes @ 0x2
   864                           
   865     0072                     velocidade@duty:	
   866                           ; 4 bytes @ 0x2
   867                           
   868     0072                     controle_pwm@ligado:	
   869                           ; 1 bytes @ 0x2
   870                           
   871     0072                     __Umul8_16@multiplicand:	
   872                           ; 1 bytes @ 0x2
   873                           
   874     0072                     muda_pin@_port:	
   875                           ; 1 bytes @ 0x2
   876                           
   877     0072                     ___wmul@multiplier:	
   878                           ; 2 bytes @ 0x2
   879                           
   880     0072                     ___awmod@divisor:	
   881                           ; 2 bytes @ 0x2
   882                           
   883     0072                     ___lwmod@divisor:	
   884                           ; 2 bytes @ 0x2
   885                           
   886     0072                     ___lldiv@divisor:	
   887                           ; 2 bytes @ 0x2
   888                           
   889     0072                     __div_to_l_@f1:	
   890                           ; 4 bytes @ 0x2
   891                           
   892     0072                     ___fleq@ff1:	
   893                           ; 4 bytes @ 0x2
   894                           
   895     0072                     ___flge@ff1:	
   896                           ; 4 bytes @ 0x2
   897                           
   898     0072                     ___flneg@f1:	
   899                           ; 4 bytes @ 0x2
   900                           
   901     0072                     __tdiv_to_l_@f1:	
   902                           ; 4 bytes @ 0x2
   903                           
   904     0072                     ___xxtofl@val:	
   905                           ; 4 bytes @ 0x2
   906                           
   907                           
   908                           ; 4 bytes @ 0x2
   909     0072                     	ds	2
   910     0074                     ??__Umul8_16:
   911     0074                     muda_pin@_pin:	
   912                           ; 1 bytes @ 0x4
   913                           
   914     0074                     ___wmul@multiplicand:	
   915                           ; 2 bytes @ 0x4
   916                           
   917     0074                     ___awmod@dividend:	
   918                           ; 2 bytes @ 0x4
   919                           
   920     0074                     ___lwmod@dividend:	
   921                           ; 2 bytes @ 0x4
   922                           
   923                           
   924                           ; 2 bytes @ 0x4
   925     0074                     	ds	2
   926     0076                     ??___wmul:
   927     0076                     ??___awmod:	
   928                           ; 1 bytes @ 0x6
   929                           
   930     0076                     ??___flneg:	
   931                           ; 1 bytes @ 0x6
   932                           
   933     0076                     ??___lwmod:	
   934                           ; 1 bytes @ 0x6
   935                           
   936     0076                     ??___xxtofl:	
   937                           ; 1 bytes @ 0x6
   938                           
   939     0076                     ___awmod@counter:	
   940                           ; 1 bytes @ 0x6
   941                           
   942     0076                     ___lwmod@counter:	
   943                           ; 1 bytes @ 0x6
   944                           
   945     0076                     muda_pin@_val:	
   946                           ; 1 bytes @ 0x6
   947                           
   948     0076                     ___wmul@product:	
   949                           ; 2 bytes @ 0x6
   950                           
   951     0076                     ___lldiv@dividend:	
   952                           ; 2 bytes @ 0x6
   953                           
   954     0076                     __div_to_l_@f2:	
   955                           ; 4 bytes @ 0x6
   956                           
   957     0076                     ___fleq@ff2:	
   958                           ; 4 bytes @ 0x6
   959                           
   960     0076                     ___flge@ff2:	
   961                           ; 4 bytes @ 0x6
   962                           
   963     0076                     __tdiv_to_l_@f2:	
   964                           ; 4 bytes @ 0x6
   965                           
   966                           
   967                           ; 4 bytes @ 0x6
   968     0076                     	ds	1
   969     0077                     ??___lwdiv:
   970     0077                     ___awmod@sign:	
   971                           ; 1 bytes @ 0x7
   972                           
   973     0077                     ___lwdiv@counter:	
   974                           ; 1 bytes @ 0x7
   975                           
   976                           
   977                           ; 1 bytes @ 0x7
   978     0077                     	ds	1
   979     0078                     ??_muda_pin:
   980     0078                     ??___awdiv:	
   981                           ; 1 bytes @ 0x8
   982                           
   983     0078                     ___lwdiv@quotient:	
   984                           ; 1 bytes @ 0x8
   985                           
   986                           
   987                           ; 2 bytes @ 0x8
   988     0078                     	ds	1
   989     0079                     lcd_init@lcd_pins:
   990                           
   991                           ; 1 bytes @ 0x9
   992     0079                     	ds	1
   993     007A                     ??___flsub:
   994                           
   995                           	psect	cstackBANK0
   996     0020                     __pcstackBANK0:	
   997                           ; 1 bytes @ 0xA
   998                           
   999     0020                     ??__tdiv_to_l_:
  1000     0020                     ??__div_to_l_:	
  1001                           ; 1 bytes @ 0x0
  1002                           
  1003     0020                     ??_enable:	
  1004                           ; 1 bytes @ 0x0
  1005                           
  1006     0020                     ?_nibble:	
  1007                           ; 1 bytes @ 0x0
  1008                           
  1009     0020                     ??___lldiv:	
  1010                           ; 1 bytes @ 0x0
  1011                           
  1012     0020                     ??___fleq:	
  1013                           ; 1 bytes @ 0x0
  1014                           
  1015     0020                     ??___flge:	
  1016                           ; 1 bytes @ 0x0
  1017                           
  1018     0020                     ?___awdiv:	
  1019                           ; 1 bytes @ 0x0
  1020                           
  1021     0020                     ?___lwdiv:	
  1022                           ; 2 bytes @ 0x0
  1023                           
  1024     0020                     ___xxtofl@sign:	
  1025                           ; 2 bytes @ 0x0
  1026                           
  1027     0020                     nibble@dado:	
  1028                           ; 1 bytes @ 0x0
  1029                           
  1030     0020                     ___awdiv@divisor:	
  1031                           ; 2 bytes @ 0x0
  1032                           
  1033     0020                     ___lwdiv@divisor:	
  1034                           ; 2 bytes @ 0x0
  1035                           
  1036     0020                     __Umul8_16@product:	
  1037                           ; 2 bytes @ 0x0
  1038                           
  1039                           
  1040                           ; 2 bytes @ 0x0
  1041     0020                     	ds	1
  1042     0021                     ___xxtofl@exp:
  1043     0021                     ___lldiv@quotient:	
  1044                           ; 1 bytes @ 0x1
  1045                           
  1046     0021                     __div_to_l_@quot:	
  1047                           ; 4 bytes @ 0x1
  1048                           
  1049                           
  1050                           ; 4 bytes @ 0x1
  1051     0021                     	ds	1
  1052     0022                     ??_nibble:
  1053     0022                     ___awdiv@dividend:	
  1054                           ; 1 bytes @ 0x2
  1055                           
  1056     0022                     ___lwdiv@dividend:	
  1057                           ; 2 bytes @ 0x2
  1058                           
  1059     0022                     __Umul8_16@word_mpld:	
  1060                           ; 2 bytes @ 0x2
  1061                           
  1062     0022                     ___xxtofl@arg:	
  1063                           ; 2 bytes @ 0x2
  1064                           
  1065                           
  1066                           ; 4 bytes @ 0x2
  1067     0022                     	ds	1
  1068     0023                     __tdiv_to_l_@quot:
  1069                           
  1070                           ; 4 bytes @ 0x3
  1071     0023                     	ds	1
  1072     0024                     ?_byte:
  1073     0024                     ___awdiv@counter:	
  1074                           ; 1 bytes @ 0x4
  1075                           
  1076     0024                     __Umul8_16@multiplier:	
  1077                           ; 1 bytes @ 0x4
  1078                           
  1079     0024                     byte@escreve:	
  1080                           ; 1 bytes @ 0x4
  1081                           
  1082                           
  1083                           ; 2 bytes @ 0x4
  1084     0024                     	ds	1
  1085     0025                     ?___fladd:
  1086     0025                     ___lldiv@counter:	
  1087                           ; 4 bytes @ 0x5
  1088                           
  1089     0025                     ___awdiv@sign:	
  1090                           ; 1 bytes @ 0x5
  1091                           
  1092     0025                     __div_to_l_@cntr:	
  1093                           ; 1 bytes @ 0x5
  1094                           
  1095     0025                     ___fladd@b:	
  1096                           ; 1 bytes @ 0x5
  1097                           
  1098                           
  1099                           ; 4 bytes @ 0x5
  1100     0025                     	ds	1
  1101     0026                     ?___llmod:
  1102     0026                     byte@dado:	
  1103                           ; 4 bytes @ 0x6
  1104                           
  1105     0026                     __div_to_l_@exp1:	
  1106                           ; 1 bytes @ 0x6
  1107                           
  1108     0026                     ___awdiv@quotient:	
  1109                           ; 1 bytes @ 0x6
  1110                           
  1111     0026                     ___llmod@divisor:	
  1112                           ; 2 bytes @ 0x6
  1113                           
  1114                           
  1115                           ; 4 bytes @ 0x6
  1116     0026                     	ds	1
  1117     0027                     ??_byte:
  1118     0027                     __tdiv_to_l_@cntr:	
  1119                           ; 1 bytes @ 0x7
  1120                           
  1121                           
  1122                           ; 1 bytes @ 0x7
  1123     0027                     	ds	1
  1124     0028                     __tdiv_to_l_@exp1:
  1125                           
  1126                           ; 1 bytes @ 0x8
  1127     0028                     	ds	1
  1128     0029                     ___fladd@a:
  1129                           
  1130                           ; 4 bytes @ 0x9
  1131     0029                     	ds	1
  1132     002A                     ??_lcd_init:
  1133     002A                     ___llmod@dividend:	
  1134                           ; 1 bytes @ 0xA
  1135                           
  1136                           
  1137                           ; 4 bytes @ 0xA
  1138     002A                     	ds	3
  1139     002D                     ??___fladd:
  1140                           
  1141                           ; 1 bytes @ 0xD
  1142     002D                     	ds	1
  1143     002E                     ??___llmod:
  1144                           
  1145                           ; 1 bytes @ 0xE
  1146     002E                     	ds	1
  1147     002F                     ___llmod@counter:
  1148                           
  1149                           ; 1 bytes @ 0xF
  1150     002F                     	ds	6
  1151     0035                     ___fladd@signs:
  1152                           
  1153                           ; 1 bytes @ 0x15
  1154     0035                     	ds	1
  1155     0036                     ___fladd@aexp:
  1156                           
  1157                           ; 1 bytes @ 0x16
  1158     0036                     	ds	1
  1159     0037                     ___fladd@bexp:
  1160                           
  1161                           ; 1 bytes @ 0x17
  1162     0037                     	ds	1
  1163     0038                     ___fladd@grs:
  1164                           
  1165                           ; 1 bytes @ 0x18
  1166     0038                     	ds	1
  1167     0039                     ?___flsub:
  1168     0039                     ?___flmul:	
  1169                           ; 4 bytes @ 0x19
  1170                           
  1171     0039                     ___flsub@a:	
  1172                           ; 4 bytes @ 0x19
  1173                           
  1174     0039                     ___flmul@b:	
  1175                           ; 4 bytes @ 0x19
  1176                           
  1177                           
  1178                           ; 4 bytes @ 0x19
  1179     0039                     	ds	4
  1180     003D                     ___flsub@b:
  1181     003D                     ___flmul@a:	
  1182                           ; 4 bytes @ 0x1D
  1183                           
  1184                           
  1185                           ; 4 bytes @ 0x1D
  1186     003D                     	ds	4
  1187     0041                     ??___flmul:
  1188                           
  1189                           ; 1 bytes @ 0x21
  1190     0041                     	ds	5
  1191     0046                     ___flmul@sign:
  1192                           
  1193                           ; 1 bytes @ 0x26
  1194     0046                     	ds	1
  1195     0047                     ___flmul@aexp:
  1196                           
  1197                           ; 1 bytes @ 0x27
  1198     0047                     	ds	1
  1199     0048                     ___flmul@grs:
  1200                           
  1201                           ; 4 bytes @ 0x28
  1202     0048                     	ds	4
  1203     004C                     ___flmul@bexp:
  1204                           
  1205                           ; 1 bytes @ 0x2C
  1206     004C                     	ds	1
  1207     004D                     ___flmul@prod:
  1208                           
  1209                           ; 4 bytes @ 0x2D
  1210     004D                     	ds	4
  1211     0051                     ___flmul@temp:
  1212                           
  1213                           ; 2 bytes @ 0x31
  1214     0051                     	ds	2
  1215     0053                     ?_fround:
  1216     0053                     ?_scale:	
  1217                           ; 4 bytes @ 0x33
  1218                           
  1219     0053                     ?___fldiv:	
  1220                           ; 4 bytes @ 0x33
  1221                           
  1222     0053                     ___fldiv@a:	
  1223                           ; 4 bytes @ 0x33
  1224                           
  1225                           
  1226                           ; 4 bytes @ 0x33
  1227     0053                     	ds	4
  1228     0057                     ??_fround:
  1229     0057                     ??_scale:	
  1230                           ; 1 bytes @ 0x37
  1231                           
  1232     0057                     ___fldiv@b:	
  1233                           ; 1 bytes @ 0x37
  1234                           
  1235                           
  1236                           ; 4 bytes @ 0x37
  1237     0057                     	ds	4
  1238     005B                     ??___fldiv:
  1239                           
  1240                           ; 1 bytes @ 0x3B
  1241     005B                     	ds	3
  1242     005E                     _fround$1056:
  1243                           
  1244                           ; 4 bytes @ 0x3E
  1245     005E                     	ds	2
  1246     0060                     ___fldiv@rem:
  1247                           
  1248                           ; 4 bytes @ 0x40
  1249     0060                     	ds	1
  1250     0061                     _scale$1057:
  1251                           
  1252                           ; 4 bytes @ 0x41
  1253     0061                     	ds	1
  1254     0062                     _fround$1055:
  1255                           
  1256                           ; 4 bytes @ 0x42
  1257     0062                     	ds	2
  1258     0064                     ___fldiv@sign:
  1259                           
  1260                           ; 1 bytes @ 0x44
  1261     0064                     	ds	1
  1262     0065                     scale@scl:
  1263     0065                     ___fldiv@new_exp:	
  1264                           ; 1 bytes @ 0x45
  1265                           
  1266                           
  1267                           ; 2 bytes @ 0x45
  1268     0065                     	ds	1
  1269     0066                     ?___fltol:
  1270     0066                     fround@prec:	
  1271                           ; 4 bytes @ 0x46
  1272                           
  1273     0066                     ___fltol@f1:	
  1274                           ; 1 bytes @ 0x46
  1275                           
  1276                           
  1277                           ; 4 bytes @ 0x46
  1278     0066                     	ds	1
  1279     0067                     ___fldiv@grs:
  1280                           
  1281                           ; 4 bytes @ 0x47
  1282     0067                     	ds	3
  1283     006A                     ??___fltol:
  1284                           
  1285                           ; 1 bytes @ 0x4A
  1286     006A                     	ds	1
  1287     006B                     ___fldiv@bexp:
  1288                           
  1289                           ; 1 bytes @ 0x4B
  1290     006B                     	ds	1
  1291     006C                     ___fldiv@aexp:
  1292                           
  1293                           ; 1 bytes @ 0x4C
  1294     006C                     	ds	2
  1295     006E                     ___fltol@sign1:
  1296                           
  1297                           ; 1 bytes @ 0x4E
  1298     006E                     	ds	1
  1299     006F                     ___fltol@exp1:
  1300                           
  1301                           ; 1 bytes @ 0x4F
  1302     006F                     	ds	1
  1303                           
  1304                           	psect	maintext
  1305     06CE                     __pmaintext:	
  1306 ;;
  1307 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1308 ;;
  1309 ;; *************** function _main *****************
  1310 ;; Defined at:
  1311 ;;		line 146 in file "controle.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;		None
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;  c               1   69[BANK1 ] unsigned char 
  1316 ;;  i               2   70[BANK1 ] int 
  1317 ;;  buffer         30   39[BANK1 ] unsigned char [30]
  1318 ;;  temp            4   73[BANK1 ] float 
  1319 ;;  duty_cycle      1   72[BANK1 ] unsigned char 
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  1    wreg      void 
  1322 ;; Registers used:
  1323 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1324 ;; Tracked objects:
  1325 ;;		On entry : B00/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1329 ;;      Params:         0       0       0       0       0
  1330 ;;      Locals:         0       0      38       0       0
  1331 ;;      Temps:          0       0       2       0       0
  1332 ;;      Totals:         0       0      40       0       0
  1333 ;;Total ram usage:       40 bytes
  1334 ;; Hardware stack levels required when called: 5
  1335 ;; This function calls:
  1336 ;;		_LM35
  1337 ;;		_PWM_init
  1338 ;;		_Timer0_init
  1339 ;;		_UART_init
  1340 ;;		___fladd
  1341 ;;		___flge
  1342 ;;		___flmul
  1343 ;;		___fltol
  1344 ;;		_controle_pwm
  1345 ;;		_lcd_init
  1346 ;;		_sprintf
  1347 ;;		_velocidade
  1348 ;; This function is called by:
  1349 ;;		Startup code after reset
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353     06CE                     _main:	
  1354                           ;psect for function _main
  1355                           
  1356                           
  1357                           ;controle.c: 148:     float temp;;controle.c: 149:     unsigned char duty_cycle;;control
      +                          e.c: 150:     char buffer[30];;controle.c: 151:     ANSELH = 0;
  1358                           
  1359                           ;incstack = 0
  1360                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1361     06CE  1683               	bsf	3,5	;RP0=1, select bank3
  1362     06CF  1703               	bsf	3,6	;RP1=1, select bank3
  1363     06D0  0189               	clrf	9	;volatile
  1364                           
  1365                           ;controle.c: 152:     TRISB = 0;
  1366     06D1  1683               	bsf	3,5	;RP0=1, select bank1
  1367     06D2  1303               	bcf	3,6	;RP1=0, select bank1
  1368     06D3  0186               	clrf	6	;volatile
  1369                           
  1370                           ;controle.c: 154:     UART_init();
  1371     06D4  120A  118A  27EB  120A  118A  	fcall	_UART_init
  1372                           
  1373                           ;controle.c: 155:     PWM_init();
  1374     06D9  160A  158A  231E  120A  118A  	fcall	_PWM_init
  1375                           
  1376                           ;controle.c: 156:     Timer0_init();
  1377     06DE  160A  158A  22D1  120A  118A  	fcall	_Timer0_init
  1378                           
  1379                           ;controle.c: 157:     TRISCbits.TRISC3 = 0;
  1380     06E3  1683               	bsf	3,5	;RP0=1, select bank1
  1381     06E4  1303               	bcf	3,6	;RP1=0, select bank1
  1382     06E5  1187               	bcf	7,3	;volatile
  1383                           
  1384                           ;controle.c: 158:     lcd_init(&lcd_pins);
  1385     06E6  309E               	movlw	(low (_lcd_pins| (0+256)))& (0+255)
  1386     06E7  160A  118A  2323  120A  118A  	fcall	_lcd_init
  1387     06EC                     l4490:
  1388                           
  1389                           ;controle.c: 162:         temp = LM35();
  1390     06EC  160A  118A  224F  120A  118A  	fcall	_LM35
  1391     06F1  1683               	bsf	3,5	;RP0=1, select bank1
  1392     06F2  1303               	bcf	3,6	;RP1=0, select bank1
  1393     06F3  0823               	movf	(?_LM35+3)^(0+128),w
  1394     06F4  00EC               	movwf	(main@temp+3)^(0+128)
  1395     06F5  0822               	movf	(?_LM35+2)^(0+128),w
  1396     06F6  00EB               	movwf	(main@temp+2)^(0+128)
  1397     06F7  0821               	movf	(?_LM35+1)^(0+128),w
  1398     06F8  00EA               	movwf	(main@temp+1)^(0+128)
  1399     06F9  0820               	movf	?_LM35^(0+128),w
  1400     06FA  00E9               	movwf	main@temp^(0+128)
  1401                           
  1402                           ;controle.c: 164:         if (temp < 25) {
  1403     06FB  086C               	movf	(main@temp+3)^(0+128),w
  1404     06FC  00F5               	movwf	___flge@ff1+3
  1405     06FD  086B               	movf	(main@temp+2)^(0+128),w
  1406     06FE  00F4               	movwf	___flge@ff1+2
  1407     06FF  086A               	movf	(main@temp+1)^(0+128),w
  1408     0700  00F3               	movwf	___flge@ff1+1
  1409     0701  0869               	movf	main@temp^(0+128),w
  1410     0702  00F2               	movwf	___flge@ff1
  1411     0703  3041               	movlw	65
  1412     0704  00F9               	movwf	___flge@ff2+3
  1413     0705  30C8               	movlw	200
  1414     0706  00F8               	movwf	___flge@ff2+2
  1415     0707  3000               	movlw	0
  1416     0708  00F7               	movwf	___flge@ff2+1
  1417     0709  3000               	movlw	0
  1418     070A  00F6               	movwf	___flge@ff2
  1419     070B  160A  158A  26C8  120A  118A  	fcall	___flge
  1420     0710  1803               	btfsc	3,0
  1421     0711  2F16               	goto	l4496
  1422                           
  1423                           ;controle.c: 165:             duty_cycle = 0;
  1424     0712  1683               	bsf	3,5	;RP0=1, select bank1
  1425     0713  1303               	bcf	3,6	;RP1=0, select bank1
  1426     0714  01E8               	clrf	main@duty_cycle^(0+128)
  1427                           
  1428                           ;controle.c: 166:         } else if (temp > 50) {
  1429     0715  2F82               	goto	l4502
  1430     0716                     l4496:
  1431     0716  3042               	movlw	66
  1432     0717  00F5               	movwf	___flge@ff1+3
  1433     0718  3048               	movlw	72
  1434     0719  00F4               	movwf	___flge@ff1+2
  1435     071A  3000               	movlw	0
  1436     071B  00F3               	movwf	___flge@ff1+1
  1437     071C  3000               	movlw	0
  1438     071D  00F2               	movwf	___flge@ff1
  1439     071E  1683               	bsf	3,5	;RP0=1, select bank1
  1440     071F  1303               	bcf	3,6	;RP1=0, select bank1
  1441     0720  086C               	movf	(main@temp+3)^(0+128),w
  1442     0721  00F9               	movwf	___flge@ff2+3
  1443     0722  086B               	movf	(main@temp+2)^(0+128),w
  1444     0723  00F8               	movwf	___flge@ff2+2
  1445     0724  086A               	movf	(main@temp+1)^(0+128),w
  1446     0725  00F7               	movwf	___flge@ff2+1
  1447     0726  0869               	movf	main@temp^(0+128),w
  1448     0727  00F6               	movwf	___flge@ff2
  1449     0728  160A  158A  26C8  120A  118A  	fcall	___flge
  1450     072D  1803               	btfsc	3,0
  1451     072E  2F31               	goto	l4500
  1452                           
  1453                           ;controle.c: 167:             duty_cycle = 255;
  1454     072F  30FF               	movlw	255
  1455     0730  2F7F               	goto	L1
  1456     0731                     l4500:	
  1457                           ;controle.c: 168:         } else {
  1458                           
  1459                           
  1460                           ;controle.c: 169:             duty_cycle = (unsigned char)((temp - 25) * 10.2);
  1461     0731  1683               	bsf	3,5	;RP0=1, select bank1
  1462     0732  1303               	bcf	3,6	;RP1=0, select bank1
  1463     0733  086C               	movf	(main@temp+3)^(0+128),w
  1464     0734  1283               	bcf	3,5	;RP0=0, select bank0
  1465     0735  1303               	bcf	3,6	;RP1=0, select bank0
  1466     0736  00AC               	movwf	___fladd@a+3
  1467     0737  1683               	bsf	3,5	;RP0=1, select bank1
  1468     0738  1303               	bcf	3,6	;RP1=0, select bank1
  1469     0739  086B               	movf	(main@temp+2)^(0+128),w
  1470     073A  1283               	bcf	3,5	;RP0=0, select bank0
  1471     073B  1303               	bcf	3,6	;RP1=0, select bank0
  1472     073C  00AB               	movwf	___fladd@a+2
  1473     073D  1683               	bsf	3,5	;RP0=1, select bank1
  1474     073E  1303               	bcf	3,6	;RP1=0, select bank1
  1475     073F  086A               	movf	(main@temp+1)^(0+128),w
  1476     0740  1283               	bcf	3,5	;RP0=0, select bank0
  1477     0741  1303               	bcf	3,6	;RP1=0, select bank0
  1478     0742  00AA               	movwf	___fladd@a+1
  1479     0743  1683               	bsf	3,5	;RP0=1, select bank1
  1480     0744  1303               	bcf	3,6	;RP1=0, select bank1
  1481     0745  0869               	movf	main@temp^(0+128),w
  1482     0746  1283               	bcf	3,5	;RP0=0, select bank0
  1483     0747  1303               	bcf	3,6	;RP1=0, select bank0
  1484     0748  00A9               	movwf	___fladd@a
  1485     0749  30C1               	movlw	193
  1486     074A  00A8               	movwf	___fladd@b+3
  1487     074B  30C8               	movlw	200
  1488     074C  00A7               	movwf	___fladd@b+2
  1489     074D  3000               	movlw	0
  1490     074E  00A6               	movwf	___fladd@b+1
  1491     074F  3000               	movlw	0
  1492     0750  00A5               	movwf	___fladd@b
  1493     0751  160A  118A  23FE  120A  118A  	fcall	___fladd
  1494     0756  1283               	bcf	3,5	;RP0=0, select bank0
  1495     0757  1303               	bcf	3,6	;RP1=0, select bank0
  1496     0758  0828               	movf	?___fladd+3,w
  1497     0759  00C0               	movwf	___flmul@a+3
  1498     075A  0827               	movf	?___fladd+2,w
  1499     075B  00BF               	movwf	___flmul@a+2
  1500     075C  0826               	movf	?___fladd+1,w
  1501     075D  00BE               	movwf	___flmul@a+1
  1502     075E  0825               	movf	?___fladd,w
  1503     075F  00BD               	movwf	___flmul@a
  1504     0760  3041               	movlw	65
  1505     0761  00BC               	movwf	___flmul@b+3
  1506     0762  3023               	movlw	35
  1507     0763  00BB               	movwf	___flmul@b+2
  1508     0764  3033               	movlw	51
  1509     0765  00BA               	movwf	___flmul@b+1
  1510     0766  3033               	movlw	51
  1511     0767  00B9               	movwf	___flmul@b
  1512     0768  120A  158A  21BA  120A  118A  	fcall	___flmul
  1513     076D  1283               	bcf	3,5	;RP0=0, select bank0
  1514     076E  1303               	bcf	3,6	;RP1=0, select bank0
  1515     076F  083C               	movf	?___flmul+3,w
  1516     0770  00E9               	movwf	___fltol@f1+3
  1517     0771  083B               	movf	?___flmul+2,w
  1518     0772  00E8               	movwf	___fltol@f1+2
  1519     0773  083A               	movf	?___flmul+1,w
  1520     0774  00E7               	movwf	___fltol@f1+1
  1521     0775  0839               	movf	?___flmul,w
  1522     0776  00E6               	movwf	___fltol@f1
  1523     0777  160A  158A  25DE  120A  118A  	fcall	___fltol
  1524     077C  1283               	bcf	3,5	;RP0=0, select bank0
  1525     077D  1303               	bcf	3,6	;RP1=0, select bank0
  1526     077E  0866               	movf	?___fltol,w
  1527     077F                     L1:
  1528     077F  1683               	bsf	3,5	;RP0=1, select bank1
  1529     0780  1303               	bcf	3,6	;RP1=0, select bank1
  1530     0781  00E8               	movwf	main@duty_cycle^(0+128)
  1531     0782                     l4502:
  1532                           
  1533                           ;controle.c: 172:         sprintf(buffer, "ADC0: %f, Duty: %uc \r\n", temp, duty_cycle);
  1534     0782  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1535     0783  00A0               	movwf	sprintf@f^(0+128)
  1536     0784  086C               	movf	(main@temp+3)^(0+128),w
  1537     0785  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1538     0786  086B               	movf	(main@temp+2)^(0+128),w
  1539     0787  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1540     0788  086A               	movf	(main@temp+1)^(0+128),w
  1541     0789  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1542     078A  0869               	movf	main@temp^(0+128),w
  1543     078B  00A1               	movwf	(?_sprintf^(0+128)+1)
  1544     078C  0868               	movf	main@duty_cycle^(0+128),w
  1545     078D  00C5               	movwf	??_main^(0+128)
  1546     078E  01C6               	clrf	(??_main^(0+128)+1)
  1547     078F  0845               	movf	??_main^(0+128),w
  1548     0790  00A5               	movwf	(?_sprintf^(0+128)+5)
  1549     0791  0846               	movf	(??_main+1)^(0+128),w
  1550     0792  00A6               	movwf	((?_sprintf+1)^(0+128)+5)
  1551     0793  30C7               	movlw	(low (main@buffer| 0))& (0+255)
  1552     0794  120A  118A  2036  120A  118A  	fcall	_sprintf
  1553                           
  1554                           ;controle.c: 173:         for (int i = 0; buffer[i] != '\0'; i++)
  1555     0799  1683               	bsf	3,5	;RP0=1, select bank1
  1556     079A  1303               	bcf	3,6	;RP1=0, select bank1
  1557     079B  01E6               	clrf	main@i^(0+128)
  1558     079C  01E7               	clrf	(main@i+1)^(0+128)
  1559     079D                     l4510:
  1560     079D  0866               	movf	main@i^(0+128),w
  1561     079E  3EC7               	addlw	(low (main@buffer| 0))& (0+255)
  1562     079F  0084               	movwf	4
  1563     07A0  1383               	bcf	3,7	;select IRP bank1
  1564     07A1  0800               	movf	0,w
  1565     07A2  1903               	btfsc	3,2
  1566     07A3  2FB6               	goto	l138
  1567                           
  1568                           ;controle.c: 174:         {;controle.c: 175:             TXREG = buffer[i];
  1569     07A4  0866               	movf	main@i^(0+128),w
  1570     07A5  3EC7               	addlw	(low (main@buffer| 0))& (0+255)
  1571     07A6  0084               	movwf	4
  1572     07A7  0800               	movf	0,w
  1573     07A8  1283               	bcf	3,5	;RP0=0, select bank0
  1574     07A9  1303               	bcf	3,6	;RP1=0, select bank0
  1575     07AA  0099               	movwf	25	;volatile
  1576     07AB                     l135:	
  1577                           ;controle.c: 176:             while (!TXSTAbits.TRMT);
  1578                           
  1579     07AB  1683               	bsf	3,5	;RP0=1, select bank1
  1580     07AC  1303               	bcf	3,6	;RP1=0, select bank1
  1581     07AD  1C98               	btfss	24,1	;volatile
  1582     07AE  2FAB               	goto	l135
  1583                           
  1584                           ;controle.c: 177:         }
  1585     07AF  3001               	movlw	1
  1586     07B0  07E6               	addwf	main@i^(0+128),f
  1587     07B1  1803               	skipnc
  1588     07B2  0AE7               	incf	(main@i+1)^(0+128),f
  1589     07B3  3000               	movlw	0
  1590     07B4  07E7               	addwf	(main@i+1)^(0+128),f
  1591     07B5  2F9D               	goto	l4510
  1592     07B6                     l138:
  1593                           
  1594                           ;controle.c: 178:         if (RCIF)
  1595     07B6  1283               	bcf	3,5	;RP0=0, select bank0
  1596     07B7  1303               	bcf	3,6	;RP1=0, select bank0
  1597     07B8  1E8C               	btfss	12,5	;volatile
  1598     07B9  2FD8               	goto	l4530
  1599                           
  1600                           ;controle.c: 179:         {;controle.c: 180:             char c = RCREG;
  1601     07BA  081A               	movf	26,w	;volatile
  1602     07BB  1683               	bsf	3,5	;RP0=1, select bank1
  1603     07BC  1303               	bcf	3,6	;RP1=0, select bank1
  1604     07BD  00E5               	movwf	main@c^(0+128)
  1605                           
  1606                           ;controle.c: 181:             if (c == '0' && pwm_enabled) {
  1607     07BE  3030               	movlw	48
  1608     07BF  0665               	xorwf	main@c^(0+128),w
  1609     07C0  1D03               	btfss	3,2
  1610     07C1  2FC7               	goto	l4522
  1611     07C2  086F               	movf	_pwm_enabled^(0+128),w
  1612     07C3  1903               	btfsc	3,2
  1613     07C4  2FC7               	goto	l4522
  1614                           
  1615                           ;controle.c: 182:                 controle_pwm(0);
  1616     07C5  3000               	movlw	0
  1617     07C6  2FCF               	goto	L2
  1618     07C7                     l4522:	
  1619                           ;controle.c: 184:             } else if (c == '1' && !pwm_enabled) {
  1620                           
  1621     07C7  3031               	movlw	49
  1622     07C8  0665               	xorwf	main@c^(0+128),w
  1623     07C9  1D03               	btfss	3,2
  1624     07CA  2FD8               	goto	l4530
  1625     07CB  086F               	movf	_pwm_enabled^(0+128),w
  1626     07CC  1D03               	btfss	3,2
  1627     07CD  2FD8               	goto	l4530
  1628                           
  1629                           ;controle.c: 185:                 controle_pwm(1);
  1630     07CE  3001               	movlw	1
  1631     07CF                     L2:
  1632     07CF  160A  158A  2305  120A  118A  	fcall	_controle_pwm
  1633                           
  1634                           ;controle.c: 183:                 TXREG = 'P';
  1635     07D4  3050               	movlw	80
  1636     07D5  1283               	bcf	3,5	;RP0=0, select bank0
  1637     07D6  1303               	bcf	3,6	;RP1=0, select bank0
  1638     07D7  0099               	movwf	25	;volatile
  1639     07D8                     l4530:
  1640                           
  1641                           ;controle.c: 189:         velocidade(duty_cycle);
  1642     07D8  1683               	bsf	3,5	;RP0=1, select bank1
  1643     07D9  1303               	bcf	3,6	;RP1=0, select bank1
  1644     07DA  0868               	movf	main@duty_cycle^(0+128),w
  1645     07DB  160A  158A  22B5  120A  118A  	fcall	_velocidade
  1646                           
  1647                           ;controle.c: 191:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1648     07E0  3082               	movlw	130
  1649     07E1  1683               	bsf	3,5	;RP0=1, select bank1
  1650     07E2  1303               	bcf	3,6	;RP1=0, select bank1
  1651     07E3  00C6               	movwf	(??_main^(0+128)+1)
  1652     07E4  30DD               	movlw	221
  1653     07E5  00C5               	movwf	??_main^(0+128)
  1654     07E6                     u7687:
  1655     07E6  0BC5               	decfsz	??_main^(0+128),f
  1656     07E7  2FE6               	goto	u7687
  1657     07E8  0BC6               	decfsz	(??_main^(0+128)+1),f
  1658     07E9  2FE6               	goto	u7687
  1659     07EA  2EEC               	goto	l4490
  1660     07EB                     __end_of_main:
  1661                           
  1662                           	psect	text1
  1663     1AB5                     __ptext1:	
  1664 ;; *************** function _velocidade *****************
  1665 ;; Defined at:
  1666 ;;		line 113 in file "controle.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;  duty            1    wreg     unsigned char 
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;  duty            1    2[COMMON] unsigned char 
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  1    wreg      void 
  1673 ;; Registers used:
  1674 ;;		wreg, status,2
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1680 ;;      Params:         0       0       0       0       0
  1681 ;;      Locals:         1       0       0       0       0
  1682 ;;      Temps:          0       0       0       0       0
  1683 ;;      Totals:         1       0       0       0       0
  1684 ;;Total ram usage:        1 bytes
  1685 ;; Hardware stack levels used: 1
  1686 ;; Hardware stack levels required when called: 1
  1687 ;; This function calls:
  1688 ;;		Nothing
  1689 ;; This function is called by:
  1690 ;;		_main
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694     1AB5                     _velocidade:	
  1695                           ;psect for function _velocidade
  1696                           
  1697                           
  1698                           ;incstack = 0
  1699                           ; Regs used in _velocidade: [wreg+status,2]
  1700                           ;velocidade@duty stored from wreg
  1701     1AB5  00F2               	movwf	velocidade@duty
  1702                           
  1703                           ;controle.c: 113: void velocidade(char duty);controle.c: 114: {;controle.c: 115:     CCP
      +                          R1L = duty;
  1704     1AB6  0872               	movf	velocidade@duty,w
  1705     1AB7  1283               	bcf	3,5	;RP0=0, select bank0
  1706     1AB8  1303               	bcf	3,6	;RP1=0, select bank0
  1707     1AB9  0095               	movwf	21	;volatile
  1708                           
  1709                           ;controle.c: 116:     TMR2 = 0;
  1710     1ABA  0191               	clrf	17	;volatile
  1711     1ABB  0008               	return
  1712     1ABC                     __end_of_velocidade:
  1713                           
  1714                           	psect	text2
  1715     0036                     __ptext2:	
  1716 ;; *************** function _sprintf *****************
  1717 ;; Defined at:
  1718 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;  sp              1    wreg     PTR unsigned char 
  1721 ;;		 -> main@buffer(30), 
  1722 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1723 ;;		 -> STR_1(23), 
  1724 ;; Auto vars:     Size  Location     Type
  1725 ;;  sp              1   31[BANK1 ] PTR unsigned char 
  1726 ;;		 -> main@buffer(30), 
  1727 ;;  fval            4   32[BANK1 ] PTR unsigned char 
  1728 ;;  tmpval          4   27[BANK1 ] struct .
  1729 ;;  val             4   21[BANK1 ] unsigned long 
  1730 ;;  eexp            2   25[BANK1 ] int 
  1731 ;;  prec            2   19[BANK1 ] int 
  1732 ;;  flag            2   17[BANK1 ] unsigned short 
  1733 ;;  cp              2    0        PTR const unsigned char 
  1734 ;;  len             2    0        unsigned int 
  1735 ;;  width           2    0        int 
  1736 ;;  c               1   36[BANK1 ] unsigned char 
  1737 ;;  ap              1   16[BANK1 ] PTR void [1]
  1738 ;;		 -> ?_sprintf(2), 
  1739 ;;  d               1    0        unsigned char 
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  2    0[BANK1 ] int 
  1742 ;; Registers used:
  1743 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1749 ;;      Params:         0       0       7       0       0
  1750 ;;      Locals:         0       0      25       0       0
  1751 ;;      Temps:          0       0       5       0       0
  1752 ;;      Totals:         0       0      37       0       0
  1753 ;;Total ram usage:       37 bytes
  1754 ;; Hardware stack levels used: 1
  1755 ;; Hardware stack levels required when called: 4
  1756 ;; This function calls:
  1757 ;;		___awdiv
  1758 ;;		___fladd
  1759 ;;		___fleq
  1760 ;;		___flge
  1761 ;;		___flmul
  1762 ;;		___flneg
  1763 ;;		___flsub
  1764 ;;		___fltol
  1765 ;;		___lldiv
  1766 ;;		___llmod
  1767 ;;		___wmul
  1768 ;;		___xxtofl
  1769 ;;		__div_to_l_
  1770 ;;		__tdiv_to_l_
  1771 ;;		_fround
  1772 ;;		_scale
  1773 ;; This function is called by:
  1774 ;;		_main
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778     0036                     _sprintf:	
  1779                           ;psect for function _sprintf
  1780                           
  1781                           
  1782                           ;incstack = 0
  1783                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1784                           ;sprintf@sp stored from wreg
  1785     0036  1683               	bsf	3,5	;RP0=1, select bank1
  1786     0037  1303               	bcf	3,6	;RP1=0, select bank1
  1787     0038  00BF               	movwf	sprintf@sp^(0+128)
  1788                           
  1789                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1790     0039  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1791     003A  00B0               	movwf	sprintf@ap^(0+128)
  1792     003B                     l4466:	
  1793                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1794                           
  1795                           
  1796                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1797     003B  3001               	movlw	1
  1798     003C  07A0               	addwf	sprintf@f^(0+128),f
  1799     003D  30FF               	movlw	-1
  1800     003E  0720               	addwf	sprintf@f^(0+128),w
  1801     003F  0084               	movwf	4
  1802     0040  160A  118A  2000  120A  118A  	fcall	stringdir
  1803     0045  00C4               	movwf	sprintf@c^(0+128)
  1804     0046  0844               	movf	sprintf@c^(0+128),w
  1805     0047  1903               	btfsc	3,2
  1806     0048  2EC9               	goto	l4468
  1807                           
  1808                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1809     0049  3025               	movlw	37
  1810     004A  0644               	xorwf	sprintf@c^(0+128),w
  1811     004B  1903               	btfsc	3,2
  1812     004C  2857               	goto	l4278
  1813                           
  1814                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1815     004D  083F               	movf	sprintf@sp^(0+128),w
  1816     004E  0084               	movwf	4
  1817     004F  0844               	movf	sprintf@c^(0+128),w
  1818     0050  1383               	bcf	3,7	;select IRP bank0
  1819     0051  0080               	movwf	0
  1820     0052  3001               	movlw	1
  1821     0053  00FF               	movwf	127
  1822     0054  087F               	movf	127,w
  1823     0055  07BF               	addwf	sprintf@sp^(0+128),f
  1824                           
  1825                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  1826     0056  283B               	goto	l4466
  1827     0057                     l4278:
  1828                           
  1829                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1830     0057  01B1               	clrf	sprintf@flag^(0+128)
  1831     0058  01B2               	clrf	(sprintf@flag+1)^(0+128)
  1832                           
  1833                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1834     0059  2861               	goto	l4284
  1835     005A                     l341:	
  1836                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1837                           
  1838                           
  1839                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1840     005A  1532               	bsf	(sprintf@flag^(0+128)+1),2
  1841                           
  1842                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 690:    break;
  1843     005B  287E               	goto	l4286
  1844     005C                     l4280:
  1845                           
  1846                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1847     005C  30C0               	movlw	192
  1848     005D  04B1               	iorwf	sprintf@flag^(0+128),f
  1849     005E  3000               	movlw	0
  1850     005F  04B2               	iorwf	(sprintf@flag+1)^(0+128),f
  1851                           
  1852                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 845:    break;
  1853     0060  287E               	goto	l4286
  1854     0061                     l4284:
  1855     0061  3001               	movlw	1
  1856     0062  07A0               	addwf	sprintf@f^(0+128),f
  1857     0063  30FF               	movlw	-1
  1858     0064  0720               	addwf	sprintf@f^(0+128),w
  1859     0065  0084               	movwf	4
  1860     0066  160A  118A  2000  120A  118A  	fcall	stringdir
  1861     006B  00C4               	movwf	sprintf@c^(0+128)
  1862     006C  00A7               	movwf	??_sprintf^(0+128)
  1863     006D  01A8               	clrf	(??_sprintf^(0+128)+1)
  1864                           
  1865                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1866                           ; Switch size 1, requested type "simple"
  1867                           ; Number of cases is 1, Range of values is 0 to 0
  1868                           ; switch strategies available:
  1869                           ; Name         Instructions Cycles
  1870                           ; simple_byte            4     3 (average)
  1871                           ; direct_byte           11     8 (fixed)
  1872                           ; jumptable            260     6 (fixed)
  1873                           ;	Chosen strategy is simple_byte
  1874     006E  0828               	movf	(??_sprintf+1)^(0+128),w
  1875     006F  3A00               	xorlw	0	; case 0
  1876     0070  1903               	skipnz
  1877     0071  2873               	goto	l4614
  1878     0072  283B               	goto	l4466
  1879     0073                     l4614:
  1880                           
  1881                           ; Switch size 1, requested type "simple"
  1882                           ; Number of cases is 3, Range of values is 0 to 117
  1883                           ; switch strategies available:
  1884                           ; Name         Instructions Cycles
  1885                           ; simple_byte           10     6 (average)
  1886                           ; jumptable            260     6 (fixed)
  1887                           ;	Chosen strategy is simple_byte
  1888     0073  0827               	movf	??_sprintf^(0+128),w
  1889     0074  3A00               	xorlw	0	; case 0
  1890     0075  1903               	skipnz
  1891     0076  2EC9               	goto	l4468
  1892     0077  3A66               	xorlw	102	; case 102
  1893     0078  1903               	skipnz
  1894     0079  285A               	goto	l341
  1895     007A  3A13               	xorlw	19	; case 117
  1896     007B  1903               	skipnz
  1897     007C  285C               	goto	l4280
  1898     007D  283B               	goto	l4466
  1899     007E                     l4286:
  1900                           
  1901                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1902     007E  3000               	movlw	0
  1903     007F  0531               	andwf	sprintf@flag^(0+128),w
  1904     0080  00A7               	movwf	??_sprintf^(0+128)
  1905     0081  3007               	movlw	7
  1906     0082  0532               	andwf	(sprintf@flag+1)^(0+128),w
  1907     0083  00A8               	movwf	(??_sprintf+1)^(0+128)
  1908     0084  0827               	movf	??_sprintf^(0+128),w
  1909     0085  0428               	iorwf	(??_sprintf^(0+128)+1),w
  1910     0086  1903               	btfsc	3,2
  1911     0087  2DF7               	goto	l4432
  1912                           
  1913                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1914     0088  3006               	movlw	6
  1915     0089  00B3               	movwf	sprintf@prec^(0+128)
  1916     008A  3000               	movlw	0
  1917     008B  00B4               	movwf	(sprintf@prec^(0+128)+1)
  1918                           
  1919                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1920     008C  0830               	movf	sprintf@ap^(0+128),w
  1921     008D  0084               	movwf	4
  1922     008E  1383               	bcf	3,7	;select IRP bank0
  1923     008F  0800               	movf	0,w
  1924     0090  00C0               	movwf	sprintf@fval^(0+128)
  1925     0091  0A84               	incf	4,f
  1926     0092  0800               	movf	0,w
  1927     0093  00C1               	movwf	(sprintf@fval+1)^(0+128)
  1928     0094  0A84               	incf	4,f
  1929     0095  0800               	movf	0,w
  1930     0096  00C2               	movwf	(sprintf@fval+2)^(0+128)
  1931     0097  0A84               	incf	4,f
  1932     0098  0800               	movf	0,w
  1933     0099  00C3               	movwf	(sprintf@fval+3)^(0+128)
  1934     009A  3004               	movlw	4
  1935     009B  00FF               	movwf	127
  1936     009C  087F               	movf	127,w
  1937     009D  07B0               	addwf	sprintf@ap^(0+128),f
  1938                           
  1939                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1940     009E  0843               	movf	(sprintf@fval+3)^(0+128),w
  1941     009F  00F5               	movwf	___flge@ff1+3
  1942     00A0  0842               	movf	(sprintf@fval+2)^(0+128),w
  1943     00A1  00F4               	movwf	___flge@ff1+2
  1944     00A2  0841               	movf	(sprintf@fval+1)^(0+128),w
  1945     00A3  00F3               	movwf	___flge@ff1+1
  1946     00A4  0840               	movf	sprintf@fval^(0+128),w
  1947     00A5  00F2               	movwf	___flge@ff1
  1948     00A6  3000               	movlw	0
  1949     00A7  00F9               	movwf	___flge@ff2+3
  1950     00A8  3000               	movlw	0
  1951     00A9  00F8               	movwf	___flge@ff2+2
  1952     00AA  3000               	movlw	0
  1953     00AB  00F7               	movwf	___flge@ff2+1
  1954     00AC  3000               	movlw	0
  1955     00AD  00F6               	movwf	___flge@ff2
  1956     00AE  160A  158A  26C8  120A  118A  	fcall	___flge
  1957     00B3  1803               	btfsc	3,0
  1958     00B4  28D2               	goto	l4300
  1959                           
  1960                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1961     00B5  1683               	bsf	3,5	;RP0=1, select bank1
  1962     00B6  1303               	bcf	3,6	;RP1=0, select bank1
  1963     00B7  0843               	movf	(sprintf@fval+3)^(0+128),w
  1964     00B8  00F5               	movwf	___flneg@f1+3
  1965     00B9  0842               	movf	(sprintf@fval+2)^(0+128),w
  1966     00BA  00F4               	movwf	___flneg@f1+2
  1967     00BB  0841               	movf	(sprintf@fval+1)^(0+128),w
  1968     00BC  00F3               	movwf	___flneg@f1+1
  1969     00BD  0840               	movf	sprintf@fval^(0+128),w
  1970     00BE  00F2               	movwf	___flneg@f1
  1971     00BF  160A  158A  22BC  120A  118A  	fcall	___flneg
  1972     00C4  0875               	movf	?___flneg+3,w
  1973     00C5  1683               	bsf	3,5	;RP0=1, select bank1
  1974     00C6  1303               	bcf	3,6	;RP1=0, select bank1
  1975     00C7  00C3               	movwf	(sprintf@fval+3)^(0+128)
  1976     00C8  0874               	movf	?___flneg+2,w
  1977     00C9  00C2               	movwf	(sprintf@fval+2)^(0+128)
  1978     00CA  0873               	movf	?___flneg+1,w
  1979     00CB  00C1               	movwf	(sprintf@fval+1)^(0+128)
  1980     00CC  0872               	movf	?___flneg,w
  1981     00CD  00C0               	movwf	sprintf@fval^(0+128)
  1982                           
  1983                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1984     00CE  3003               	movlw	3
  1985     00CF  04B1               	iorwf	sprintf@flag^(0+128),f
  1986     00D0  3000               	movlw	0
  1987     00D1  04B2               	iorwf	(sprintf@flag+1)^(0+128),f
  1988     00D2                     l4300:
  1989                           
  1990                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1991     00D2  1683               	bsf	3,5	;RP0=1, select bank1
  1992     00D3  1303               	bcf	3,6	;RP1=0, select bank1
  1993     00D4  01B9               	clrf	sprintf@eexp^(0+128)
  1994     00D5  01BA               	clrf	(sprintf@eexp+1)^(0+128)
  1995                           
  1996                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  1997     00D6  0843               	movf	(sprintf@fval+3)^(0+128),w
  1998     00D7  00F5               	movwf	___fleq@ff1+3
  1999     00D8  0842               	movf	(sprintf@fval+2)^(0+128),w
  2000     00D9  00F4               	movwf	___fleq@ff1+2
  2001     00DA  0841               	movf	(sprintf@fval+1)^(0+128),w
  2002     00DB  00F3               	movwf	___fleq@ff1+1
  2003     00DC  0840               	movf	sprintf@fval^(0+128),w
  2004     00DD  00F2               	movwf	___fleq@ff1
  2005     00DE  3000               	movlw	0
  2006     00DF  00F9               	movwf	___fleq@ff2+3
  2007     00E0  3000               	movlw	0
  2008     00E1  00F8               	movwf	___fleq@ff2+2
  2009     00E2  3000               	movlw	0
  2010     00E3  00F7               	movwf	___fleq@ff2+1
  2011     00E4  3000               	movlw	0
  2012     00E5  00F6               	movwf	___fleq@ff2
  2013     00E6  160A  158A  249B  120A  118A  	fcall	___fleq
  2014     00EB  1803               	btfsc	3,0
  2015     00EC  29E6               	goto	l4330
  2016                           
  2017                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2018     00ED  1003               	clrc
  2019     00EE  1683               	bsf	3,5	;RP0=1, select bank1
  2020     00EF  1303               	bcf	3,6	;RP1=0, select bank1
  2021     00F0  0D42               	rlf	(sprintf@fval+2)^(0+128),w
  2022     00F1  0D43               	rlf	(sprintf@fval+3)^(0+128),w
  2023     00F2  3E82               	addlw	130
  2024     00F3  00B9               	movwf	sprintf@eexp^(0+128)
  2025     00F4  30FF               	movlw	255
  2026     00F5  1803               	skipnc
  2027     00F6  3000               	movlw	0
  2028     00F7  00BA               	movwf	(sprintf@eexp^(0+128)+1)
  2029                           
  2030                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2031     00F8  30FF               	movlw	255
  2032     00F9  07B9               	addwf	sprintf@eexp^(0+128),f
  2033     00FA  1803               	skipnc
  2034     00FB  0ABA               	incf	(sprintf@eexp+1)^(0+128),f
  2035     00FC  30FF               	movlw	255
  2036     00FD  07BA               	addwf	(sprintf@eexp+1)^(0+128),f
  2037                           
  2038                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2039     00FE  3003               	movlw	3
  2040     00FF  00F2               	movwf	___wmul@multiplier
  2041     0100  3000               	movlw	0
  2042     0101  00F3               	movwf	___wmul@multiplier+1
  2043     0102  083A               	movf	(sprintf@eexp+1)^(0+128),w
  2044     0103  00F5               	movwf	___wmul@multiplicand+1
  2045     0104  0839               	movf	sprintf@eexp^(0+128),w
  2046     0105  00F4               	movwf	___wmul@multiplicand
  2047     0106  120A  158A  2000  120A  118A  	fcall	___wmul
  2048     010B  0873               	movf	?___wmul+1,w
  2049     010C  1683               	bsf	3,5	;RP0=1, select bank1
  2050     010D  1303               	bcf	3,6	;RP1=0, select bank1
  2051     010E  00BA               	movwf	(sprintf@eexp+1)^(0+128)
  2052     010F  0872               	movf	?___wmul,w
  2053     0110  00B9               	movwf	sprintf@eexp^(0+128)
  2054                           
  2055                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2056     0111  300A               	movlw	10
  2057     0112  1283               	bcf	3,5	;RP0=0, select bank0
  2058     0113  1303               	bcf	3,6	;RP1=0, select bank0
  2059     0114  00A0               	movwf	___awdiv@divisor
  2060     0115  3000               	movlw	0
  2061     0116  00A1               	movwf	___awdiv@divisor+1
  2062     0117  1683               	bsf	3,5	;RP0=1, select bank1
  2063     0118  1303               	bcf	3,6	;RP1=0, select bank1
  2064     0119  083A               	movf	(sprintf@eexp+1)^(0+128),w
  2065     011A  1283               	bcf	3,5	;RP0=0, select bank0
  2066     011B  1303               	bcf	3,6	;RP1=0, select bank0
  2067     011C  00A3               	movwf	___awdiv@dividend+1
  2068     011D  1683               	bsf	3,5	;RP0=1, select bank1
  2069     011E  1303               	bcf	3,6	;RP1=0, select bank1
  2070     011F  0839               	movf	sprintf@eexp^(0+128),w
  2071     0120  1283               	bcf	3,5	;RP0=0, select bank0
  2072     0121  1303               	bcf	3,6	;RP1=0, select bank0
  2073     0122  00A2               	movwf	___awdiv@dividend
  2074     0123  160A  118A  20AD  120A  118A  	fcall	___awdiv
  2075     0128  1283               	bcf	3,5	;RP0=0, select bank0
  2076     0129  1303               	bcf	3,6	;RP1=0, select bank0
  2077     012A  0821               	movf	?___awdiv+1,w
  2078     012B  1683               	bsf	3,5	;RP0=1, select bank1
  2079     012C  1303               	bcf	3,6	;RP1=0, select bank1
  2080     012D  00BA               	movwf	(sprintf@eexp+1)^(0+128)
  2081     012E  1283               	bcf	3,5	;RP0=0, select bank0
  2082     012F  1303               	bcf	3,6	;RP1=0, select bank0
  2083     0130  0820               	movf	?___awdiv,w
  2084     0131  1683               	bsf	3,5	;RP0=1, select bank1
  2085     0132  1303               	bcf	3,6	;RP1=0, select bank1
  2086     0133  00B9               	movwf	sprintf@eexp^(0+128)
  2087                           
  2088                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2089     0134  1FBA               	btfss	(sprintf@eexp+1)^(0+128),7
  2090     0135  293C               	goto	l4316
  2091                           
  2092                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2093     0136  30FF               	movlw	255
  2094     0137  07B9               	addwf	sprintf@eexp^(0+128),f
  2095     0138  1803               	skipnc
  2096     0139  0ABA               	incf	(sprintf@eexp+1)^(0+128),f
  2097     013A  30FF               	movlw	255
  2098     013B  07BA               	addwf	(sprintf@eexp+1)^(0+128),f
  2099     013C                     l4316:
  2100                           
  2101                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2102     013C  0339               	decf	sprintf@eexp^(0+128),w
  2103     013D  3AFF               	xorlw	255
  2104     013E  120A  158A  24B3  120A  118A  	fcall	_scale
  2105     0143  1283               	bcf	3,5	;RP0=0, select bank0
  2106     0144  1303               	bcf	3,6	;RP1=0, select bank0
  2107     0145  0856               	movf	?_scale+3,w
  2108     0146  1683               	bsf	3,5	;RP0=1, select bank1
  2109     0147  1303               	bcf	3,6	;RP1=0, select bank1
  2110     0148  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2111     0149  1283               	bcf	3,5	;RP0=0, select bank0
  2112     014A  1303               	bcf	3,6	;RP1=0, select bank0
  2113     014B  0855               	movf	?_scale+2,w
  2114     014C  1683               	bsf	3,5	;RP0=1, select bank1
  2115     014D  1303               	bcf	3,6	;RP1=0, select bank1
  2116     014E  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2117     014F  1283               	bcf	3,5	;RP0=0, select bank0
  2118     0150  1303               	bcf	3,6	;RP1=0, select bank0
  2119     0151  0854               	movf	?_scale+1,w
  2120     0152  1683               	bsf	3,5	;RP0=1, select bank1
  2121     0153  1303               	bcf	3,6	;RP1=0, select bank1
  2122     0154  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2123     0155  1283               	bcf	3,5	;RP0=0, select bank0
  2124     0156  1303               	bcf	3,6	;RP1=0, select bank0
  2125     0157  0853               	movf	?_scale,w
  2126     0158  1683               	bsf	3,5	;RP0=1, select bank1
  2127     0159  1303               	bcf	3,6	;RP1=0, select bank1
  2128     015A  00BB               	movwf	sprintf@tmpval^(0+128)
  2129                           
  2130                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2131     015B  0843               	movf	(sprintf@fval+3)^(0+128),w
  2132     015C  1283               	bcf	3,5	;RP0=0, select bank0
  2133     015D  1303               	bcf	3,6	;RP1=0, select bank0
  2134     015E  00BC               	movwf	___flmul@b+3
  2135     015F  1683               	bsf	3,5	;RP0=1, select bank1
  2136     0160  1303               	bcf	3,6	;RP1=0, select bank1
  2137     0161  0842               	movf	(sprintf@fval+2)^(0+128),w
  2138     0162  1283               	bcf	3,5	;RP0=0, select bank0
  2139     0163  1303               	bcf	3,6	;RP1=0, select bank0
  2140     0164  00BB               	movwf	___flmul@b+2
  2141     0165  1683               	bsf	3,5	;RP0=1, select bank1
  2142     0166  1303               	bcf	3,6	;RP1=0, select bank1
  2143     0167  0841               	movf	(sprintf@fval+1)^(0+128),w
  2144     0168  1283               	bcf	3,5	;RP0=0, select bank0
  2145     0169  1303               	bcf	3,6	;RP1=0, select bank0
  2146     016A  00BA               	movwf	___flmul@b+1
  2147     016B  1683               	bsf	3,5	;RP0=1, select bank1
  2148     016C  1303               	bcf	3,6	;RP1=0, select bank1
  2149     016D  0840               	movf	sprintf@fval^(0+128),w
  2150     016E  1283               	bcf	3,5	;RP0=0, select bank0
  2151     016F  1303               	bcf	3,6	;RP1=0, select bank0
  2152     0170  00B9               	movwf	___flmul@b
  2153     0171  1683               	bsf	3,5	;RP0=1, select bank1
  2154     0172  1303               	bcf	3,6	;RP1=0, select bank1
  2155     0173  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2156     0174  1283               	bcf	3,5	;RP0=0, select bank0
  2157     0175  1303               	bcf	3,6	;RP1=0, select bank0
  2158     0176  00C0               	movwf	___flmul@a+3
  2159     0177  1683               	bsf	3,5	;RP0=1, select bank1
  2160     0178  1303               	bcf	3,6	;RP1=0, select bank1
  2161     0179  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2162     017A  1283               	bcf	3,5	;RP0=0, select bank0
  2163     017B  1303               	bcf	3,6	;RP1=0, select bank0
  2164     017C  00BF               	movwf	___flmul@a+2
  2165     017D  1683               	bsf	3,5	;RP0=1, select bank1
  2166     017E  1303               	bcf	3,6	;RP1=0, select bank1
  2167     017F  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2168     0180  1283               	bcf	3,5	;RP0=0, select bank0
  2169     0181  1303               	bcf	3,6	;RP1=0, select bank0
  2170     0182  00BE               	movwf	___flmul@a+1
  2171     0183  1683               	bsf	3,5	;RP0=1, select bank1
  2172     0184  1303               	bcf	3,6	;RP1=0, select bank1
  2173     0185  083B               	movf	sprintf@tmpval^(0+128),w
  2174     0186  1283               	bcf	3,5	;RP0=0, select bank0
  2175     0187  1303               	bcf	3,6	;RP1=0, select bank0
  2176     0188  00BD               	movwf	___flmul@a
  2177     0189  120A  158A  21BA  120A  118A  	fcall	___flmul
  2178     018E  1283               	bcf	3,5	;RP0=0, select bank0
  2179     018F  1303               	bcf	3,6	;RP1=0, select bank0
  2180     0190  083C               	movf	?___flmul+3,w
  2181     0191  1683               	bsf	3,5	;RP0=1, select bank1
  2182     0192  1303               	bcf	3,6	;RP1=0, select bank1
  2183     0193  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2184     0194  1283               	bcf	3,5	;RP0=0, select bank0
  2185     0195  1303               	bcf	3,6	;RP1=0, select bank0
  2186     0196  083B               	movf	?___flmul+2,w
  2187     0197  1683               	bsf	3,5	;RP0=1, select bank1
  2188     0198  1303               	bcf	3,6	;RP1=0, select bank1
  2189     0199  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2190     019A  1283               	bcf	3,5	;RP0=0, select bank0
  2191     019B  1303               	bcf	3,6	;RP1=0, select bank0
  2192     019C  083A               	movf	?___flmul+1,w
  2193     019D  1683               	bsf	3,5	;RP0=1, select bank1
  2194     019E  1303               	bcf	3,6	;RP1=0, select bank1
  2195     019F  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2196     01A0  1283               	bcf	3,5	;RP0=0, select bank0
  2197     01A1  1303               	bcf	3,6	;RP1=0, select bank0
  2198     01A2  0839               	movf	?___flmul,w
  2199     01A3  1683               	bsf	3,5	;RP0=1, select bank1
  2200     01A4  1303               	bcf	3,6	;RP1=0, select bank1
  2201     01A5  00BB               	movwf	sprintf@tmpval^(0+128)
  2202                           
  2203                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2204     01A6  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2205     01A7  00F5               	movwf	___flge@ff1+3
  2206     01A8  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2207     01A9  00F4               	movwf	___flge@ff1+2
  2208     01AA  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2209     01AB  00F3               	movwf	___flge@ff1+1
  2210     01AC  083B               	movf	sprintf@tmpval^(0+128),w
  2211     01AD  00F2               	movwf	___flge@ff1
  2212     01AE  303F               	movlw	63
  2213     01AF  00F9               	movwf	___flge@ff2+3
  2214     01B0  3080               	movlw	128
  2215     01B1  00F8               	movwf	___flge@ff2+2
  2216     01B2  3000               	movlw	0
  2217     01B3  00F7               	movwf	___flge@ff2+1
  2218     01B4  3000               	movlw	0
  2219     01B5  00F6               	movwf	___flge@ff2
  2220     01B6  160A  158A  26C8  120A  118A  	fcall	___flge
  2221     01BB  1803               	btfsc	3,0
  2222     01BC  29C5               	goto	l4324
  2223                           
  2224                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2225     01BD  30FF               	movlw	255
  2226     01BE  1683               	bsf	3,5	;RP0=1, select bank1
  2227     01BF  1303               	bcf	3,6	;RP1=0, select bank1
  2228     01C0  07B9               	addwf	sprintf@eexp^(0+128),f
  2229     01C1  1803               	skipnc
  2230     01C2  0ABA               	incf	(sprintf@eexp+1)^(0+128),f
  2231     01C3  30FF               	movlw	255
  2232     01C4  29E5               	goto	L6
  2233     01C5                     l4324:
  2234     01C5  1683               	bsf	3,5	;RP0=1, select bank1
  2235     01C6  1303               	bcf	3,6	;RP1=0, select bank1
  2236     01C7  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2237     01C8  00F5               	movwf	___flge@ff1+3
  2238     01C9  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2239     01CA  00F4               	movwf	___flge@ff1+2
  2240     01CB  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2241     01CC  00F3               	movwf	___flge@ff1+1
  2242     01CD  083B               	movf	sprintf@tmpval^(0+128),w
  2243     01CE  00F2               	movwf	___flge@ff1
  2244     01CF  3041               	movlw	65
  2245     01D0  00F9               	movwf	___flge@ff2+3
  2246     01D1  3020               	movlw	32
  2247     01D2  00F8               	movwf	___flge@ff2+2
  2248     01D3  3000               	movlw	0
  2249     01D4  00F7               	movwf	___flge@ff2+1
  2250     01D5  3000               	movlw	0
  2251     01D6  00F6               	movwf	___flge@ff2
  2252     01D7  160A  158A  26C8  120A  118A  	fcall	___flge
  2253     01DC  1C03               	btfss	3,0
  2254     01DD  29E6               	goto	l4330
  2255                           
  2256                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2257     01DE  3001               	movlw	1
  2258     01DF  1683               	bsf	3,5	;RP0=1, select bank1
  2259     01E0  1303               	bcf	3,6	;RP1=0, select bank1
  2260     01E1  07B9               	addwf	sprintf@eexp^(0+128),f
  2261     01E2  1803               	skipnc
  2262     01E3  0ABA               	incf	(sprintf@eexp+1)^(0+128),f
  2263     01E4  3000               	movlw	0
  2264     01E5                     L6:
  2265     01E5  07BA               	addwf	(sprintf@eexp+1)^(0+128),f
  2266     01E6                     l4330:	
  2267                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2268                           
  2269                           
  2270                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2271     01E6  3006               	movlw	6
  2272     01E7  160A  118A  25FD  120A  118A  	fcall	_fround
  2273     01EC  1283               	bcf	3,5	;RP0=0, select bank0
  2274     01ED  1303               	bcf	3,6	;RP1=0, select bank0
  2275     01EE  0856               	movf	?_fround+3,w
  2276     01EF  00A8               	movwf	___fladd@b+3
  2277     01F0  0855               	movf	?_fround+2,w
  2278     01F1  00A7               	movwf	___fladd@b+2
  2279     01F2  0854               	movf	?_fround+1,w
  2280     01F3  00A6               	movwf	___fladd@b+1
  2281     01F4  0853               	movf	?_fround,w
  2282     01F5  00A5               	movwf	___fladd@b
  2283     01F6  1683               	bsf	3,5	;RP0=1, select bank1
  2284     01F7  1303               	bcf	3,6	;RP1=0, select bank1
  2285     01F8  0843               	movf	(sprintf@fval+3)^(0+128),w
  2286     01F9  1283               	bcf	3,5	;RP0=0, select bank0
  2287     01FA  1303               	bcf	3,6	;RP1=0, select bank0
  2288     01FB  00AC               	movwf	___fladd@a+3
  2289     01FC  1683               	bsf	3,5	;RP0=1, select bank1
  2290     01FD  1303               	bcf	3,6	;RP1=0, select bank1
  2291     01FE  0842               	movf	(sprintf@fval+2)^(0+128),w
  2292     01FF  1283               	bcf	3,5	;RP0=0, select bank0
  2293     0200  1303               	bcf	3,6	;RP1=0, select bank0
  2294     0201  00AB               	movwf	___fladd@a+2
  2295     0202  1683               	bsf	3,5	;RP0=1, select bank1
  2296     0203  1303               	bcf	3,6	;RP1=0, select bank1
  2297     0204  0841               	movf	(sprintf@fval+1)^(0+128),w
  2298     0205  1283               	bcf	3,5	;RP0=0, select bank0
  2299     0206  1303               	bcf	3,6	;RP1=0, select bank0
  2300     0207  00AA               	movwf	___fladd@a+1
  2301     0208  1683               	bsf	3,5	;RP0=1, select bank1
  2302     0209  1303               	bcf	3,6	;RP1=0, select bank1
  2303     020A  0840               	movf	sprintf@fval^(0+128),w
  2304     020B  1283               	bcf	3,5	;RP0=0, select bank0
  2305     020C  1303               	bcf	3,6	;RP1=0, select bank0
  2306     020D  00A9               	movwf	___fladd@a
  2307     020E  160A  118A  23FE  120A  118A  	fcall	___fladd
  2308     0213  1283               	bcf	3,5	;RP0=0, select bank0
  2309     0214  1303               	bcf	3,6	;RP1=0, select bank0
  2310     0215  0828               	movf	?___fladd+3,w
  2311     0216  1683               	bsf	3,5	;RP0=1, select bank1
  2312     0217  1303               	bcf	3,6	;RP1=0, select bank1
  2313     0218  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2314     0219  1283               	bcf	3,5	;RP0=0, select bank0
  2315     021A  1303               	bcf	3,6	;RP1=0, select bank0
  2316     021B  0827               	movf	?___fladd+2,w
  2317     021C  1683               	bsf	3,5	;RP0=1, select bank1
  2318     021D  1303               	bcf	3,6	;RP1=0, select bank1
  2319     021E  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2320     021F  1283               	bcf	3,5	;RP0=0, select bank0
  2321     0220  1303               	bcf	3,6	;RP1=0, select bank0
  2322     0221  0826               	movf	?___fladd+1,w
  2323     0222  1683               	bsf	3,5	;RP0=1, select bank1
  2324     0223  1303               	bcf	3,6	;RP1=0, select bank1
  2325     0224  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2326     0225  1283               	bcf	3,5	;RP0=0, select bank0
  2327     0226  1303               	bcf	3,6	;RP1=0, select bank0
  2328     0227  0825               	movf	?___fladd,w
  2329     0228  1683               	bsf	3,5	;RP0=1, select bank1
  2330     0229  1303               	bcf	3,6	;RP1=0, select bank1
  2331     022A  00C0               	movwf	sprintf@fval^(0+128)
  2332                           
  2333                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2334     022B  083A               	movf	(sprintf@eexp+1)^(0+128),w
  2335     022C  3A80               	xorlw	128
  2336     022D  00FF               	movwf	127
  2337     022E  3080               	movlw	128
  2338     022F  027F               	subwf	127,w
  2339     0230  1D03               	skipz
  2340     0231  2A34               	goto	u7285
  2341     0232  300A               	movlw	10
  2342     0233  0239               	subwf	sprintf@eexp^(0+128),w
  2343     0234                     u7285:
  2344     0234  1803               	skipnc
  2345     0235  2A81               	goto	l4340
  2346     0236  1683               	bsf	3,5	;RP0=1, select bank1
  2347     0237  1303               	bcf	3,6	;RP1=0, select bank1
  2348     0238  0843               	movf	(sprintf@fval+3)^(0+128),w
  2349     0239  00F5               	movwf	___fleq@ff1+3
  2350     023A  0842               	movf	(sprintf@fval+2)^(0+128),w
  2351     023B  00F4               	movwf	___fleq@ff1+2
  2352     023C  0841               	movf	(sprintf@fval+1)^(0+128),w
  2353     023D  00F3               	movwf	___fleq@ff1+1
  2354     023E  0840               	movf	sprintf@fval^(0+128),w
  2355     023F  00F2               	movwf	___fleq@ff1
  2356     0240  3000               	movlw	0
  2357     0241  00F9               	movwf	___fleq@ff2+3
  2358     0242  3000               	movlw	0
  2359     0243  00F8               	movwf	___fleq@ff2+2
  2360     0244  3000               	movlw	0
  2361     0245  00F7               	movwf	___fleq@ff2+1
  2362     0246  3000               	movlw	0
  2363     0247  00F6               	movwf	___fleq@ff2
  2364     0248  160A  158A  249B  120A  118A  	fcall	___fleq
  2365     024D  1803               	btfsc	3,0
  2366     024E  2AEA               	goto	l4354
  2367     024F  1683               	bsf	3,5	;RP0=1, select bank1
  2368     0250  1303               	bcf	3,6	;RP1=0, select bank1
  2369     0251  0843               	movf	(sprintf@fval+3)^(0+128),w
  2370     0252  1283               	bcf	3,5	;RP0=0, select bank0
  2371     0253  1303               	bcf	3,6	;RP1=0, select bank0
  2372     0254  00E9               	movwf	___fltol@f1+3
  2373     0255  1683               	bsf	3,5	;RP0=1, select bank1
  2374     0256  1303               	bcf	3,6	;RP1=0, select bank1
  2375     0257  0842               	movf	(sprintf@fval+2)^(0+128),w
  2376     0258  1283               	bcf	3,5	;RP0=0, select bank0
  2377     0259  1303               	bcf	3,6	;RP1=0, select bank0
  2378     025A  00E8               	movwf	___fltol@f1+2
  2379     025B  1683               	bsf	3,5	;RP0=1, select bank1
  2380     025C  1303               	bcf	3,6	;RP1=0, select bank1
  2381     025D  0841               	movf	(sprintf@fval+1)^(0+128),w
  2382     025E  1283               	bcf	3,5	;RP0=0, select bank0
  2383     025F  1303               	bcf	3,6	;RP1=0, select bank0
  2384     0260  00E7               	movwf	___fltol@f1+1
  2385     0261  1683               	bsf	3,5	;RP0=1, select bank1
  2386     0262  1303               	bcf	3,6	;RP1=0, select bank1
  2387     0263  0840               	movf	sprintf@fval^(0+128),w
  2388     0264  1283               	bcf	3,5	;RP0=0, select bank0
  2389     0265  1303               	bcf	3,6	;RP1=0, select bank0
  2390     0266  00E6               	movwf	___fltol@f1
  2391     0267  160A  158A  25DE  120A  118A  	fcall	___fltol
  2392     026C  1283               	bcf	3,5	;RP0=0, select bank0
  2393     026D  1303               	bcf	3,6	;RP1=0, select bank0
  2394     026E  0869               	movf	?___fltol+3,w
  2395     026F  0468               	iorwf	?___fltol+2,w
  2396     0270  0467               	iorwf	?___fltol+1,w
  2397     0271  0466               	iorwf	?___fltol,w
  2398     0272  1D03               	skipz
  2399     0273  2AEA               	goto	l4354
  2400     0274  1683               	bsf	3,5	;RP0=1, select bank1
  2401     0275  1303               	bcf	3,6	;RP1=0, select bank1
  2402     0276  083A               	movf	(sprintf@eexp+1)^(0+128),w
  2403     0277  3A80               	xorlw	128
  2404     0278  00FF               	movwf	127
  2405     0279  3080               	movlw	128
  2406     027A  027F               	subwf	127,w
  2407     027B  1D03               	skipz
  2408     027C  2A7F               	goto	u7315
  2409     027D  3002               	movlw	2
  2410     027E  0239               	subwf	sprintf@eexp^(0+128),w
  2411     027F                     u7315:
  2412     027F  1C03               	skipc
  2413     0280  2AEA               	goto	l4354
  2414     0281                     l4340:
  2415                           
  2416                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2417     0281  1683               	bsf	3,5	;RP0=1, select bank1
  2418     0282  1303               	bcf	3,6	;RP1=0, select bank1
  2419     0283  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2420     0284  00F5               	movwf	___flge@ff1+3
  2421     0285  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2422     0286  00F4               	movwf	___flge@ff1+2
  2423     0287  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2424     0288  00F3               	movwf	___flge@ff1+1
  2425     0289  083B               	movf	sprintf@tmpval^(0+128),w
  2426     028A  00F2               	movwf	___flge@ff1
  2427     028B  3040               	movlw	64
  2428     028C  00F9               	movwf	___flge@ff2+3
  2429     028D  3089               	movlw	137
  2430     028E  00F8               	movwf	___flge@ff2+2
  2431     028F  3070               	movlw	112
  2432     0290  00F7               	movwf	___flge@ff2+1
  2433     0291  305F               	movlw	95
  2434     0292  00F6               	movwf	___flge@ff2
  2435     0293  160A  158A  26C8  120A  118A  	fcall	___flge
  2436     0298  1803               	btfsc	3,0
  2437     0299  2A9C               	goto	l4344
  2438                           
  2439                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2440     029A  30F7               	movlw	247
  2441     029B  2A9D               	goto	L3
  2442     029C                     l4344:	
  2443                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2444                           
  2445                           
  2446                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2447     029C  30F8               	movlw	248
  2448     029D                     L3:
  2449     029D  1683               	bsf	3,5	;RP0=1, select bank1
  2450     029E  1303               	bcf	3,6	;RP1=0, select bank1
  2451     029F  07B9               	addwf	sprintf@eexp^(0+128),f
  2452     02A0  1803               	skipnc
  2453     02A1  0ABA               	incf	(sprintf@eexp+1)^(0+128),f
  2454     02A2  30FF               	movlw	255
  2455     02A3  07BA               	addwf	(sprintf@eexp+1)^(0+128),f
  2456                           
  2457                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2458     02A4  0839               	movf	sprintf@eexp^(0+128),w
  2459     02A5  120A  158A  24B3  120A  118A  	fcall	_scale
  2460     02AA  1283               	bcf	3,5	;RP0=0, select bank0
  2461     02AB  1303               	bcf	3,6	;RP1=0, select bank0
  2462     02AC  0856               	movf	?_scale+3,w
  2463     02AD  1683               	bsf	3,5	;RP0=1, select bank1
  2464     02AE  1303               	bcf	3,6	;RP1=0, select bank1
  2465     02AF  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2466     02B0  1283               	bcf	3,5	;RP0=0, select bank0
  2467     02B1  1303               	bcf	3,6	;RP1=0, select bank0
  2468     02B2  0855               	movf	?_scale+2,w
  2469     02B3  1683               	bsf	3,5	;RP0=1, select bank1
  2470     02B4  1303               	bcf	3,6	;RP1=0, select bank1
  2471     02B5  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2472     02B6  1283               	bcf	3,5	;RP0=0, select bank0
  2473     02B7  1303               	bcf	3,6	;RP1=0, select bank0
  2474     02B8  0854               	movf	?_scale+1,w
  2475     02B9  1683               	bsf	3,5	;RP0=1, select bank1
  2476     02BA  1303               	bcf	3,6	;RP1=0, select bank1
  2477     02BB  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2478     02BC  1283               	bcf	3,5	;RP0=0, select bank0
  2479     02BD  1303               	bcf	3,6	;RP1=0, select bank0
  2480     02BE  0853               	movf	?_scale,w
  2481     02BF  1683               	bsf	3,5	;RP0=1, select bank1
  2482     02C0  1303               	bcf	3,6	;RP1=0, select bank1
  2483     02C1  00BB               	movwf	sprintf@tmpval^(0+128)
  2484     02C2  0843               	movf	(sprintf@fval+3)^(0+128),w
  2485     02C3  00F5               	movwf	__div_to_l_@f1+3
  2486     02C4  0842               	movf	(sprintf@fval+2)^(0+128),w
  2487     02C5  00F4               	movwf	__div_to_l_@f1+2
  2488     02C6  0841               	movf	(sprintf@fval+1)^(0+128),w
  2489     02C7  00F3               	movwf	__div_to_l_@f1+1
  2490     02C8  0840               	movf	sprintf@fval^(0+128),w
  2491     02C9  00F2               	movwf	__div_to_l_@f1
  2492     02CA  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2493     02CB  00F9               	movwf	__div_to_l_@f2+3
  2494     02CC  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2495     02CD  00F8               	movwf	__div_to_l_@f2+2
  2496     02CE  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2497     02CF  00F7               	movwf	__div_to_l_@f2+1
  2498     02D0  083B               	movf	sprintf@tmpval^(0+128),w
  2499     02D1  00F6               	movwf	__div_to_l_@f2
  2500     02D2  160A  118A  21AB  120A  118A  	fcall	__div_to_l_
  2501     02D7  0875               	movf	?__div_to_l_+3,w
  2502     02D8  1683               	bsf	3,5	;RP0=1, select bank1
  2503     02D9  1303               	bcf	3,6	;RP1=0, select bank1
  2504     02DA  00B8               	movwf	(sprintf@val+3)^(0+128)
  2505     02DB  0874               	movf	?__div_to_l_+2,w
  2506     02DC  00B7               	movwf	(sprintf@val+2)^(0+128)
  2507     02DD  0873               	movf	?__div_to_l_+1,w
  2508     02DE  00B6               	movwf	(sprintf@val+1)^(0+128)
  2509     02DF  0872               	movf	?__div_to_l_,w
  2510     02E0  00B5               	movwf	sprintf@val^(0+128)
  2511                           
  2512                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2513     02E1  3000               	movlw	0
  2514     02E2  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2515     02E3  3000               	movlw	0
  2516     02E4  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2517     02E5  3000               	movlw	0
  2518     02E6  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2519     02E7  3000               	movlw	0
  2520     02E8  00C0               	movwf	sprintf@fval^(0+128)
  2521                           
  2522                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2523     02E9  2B6E               	goto	l4358
  2524     02EA                     l4354:
  2525                           
  2526                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2527     02EA  1683               	bsf	3,5	;RP0=1, select bank1
  2528     02EB  1303               	bcf	3,6	;RP1=0, select bank1
  2529     02EC  0843               	movf	(sprintf@fval+3)^(0+128),w
  2530     02ED  1283               	bcf	3,5	;RP0=0, select bank0
  2531     02EE  1303               	bcf	3,6	;RP1=0, select bank0
  2532     02EF  00E9               	movwf	___fltol@f1+3
  2533     02F0  1683               	bsf	3,5	;RP0=1, select bank1
  2534     02F1  1303               	bcf	3,6	;RP1=0, select bank1
  2535     02F2  0842               	movf	(sprintf@fval+2)^(0+128),w
  2536     02F3  1283               	bcf	3,5	;RP0=0, select bank0
  2537     02F4  1303               	bcf	3,6	;RP1=0, select bank0
  2538     02F5  00E8               	movwf	___fltol@f1+2
  2539     02F6  1683               	bsf	3,5	;RP0=1, select bank1
  2540     02F7  1303               	bcf	3,6	;RP1=0, select bank1
  2541     02F8  0841               	movf	(sprintf@fval+1)^(0+128),w
  2542     02F9  1283               	bcf	3,5	;RP0=0, select bank0
  2543     02FA  1303               	bcf	3,6	;RP1=0, select bank0
  2544     02FB  00E7               	movwf	___fltol@f1+1
  2545     02FC  1683               	bsf	3,5	;RP0=1, select bank1
  2546     02FD  1303               	bcf	3,6	;RP1=0, select bank1
  2547     02FE  0840               	movf	sprintf@fval^(0+128),w
  2548     02FF  1283               	bcf	3,5	;RP0=0, select bank0
  2549     0300  1303               	bcf	3,6	;RP1=0, select bank0
  2550     0301  00E6               	movwf	___fltol@f1
  2551     0302  160A  158A  25DE  120A  118A  	fcall	___fltol
  2552     0307  1283               	bcf	3,5	;RP0=0, select bank0
  2553     0308  1303               	bcf	3,6	;RP1=0, select bank0
  2554     0309  0869               	movf	?___fltol+3,w
  2555     030A  1683               	bsf	3,5	;RP0=1, select bank1
  2556     030B  1303               	bcf	3,6	;RP1=0, select bank1
  2557     030C  00B8               	movwf	(sprintf@val+3)^(0+128)
  2558     030D  1283               	bcf	3,5	;RP0=0, select bank0
  2559     030E  1303               	bcf	3,6	;RP1=0, select bank0
  2560     030F  0868               	movf	?___fltol+2,w
  2561     0310  1683               	bsf	3,5	;RP0=1, select bank1
  2562     0311  1303               	bcf	3,6	;RP1=0, select bank1
  2563     0312  00B7               	movwf	(sprintf@val+2)^(0+128)
  2564     0313  1283               	bcf	3,5	;RP0=0, select bank0
  2565     0314  1303               	bcf	3,6	;RP1=0, select bank0
  2566     0315  0867               	movf	?___fltol+1,w
  2567     0316  1683               	bsf	3,5	;RP0=1, select bank1
  2568     0317  1303               	bcf	3,6	;RP1=0, select bank1
  2569     0318  00B6               	movwf	(sprintf@val+1)^(0+128)
  2570     0319  1283               	bcf	3,5	;RP0=0, select bank0
  2571     031A  1303               	bcf	3,6	;RP1=0, select bank0
  2572     031B  0866               	movf	?___fltol,w
  2573     031C  1683               	bsf	3,5	;RP0=1, select bank1
  2574     031D  1303               	bcf	3,6	;RP1=0, select bank1
  2575     031E  00B5               	movwf	sprintf@val^(0+128)
  2576                           
  2577                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2578     031F  0838               	movf	(sprintf@val+3)^(0+128),w
  2579     0320  00F5               	movwf	___xxtofl@val+3
  2580     0321  0837               	movf	(sprintf@val+2)^(0+128),w
  2581     0322  00F4               	movwf	___xxtofl@val+2
  2582     0323  0836               	movf	(sprintf@val+1)^(0+128),w
  2583     0324  00F3               	movwf	___xxtofl@val+1
  2584     0325  0835               	movf	sprintf@val^(0+128),w
  2585     0326  00F2               	movwf	___xxtofl@val
  2586     0327  3000               	movlw	0
  2587     0328  160A  158A  275D  120A  118A  	fcall	___xxtofl
  2588     032D  0875               	movf	?___xxtofl+3,w
  2589     032E  1283               	bcf	3,5	;RP0=0, select bank0
  2590     032F  1303               	bcf	3,6	;RP1=0, select bank0
  2591     0330  00BC               	movwf	___flsub@a+3
  2592     0331  0874               	movf	?___xxtofl+2,w
  2593     0332  00BB               	movwf	___flsub@a+2
  2594     0333  0873               	movf	?___xxtofl+1,w
  2595     0334  00BA               	movwf	___flsub@a+1
  2596     0335  0872               	movf	?___xxtofl,w
  2597     0336  00B9               	movwf	___flsub@a
  2598     0337  1683               	bsf	3,5	;RP0=1, select bank1
  2599     0338  1303               	bcf	3,6	;RP1=0, select bank1
  2600     0339  0843               	movf	(sprintf@fval+3)^(0+128),w
  2601     033A  1283               	bcf	3,5	;RP0=0, select bank0
  2602     033B  1303               	bcf	3,6	;RP1=0, select bank0
  2603     033C  00C0               	movwf	___flsub@b+3
  2604     033D  1683               	bsf	3,5	;RP0=1, select bank1
  2605     033E  1303               	bcf	3,6	;RP1=0, select bank1
  2606     033F  0842               	movf	(sprintf@fval+2)^(0+128),w
  2607     0340  1283               	bcf	3,5	;RP0=0, select bank0
  2608     0341  1303               	bcf	3,6	;RP1=0, select bank0
  2609     0342  00BF               	movwf	___flsub@b+2
  2610     0343  1683               	bsf	3,5	;RP0=1, select bank1
  2611     0344  1303               	bcf	3,6	;RP1=0, select bank1
  2612     0345  0841               	movf	(sprintf@fval+1)^(0+128),w
  2613     0346  1283               	bcf	3,5	;RP0=0, select bank0
  2614     0347  1303               	bcf	3,6	;RP1=0, select bank0
  2615     0348  00BE               	movwf	___flsub@b+1
  2616     0349  1683               	bsf	3,5	;RP0=1, select bank1
  2617     034A  1303               	bcf	3,6	;RP1=0, select bank1
  2618     034B  0840               	movf	sprintf@fval^(0+128),w
  2619     034C  1283               	bcf	3,5	;RP0=0, select bank0
  2620     034D  1303               	bcf	3,6	;RP1=0, select bank0
  2621     034E  00BD               	movwf	___flsub@b
  2622     034F  160A  158A  233B  120A  118A  	fcall	___flsub
  2623     0354  1283               	bcf	3,5	;RP0=0, select bank0
  2624     0355  1303               	bcf	3,6	;RP1=0, select bank0
  2625     0356  083C               	movf	?___flsub+3,w
  2626     0357  1683               	bsf	3,5	;RP0=1, select bank1
  2627     0358  1303               	bcf	3,6	;RP1=0, select bank1
  2628     0359  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2629     035A  1283               	bcf	3,5	;RP0=0, select bank0
  2630     035B  1303               	bcf	3,6	;RP1=0, select bank0
  2631     035C  083B               	movf	?___flsub+2,w
  2632     035D  1683               	bsf	3,5	;RP0=1, select bank1
  2633     035E  1303               	bcf	3,6	;RP1=0, select bank1
  2634     035F  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2635     0360  1283               	bcf	3,5	;RP0=0, select bank0
  2636     0361  1303               	bcf	3,6	;RP1=0, select bank0
  2637     0362  083A               	movf	?___flsub+1,w
  2638     0363  1683               	bsf	3,5	;RP0=1, select bank1
  2639     0364  1303               	bcf	3,6	;RP1=0, select bank1
  2640     0365  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2641     0366  1283               	bcf	3,5	;RP0=0, select bank0
  2642     0367  1303               	bcf	3,6	;RP1=0, select bank0
  2643     0368  0839               	movf	?___flsub,w
  2644     0369  1683               	bsf	3,5	;RP0=1, select bank1
  2645     036A  1303               	bcf	3,6	;RP1=0, select bank1
  2646     036B  00C0               	movwf	sprintf@fval^(0+128)
  2647                           
  2648                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2649     036C  01B9               	clrf	sprintf@eexp^(0+128)
  2650     036D  01BA               	clrf	(sprintf@eexp+1)^(0+128)
  2651     036E                     l4358:
  2652                           
  2653                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2654     036E  01C4               	clrf	sprintf@c^(0+128)
  2655     036F  0AC4               	incf	sprintf@c^(0+128),f
  2656     0370                     l4364:
  2657                           
  2658                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2659     0370  0844               	movf	sprintf@c^(0+128),w
  2660     0371  00A7               	movwf	??_sprintf^(0+128)
  2661     0372  3001               	movlw	1
  2662     0373                     u7335:
  2663     0373  1003               	clrc
  2664     0374  0DA7               	rlf	??_sprintf^(0+128),f
  2665     0375  3EFF               	addlw	-1
  2666     0376  1D03               	skipz
  2667     0377  2B73               	goto	u7335
  2668     0378  1003               	clrc
  2669     0379  0D27               	rlf	??_sprintf^(0+128),w
  2670     037A  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2671     037B  0084               	movwf	4
  2672     037C  160A  118A  2000  120A  118A  	fcall	stringdir
  2673     0381  00A8               	movwf	(??_sprintf+1)^(0+128)
  2674     0382  160A  118A  2000  120A  118A  	fcall	stringdir
  2675     0387  00A9               	movwf	((??_sprintf+1)^(0+128)+1)
  2676     0388  160A  118A  2000  120A  118A  	fcall	stringdir
  2677     038D  00AA               	movwf	((??_sprintf+1)^(0+128)+2)
  2678     038E  160A  118A  2000  120A  118A  	fcall	stringdir
  2679     0393  00AB               	movwf	((??_sprintf+1)^(0+128)+3)
  2680     0394  082B               	movf	(??_sprintf+4)^(0+128),w
  2681     0395  0238               	subwf	(sprintf@val+3)^(0+128),w
  2682     0396  1D03               	skipz
  2683     0397  2BA2               	goto	u7345
  2684     0398  082A               	movf	(??_sprintf+3)^(0+128),w
  2685     0399  0237               	subwf	(sprintf@val+2)^(0+128),w
  2686     039A  1D03               	skipz
  2687     039B  2BA2               	goto	u7345
  2688     039C  0829               	movf	(??_sprintf+2)^(0+128),w
  2689     039D  0236               	subwf	(sprintf@val+1)^(0+128),w
  2690     039E  1D03               	skipz
  2691     039F  2BA2               	goto	u7345
  2692     03A0  0828               	movf	(??_sprintf+1)^(0+128),w
  2693     03A1  0235               	subwf	sprintf@val^(0+128),w
  2694     03A2                     u7345:
  2695     03A2  1C03               	btfss	3,0
  2696     03A3  2BAC               	goto	l4372
  2697     03A4  3001               	movlw	1
  2698     03A5  00FF               	movwf	127
  2699     03A6  087F               	movf	127,w
  2700     03A7  07C4               	addwf	sprintf@c^(0+128),f
  2701     03A8  300A               	movlw	10
  2702     03A9  0644               	xorwf	sprintf@c^(0+128),w
  2703     03AA  1D03               	btfss	3,2
  2704     03AB  2B70               	goto	l4364
  2705     03AC                     l4372:
  2706                           
  2707                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  2708     03AC  3003               	movlw	3
  2709     03AD  0531               	andwf	sprintf@flag^(0+128),w
  2710     03AE  00A7               	movwf	??_sprintf^(0+128)
  2711     03AF  3000               	movlw	0
  2712     03B0  0532               	andwf	(sprintf@flag+1)^(0+128),w
  2713     03B1  00A8               	movwf	(??_sprintf+1)^(0+128)
  2714     03B2  0827               	movf	??_sprintf^(0+128),w
  2715     03B3  0428               	iorwf	(??_sprintf^(0+128)+1),w
  2716     03B4  1903               	btfsc	3,2
  2717     03B5  2BBF               	goto	l4386
  2718                           
  2719                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  2720     03B6  083F               	movf	sprintf@sp^(0+128),w
  2721     03B7  0084               	movwf	4
  2722     03B8  302D               	movlw	45
  2723     03B9                     L7:
  2724     03B9  1383               	bcf	3,7	;select IRP bank0
  2725     03BA  0080               	movwf	0
  2726     03BB  3001               	movlw	1
  2727     03BC  00FF               	movwf	127
  2728     03BD  087F               	movf	127,w
  2729     03BE  07BF               	addwf	sprintf@sp^(0+128),f
  2730     03BF                     l4386:
  2731                           
  2732                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  2733     03BF  3001               	movlw	1
  2734     03C0  02C4               	subwf	sprintf@c^(0+128),f
  2735     03C1  0A44               	incf	sprintf@c^(0+128),w
  2736     03C2  1903               	btfsc	3,2
  2737     03C3  2C54               	goto	l4394
  2738                           
  2739                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2740     03C4  0844               	movf	sprintf@c^(0+128),w
  2741     03C5  00A7               	movwf	??_sprintf^(0+128)
  2742     03C6  3001               	movlw	1
  2743     03C7                     u7375:
  2744     03C7  1003               	clrc
  2745     03C8  0DA7               	rlf	??_sprintf^(0+128),f
  2746     03C9  3EFF               	addlw	-1
  2747     03CA  1D03               	skipz
  2748     03CB  2BC7               	goto	u7375
  2749     03CC  1003               	clrc
  2750     03CD  0D27               	rlf	??_sprintf^(0+128),w
  2751     03CE  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2752     03CF  0084               	movwf	4
  2753     03D0  160A  118A  2000  120A  118A  	fcall	stringdir
  2754     03D5  00F2               	movwf	___lldiv@divisor
  2755     03D6  160A  118A  2000  120A  118A  	fcall	stringdir
  2756     03DB  00F3               	movwf	___lldiv@divisor+1
  2757     03DC  160A  118A  2000  120A  118A  	fcall	stringdir
  2758     03E1  00F4               	movwf	___lldiv@divisor+2
  2759     03E2  160A  118A  2000  120A  118A  	fcall	stringdir
  2760     03E7  00F5               	movwf	___lldiv@divisor+3
  2761     03E8  0838               	movf	(sprintf@val+3)^(0+128),w
  2762     03E9  00F9               	movwf	___lldiv@dividend+3
  2763     03EA  0837               	movf	(sprintf@val+2)^(0+128),w
  2764     03EB  00F8               	movwf	___lldiv@dividend+2
  2765     03EC  0836               	movf	(sprintf@val+1)^(0+128),w
  2766     03ED  00F7               	movwf	___lldiv@dividend+1
  2767     03EE  0835               	movf	sprintf@val^(0+128),w
  2768     03EF  00F6               	movwf	___lldiv@dividend
  2769     03F0  160A  158A  257E  120A  118A  	fcall	___lldiv
  2770     03F5  0875               	movf	?___lldiv+3,w
  2771     03F6  1683               	bsf	3,5	;RP0=1, select bank1
  2772     03F7  1303               	bcf	3,6	;RP1=0, select bank1
  2773     03F8  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2774     03F9  0874               	movf	?___lldiv+2,w
  2775     03FA  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2776     03FB  0873               	movf	?___lldiv+1,w
  2777     03FC  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2778     03FD  0872               	movf	?___lldiv,w
  2779     03FE  00BB               	movwf	sprintf@tmpval^(0+128)
  2780                           
  2781                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  2782     03FF  3000               	movlw	0
  2783     0400  1283               	bcf	3,5	;RP0=0, select bank0
  2784     0401  1303               	bcf	3,6	;RP1=0, select bank0
  2785     0402  00A9               	movwf	___llmod@divisor+3
  2786     0403  3000               	movlw	0
  2787     0404  00A8               	movwf	___llmod@divisor+2
  2788     0405  3000               	movlw	0
  2789     0406  00A7               	movwf	___llmod@divisor+1
  2790     0407  300A               	movlw	10
  2791     0408  00A6               	movwf	___llmod@divisor
  2792     0409  1683               	bsf	3,5	;RP0=1, select bank1
  2793     040A  1303               	bcf	3,6	;RP1=0, select bank1
  2794     040B  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2795     040C  1283               	bcf	3,5	;RP0=0, select bank0
  2796     040D  1303               	bcf	3,6	;RP1=0, select bank0
  2797     040E  00AD               	movwf	___llmod@dividend+3
  2798     040F  1683               	bsf	3,5	;RP0=1, select bank1
  2799     0410  1303               	bcf	3,6	;RP1=0, select bank1
  2800     0411  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2801     0412  1283               	bcf	3,5	;RP0=0, select bank0
  2802     0413  1303               	bcf	3,6	;RP1=0, select bank0
  2803     0414  00AC               	movwf	___llmod@dividend+2
  2804     0415  1683               	bsf	3,5	;RP0=1, select bank1
  2805     0416  1303               	bcf	3,6	;RP1=0, select bank1
  2806     0417  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2807     0418  1283               	bcf	3,5	;RP0=0, select bank0
  2808     0419  1303               	bcf	3,6	;RP1=0, select bank0
  2809     041A  00AB               	movwf	___llmod@dividend+1
  2810     041B  1683               	bsf	3,5	;RP0=1, select bank1
  2811     041C  1303               	bcf	3,6	;RP1=0, select bank1
  2812     041D  083B               	movf	sprintf@tmpval^(0+128),w
  2813     041E  1283               	bcf	3,5	;RP0=0, select bank0
  2814     041F  1303               	bcf	3,6	;RP1=0, select bank0
  2815     0420  00AA               	movwf	___llmod@dividend
  2816     0421  160A  158A  2530  120A  118A  	fcall	___llmod
  2817     0426  1283               	bcf	3,5	;RP0=0, select bank0
  2818     0427  1303               	bcf	3,6	;RP1=0, select bank0
  2819     0428  0829               	movf	?___llmod+3,w
  2820     0429  1683               	bsf	3,5	;RP0=1, select bank1
  2821     042A  1303               	bcf	3,6	;RP1=0, select bank1
  2822     042B  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2823     042C  1283               	bcf	3,5	;RP0=0, select bank0
  2824     042D  1303               	bcf	3,6	;RP1=0, select bank0
  2825     042E  0828               	movf	?___llmod+2,w
  2826     042F  1683               	bsf	3,5	;RP0=1, select bank1
  2827     0430  1303               	bcf	3,6	;RP1=0, select bank1
  2828     0431  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2829     0432  1283               	bcf	3,5	;RP0=0, select bank0
  2830     0433  1303               	bcf	3,6	;RP1=0, select bank0
  2831     0434  0827               	movf	?___llmod+1,w
  2832     0435  1683               	bsf	3,5	;RP0=1, select bank1
  2833     0436  1303               	bcf	3,6	;RP1=0, select bank1
  2834     0437  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2835     0438  1283               	bcf	3,5	;RP0=0, select bank0
  2836     0439  1303               	bcf	3,6	;RP1=0, select bank0
  2837     043A  0826               	movf	?___llmod,w
  2838     043B  1683               	bsf	3,5	;RP0=1, select bank1
  2839     043C  1303               	bcf	3,6	;RP1=0, select bank1
  2840     043D  00BB               	movwf	sprintf@tmpval^(0+128)
  2841                           
  2842                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  2843     043E  083F               	movf	sprintf@sp^(0+128),w
  2844     043F  0084               	movwf	4
  2845     0440  083B               	movf	sprintf@tmpval^(0+128),w
  2846     0441  3E30               	addlw	48
  2847     0442  2BB9               	goto	L7
  2848     0443                     l4388:
  2849                           
  2850                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  2851     0443  1683               	bsf	3,5	;RP0=1, select bank1
  2852     0444  1303               	bcf	3,6	;RP1=0, select bank1
  2853     0445  083F               	movf	sprintf@sp^(0+128),w
  2854     0446  0084               	movwf	4
  2855     0447  3030               	movlw	48
  2856     0448  1383               	bcf	3,7	;select IRP bank0
  2857     0449  0080               	movwf	0
  2858     044A  3001               	movlw	1
  2859     044B  00FF               	movwf	127
  2860     044C  087F               	movf	127,w
  2861     044D  07BF               	addwf	sprintf@sp^(0+128),f
  2862                           
  2863                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  2864     044E  30FF               	movlw	255
  2865     044F  07B9               	addwf	sprintf@eexp^(0+128),f
  2866     0450  1803               	skipnc
  2867     0451  0ABA               	incf	(sprintf@eexp+1)^(0+128),f
  2868     0452  30FF               	movlw	255
  2869     0453  07BA               	addwf	(sprintf@eexp+1)^(0+128),f
  2870     0454                     l4394:
  2871                           
  2872                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  2873     0454  083A               	movf	(sprintf@eexp+1)^(0+128),w
  2874     0455  3A80               	xorlw	128
  2875     0456  00FF               	movwf	127
  2876     0457  3080               	movlw	128
  2877     0458  027F               	subwf	127,w
  2878     0459  1D03               	skipz
  2879     045A  2C5D               	goto	u7395
  2880     045B  3001               	movlw	1
  2881     045C  0239               	subwf	sprintf@eexp^(0+128),w
  2882     045D                     u7395:
  2883     045D  1803               	skipnc
  2884     045E  2C43               	goto	l4388
  2885                           
  2886                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2887     045F  1683               	bsf	3,5	;RP0=1, select bank1
  2888     0460  1303               	bcf	3,6	;RP1=0, select bank1
  2889     0461  0834               	movf	(sprintf@prec+1)^(0+128),w
  2890     0462  3A80               	xorlw	128
  2891     0463  00FF               	movwf	127
  2892     0464  3080               	movlw	128
  2893     0465  027F               	subwf	127,w
  2894     0466  1D03               	skipz
  2895     0467  2C6A               	goto	u7405
  2896     0468  3009               	movlw	9
  2897     0469  0233               	subwf	sprintf@prec^(0+128),w
  2898     046A                     u7405:
  2899     046A  1C03               	skipc
  2900     046B  2C70               	goto	l4400
  2901                           
  2902                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  2903     046C  3008               	movlw	8
  2904     046D  1683               	bsf	3,5	;RP0=1, select bank1
  2905     046E  1303               	bcf	3,6	;RP1=0, select bank1
  2906     046F  2C73               	goto	L4
  2907     0470                     l4400:
  2908                           
  2909                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  2910     0470  1683               	bsf	3,5	;RP0=1, select bank1
  2911     0471  1303               	bcf	3,6	;RP1=0, select bank1
  2912     0472  0833               	movf	sprintf@prec^(0+128),w
  2913     0473                     L4:
  2914     0473  00C4               	movwf	sprintf@c^(0+128)
  2915                           
  2916                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  2917     0474  0844               	movf	sprintf@c^(0+128),w
  2918     0475  00A7               	movwf	??_sprintf^(0+128)
  2919     0476  01A8               	clrf	(??_sprintf^(0+128)+1)
  2920     0477  0827               	movf	??_sprintf^(0+128),w
  2921     0478  02B3               	subwf	sprintf@prec^(0+128),f
  2922     0479  0828               	movf	(??_sprintf+1)^(0+128),w
  2923     047A  1C03               	skipc
  2924     047B  03B4               	decf	(sprintf@prec+1)^(0+128),f
  2925     047C  02B4               	subwf	(sprintf@prec+1)^(0+128),f
  2926                           
  2927                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  2928     047D  0844               	movf	sprintf@c^(0+128),w
  2929     047E  1903               	btfsc	3,2
  2930     047F  2C89               	goto	l4408
  2931                           
  2932                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  2933     0480  083F               	movf	sprintf@sp^(0+128),w
  2934     0481  0084               	movwf	4
  2935     0482  302E               	movlw	46
  2936     0483  1383               	bcf	3,7	;select IRP bank0
  2937     0484  0080               	movwf	0
  2938     0485  3001               	movlw	1
  2939     0486  00FF               	movwf	127
  2940     0487  087F               	movf	127,w
  2941     0488  07BF               	addwf	sprintf@sp^(0+128),f
  2942     0489                     l4408:
  2943                           
  2944                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  2945     0489  0844               	movf	sprintf@c^(0+128),w
  2946     048A  120A  158A  24B3  120A  118A  	fcall	_scale
  2947     048F  1283               	bcf	3,5	;RP0=0, select bank0
  2948     0490  1303               	bcf	3,6	;RP1=0, select bank0
  2949     0491  0856               	movf	?_scale+3,w
  2950     0492  1683               	bsf	3,5	;RP0=1, select bank1
  2951     0493  1303               	bcf	3,6	;RP1=0, select bank1
  2952     0494  00AF               	movwf	(_sprintf$1058+3)^(0+128)
  2953     0495  1283               	bcf	3,5	;RP0=0, select bank0
  2954     0496  1303               	bcf	3,6	;RP1=0, select bank0
  2955     0497  0855               	movf	?_scale+2,w
  2956     0498  1683               	bsf	3,5	;RP0=1, select bank1
  2957     0499  1303               	bcf	3,6	;RP1=0, select bank1
  2958     049A  00AE               	movwf	(_sprintf$1058+2)^(0+128)
  2959     049B  1283               	bcf	3,5	;RP0=0, select bank0
  2960     049C  1303               	bcf	3,6	;RP1=0, select bank0
  2961     049D  0854               	movf	?_scale+1,w
  2962     049E  1683               	bsf	3,5	;RP0=1, select bank1
  2963     049F  1303               	bcf	3,6	;RP1=0, select bank1
  2964     04A0  00AD               	movwf	(_sprintf$1058+1)^(0+128)
  2965     04A1  1283               	bcf	3,5	;RP0=0, select bank0
  2966     04A2  1303               	bcf	3,6	;RP1=0, select bank0
  2967     04A3  0853               	movf	?_scale,w
  2968     04A4  1683               	bsf	3,5	;RP0=1, select bank1
  2969     04A5  1303               	bcf	3,6	;RP1=0, select bank1
  2970     04A6  00AC               	movwf	_sprintf$1058^(0+128)
  2971                           
  2972                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  2973     04A7  082F               	movf	(_sprintf$1058+3)^(0+128),w
  2974     04A8  1283               	bcf	3,5	;RP0=0, select bank0
  2975     04A9  1303               	bcf	3,6	;RP1=0, select bank0
  2976     04AA  00C0               	movwf	___flmul@a+3
  2977     04AB  1683               	bsf	3,5	;RP0=1, select bank1
  2978     04AC  1303               	bcf	3,6	;RP1=0, select bank1
  2979     04AD  082E               	movf	(_sprintf$1058+2)^(0+128),w
  2980     04AE  1283               	bcf	3,5	;RP0=0, select bank0
  2981     04AF  1303               	bcf	3,6	;RP1=0, select bank0
  2982     04B0  00BF               	movwf	___flmul@a+2
  2983     04B1  1683               	bsf	3,5	;RP0=1, select bank1
  2984     04B2  1303               	bcf	3,6	;RP1=0, select bank1
  2985     04B3  082D               	movf	(_sprintf$1058+1)^(0+128),w
  2986     04B4  1283               	bcf	3,5	;RP0=0, select bank0
  2987     04B5  1303               	bcf	3,6	;RP1=0, select bank0
  2988     04B6  00BE               	movwf	___flmul@a+1
  2989     04B7  1683               	bsf	3,5	;RP0=1, select bank1
  2990     04B8  1303               	bcf	3,6	;RP1=0, select bank1
  2991     04B9  082C               	movf	_sprintf$1058^(0+128),w
  2992     04BA  1283               	bcf	3,5	;RP0=0, select bank0
  2993     04BB  1303               	bcf	3,6	;RP1=0, select bank0
  2994     04BC  00BD               	movwf	___flmul@a
  2995     04BD  1683               	bsf	3,5	;RP0=1, select bank1
  2996     04BE  1303               	bcf	3,6	;RP1=0, select bank1
  2997     04BF  0843               	movf	(sprintf@fval+3)^(0+128),w
  2998     04C0  1283               	bcf	3,5	;RP0=0, select bank0
  2999     04C1  1303               	bcf	3,6	;RP1=0, select bank0
  3000     04C2  00BC               	movwf	___flmul@b+3
  3001     04C3  1683               	bsf	3,5	;RP0=1, select bank1
  3002     04C4  1303               	bcf	3,6	;RP1=0, select bank1
  3003     04C5  0842               	movf	(sprintf@fval+2)^(0+128),w
  3004     04C6  1283               	bcf	3,5	;RP0=0, select bank0
  3005     04C7  1303               	bcf	3,6	;RP1=0, select bank0
  3006     04C8  00BB               	movwf	___flmul@b+2
  3007     04C9  1683               	bsf	3,5	;RP0=1, select bank1
  3008     04CA  1303               	bcf	3,6	;RP1=0, select bank1
  3009     04CB  0841               	movf	(sprintf@fval+1)^(0+128),w
  3010     04CC  1283               	bcf	3,5	;RP0=0, select bank0
  3011     04CD  1303               	bcf	3,6	;RP1=0, select bank0
  3012     04CE  00BA               	movwf	___flmul@b+1
  3013     04CF  1683               	bsf	3,5	;RP0=1, select bank1
  3014     04D0  1303               	bcf	3,6	;RP1=0, select bank1
  3015     04D1  0840               	movf	sprintf@fval^(0+128),w
  3016     04D2  1283               	bcf	3,5	;RP0=0, select bank0
  3017     04D3  1303               	bcf	3,6	;RP1=0, select bank0
  3018     04D4  00B9               	movwf	___flmul@b
  3019     04D5  120A  158A  21BA  120A  118A  	fcall	___flmul
  3020     04DA  1283               	bcf	3,5	;RP0=0, select bank0
  3021     04DB  1303               	bcf	3,6	;RP1=0, select bank0
  3022     04DC  083C               	movf	?___flmul+3,w
  3023     04DD  00E9               	movwf	___fltol@f1+3
  3024     04DE  083B               	movf	?___flmul+2,w
  3025     04DF  00E8               	movwf	___fltol@f1+2
  3026     04E0  083A               	movf	?___flmul+1,w
  3027     04E1  00E7               	movwf	___fltol@f1+1
  3028     04E2  0839               	movf	?___flmul,w
  3029     04E3  00E6               	movwf	___fltol@f1
  3030     04E4  160A  158A  25DE  120A  118A  	fcall	___fltol
  3031     04E9  1283               	bcf	3,5	;RP0=0, select bank0
  3032     04EA  1303               	bcf	3,6	;RP1=0, select bank0
  3033     04EB  0869               	movf	?___fltol+3,w
  3034     04EC  1683               	bsf	3,5	;RP0=1, select bank1
  3035     04ED  1303               	bcf	3,6	;RP1=0, select bank1
  3036     04EE  00B8               	movwf	(sprintf@val+3)^(0+128)
  3037     04EF  1283               	bcf	3,5	;RP0=0, select bank0
  3038     04F0  1303               	bcf	3,6	;RP1=0, select bank0
  3039     04F1  0868               	movf	?___fltol+2,w
  3040     04F2  1683               	bsf	3,5	;RP0=1, select bank1
  3041     04F3  1303               	bcf	3,6	;RP1=0, select bank1
  3042     04F4  00B7               	movwf	(sprintf@val+2)^(0+128)
  3043     04F5  1283               	bcf	3,5	;RP0=0, select bank0
  3044     04F6  1303               	bcf	3,6	;RP1=0, select bank0
  3045     04F7  0867               	movf	?___fltol+1,w
  3046     04F8  1683               	bsf	3,5	;RP0=1, select bank1
  3047     04F9  1303               	bcf	3,6	;RP1=0, select bank1
  3048     04FA  00B6               	movwf	(sprintf@val+1)^(0+128)
  3049     04FB  1283               	bcf	3,5	;RP0=0, select bank0
  3050     04FC  1303               	bcf	3,6	;RP1=0, select bank0
  3051     04FD  0866               	movf	?___fltol,w
  3052     04FE                     L5:
  3053     04FE  1683               	bsf	3,5	;RP0=1, select bank1
  3054     04FF  1303               	bcf	3,6	;RP1=0, select bank1
  3055     0500  00B5               	movwf	sprintf@val^(0+128)
  3056                           
  3057                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3058     0501  3001               	movlw	1
  3059     0502  02C4               	subwf	sprintf@c^(0+128),f
  3060     0503  0A44               	incf	sprintf@c^(0+128),w
  3061     0504  1903               	btfsc	3,2
  3062     0505  2DF2               	goto	l4430
  3063                           
  3064                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3065                           
  3066                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3067     0506  0844               	movf	sprintf@c^(0+128),w
  3068     0507  00A7               	movwf	??_sprintf^(0+128)
  3069     0508  3001               	movlw	1
  3070     0509                     u7425:
  3071     0509  1003               	clrc
  3072     050A  0DA7               	rlf	??_sprintf^(0+128),f
  3073     050B  3EFF               	addlw	-1
  3074     050C  1D03               	skipz
  3075     050D  2D09               	goto	u7425
  3076     050E  1003               	clrc
  3077     050F  0D27               	rlf	??_sprintf^(0+128),w
  3078     0510  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3079     0511  0084               	movwf	4
  3080     0512  160A  118A  2000  120A  118A  	fcall	stringdir
  3081     0517  00F2               	movwf	___lldiv@divisor
  3082     0518  160A  118A  2000  120A  118A  	fcall	stringdir
  3083     051D  00F3               	movwf	___lldiv@divisor+1
  3084     051E  160A  118A  2000  120A  118A  	fcall	stringdir
  3085     0523  00F4               	movwf	___lldiv@divisor+2
  3086     0524  160A  118A  2000  120A  118A  	fcall	stringdir
  3087     0529  00F5               	movwf	___lldiv@divisor+3
  3088     052A  0838               	movf	(sprintf@val+3)^(0+128),w
  3089     052B  00F9               	movwf	___lldiv@dividend+3
  3090     052C  0837               	movf	(sprintf@val+2)^(0+128),w
  3091     052D  00F8               	movwf	___lldiv@dividend+2
  3092     052E  0836               	movf	(sprintf@val+1)^(0+128),w
  3093     052F  00F7               	movwf	___lldiv@dividend+1
  3094     0530  0835               	movf	sprintf@val^(0+128),w
  3095     0531  00F6               	movwf	___lldiv@dividend
  3096     0532  160A  158A  257E  120A  118A  	fcall	___lldiv
  3097     0537  0875               	movf	?___lldiv+3,w
  3098     0538  1683               	bsf	3,5	;RP0=1, select bank1
  3099     0539  1303               	bcf	3,6	;RP1=0, select bank1
  3100     053A  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  3101     053B  0874               	movf	?___lldiv+2,w
  3102     053C  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  3103     053D  0873               	movf	?___lldiv+1,w
  3104     053E  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  3105     053F  0872               	movf	?___lldiv,w
  3106     0540  00BB               	movwf	sprintf@tmpval^(0+128)
  3107                           
  3108                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3109     0541  3000               	movlw	0
  3110     0542  1283               	bcf	3,5	;RP0=0, select bank0
  3111     0543  1303               	bcf	3,6	;RP1=0, select bank0
  3112     0544  00A9               	movwf	___llmod@divisor+3
  3113     0545  3000               	movlw	0
  3114     0546  00A8               	movwf	___llmod@divisor+2
  3115     0547  3000               	movlw	0
  3116     0548  00A7               	movwf	___llmod@divisor+1
  3117     0549  300A               	movlw	10
  3118     054A  00A6               	movwf	___llmod@divisor
  3119     054B  1683               	bsf	3,5	;RP0=1, select bank1
  3120     054C  1303               	bcf	3,6	;RP1=0, select bank1
  3121     054D  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  3122     054E  1283               	bcf	3,5	;RP0=0, select bank0
  3123     054F  1303               	bcf	3,6	;RP1=0, select bank0
  3124     0550  00AD               	movwf	___llmod@dividend+3
  3125     0551  1683               	bsf	3,5	;RP0=1, select bank1
  3126     0552  1303               	bcf	3,6	;RP1=0, select bank1
  3127     0553  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  3128     0554  1283               	bcf	3,5	;RP0=0, select bank0
  3129     0555  1303               	bcf	3,6	;RP1=0, select bank0
  3130     0556  00AC               	movwf	___llmod@dividend+2
  3131     0557  1683               	bsf	3,5	;RP0=1, select bank1
  3132     0558  1303               	bcf	3,6	;RP1=0, select bank1
  3133     0559  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  3134     055A  1283               	bcf	3,5	;RP0=0, select bank0
  3135     055B  1303               	bcf	3,6	;RP1=0, select bank0
  3136     055C  00AB               	movwf	___llmod@dividend+1
  3137     055D  1683               	bsf	3,5	;RP0=1, select bank1
  3138     055E  1303               	bcf	3,6	;RP1=0, select bank1
  3139     055F  083B               	movf	sprintf@tmpval^(0+128),w
  3140     0560  1283               	bcf	3,5	;RP0=0, select bank0
  3141     0561  1303               	bcf	3,6	;RP1=0, select bank0
  3142     0562  00AA               	movwf	___llmod@dividend
  3143     0563  160A  158A  2530  120A  118A  	fcall	___llmod
  3144     0568  1283               	bcf	3,5	;RP0=0, select bank0
  3145     0569  1303               	bcf	3,6	;RP1=0, select bank0
  3146     056A  0829               	movf	?___llmod+3,w
  3147     056B  1683               	bsf	3,5	;RP0=1, select bank1
  3148     056C  1303               	bcf	3,6	;RP1=0, select bank1
  3149     056D  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  3150     056E  1283               	bcf	3,5	;RP0=0, select bank0
  3151     056F  1303               	bcf	3,6	;RP1=0, select bank0
  3152     0570  0828               	movf	?___llmod+2,w
  3153     0571  1683               	bsf	3,5	;RP0=1, select bank1
  3154     0572  1303               	bcf	3,6	;RP1=0, select bank1
  3155     0573  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  3156     0574  1283               	bcf	3,5	;RP0=0, select bank0
  3157     0575  1303               	bcf	3,6	;RP1=0, select bank0
  3158     0576  0827               	movf	?___llmod+1,w
  3159     0577  1683               	bsf	3,5	;RP0=1, select bank1
  3160     0578  1303               	bcf	3,6	;RP1=0, select bank1
  3161     0579  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  3162     057A  1283               	bcf	3,5	;RP0=0, select bank0
  3163     057B  1303               	bcf	3,6	;RP1=0, select bank0
  3164     057C  0826               	movf	?___llmod,w
  3165     057D  1683               	bsf	3,5	;RP0=1, select bank1
  3166     057E  1303               	bcf	3,6	;RP1=0, select bank1
  3167     057F  00BB               	movwf	sprintf@tmpval^(0+128)
  3168                           
  3169                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3170     0580  083F               	movf	sprintf@sp^(0+128),w
  3171     0581  0084               	movwf	4
  3172     0582  083B               	movf	sprintf@tmpval^(0+128),w
  3173     0583  3E30               	addlw	48
  3174     0584  1383               	bcf	3,7	;select IRP bank0
  3175     0585  0080               	movwf	0
  3176     0586  3001               	movlw	1
  3177     0587  00FF               	movwf	127
  3178     0588  087F               	movf	127,w
  3179     0589  07BF               	addwf	sprintf@sp^(0+128),f
  3180                           
  3181                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3182     058A  0844               	movf	sprintf@c^(0+128),w
  3183     058B  00A7               	movwf	??_sprintf^(0+128)
  3184     058C  3001               	movlw	1
  3185     058D                     u7435:
  3186     058D  1003               	clrc
  3187     058E  0DA7               	rlf	??_sprintf^(0+128),f
  3188     058F  3EFF               	addlw	-1
  3189     0590  1D03               	skipz
  3190     0591  2D8D               	goto	u7435
  3191     0592  1003               	clrc
  3192     0593  0D27               	rlf	??_sprintf^(0+128),w
  3193     0594  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3194     0595  0084               	movwf	4
  3195     0596  160A  118A  2000  120A  118A  	fcall	stringdir
  3196     059B  1283               	bcf	3,5	;RP0=0, select bank0
  3197     059C  1303               	bcf	3,6	;RP1=0, select bank0
  3198     059D  00A6               	movwf	___llmod@divisor
  3199     059E  160A  118A  2000  120A  118A  	fcall	stringdir
  3200     05A3  00A7               	movwf	___llmod@divisor+1
  3201     05A4  160A  118A  2000  120A  118A  	fcall	stringdir
  3202     05A9  00A8               	movwf	___llmod@divisor+2
  3203     05AA  160A  118A  2000  120A  118A  	fcall	stringdir
  3204     05AF  00A9               	movwf	___llmod@divisor+3
  3205     05B0  1683               	bsf	3,5	;RP0=1, select bank1
  3206     05B1  1303               	bcf	3,6	;RP1=0, select bank1
  3207     05B2  0838               	movf	(sprintf@val+3)^(0+128),w
  3208     05B3  1283               	bcf	3,5	;RP0=0, select bank0
  3209     05B4  1303               	bcf	3,6	;RP1=0, select bank0
  3210     05B5  00AD               	movwf	___llmod@dividend+3
  3211     05B6  1683               	bsf	3,5	;RP0=1, select bank1
  3212     05B7  1303               	bcf	3,6	;RP1=0, select bank1
  3213     05B8  0837               	movf	(sprintf@val+2)^(0+128),w
  3214     05B9  1283               	bcf	3,5	;RP0=0, select bank0
  3215     05BA  1303               	bcf	3,6	;RP1=0, select bank0
  3216     05BB  00AC               	movwf	___llmod@dividend+2
  3217     05BC  1683               	bsf	3,5	;RP0=1, select bank1
  3218     05BD  1303               	bcf	3,6	;RP1=0, select bank1
  3219     05BE  0836               	movf	(sprintf@val+1)^(0+128),w
  3220     05BF  1283               	bcf	3,5	;RP0=0, select bank0
  3221     05C0  1303               	bcf	3,6	;RP1=0, select bank0
  3222     05C1  00AB               	movwf	___llmod@dividend+1
  3223     05C2  1683               	bsf	3,5	;RP0=1, select bank1
  3224     05C3  1303               	bcf	3,6	;RP1=0, select bank1
  3225     05C4  0835               	movf	sprintf@val^(0+128),w
  3226     05C5  1283               	bcf	3,5	;RP0=0, select bank0
  3227     05C6  1303               	bcf	3,6	;RP1=0, select bank0
  3228     05C7  00AA               	movwf	___llmod@dividend
  3229     05C8  160A  158A  2530  120A  118A  	fcall	___llmod
  3230     05CD  1283               	bcf	3,5	;RP0=0, select bank0
  3231     05CE  1303               	bcf	3,6	;RP1=0, select bank0
  3232     05CF  0829               	movf	?___llmod+3,w
  3233     05D0  1683               	bsf	3,5	;RP0=1, select bank1
  3234     05D1  1303               	bcf	3,6	;RP1=0, select bank1
  3235     05D2  00B8               	movwf	(sprintf@val+3)^(0+128)
  3236     05D3  1283               	bcf	3,5	;RP0=0, select bank0
  3237     05D4  1303               	bcf	3,6	;RP1=0, select bank0
  3238     05D5  0828               	movf	?___llmod+2,w
  3239     05D6  1683               	bsf	3,5	;RP0=1, select bank1
  3240     05D7  1303               	bcf	3,6	;RP1=0, select bank1
  3241     05D8  00B7               	movwf	(sprintf@val+2)^(0+128)
  3242     05D9  1283               	bcf	3,5	;RP0=0, select bank0
  3243     05DA  1303               	bcf	3,6	;RP1=0, select bank0
  3244     05DB  0827               	movf	?___llmod+1,w
  3245     05DC  1683               	bsf	3,5	;RP0=1, select bank1
  3246     05DD  1303               	bcf	3,6	;RP1=0, select bank1
  3247     05DE  00B6               	movwf	(sprintf@val+1)^(0+128)
  3248     05DF  1283               	bcf	3,5	;RP0=0, select bank0
  3249     05E0  1303               	bcf	3,6	;RP1=0, select bank0
  3250     05E1  0826               	movf	?___llmod,w
  3251     05E2  2CFE               	goto	L5
  3252     05E3                     l4424:
  3253                           
  3254                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3255     05E3  083F               	movf	sprintf@sp^(0+128),w
  3256     05E4  0084               	movwf	4
  3257     05E5  3030               	movlw	48
  3258     05E6  1383               	bcf	3,7	;select IRP bank0
  3259     05E7  0080               	movwf	0
  3260     05E8  3001               	movlw	1
  3261     05E9  00FF               	movwf	127
  3262     05EA  087F               	movf	127,w
  3263     05EB  07BF               	addwf	sprintf@sp^(0+128),f
  3264                           
  3265                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3266     05EC  30FF               	movlw	255
  3267     05ED  07B3               	addwf	sprintf@prec^(0+128),f
  3268     05EE  1803               	skipnc
  3269     05EF  0AB4               	incf	(sprintf@prec+1)^(0+128),f
  3270     05F0  30FF               	movlw	255
  3271     05F1  07B4               	addwf	(sprintf@prec+1)^(0+128),f
  3272     05F2                     l4430:
  3273                           
  3274                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3275     05F2  0833               	movf	sprintf@prec^(0+128),w
  3276     05F3  0434               	iorwf	(sprintf@prec+1)^(0+128),w
  3277     05F4  1903               	btfsc	3,2
  3278     05F5  283B               	goto	l4466
  3279     05F6  2DE3               	goto	l4424
  3280     05F7                     l4432:
  3281                           
  3282                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3283     05F7  0830               	movf	sprintf@ap^(0+128),w
  3284     05F8  0084               	movwf	4
  3285     05F9  1383               	bcf	3,7	;select IRP bank0
  3286     05FA  0800               	movf	0,w
  3287     05FB  00A7               	movwf	??_sprintf^(0+128)
  3288     05FC  0A84               	incf	4,f
  3289     05FD  0800               	movf	0,w
  3290     05FE  00A8               	movwf	(??_sprintf^(0+128)+1)
  3291     05FF  0827               	movf	??_sprintf^(0+128),w
  3292     0600  00B5               	movwf	sprintf@val^(0+128)
  3293     0601  0828               	movf	(??_sprintf+1)^(0+128),w
  3294     0602  00B6               	movwf	(sprintf@val^(0+128)+1)
  3295     0603  01B7               	clrf	(sprintf@val^(0+128)+2)
  3296     0604  01B8               	clrf	(sprintf@val^(0+128)+3)
  3297     0605  3002               	movlw	2
  3298     0606  00FF               	movwf	127
  3299     0607  087F               	movf	127,w
  3300     0608  07B0               	addwf	sprintf@ap^(0+128),f
  3301                           
  3302                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  3303     0609  01C4               	clrf	sprintf@c^(0+128)
  3304     060A  0AC4               	incf	sprintf@c^(0+128),f
  3305     060B                     l4442:
  3306                           
  3307                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3308     060B  0844               	movf	sprintf@c^(0+128),w
  3309     060C  00A7               	movwf	??_sprintf^(0+128)
  3310     060D  3001               	movlw	1
  3311     060E                     u7465:
  3312     060E  1003               	clrc
  3313     060F  0DA7               	rlf	??_sprintf^(0+128),f
  3314     0610  3EFF               	addlw	-1
  3315     0611  1D03               	skipz
  3316     0612  2E0E               	goto	u7465
  3317     0613  1003               	clrc
  3318     0614  0D27               	rlf	??_sprintf^(0+128),w
  3319     0615  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3320     0616  0084               	movwf	4
  3321     0617  160A  118A  2000  120A  118A  	fcall	stringdir
  3322     061C  00A8               	movwf	(??_sprintf+1)^(0+128)
  3323     061D  160A  118A  2000  120A  118A  	fcall	stringdir
  3324     0622  00A9               	movwf	((??_sprintf+1)^(0+128)+1)
  3325     0623  160A  118A  2000  120A  118A  	fcall	stringdir
  3326     0628  00AA               	movwf	((??_sprintf+1)^(0+128)+2)
  3327     0629  160A  118A  2000  120A  118A  	fcall	stringdir
  3328     062E  00AB               	movwf	((??_sprintf+1)^(0+128)+3)
  3329     062F  082B               	movf	(??_sprintf+4)^(0+128),w
  3330     0630  0238               	subwf	(sprintf@val+3)^(0+128),w
  3331     0631  1D03               	skipz
  3332     0632  2E3D               	goto	u7475
  3333     0633  082A               	movf	(??_sprintf+3)^(0+128),w
  3334     0634  0237               	subwf	(sprintf@val+2)^(0+128),w
  3335     0635  1D03               	skipz
  3336     0636  2E3D               	goto	u7475
  3337     0637  0829               	movf	(??_sprintf+2)^(0+128),w
  3338     0638  0236               	subwf	(sprintf@val+1)^(0+128),w
  3339     0639  1D03               	skipz
  3340     063A  2E3D               	goto	u7475
  3341     063B  0828               	movf	(??_sprintf+1)^(0+128),w
  3342     063C  0235               	subwf	sprintf@val^(0+128),w
  3343     063D                     u7475:
  3344     063D  1C03               	btfss	3,0
  3345     063E  2E47               	goto	l4450
  3346     063F  3001               	movlw	1
  3347     0640  00FF               	movwf	127
  3348     0641  087F               	movf	127,w
  3349     0642  07C4               	addwf	sprintf@c^(0+128),f
  3350     0643  300A               	movlw	10
  3351     0644  0644               	xorwf	sprintf@c^(0+128),w
  3352     0645  1D03               	btfss	3,2
  3353     0646  2E0B               	goto	l4442
  3354     0647                     l4450:
  3355                           
  3356                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3357     0647  3003               	movlw	3
  3358     0648  0531               	andwf	sprintf@flag^(0+128),w
  3359     0649  00A7               	movwf	??_sprintf^(0+128)
  3360     064A  3000               	movlw	0
  3361     064B  0532               	andwf	(sprintf@flag+1)^(0+128),w
  3362     064C  00A8               	movwf	(??_sprintf+1)^(0+128)
  3363     064D  0827               	movf	??_sprintf^(0+128),w
  3364     064E  0428               	iorwf	(??_sprintf^(0+128)+1),w
  3365     064F  1903               	btfsc	3,2
  3366     0650  2E5A               	goto	l4456
  3367                           
  3368                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3369     0651  083F               	movf	sprintf@sp^(0+128),w
  3370     0652  0084               	movwf	4
  3371     0653  302D               	movlw	45
  3372     0654  1383               	bcf	3,7	;select IRP bank0
  3373     0655  0080               	movwf	0
  3374     0656  3001               	movlw	1
  3375     0657  00FF               	movwf	127
  3376     0658  087F               	movf	127,w
  3377     0659  07BF               	addwf	sprintf@sp^(0+128),f
  3378     065A                     l4456:
  3379                           
  3380                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3381     065A  0844               	movf	sprintf@c^(0+128),w
  3382     065B  00A7               	movwf	??_sprintf^(0+128)
  3383     065C  01A8               	clrf	(??_sprintf^(0+128)+1)
  3384     065D  0827               	movf	??_sprintf^(0+128),w
  3385     065E  00B3               	movwf	sprintf@prec^(0+128)
  3386     065F  0828               	movf	(??_sprintf+1)^(0+128),w
  3387     0660  00B4               	movwf	(sprintf@prec+1)^(0+128)
  3388     0661                     l4464:	
  3389                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3390                           
  3391                           
  3392                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3393     0661  30FF               	movlw	255
  3394     0662  07B3               	addwf	sprintf@prec^(0+128),f
  3395     0663  1803               	skipnc
  3396     0664  0AB4               	incf	(sprintf@prec+1)^(0+128),f
  3397     0665  30FF               	movlw	255
  3398     0666  07B4               	addwf	(sprintf@prec+1)^(0+128),f
  3399     0667  0A33               	incf	sprintf@prec^(0+128),w
  3400     0668  1903               	btfsc	3,2
  3401     0669  0A34               	incf	(sprintf@prec+1)^(0+128),w
  3402     066A  1903               	btfsc	3,2
  3403     066B  283B               	goto	l4466
  3404                           
  3405                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
  3406     066C  3000               	movlw	0
  3407     066D  1283               	bcf	3,5	;RP0=0, select bank0
  3408     066E  1303               	bcf	3,6	;RP1=0, select bank0
  3409     066F  00A9               	movwf	___llmod@divisor+3
  3410     0670  3000               	movlw	0
  3411     0671  00A8               	movwf	___llmod@divisor+2
  3412     0672  3000               	movlw	0
  3413     0673  00A7               	movwf	___llmod@divisor+1
  3414     0674  300A               	movlw	10
  3415     0675  00A6               	movwf	___llmod@divisor
  3416     0676  1683               	bsf	3,5	;RP0=1, select bank1
  3417     0677  1303               	bcf	3,6	;RP1=0, select bank1
  3418     0678  0833               	movf	sprintf@prec^(0+128),w
  3419     0679  00A7               	movwf	??_sprintf^(0+128)
  3420     067A  3001               	movlw	1
  3421     067B                     u7505:
  3422     067B  1003               	clrc
  3423     067C  0DA7               	rlf	??_sprintf^(0+128),f
  3424     067D  3EFF               	addlw	-1
  3425     067E  1D03               	skipz
  3426     067F  2E7B               	goto	u7505
  3427     0680  1003               	clrc
  3428     0681  0D27               	rlf	??_sprintf^(0+128),w
  3429     0682  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3430     0683  0084               	movwf	4
  3431     0684  160A  118A  2000  120A  118A  	fcall	stringdir
  3432     0689  00F2               	movwf	___lldiv@divisor
  3433     068A  160A  118A  2000  120A  118A  	fcall	stringdir
  3434     068F  00F3               	movwf	___lldiv@divisor+1
  3435     0690  160A  118A  2000  120A  118A  	fcall	stringdir
  3436     0695  00F4               	movwf	___lldiv@divisor+2
  3437     0696  160A  118A  2000  120A  118A  	fcall	stringdir
  3438     069B  00F5               	movwf	___lldiv@divisor+3
  3439     069C  0838               	movf	(sprintf@val+3)^(0+128),w
  3440     069D  00F9               	movwf	___lldiv@dividend+3
  3441     069E  0837               	movf	(sprintf@val+2)^(0+128),w
  3442     069F  00F8               	movwf	___lldiv@dividend+2
  3443     06A0  0836               	movf	(sprintf@val+1)^(0+128),w
  3444     06A1  00F7               	movwf	___lldiv@dividend+1
  3445     06A2  0835               	movf	sprintf@val^(0+128),w
  3446     06A3  00F6               	movwf	___lldiv@dividend
  3447     06A4  160A  158A  257E  120A  118A  	fcall	___lldiv
  3448     06A9  0875               	movf	?___lldiv+3,w
  3449     06AA  1283               	bcf	3,5	;RP0=0, select bank0
  3450     06AB  1303               	bcf	3,6	;RP1=0, select bank0
  3451     06AC  00AD               	movwf	___llmod@dividend+3
  3452     06AD  0874               	movf	?___lldiv+2,w
  3453     06AE  00AC               	movwf	___llmod@dividend+2
  3454     06AF  0873               	movf	?___lldiv+1,w
  3455     06B0  00AB               	movwf	___llmod@dividend+1
  3456     06B1  0872               	movf	?___lldiv,w
  3457     06B2  00AA               	movwf	___llmod@dividend
  3458     06B3  160A  158A  2530  120A  118A  	fcall	___llmod
  3459     06B8  1283               	bcf	3,5	;RP0=0, select bank0
  3460     06B9  1303               	bcf	3,6	;RP1=0, select bank0
  3461     06BA  0826               	movf	?___llmod,w
  3462     06BB  3E30               	addlw	48
  3463     06BC  1683               	bsf	3,5	;RP0=1, select bank1
  3464     06BD  1303               	bcf	3,6	;RP1=0, select bank1
  3465     06BE  00C4               	movwf	sprintf@c^(0+128)
  3466                           
  3467                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3468     06BF  083F               	movf	sprintf@sp^(0+128),w
  3469     06C0  0084               	movwf	4
  3470     06C1  0844               	movf	sprintf@c^(0+128),w
  3471     06C2  1383               	bcf	3,7	;select IRP bank0
  3472     06C3  0080               	movwf	0
  3473     06C4  3001               	movlw	1
  3474     06C5  00FF               	movwf	127
  3475     06C6  087F               	movf	127,w
  3476     06C7  07BF               	addwf	sprintf@sp^(0+128),f
  3477     06C8  2E61               	goto	l4464
  3478     06C9                     l4468:
  3479                           
  3480                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3481     06C9  083F               	movf	sprintf@sp^(0+128),w
  3482     06CA  0084               	movwf	4
  3483     06CB  1383               	bcf	3,7	;select IRP bank0
  3484     06CC  0180               	clrf	0
  3485     06CD  0008               	return
  3486     06CE                     __end_of_sprintf:
  3487                           
  3488                           	psect	text3
  3489     0CB3                     __ptext3:	
  3490 ;; *************** function _scale *****************
  3491 ;; Defined at:
  3492 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;  scl             1    wreg     char 
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;  scl             1   69[BANK0 ] char 
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  4   51[BANK0 ] char 
  3499 ;; Registers used:
  3500 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3506 ;;      Params:         0       4       0       0       0
  3507 ;;      Locals:         0       5       0       0       0
  3508 ;;      Temps:          0      10       0       0       0
  3509 ;;      Totals:         0      19       0       0       0
  3510 ;;Total ram usage:       19 bytes
  3511 ;; Hardware stack levels used: 1
  3512 ;; Hardware stack levels required when called: 3
  3513 ;; This function calls:
  3514 ;;		___awdiv
  3515 ;;		___awmod
  3516 ;;		___flmul
  3517 ;; This function is called by:
  3518 ;;		_sprintf
  3519 ;; This function uses a non-reentrant model
  3520 ;;
  3521                           
  3522     0CB3                     _scale:	
  3523                           ;psect for function _scale
  3524                           
  3525                           
  3526                           ;incstack = 0
  3527                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3528                           ;scale@scl stored from wreg
  3529     0CB3  1283               	bcf	3,5	;RP0=0, select bank0
  3530     0CB4  1303               	bcf	3,6	;RP1=0, select bank0
  3531     0CB5  00E5               	movwf	scale@scl
  3532                           
  3533                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3534     0CB6  1FE5               	btfss	scale@scl,7
  3535     0CB7  2E5D               	goto	l4116
  3536                           
  3537                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3538     0CB8  09E5               	comf	scale@scl,f
  3539     0CB9  0AE5               	incf	scale@scl,f
  3540                           
  3541                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3542     0CBA  0865               	movf	scale@scl,w
  3543     0CBB  3A80               	xorlw	128
  3544     0CBC  3E12               	addlw	-238
  3545     0CBD  1C03               	skipc
  3546     0CBE  2DA7               	goto	l4106
  3547                           
  3548                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3549     0CBF  300A               	movlw	10
  3550     0CC0  00A0               	movwf	___awdiv@divisor
  3551     0CC1  3000               	movlw	0
  3552     0CC2  00A1               	movwf	___awdiv@divisor+1
  3553     0CC3  0865               	movf	scale@scl,w
  3554     0CC4  00F4               	movwf	___awmod@dividend
  3555     0CC5  01F5               	clrf	___awmod@dividend+1
  3556     0CC6  1BF4               	btfsc	___awmod@dividend,7
  3557     0CC7  03F5               	decf	___awmod@dividend+1,f
  3558     0CC8  3064               	movlw	100
  3559     0CC9  00F2               	movwf	___awmod@divisor
  3560     0CCA  3000               	movlw	0
  3561     0CCB  00F3               	movwf	___awmod@divisor+1
  3562     0CCC  160A  158A  24E5  120A  158A  	fcall	___awmod
  3563     0CD1  0873               	movf	?___awmod+1,w
  3564     0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  3565     0CD3  1303               	bcf	3,6	;RP1=0, select bank0
  3566     0CD4  00A3               	movwf	___awdiv@dividend+1
  3567     0CD5  0872               	movf	?___awmod,w
  3568     0CD6  00A2               	movwf	___awdiv@dividend
  3569     0CD7  160A  118A  20AD  120A  158A  	fcall	___awdiv
  3570     0CDC  1283               	bcf	3,5	;RP0=0, select bank0
  3571     0CDD  1303               	bcf	3,6	;RP1=0, select bank0
  3572     0CDE  0820               	movf	?___awdiv,w
  3573     0CDF  00D7               	movwf	??_scale
  3574     0CE0  3001               	movlw	1
  3575     0CE1                     u6795:
  3576     0CE1  1003               	clrc
  3577     0CE2  0DD7               	rlf	??_scale,f
  3578     0CE3  3EFF               	addlw	-1
  3579     0CE4  1D03               	skipz
  3580     0CE5  2CE1               	goto	u6795
  3581     0CE6  1003               	clrc
  3582     0CE7  0D57               	rlf	??_scale,w
  3583     0CE8  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3584     0CE9  0084               	movwf	4
  3585     0CEA  160A  118A  2000  120A  158A  	fcall	stringdir
  3586     0CEF  00D8               	movwf	??_scale+1
  3587     0CF0  160A  118A  2000  120A  158A  	fcall	stringdir
  3588     0CF5  00D9               	movwf	??_scale+2
  3589     0CF6  160A  118A  2000  120A  158A  	fcall	stringdir
  3590     0CFB  00DA               	movwf	??_scale+3
  3591     0CFC  160A  118A  2000  120A  158A  	fcall	stringdir
  3592     0D01  00DB               	movwf	??_scale+4
  3593     0D02  085B               	movf	??_scale+4,w
  3594     0D03  00BC               	movwf	___flmul@b+3
  3595     0D04  085A               	movf	??_scale+3,w
  3596     0D05  00BB               	movwf	___flmul@b+2
  3597     0D06  0859               	movf	??_scale+2,w
  3598     0D07  00BA               	movwf	___flmul@b+1
  3599     0D08  0858               	movf	??_scale+1,w
  3600     0D09  00B9               	movwf	___flmul@b
  3601     0D0A  3064               	movlw	100
  3602     0D0B  00A0               	movwf	___awdiv@divisor
  3603     0D0C  3000               	movlw	0
  3604     0D0D  00A1               	movwf	___awdiv@divisor+1
  3605     0D0E  0865               	movf	scale@scl,w
  3606     0D0F  00A2               	movwf	___awdiv@dividend
  3607     0D10  01A3               	clrf	___awdiv@dividend+1
  3608     0D11  1BA2               	btfsc	___awdiv@dividend,7
  3609     0D12  03A3               	decf	___awdiv@dividend+1,f
  3610     0D13  160A  118A  20AD  120A  158A  	fcall	___awdiv
  3611     0D18  1283               	bcf	3,5	;RP0=0, select bank0
  3612     0D19  1303               	bcf	3,6	;RP1=0, select bank0
  3613     0D1A  0820               	movf	?___awdiv,w
  3614     0D1B  00DC               	movwf	??_scale+5
  3615     0D1C  3001               	movlw	1
  3616     0D1D                     u6805:
  3617     0D1D  1003               	clrc
  3618     0D1E  0DDC               	rlf	??_scale+5,f
  3619     0D1F  3EFF               	addlw	-1
  3620     0D20  1D03               	skipz
  3621     0D21  2D1D               	goto	u6805
  3622     0D22  1003               	clrc
  3623     0D23  0D5C               	rlf	??_scale+5,w
  3624     0D24  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3625     0D25  0084               	movwf	4
  3626     0D26  160A  118A  2000  120A  158A  	fcall	stringdir
  3627     0D2B  00DD               	movwf	??_scale+6
  3628     0D2C  160A  118A  2000  120A  158A  	fcall	stringdir
  3629     0D31  00DE               	movwf	??_scale+7
  3630     0D32  160A  118A  2000  120A  158A  	fcall	stringdir
  3631     0D37  00DF               	movwf	??_scale+8
  3632     0D38  160A  118A  2000  120A  158A  	fcall	stringdir
  3633     0D3D  00E0               	movwf	??_scale+9
  3634     0D3E  0860               	movf	??_scale+9,w
  3635     0D3F  00C0               	movwf	___flmul@a+3
  3636     0D40  085F               	movf	??_scale+8,w
  3637     0D41  00BF               	movwf	___flmul@a+2
  3638     0D42  085E               	movf	??_scale+7,w
  3639     0D43  00BE               	movwf	___flmul@a+1
  3640     0D44  085D               	movf	??_scale+6,w
  3641     0D45  00BD               	movwf	___flmul@a
  3642     0D46  120A  158A  21BA  120A  158A  	fcall	___flmul
  3643     0D4B  1283               	bcf	3,5	;RP0=0, select bank0
  3644     0D4C  1303               	bcf	3,6	;RP1=0, select bank0
  3645     0D4D  083C               	movf	?___flmul+3,w
  3646     0D4E  00E4               	movwf	_scale$1057+3
  3647     0D4F  083B               	movf	?___flmul+2,w
  3648     0D50  00E3               	movwf	_scale$1057+2
  3649     0D51  083A               	movf	?___flmul+1,w
  3650     0D52  00E2               	movwf	_scale$1057+1
  3651     0D53  0839               	movf	?___flmul,w
  3652     0D54  00E1               	movwf	_scale$1057
  3653                           
  3654                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3655     0D55  300A               	movlw	10
  3656     0D56  00F2               	movwf	___awmod@divisor
  3657     0D57  3000               	movlw	0
  3658     0D58  00F3               	movwf	___awmod@divisor+1
  3659     0D59  0865               	movf	scale@scl,w
  3660     0D5A  00F4               	movwf	___awmod@dividend
  3661     0D5B  01F5               	clrf	___awmod@dividend+1
  3662     0D5C  1BF4               	btfsc	___awmod@dividend,7
  3663     0D5D  03F5               	decf	___awmod@dividend+1,f
  3664     0D5E  160A  158A  24E5  120A  158A  	fcall	___awmod
  3665     0D63  0872               	movf	?___awmod,w
  3666     0D64  1283               	bcf	3,5	;RP0=0, select bank0
  3667     0D65  1303               	bcf	3,6	;RP1=0, select bank0
  3668     0D66  00D7               	movwf	??_scale
  3669     0D67  3001               	movlw	1
  3670     0D68                     u6815:
  3671     0D68  1003               	clrc
  3672     0D69  0DD7               	rlf	??_scale,f
  3673     0D6A  3EFF               	addlw	-1
  3674     0D6B  1D03               	skipz
  3675     0D6C  2D68               	goto	u6815
  3676     0D6D  1003               	clrc
  3677     0D6E  0D57               	rlf	??_scale,w
  3678     0D6F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3679     0D70  0084               	movwf	4
  3680     0D71  160A  118A  2000  120A  158A  	fcall	stringdir
  3681     0D76  00D8               	movwf	??_scale+1
  3682     0D77  160A  118A  2000  120A  158A  	fcall	stringdir
  3683     0D7C  00D9               	movwf	??_scale+2
  3684     0D7D  160A  118A  2000  120A  158A  	fcall	stringdir
  3685     0D82  00DA               	movwf	??_scale+3
  3686     0D83  160A  118A  2000  120A  158A  	fcall	stringdir
  3687     0D88  00DB               	movwf	??_scale+4
  3688     0D89  085B               	movf	??_scale+4,w
  3689     0D8A  00BC               	movwf	___flmul@b+3
  3690     0D8B  085A               	movf	??_scale+3,w
  3691     0D8C  00BB               	movwf	___flmul@b+2
  3692     0D8D  0859               	movf	??_scale+2,w
  3693     0D8E  00BA               	movwf	___flmul@b+1
  3694     0D8F  0858               	movf	??_scale+1,w
  3695     0D90  00B9               	movwf	___flmul@b
  3696     0D91  0864               	movf	_scale$1057+3,w
  3697     0D92  00C0               	movwf	___flmul@a+3
  3698     0D93  0863               	movf	_scale$1057+2,w
  3699     0D94  00BF               	movwf	___flmul@a+2
  3700     0D95  0862               	movf	_scale$1057+1,w
  3701     0D96  00BE               	movwf	___flmul@a+1
  3702     0D97  0861               	movf	_scale$1057,w
  3703     0D98  00BD               	movwf	___flmul@a
  3704     0D99  120A  158A  21BA   	fcall	___flmul
  3705     0D9C  1283               	bcf	3,5	;RP0=0, select bank0
  3706     0D9D  1303               	bcf	3,6	;RP1=0, select bank0
  3707     0D9E  083C               	movf	?___flmul+3,w
  3708     0D9F  00D6               	movwf	?_scale+3
  3709     0DA0  083B               	movf	?___flmul+2,w
  3710     0DA1  00D5               	movwf	?_scale+2
  3711     0DA2  083A               	movf	?___flmul+1,w
  3712     0DA3  00D4               	movwf	?_scale+1
  3713     0DA4  0839               	movf	?___flmul,w
  3714     0DA5  00D3               	movwf	?_scale
  3715     0DA6  0008               	return
  3716     0DA7                     l4106:
  3717     0DA7  0865               	movf	scale@scl,w
  3718     0DA8  3A80               	xorlw	128
  3719     0DA9  3E75               	addlw	-139
  3720     0DAA  1C03               	skipc
  3721     0DAB  2E32               	goto	l4112
  3722                           
  3723                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3724     0DAC  300A               	movlw	10
  3725     0DAD  00F2               	movwf	___awmod@divisor
  3726     0DAE  3000               	movlw	0
  3727     0DAF  00F3               	movwf	___awmod@divisor+1
  3728     0DB0  0865               	movf	scale@scl,w
  3729     0DB1  00F4               	movwf	___awmod@dividend
  3730     0DB2  01F5               	clrf	___awmod@dividend+1
  3731     0DB3  1BF4               	btfsc	___awmod@dividend,7
  3732     0DB4  03F5               	decf	___awmod@dividend+1,f
  3733     0DB5  160A  158A  24E5  120A  158A  	fcall	___awmod
  3734     0DBA  0872               	movf	?___awmod,w
  3735     0DBB  1283               	bcf	3,5	;RP0=0, select bank0
  3736     0DBC  1303               	bcf	3,6	;RP1=0, select bank0
  3737     0DBD  00D7               	movwf	??_scale
  3738     0DBE  3001               	movlw	1
  3739     0DBF                     u6835:
  3740     0DBF  1003               	clrc
  3741     0DC0  0DD7               	rlf	??_scale,f
  3742     0DC1  3EFF               	addlw	-1
  3743     0DC2  1D03               	skipz
  3744     0DC3  2DBF               	goto	u6835
  3745     0DC4  1003               	clrc
  3746     0DC5  0D57               	rlf	??_scale,w
  3747     0DC6  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3748     0DC7  0084               	movwf	4
  3749     0DC8  160A  118A  2000  120A  158A  	fcall	stringdir
  3750     0DCD  00D8               	movwf	??_scale+1
  3751     0DCE  160A  118A  2000  120A  158A  	fcall	stringdir
  3752     0DD3  00D9               	movwf	??_scale+2
  3753     0DD4  160A  118A  2000  120A  158A  	fcall	stringdir
  3754     0DD9  00DA               	movwf	??_scale+3
  3755     0DDA  160A  118A  2000  120A  158A  	fcall	stringdir
  3756     0DDF  00DB               	movwf	??_scale+4
  3757     0DE0  085B               	movf	??_scale+4,w
  3758     0DE1  00BC               	movwf	___flmul@b+3
  3759     0DE2  085A               	movf	??_scale+3,w
  3760     0DE3  00BB               	movwf	___flmul@b+2
  3761     0DE4  0859               	movf	??_scale+2,w
  3762     0DE5  00BA               	movwf	___flmul@b+1
  3763     0DE6  0858               	movf	??_scale+1,w
  3764     0DE7  00B9               	movwf	___flmul@b
  3765     0DE8  300A               	movlw	10
  3766     0DE9  00A0               	movwf	___awdiv@divisor
  3767     0DEA  3000               	movlw	0
  3768     0DEB  00A1               	movwf	___awdiv@divisor+1
  3769     0DEC  0865               	movf	scale@scl,w
  3770     0DED  00A2               	movwf	___awdiv@dividend
  3771     0DEE  01A3               	clrf	___awdiv@dividend+1
  3772     0DEF  1BA2               	btfsc	___awdiv@dividend,7
  3773     0DF0  03A3               	decf	___awdiv@dividend+1,f
  3774     0DF1  160A  118A  20AD  120A  158A  	fcall	___awdiv
  3775     0DF6  1283               	bcf	3,5	;RP0=0, select bank0
  3776     0DF7  1303               	bcf	3,6	;RP1=0, select bank0
  3777     0DF8  0820               	movf	?___awdiv,w
  3778     0DF9  00DC               	movwf	??_scale+5
  3779     0DFA  3001               	movlw	1
  3780     0DFB                     u6845:
  3781     0DFB  1003               	clrc
  3782     0DFC  0DDC               	rlf	??_scale+5,f
  3783     0DFD  3EFF               	addlw	-1
  3784     0DFE  1D03               	skipz
  3785     0DFF  2DFB               	goto	u6845
  3786     0E00  1003               	clrc
  3787     0E01  0D5C               	rlf	??_scale+5,w
  3788     0E02  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3789     0E03  0084               	movwf	4
  3790     0E04  160A  118A  2000  120A  158A  	fcall	stringdir
  3791     0E09  00DD               	movwf	??_scale+6
  3792     0E0A  160A  118A  2000  120A  158A  	fcall	stringdir
  3793     0E0F  00DE               	movwf	??_scale+7
  3794     0E10  160A  118A  2000  120A  158A  	fcall	stringdir
  3795     0E15  00DF               	movwf	??_scale+8
  3796     0E16  160A  118A  2000  120A  158A  	fcall	stringdir
  3797     0E1B  00E0               	movwf	??_scale+9
  3798     0E1C  0860               	movf	??_scale+9,w
  3799     0E1D  00C0               	movwf	___flmul@a+3
  3800     0E1E  085F               	movf	??_scale+8,w
  3801     0E1F  00BF               	movwf	___flmul@a+2
  3802     0E20  085E               	movf	??_scale+7,w
  3803     0E21  00BE               	movwf	___flmul@a+1
  3804     0E22  085D               	movf	??_scale+6,w
  3805     0E23  00BD               	movwf	___flmul@a
  3806     0E24  120A  158A  21BA   	fcall	___flmul
  3807     0E27  1283               	bcf	3,5	;RP0=0, select bank0
  3808     0E28  1303               	bcf	3,6	;RP1=0, select bank0
  3809     0E29  083C               	movf	?___flmul+3,w
  3810     0E2A  00D6               	movwf	?_scale+3
  3811     0E2B  083B               	movf	?___flmul+2,w
  3812     0E2C  00D5               	movwf	?_scale+2
  3813     0E2D  083A               	movf	?___flmul+1,w
  3814     0E2E  00D4               	movwf	?_scale+1
  3815     0E2F  0839               	movf	?___flmul,w
  3816     0E30  00D3               	movwf	?_scale
  3817     0E31  0008               	return
  3818     0E32                     l4112:
  3819                           
  3820                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3821     0E32  0865               	movf	scale@scl,w
  3822     0E33  00D7               	movwf	??_scale
  3823     0E34  3001               	movlw	1
  3824     0E35                     u6855:
  3825     0E35  1003               	clrc
  3826     0E36  0DD7               	rlf	??_scale,f
  3827     0E37  3EFF               	addlw	-1
  3828     0E38  1D03               	skipz
  3829     0E39  2E35               	goto	u6855
  3830     0E3A  1003               	clrc
  3831     0E3B  0D57               	rlf	??_scale,w
  3832     0E3C  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3833     0E3D  0084               	movwf	4
  3834     0E3E  160A  118A  2000  120A  158A  	fcall	stringdir
  3835     0E43  00D8               	movwf	??_scale+1
  3836     0E44  160A  118A  2000  120A  158A  	fcall	stringdir
  3837     0E49  00D9               	movwf	??_scale+2
  3838     0E4A  160A  118A  2000  120A  158A  	fcall	stringdir
  3839     0E4F  00DA               	movwf	??_scale+3
  3840     0E50  160A  118A  2000   	fcall	stringdir
  3841     0E53  00DB               	movwf	??_scale+4
  3842     0E54  085B               	movf	??_scale+4,w
  3843     0E55  00D6               	movwf	?_scale+3
  3844     0E56  085A               	movf	??_scale+3,w
  3845     0E57  00D5               	movwf	?_scale+2
  3846     0E58  0859               	movf	??_scale+2,w
  3847     0E59  00D4               	movwf	?_scale+1
  3848     0E5A  0858               	movf	??_scale+1,w
  3849     0E5B  00D3               	movwf	?_scale
  3850     0E5C  0008               	return
  3851     0E5D                     l4116:
  3852                           
  3853                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3854     0E5D  0865               	movf	scale@scl,w
  3855     0E5E  3A80               	xorlw	128
  3856     0E5F  3E12               	addlw	-238
  3857     0E60  1C03               	skipc
  3858     0E61  2F4A               	goto	l4124
  3859                           
  3860                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3861     0E62  300A               	movlw	10
  3862     0E63  00A0               	movwf	___awdiv@divisor
  3863     0E64  3000               	movlw	0
  3864     0E65  00A1               	movwf	___awdiv@divisor+1
  3865     0E66  0865               	movf	scale@scl,w
  3866     0E67  00F4               	movwf	___awmod@dividend
  3867     0E68  01F5               	clrf	___awmod@dividend+1
  3868     0E69  1BF4               	btfsc	___awmod@dividend,7
  3869     0E6A  03F5               	decf	___awmod@dividend+1,f
  3870     0E6B  3064               	movlw	100
  3871     0E6C  00F2               	movwf	___awmod@divisor
  3872     0E6D  3000               	movlw	0
  3873     0E6E  00F3               	movwf	___awmod@divisor+1
  3874     0E6F  160A  158A  24E5  120A  158A  	fcall	___awmod
  3875     0E74  0873               	movf	?___awmod+1,w
  3876     0E75  1283               	bcf	3,5	;RP0=0, select bank0
  3877     0E76  1303               	bcf	3,6	;RP1=0, select bank0
  3878     0E77  00A3               	movwf	___awdiv@dividend+1
  3879     0E78  0872               	movf	?___awmod,w
  3880     0E79  00A2               	movwf	___awdiv@dividend
  3881     0E7A  160A  118A  20AD  120A  158A  	fcall	___awdiv
  3882     0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  3883     0E80  1303               	bcf	3,6	;RP1=0, select bank0
  3884     0E81  0820               	movf	?___awdiv,w
  3885     0E82  00D7               	movwf	??_scale
  3886     0E83  3001               	movlw	1
  3887     0E84                     u6875:
  3888     0E84  1003               	clrc
  3889     0E85  0DD7               	rlf	??_scale,f
  3890     0E86  3EFF               	addlw	-1
  3891     0E87  1D03               	skipz
  3892     0E88  2E84               	goto	u6875
  3893     0E89  1003               	clrc
  3894     0E8A  0D57               	rlf	??_scale,w
  3895     0E8B  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3896     0E8C  0084               	movwf	4
  3897     0E8D  160A  118A  2000  120A  158A  	fcall	stringdir
  3898     0E92  00D8               	movwf	??_scale+1
  3899     0E93  160A  118A  2000  120A  158A  	fcall	stringdir
  3900     0E98  00D9               	movwf	??_scale+2
  3901     0E99  160A  118A  2000  120A  158A  	fcall	stringdir
  3902     0E9E  00DA               	movwf	??_scale+3
  3903     0E9F  160A  118A  2000  120A  158A  	fcall	stringdir
  3904     0EA4  00DB               	movwf	??_scale+4
  3905     0EA5  085B               	movf	??_scale+4,w
  3906     0EA6  00BC               	movwf	___flmul@b+3
  3907     0EA7  085A               	movf	??_scale+3,w
  3908     0EA8  00BB               	movwf	___flmul@b+2
  3909     0EA9  0859               	movf	??_scale+2,w
  3910     0EAA  00BA               	movwf	___flmul@b+1
  3911     0EAB  0858               	movf	??_scale+1,w
  3912     0EAC  00B9               	movwf	___flmul@b
  3913     0EAD  3064               	movlw	100
  3914     0EAE  00A0               	movwf	___awdiv@divisor
  3915     0EAF  3000               	movlw	0
  3916     0EB0  00A1               	movwf	___awdiv@divisor+1
  3917     0EB1  0865               	movf	scale@scl,w
  3918     0EB2  00A2               	movwf	___awdiv@dividend
  3919     0EB3  01A3               	clrf	___awdiv@dividend+1
  3920     0EB4  1BA2               	btfsc	___awdiv@dividend,7
  3921     0EB5  03A3               	decf	___awdiv@dividend+1,f
  3922     0EB6  160A  118A  20AD  120A  158A  	fcall	___awdiv
  3923     0EBB  1283               	bcf	3,5	;RP0=0, select bank0
  3924     0EBC  1303               	bcf	3,6	;RP1=0, select bank0
  3925     0EBD  0820               	movf	?___awdiv,w
  3926     0EBE  00DC               	movwf	??_scale+5
  3927     0EBF  3001               	movlw	1
  3928     0EC0                     u6885:
  3929     0EC0  1003               	clrc
  3930     0EC1  0DDC               	rlf	??_scale+5,f
  3931     0EC2  3EFF               	addlw	-1
  3932     0EC3  1D03               	skipz
  3933     0EC4  2EC0               	goto	u6885
  3934     0EC5  1003               	clrc
  3935     0EC6  0D5C               	rlf	??_scale+5,w
  3936     0EC7  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3937     0EC8  0084               	movwf	4
  3938     0EC9  160A  118A  2000  120A  158A  	fcall	stringdir
  3939     0ECE  00DD               	movwf	??_scale+6
  3940     0ECF  160A  118A  2000  120A  158A  	fcall	stringdir
  3941     0ED4  00DE               	movwf	??_scale+7
  3942     0ED5  160A  118A  2000  120A  158A  	fcall	stringdir
  3943     0EDA  00DF               	movwf	??_scale+8
  3944     0EDB  160A  118A  2000  120A  158A  	fcall	stringdir
  3945     0EE0  00E0               	movwf	??_scale+9
  3946     0EE1  0860               	movf	??_scale+9,w
  3947     0EE2  00C0               	movwf	___flmul@a+3
  3948     0EE3  085F               	movf	??_scale+8,w
  3949     0EE4  00BF               	movwf	___flmul@a+2
  3950     0EE5  085E               	movf	??_scale+7,w
  3951     0EE6  00BE               	movwf	___flmul@a+1
  3952     0EE7  085D               	movf	??_scale+6,w
  3953     0EE8  00BD               	movwf	___flmul@a
  3954     0EE9  120A  158A  21BA  120A  158A  	fcall	___flmul
  3955     0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  3956     0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  3957     0EF0  083C               	movf	?___flmul+3,w
  3958     0EF1  00E4               	movwf	_scale$1057+3
  3959     0EF2  083B               	movf	?___flmul+2,w
  3960     0EF3  00E3               	movwf	_scale$1057+2
  3961     0EF4  083A               	movf	?___flmul+1,w
  3962     0EF5  00E2               	movwf	_scale$1057+1
  3963     0EF6  0839               	movf	?___flmul,w
  3964     0EF7  00E1               	movwf	_scale$1057
  3965                           
  3966                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3967     0EF8  300A               	movlw	10
  3968     0EF9  00F2               	movwf	___awmod@divisor
  3969     0EFA  3000               	movlw	0
  3970     0EFB  00F3               	movwf	___awmod@divisor+1
  3971     0EFC  0865               	movf	scale@scl,w
  3972     0EFD  00F4               	movwf	___awmod@dividend
  3973     0EFE  01F5               	clrf	___awmod@dividend+1
  3974     0EFF  1BF4               	btfsc	___awmod@dividend,7
  3975     0F00  03F5               	decf	___awmod@dividend+1,f
  3976     0F01  160A  158A  24E5  120A  158A  	fcall	___awmod
  3977     0F06  0872               	movf	?___awmod,w
  3978     0F07  1283               	bcf	3,5	;RP0=0, select bank0
  3979     0F08  1303               	bcf	3,6	;RP1=0, select bank0
  3980     0F09  00D7               	movwf	??_scale
  3981     0F0A  3001               	movlw	1
  3982     0F0B                     u6895:
  3983     0F0B  1003               	clrc
  3984     0F0C  0DD7               	rlf	??_scale,f
  3985     0F0D  3EFF               	addlw	-1
  3986     0F0E  1D03               	skipz
  3987     0F0F  2F0B               	goto	u6895
  3988     0F10  1003               	clrc
  3989     0F11  0D57               	rlf	??_scale,w
  3990     0F12  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3991     0F13  0084               	movwf	4
  3992     0F14  160A  118A  2000  120A  158A  	fcall	stringdir
  3993     0F19  00D8               	movwf	??_scale+1
  3994     0F1A  160A  118A  2000  120A  158A  	fcall	stringdir
  3995     0F1F  00D9               	movwf	??_scale+2
  3996     0F20  160A  118A  2000  120A  158A  	fcall	stringdir
  3997     0F25  00DA               	movwf	??_scale+3
  3998     0F26  160A  118A  2000  120A  158A  	fcall	stringdir
  3999     0F2B  00DB               	movwf	??_scale+4
  4000     0F2C  085B               	movf	??_scale+4,w
  4001     0F2D  00BC               	movwf	___flmul@b+3
  4002     0F2E  085A               	movf	??_scale+3,w
  4003     0F2F  00BB               	movwf	___flmul@b+2
  4004     0F30  0859               	movf	??_scale+2,w
  4005     0F31  00BA               	movwf	___flmul@b+1
  4006     0F32  0858               	movf	??_scale+1,w
  4007     0F33  00B9               	movwf	___flmul@b
  4008     0F34  0864               	movf	_scale$1057+3,w
  4009     0F35  00C0               	movwf	___flmul@a+3
  4010     0F36  0863               	movf	_scale$1057+2,w
  4011     0F37  00BF               	movwf	___flmul@a+2
  4012     0F38  0862               	movf	_scale$1057+1,w
  4013     0F39  00BE               	movwf	___flmul@a+1
  4014     0F3A  0861               	movf	_scale$1057,w
  4015     0F3B  00BD               	movwf	___flmul@a
  4016     0F3C  120A  158A  21BA   	fcall	___flmul
  4017     0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  4018     0F40  1303               	bcf	3,6	;RP1=0, select bank0
  4019     0F41  083C               	movf	?___flmul+3,w
  4020     0F42  00D6               	movwf	?_scale+3
  4021     0F43  083B               	movf	?___flmul+2,w
  4022     0F44  00D5               	movwf	?_scale+2
  4023     0F45  083A               	movf	?___flmul+1,w
  4024     0F46  00D4               	movwf	?_scale+1
  4025     0F47  0839               	movf	?___flmul,w
  4026     0F48  00D3               	movwf	?_scale
  4027     0F49  0008               	return
  4028     0F4A                     l4124:
  4029     0F4A  0865               	movf	scale@scl,w
  4030     0F4B  3A80               	xorlw	128
  4031     0F4C  3E75               	addlw	-139
  4032     0F4D  1C03               	skipc
  4033     0F4E  2FD5               	goto	l4130
  4034                           
  4035                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4036     0F4F  300A               	movlw	10
  4037     0F50  00F2               	movwf	___awmod@divisor
  4038     0F51  3000               	movlw	0
  4039     0F52  00F3               	movwf	___awmod@divisor+1
  4040     0F53  0865               	movf	scale@scl,w
  4041     0F54  00F4               	movwf	___awmod@dividend
  4042     0F55  01F5               	clrf	___awmod@dividend+1
  4043     0F56  1BF4               	btfsc	___awmod@dividend,7
  4044     0F57  03F5               	decf	___awmod@dividend+1,f
  4045     0F58  160A  158A  24E5  120A  158A  	fcall	___awmod
  4046     0F5D  0872               	movf	?___awmod,w
  4047     0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  4048     0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  4049     0F60  00D7               	movwf	??_scale
  4050     0F61  3001               	movlw	1
  4051     0F62                     u6915:
  4052     0F62  1003               	clrc
  4053     0F63  0DD7               	rlf	??_scale,f
  4054     0F64  3EFF               	addlw	-1
  4055     0F65  1D03               	skipz
  4056     0F66  2F62               	goto	u6915
  4057     0F67  1003               	clrc
  4058     0F68  0D57               	rlf	??_scale,w
  4059     0F69  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4060     0F6A  0084               	movwf	4
  4061     0F6B  160A  118A  2000  120A  158A  	fcall	stringdir
  4062     0F70  00D8               	movwf	??_scale+1
  4063     0F71  160A  118A  2000  120A  158A  	fcall	stringdir
  4064     0F76  00D9               	movwf	??_scale+2
  4065     0F77  160A  118A  2000  120A  158A  	fcall	stringdir
  4066     0F7C  00DA               	movwf	??_scale+3
  4067     0F7D  160A  118A  2000  120A  158A  	fcall	stringdir
  4068     0F82  00DB               	movwf	??_scale+4
  4069     0F83  085B               	movf	??_scale+4,w
  4070     0F84  00BC               	movwf	___flmul@b+3
  4071     0F85  085A               	movf	??_scale+3,w
  4072     0F86  00BB               	movwf	___flmul@b+2
  4073     0F87  0859               	movf	??_scale+2,w
  4074     0F88  00BA               	movwf	___flmul@b+1
  4075     0F89  0858               	movf	??_scale+1,w
  4076     0F8A  00B9               	movwf	___flmul@b
  4077     0F8B  300A               	movlw	10
  4078     0F8C  00A0               	movwf	___awdiv@divisor
  4079     0F8D  3000               	movlw	0
  4080     0F8E  00A1               	movwf	___awdiv@divisor+1
  4081     0F8F  0865               	movf	scale@scl,w
  4082     0F90  00A2               	movwf	___awdiv@dividend
  4083     0F91  01A3               	clrf	___awdiv@dividend+1
  4084     0F92  1BA2               	btfsc	___awdiv@dividend,7
  4085     0F93  03A3               	decf	___awdiv@dividend+1,f
  4086     0F94  160A  118A  20AD  120A  158A  	fcall	___awdiv
  4087     0F99  1283               	bcf	3,5	;RP0=0, select bank0
  4088     0F9A  1303               	bcf	3,6	;RP1=0, select bank0
  4089     0F9B  0820               	movf	?___awdiv,w
  4090     0F9C  00DC               	movwf	??_scale+5
  4091     0F9D  3001               	movlw	1
  4092     0F9E                     u6925:
  4093     0F9E  1003               	clrc
  4094     0F9F  0DDC               	rlf	??_scale+5,f
  4095     0FA0  3EFF               	addlw	-1
  4096     0FA1  1D03               	skipz
  4097     0FA2  2F9E               	goto	u6925
  4098     0FA3  1003               	clrc
  4099     0FA4  0D5C               	rlf	??_scale+5,w
  4100     0FA5  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4101     0FA6  0084               	movwf	4
  4102     0FA7  160A  118A  2000  120A  158A  	fcall	stringdir
  4103     0FAC  00DD               	movwf	??_scale+6
  4104     0FAD  160A  118A  2000  120A  158A  	fcall	stringdir
  4105     0FB2  00DE               	movwf	??_scale+7
  4106     0FB3  160A  118A  2000  120A  158A  	fcall	stringdir
  4107     0FB8  00DF               	movwf	??_scale+8
  4108     0FB9  160A  118A  2000  120A  158A  	fcall	stringdir
  4109     0FBE  00E0               	movwf	??_scale+9
  4110     0FBF  0860               	movf	??_scale+9,w
  4111     0FC0  00C0               	movwf	___flmul@a+3
  4112     0FC1  085F               	movf	??_scale+8,w
  4113     0FC2  00BF               	movwf	___flmul@a+2
  4114     0FC3  085E               	movf	??_scale+7,w
  4115     0FC4  00BE               	movwf	___flmul@a+1
  4116     0FC5  085D               	movf	??_scale+6,w
  4117     0FC6  00BD               	movwf	___flmul@a
  4118     0FC7  120A  158A  21BA   	fcall	___flmul
  4119     0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  4120     0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  4121     0FCC  083C               	movf	?___flmul+3,w
  4122     0FCD  00D6               	movwf	?_scale+3
  4123     0FCE  083B               	movf	?___flmul+2,w
  4124     0FCF  00D5               	movwf	?_scale+2
  4125     0FD0  083A               	movf	?___flmul+1,w
  4126     0FD1  00D4               	movwf	?_scale+1
  4127     0FD2  0839               	movf	?___flmul,w
  4128     0FD3  00D3               	movwf	?_scale
  4129     0FD4  0008               	return
  4130     0FD5                     l4130:
  4131                           
  4132                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4133     0FD5  0865               	movf	scale@scl,w
  4134     0FD6  00D7               	movwf	??_scale
  4135     0FD7  3001               	movlw	1
  4136     0FD8                     u6935:
  4137     0FD8  1003               	clrc
  4138     0FD9  0DD7               	rlf	??_scale,f
  4139     0FDA  3EFF               	addlw	-1
  4140     0FDB  1D03               	skipz
  4141     0FDC  2FD8               	goto	u6935
  4142     0FDD  1003               	clrc
  4143     0FDE  0D57               	rlf	??_scale,w
  4144     0FDF  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4145     0FE0  0084               	movwf	4
  4146     0FE1  160A  118A  2000  120A  158A  	fcall	stringdir
  4147     0FE6  00D8               	movwf	??_scale+1
  4148     0FE7  160A  118A  2000  120A  158A  	fcall	stringdir
  4149     0FEC  00D9               	movwf	??_scale+2
  4150     0FED  160A  118A  2000  120A  158A  	fcall	stringdir
  4151     0FF2  00DA               	movwf	??_scale+3
  4152     0FF3  160A  118A  2000   	fcall	stringdir
  4153     0FF6  00DB               	movwf	??_scale+4
  4154     0FF7  085B               	movf	??_scale+4,w
  4155     0FF8  00D6               	movwf	?_scale+3
  4156     0FF9  085A               	movf	??_scale+3,w
  4157     0FFA  00D5               	movwf	?_scale+2
  4158     0FFB  0859               	movf	??_scale+2,w
  4159     0FFC  00D4               	movwf	?_scale+1
  4160     0FFD  0858               	movf	??_scale+1,w
  4161     0FFE  00D3               	movwf	?_scale
  4162     0FFF  0008               	return
  4163     1000                     __end_of_scale:
  4164                           
  4165                           	psect	text4
  4166     1CE5                     __ptext4:	
  4167 ;; *************** function ___awmod *****************
  4168 ;; Defined at:
  4169 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;  divisor         2    2[COMMON] int 
  4172 ;;  dividend        2    4[COMMON] int 
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;  sign            1    7[COMMON] unsigned char 
  4175 ;;  counter         1    6[COMMON] unsigned char 
  4176 ;; Return value:  Size  Location     Type
  4177 ;;                  2    2[COMMON] int 
  4178 ;; Registers used:
  4179 ;;		wreg, status,2, status,0, btemp+1
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4185 ;;      Params:         4       0       0       0       0
  4186 ;;      Locals:         2       0       0       0       0
  4187 ;;      Temps:          0       0       0       0       0
  4188 ;;      Totals:         6       0       0       0       0
  4189 ;;Total ram usage:        6 bytes
  4190 ;; Hardware stack levels used: 1
  4191 ;; Hardware stack levels required when called: 1
  4192 ;; This function calls:
  4193 ;;		Nothing
  4194 ;; This function is called by:
  4195 ;;		_scale
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199     1CE5                     ___awmod:	
  4200                           ;psect for function ___awmod
  4201                           
  4202                           
  4203                           ;incstack = 0
  4204                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  4205     1CE5  01F7               	clrf	___awmod@sign
  4206     1CE6  1FF5               	btfss	___awmod@dividend+1,7
  4207     1CE7  2CEF               	goto	l2490
  4208     1CE8  09F4               	comf	___awmod@dividend,f
  4209     1CE9  09F5               	comf	___awmod@dividend+1,f
  4210     1CEA  0AF4               	incf	___awmod@dividend,f
  4211     1CEB  1903               	skipnz
  4212     1CEC  0AF5               	incf	___awmod@dividend+1,f
  4213     1CED  01F7               	clrf	___awmod@sign
  4214     1CEE  0AF7               	incf	___awmod@sign,f
  4215     1CEF                     l2490:
  4216     1CEF  1FF3               	btfss	___awmod@divisor+1,7
  4217     1CF0  2CF6               	goto	l2494
  4218     1CF1  09F2               	comf	___awmod@divisor,f
  4219     1CF2  09F3               	comf	___awmod@divisor+1,f
  4220     1CF3  0AF2               	incf	___awmod@divisor,f
  4221     1CF4  1903               	skipnz
  4222     1CF5  0AF3               	incf	___awmod@divisor+1,f
  4223     1CF6                     l2494:
  4224     1CF6  0872               	movf	___awmod@divisor,w
  4225     1CF7  0473               	iorwf	___awmod@divisor+1,w
  4226     1CF8  1903               	btfsc	3,2
  4227     1CF9  2D23               	goto	l2512
  4228     1CFA  01F6               	clrf	___awmod@counter
  4229     1CFB  0AF6               	incf	___awmod@counter,f
  4230     1CFC                     l2502:
  4231     1CFC  1BF3               	btfsc	___awmod@divisor+1,7
  4232     1CFD  2D0A               	goto	l2504
  4233     1CFE  3001               	movlw	1
  4234     1CFF                     u3265:
  4235     1CFF  1003               	clrc
  4236     1D00  0DF2               	rlf	___awmod@divisor,f
  4237     1D01  0DF3               	rlf	___awmod@divisor+1,f
  4238     1D02  3EFF               	addlw	-1
  4239     1D03  1D03               	skipz
  4240     1D04  2CFF               	goto	u3265
  4241     1D05  3001               	movlw	1
  4242     1D06  00FF               	movwf	127
  4243     1D07  087F               	movf	127,w
  4244     1D08  07F6               	addwf	___awmod@counter,f
  4245     1D09  2CFC               	goto	l2502
  4246     1D0A                     l2504:
  4247     1D0A  0873               	movf	___awmod@divisor+1,w
  4248     1D0B  0275               	subwf	___awmod@dividend+1,w
  4249     1D0C  1D03               	skipz
  4250     1D0D  2D10               	goto	u3285
  4251     1D0E  0872               	movf	___awmod@divisor,w
  4252     1D0F  0274               	subwf	___awmod@dividend,w
  4253     1D10                     u3285:
  4254     1D10  1C03               	skipc
  4255     1D11  2D18               	goto	l2508
  4256     1D12  0872               	movf	___awmod@divisor,w
  4257     1D13  02F4               	subwf	___awmod@dividend,f
  4258     1D14  0873               	movf	___awmod@divisor+1,w
  4259     1D15  1C03               	skipc
  4260     1D16  03F5               	decf	___awmod@dividend+1,f
  4261     1D17  02F5               	subwf	___awmod@dividend+1,f
  4262     1D18                     l2508:
  4263     1D18  3001               	movlw	1
  4264     1D19                     u3295:
  4265     1D19  1003               	clrc
  4266     1D1A  0CF3               	rrf	___awmod@divisor+1,f
  4267     1D1B  0CF2               	rrf	___awmod@divisor,f
  4268     1D1C  3EFF               	addlw	-1
  4269     1D1D  1D03               	skipz
  4270     1D1E  2D19               	goto	u3295
  4271     1D1F  3001               	movlw	1
  4272     1D20  02F6               	subwf	___awmod@counter,f
  4273     1D21  1D03               	btfss	3,2
  4274     1D22  2D0A               	goto	l2504
  4275     1D23                     l2512:
  4276     1D23  0877               	movf	___awmod@sign,w
  4277     1D24  1903               	btfsc	3,2
  4278     1D25  2D2B               	goto	l2516
  4279     1D26  09F4               	comf	___awmod@dividend,f
  4280     1D27  09F5               	comf	___awmod@dividend+1,f
  4281     1D28  0AF4               	incf	___awmod@dividend,f
  4282     1D29  1903               	skipnz
  4283     1D2A  0AF5               	incf	___awmod@dividend+1,f
  4284     1D2B                     l2516:
  4285     1D2B  0875               	movf	___awmod@dividend+1,w
  4286     1D2C  00F3               	movwf	?___awmod+1
  4287     1D2D  0874               	movf	___awmod@dividend,w
  4288     1D2E  00F2               	movwf	?___awmod
  4289     1D2F  0008               	return
  4290     1D30                     __end_of___awmod:
  4291                           
  4292                           	psect	text5
  4293     10AD                     __ptext5:	
  4294 ;; *************** function ___awdiv *****************
  4295 ;; Defined at:
  4296 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;  divisor         2    0[BANK0 ] int 
  4299 ;;  dividend        2    2[BANK0 ] int 
  4300 ;; Auto vars:     Size  Location     Type
  4301 ;;  quotient        2    6[BANK0 ] int 
  4302 ;;  sign            1    5[BANK0 ] unsigned char 
  4303 ;;  counter         1    4[BANK0 ] unsigned char 
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  2    0[BANK0 ] int 
  4306 ;; Registers used:
  4307 ;;		wreg, status,2, status,0, btemp+1
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4313 ;;      Params:         0       4       0       0       0
  4314 ;;      Locals:         0       4       0       0       0
  4315 ;;      Temps:          0       0       0       0       0
  4316 ;;      Totals:         0       8       0       0       0
  4317 ;;Total ram usage:        8 bytes
  4318 ;; Hardware stack levels used: 1
  4319 ;; Hardware stack levels required when called: 1
  4320 ;; This function calls:
  4321 ;;		Nothing
  4322 ;; This function is called by:
  4323 ;;		_scale
  4324 ;;		_sprintf
  4325 ;; This function uses a non-reentrant model
  4326 ;;
  4327                           
  4328     10AD                     ___awdiv:	
  4329                           ;psect for function ___awdiv
  4330                           
  4331                           
  4332                           ;incstack = 0
  4333                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  4334     10AD  1283               	bcf	3,5	;RP0=0, select bank0
  4335     10AE  1303               	bcf	3,6	;RP1=0, select bank0
  4336     10AF  01A5               	clrf	___awdiv@sign
  4337     10B0  1FA1               	btfss	___awdiv@divisor+1,7
  4338     10B1  28B9               	goto	l3870
  4339     10B2  09A0               	comf	___awdiv@divisor,f
  4340     10B3  09A1               	comf	___awdiv@divisor+1,f
  4341     10B4  0AA0               	incf	___awdiv@divisor,f
  4342     10B5  1903               	skipnz
  4343     10B6  0AA1               	incf	___awdiv@divisor+1,f
  4344     10B7  01A5               	clrf	___awdiv@sign
  4345     10B8  0AA5               	incf	___awdiv@sign,f
  4346     10B9                     l3870:
  4347     10B9  1FA3               	btfss	___awdiv@dividend+1,7
  4348     10BA  28C4               	goto	l3876
  4349     10BB  09A2               	comf	___awdiv@dividend,f
  4350     10BC  09A3               	comf	___awdiv@dividend+1,f
  4351     10BD  0AA2               	incf	___awdiv@dividend,f
  4352     10BE  1903               	skipnz
  4353     10BF  0AA3               	incf	___awdiv@dividend+1,f
  4354     10C0  3001               	movlw	1
  4355     10C1  00FF               	movwf	127
  4356     10C2  087F               	movf	127,w
  4357     10C3  06A5               	xorwf	___awdiv@sign,f
  4358     10C4                     l3876:
  4359     10C4  01A6               	clrf	___awdiv@quotient
  4360     10C5  01A7               	clrf	___awdiv@quotient+1
  4361     10C6  0820               	movf	___awdiv@divisor,w
  4362     10C7  0421               	iorwf	___awdiv@divisor+1,w
  4363     10C8  1903               	btfsc	3,2
  4364     10C9  28FB               	goto	l3898
  4365     10CA  01A4               	clrf	___awdiv@counter
  4366     10CB  0AA4               	incf	___awdiv@counter,f
  4367     10CC                     l3886:
  4368     10CC  1BA1               	btfsc	___awdiv@divisor+1,7
  4369     10CD  28DA               	goto	l3888
  4370     10CE  3001               	movlw	1
  4371     10CF                     u6175:
  4372     10CF  1003               	clrc
  4373     10D0  0DA0               	rlf	___awdiv@divisor,f
  4374     10D1  0DA1               	rlf	___awdiv@divisor+1,f
  4375     10D2  3EFF               	addlw	-1
  4376     10D3  1D03               	skipz
  4377     10D4  28CF               	goto	u6175
  4378     10D5  3001               	movlw	1
  4379     10D6  00FF               	movwf	127
  4380     10D7  087F               	movf	127,w
  4381     10D8  07A4               	addwf	___awdiv@counter,f
  4382     10D9  28CC               	goto	l3886
  4383     10DA                     l3888:
  4384     10DA  3001               	movlw	1
  4385     10DB                     u6195:
  4386     10DB  1003               	clrc
  4387     10DC  0DA6               	rlf	___awdiv@quotient,f
  4388     10DD  0DA7               	rlf	___awdiv@quotient+1,f
  4389     10DE  3EFF               	addlw	-1
  4390     10DF  1D03               	skipz
  4391     10E0  28DB               	goto	u6195
  4392     10E1  0821               	movf	___awdiv@divisor+1,w
  4393     10E2  0223               	subwf	___awdiv@dividend+1,w
  4394     10E3  1D03               	skipz
  4395     10E4  28E7               	goto	u6205
  4396     10E5  0820               	movf	___awdiv@divisor,w
  4397     10E6  0222               	subwf	___awdiv@dividend,w
  4398     10E7                     u6205:
  4399     10E7  1C03               	skipc
  4400     10E8  28F0               	goto	l3894
  4401     10E9  0820               	movf	___awdiv@divisor,w
  4402     10EA  02A2               	subwf	___awdiv@dividend,f
  4403     10EB  0821               	movf	___awdiv@divisor+1,w
  4404     10EC  1C03               	skipc
  4405     10ED  03A3               	decf	___awdiv@dividend+1,f
  4406     10EE  02A3               	subwf	___awdiv@dividend+1,f
  4407     10EF  1426               	bsf	___awdiv@quotient,0
  4408     10F0                     l3894:
  4409     10F0  3001               	movlw	1
  4410     10F1                     u6215:
  4411     10F1  1003               	clrc
  4412     10F2  0CA1               	rrf	___awdiv@divisor+1,f
  4413     10F3  0CA0               	rrf	___awdiv@divisor,f
  4414     10F4  3EFF               	addlw	-1
  4415     10F5  1D03               	skipz
  4416     10F6  28F1               	goto	u6215
  4417     10F7  3001               	movlw	1
  4418     10F8  02A4               	subwf	___awdiv@counter,f
  4419     10F9  1D03               	btfss	3,2
  4420     10FA  28DA               	goto	l3888
  4421     10FB                     l3898:
  4422     10FB  0825               	movf	___awdiv@sign,w
  4423     10FC  1903               	btfsc	3,2
  4424     10FD  2903               	goto	l3902
  4425     10FE  09A6               	comf	___awdiv@quotient,f
  4426     10FF  09A7               	comf	___awdiv@quotient+1,f
  4427     1100  0AA6               	incf	___awdiv@quotient,f
  4428     1101  1903               	skipnz
  4429     1102  0AA7               	incf	___awdiv@quotient+1,f
  4430     1103                     l3902:
  4431     1103  0827               	movf	___awdiv@quotient+1,w
  4432     1104  00A1               	movwf	?___awdiv+1
  4433     1105  0826               	movf	___awdiv@quotient,w
  4434     1106  00A0               	movwf	?___awdiv
  4435     1107  0008               	return
  4436     1108                     __end_of___awdiv:
  4437                           
  4438                           	psect	text6
  4439     15FD                     __ptext6:	
  4440 ;; *************** function _fround *****************
  4441 ;; Defined at:
  4442 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;  prec            1    wreg     unsigned char 
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;  prec            1   70[BANK0 ] unsigned char 
  4447 ;; Return value:  Size  Location     Type
  4448 ;;                  4   51[BANK0 ] unsigned char 
  4449 ;; Registers used:
  4450 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4451 ;; Tracked objects:
  4452 ;;		On entry : 0/0
  4453 ;;		On exit  : 0/0
  4454 ;;		Unchanged: 0/0
  4455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4456 ;;      Params:         0       4       0       0       0
  4457 ;;      Locals:         0       9       0       0       0
  4458 ;;      Temps:          0       7       0       0       0
  4459 ;;      Totals:         0      20       0       0       0
  4460 ;;Total ram usage:       20 bytes
  4461 ;; Hardware stack levels used: 1
  4462 ;; Hardware stack levels required when called: 3
  4463 ;; This function calls:
  4464 ;;		___flmul
  4465 ;;		___lwdiv
  4466 ;;		___lwmod
  4467 ;; This function is called by:
  4468 ;;		_sprintf
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472     15FD                     _fround:	
  4473                           ;psect for function _fround
  4474                           
  4475                           
  4476                           ;incstack = 0
  4477                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4478                           ;fround@prec stored from wreg
  4479     15FD  1283               	bcf	3,5	;RP0=0, select bank0
  4480     15FE  1303               	bcf	3,6	;RP1=0, select bank0
  4481     15FF  00E6               	movwf	fround@prec
  4482                           
  4483                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4484     1600  306E               	movlw	110
  4485     1601  0266               	subwf	fround@prec,w
  4486     1602  1C03               	skipc
  4487     1603  2F11               	goto	l4084
  4488                           
  4489                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4490     1604  303F               	movlw	63
  4491     1605  00BC               	movwf	___flmul@b+3
  4492     1606  3000               	movlw	0
  4493     1607  00BB               	movwf	___flmul@b+2
  4494     1608  3000               	movlw	0
  4495     1609  00BA               	movwf	___flmul@b+1
  4496     160A  3000               	movlw	0
  4497     160B  00B9               	movwf	___flmul@b
  4498     160C  3064               	movlw	100
  4499     160D  00A0               	movwf	___lwdiv@divisor
  4500     160E  3000               	movlw	0
  4501     160F  00A1               	movwf	___lwdiv@divisor+1
  4502     1610  0866               	movf	fround@prec,w
  4503     1611  00D7               	movwf	??_fround
  4504     1612  01D8               	clrf	??_fround+1
  4505     1613  0857               	movf	??_fround,w
  4506     1614  00A2               	movwf	___lwdiv@dividend
  4507     1615  0858               	movf	??_fround+1,w
  4508     1616  00A3               	movwf	___lwdiv@dividend+1
  4509     1617  160A  158A  2418  160A  118A  	fcall	___lwdiv
  4510     161C  1283               	bcf	3,5	;RP0=0, select bank0
  4511     161D  1303               	bcf	3,6	;RP1=0, select bank0
  4512     161E  0820               	movf	?___lwdiv,w
  4513     161F  00D9               	movwf	??_fround+2
  4514     1620  3001               	movlw	1
  4515     1621                     u6705:
  4516     1621  1003               	clrc
  4517     1622  0DD9               	rlf	??_fround+2,f
  4518     1623  3EFF               	addlw	-1
  4519     1624  1D03               	skipz
  4520     1625  2E21               	goto	u6705
  4521     1626  1003               	clrc
  4522     1627  0D59               	rlf	??_fround+2,w
  4523     1628  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4524     1629  0084               	movwf	4
  4525     162A  160A  118A  2000  160A  118A  	fcall	stringdir
  4526     162F  00DA               	movwf	??_fround+3
  4527     1630  160A  118A  2000  160A  118A  	fcall	stringdir
  4528     1635  00DB               	movwf	??_fround+4
  4529     1636  160A  118A  2000  160A  118A  	fcall	stringdir
  4530     163B  00DC               	movwf	??_fround+5
  4531     163C  160A  118A  2000  160A  118A  	fcall	stringdir
  4532     1641  00DD               	movwf	??_fround+6
  4533     1642  085D               	movf	??_fround+6,w
  4534     1643  00C0               	movwf	___flmul@a+3
  4535     1644  085C               	movf	??_fround+5,w
  4536     1645  00BF               	movwf	___flmul@a+2
  4537     1646  085B               	movf	??_fround+4,w
  4538     1647  00BE               	movwf	___flmul@a+1
  4539     1648  085A               	movf	??_fround+3,w
  4540     1649  00BD               	movwf	___flmul@a
  4541     164A  120A  158A  21BA  160A  118A  	fcall	___flmul
  4542     164F  1283               	bcf	3,5	;RP0=0, select bank0
  4543     1650  1303               	bcf	3,6	;RP1=0, select bank0
  4544     1651  083C               	movf	?___flmul+3,w
  4545     1652  00E5               	movwf	_fround$1055+3
  4546     1653  083B               	movf	?___flmul+2,w
  4547     1654  00E4               	movwf	_fround$1055+2
  4548     1655  083A               	movf	?___flmul+1,w
  4549     1656  00E3               	movwf	_fround$1055+1
  4550     1657  0839               	movf	?___flmul,w
  4551     1658  00E2               	movwf	_fround$1055
  4552                           
  4553                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4554     1659  300A               	movlw	10
  4555     165A  00A0               	movwf	___lwdiv@divisor
  4556     165B  3000               	movlw	0
  4557     165C  00A1               	movwf	___lwdiv@divisor+1
  4558     165D  0866               	movf	fround@prec,w
  4559     165E  00D7               	movwf	??_fround
  4560     165F  01D8               	clrf	??_fround+1
  4561     1660  0857               	movf	??_fround,w
  4562     1661  00F4               	movwf	___lwmod@dividend
  4563     1662  0858               	movf	??_fround+1,w
  4564     1663  00F5               	movwf	___lwmod@dividend+1
  4565     1664  3064               	movlw	100
  4566     1665  00F2               	movwf	___lwmod@divisor
  4567     1666  3000               	movlw	0
  4568     1667  00F3               	movwf	___lwmod@divisor+1
  4569     1668  160A  158A  23AD  160A  118A  	fcall	___lwmod
  4570     166D  0873               	movf	?___lwmod+1,w
  4571     166E  1283               	bcf	3,5	;RP0=0, select bank0
  4572     166F  1303               	bcf	3,6	;RP1=0, select bank0
  4573     1670  00A3               	movwf	___lwdiv@dividend+1
  4574     1671  0872               	movf	?___lwmod,w
  4575     1672  00A2               	movwf	___lwdiv@dividend
  4576     1673  160A  158A  2418  160A  118A  	fcall	___lwdiv
  4577     1678  1283               	bcf	3,5	;RP0=0, select bank0
  4578     1679  1303               	bcf	3,6	;RP1=0, select bank0
  4579     167A  0820               	movf	?___lwdiv,w
  4580     167B  00D9               	movwf	??_fround+2
  4581     167C  3001               	movlw	1
  4582     167D                     u6715:
  4583     167D  1003               	clrc
  4584     167E  0DD9               	rlf	??_fround+2,f
  4585     167F  3EFF               	addlw	-1
  4586     1680  1D03               	skipz
  4587     1681  2E7D               	goto	u6715
  4588     1682  1003               	clrc
  4589     1683  0D59               	rlf	??_fround+2,w
  4590     1684  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4591     1685  0084               	movwf	4
  4592     1686  160A  118A  2000  160A  118A  	fcall	stringdir
  4593     168B  00DA               	movwf	??_fround+3
  4594     168C  160A  118A  2000  160A  118A  	fcall	stringdir
  4595     1691  00DB               	movwf	??_fround+4
  4596     1692  160A  118A  2000  160A  118A  	fcall	stringdir
  4597     1697  00DC               	movwf	??_fround+5
  4598     1698  160A  118A  2000  160A  118A  	fcall	stringdir
  4599     169D  00DD               	movwf	??_fround+6
  4600     169E  085D               	movf	??_fround+6,w
  4601     169F  00BC               	movwf	___flmul@b+3
  4602     16A0  085C               	movf	??_fround+5,w
  4603     16A1  00BB               	movwf	___flmul@b+2
  4604     16A2  085B               	movf	??_fround+4,w
  4605     16A3  00BA               	movwf	___flmul@b+1
  4606     16A4  085A               	movf	??_fround+3,w
  4607     16A5  00B9               	movwf	___flmul@b
  4608     16A6  0865               	movf	_fround$1055+3,w
  4609     16A7  00C0               	movwf	___flmul@a+3
  4610     16A8  0864               	movf	_fround$1055+2,w
  4611     16A9  00BF               	movwf	___flmul@a+2
  4612     16AA  0863               	movf	_fround$1055+1,w
  4613     16AB  00BE               	movwf	___flmul@a+1
  4614     16AC  0862               	movf	_fround$1055,w
  4615     16AD  00BD               	movwf	___flmul@a
  4616     16AE  120A  158A  21BA  160A  118A  	fcall	___flmul
  4617     16B3  1283               	bcf	3,5	;RP0=0, select bank0
  4618     16B4  1303               	bcf	3,6	;RP1=0, select bank0
  4619     16B5  083C               	movf	?___flmul+3,w
  4620     16B6  00E1               	movwf	_fround$1056+3
  4621     16B7  083B               	movf	?___flmul+2,w
  4622     16B8  00E0               	movwf	_fround$1056+2
  4623     16B9  083A               	movf	?___flmul+1,w
  4624     16BA  00DF               	movwf	_fround$1056+1
  4625     16BB  0839               	movf	?___flmul,w
  4626     16BC  00DE               	movwf	_fround$1056
  4627                           
  4628                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4629     16BD  300A               	movlw	10
  4630     16BE  00F2               	movwf	___lwmod@divisor
  4631     16BF  3000               	movlw	0
  4632     16C0  00F3               	movwf	___lwmod@divisor+1
  4633     16C1  0866               	movf	fround@prec,w
  4634     16C2  00D7               	movwf	??_fround
  4635     16C3  01D8               	clrf	??_fround+1
  4636     16C4  0857               	movf	??_fround,w
  4637     16C5  00F4               	movwf	___lwmod@dividend
  4638     16C6  0858               	movf	??_fround+1,w
  4639     16C7  00F5               	movwf	___lwmod@dividend+1
  4640     16C8  160A  158A  23AD  160A  118A  	fcall	___lwmod
  4641     16CD  0872               	movf	?___lwmod,w
  4642     16CE  1283               	bcf	3,5	;RP0=0, select bank0
  4643     16CF  1303               	bcf	3,6	;RP1=0, select bank0
  4644     16D0  00D9               	movwf	??_fround+2
  4645     16D1  3001               	movlw	1
  4646     16D2                     u6725:
  4647     16D2  1003               	clrc
  4648     16D3  0DD9               	rlf	??_fround+2,f
  4649     16D4  3EFF               	addlw	-1
  4650     16D5  1D03               	skipz
  4651     16D6  2ED2               	goto	u6725
  4652     16D7  1003               	clrc
  4653     16D8  0D59               	rlf	??_fround+2,w
  4654     16D9  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4655     16DA  0084               	movwf	4
  4656     16DB  160A  118A  2000  160A  118A  	fcall	stringdir
  4657     16E0  00DA               	movwf	??_fround+3
  4658     16E1  160A  118A  2000  160A  118A  	fcall	stringdir
  4659     16E6  00DB               	movwf	??_fround+4
  4660     16E7  160A  118A  2000  160A  118A  	fcall	stringdir
  4661     16EC  00DC               	movwf	??_fround+5
  4662     16ED  160A  118A  2000  160A  118A  	fcall	stringdir
  4663     16F2  00DD               	movwf	??_fround+6
  4664     16F3  085D               	movf	??_fround+6,w
  4665     16F4  00BC               	movwf	___flmul@b+3
  4666     16F5  085C               	movf	??_fround+5,w
  4667     16F6  00BB               	movwf	___flmul@b+2
  4668     16F7  085B               	movf	??_fround+4,w
  4669     16F8  00BA               	movwf	___flmul@b+1
  4670     16F9  085A               	movf	??_fround+3,w
  4671     16FA  00B9               	movwf	___flmul@b
  4672     16FB  0861               	movf	_fround$1056+3,w
  4673     16FC  00C0               	movwf	___flmul@a+3
  4674     16FD  0860               	movf	_fround$1056+2,w
  4675     16FE  00BF               	movwf	___flmul@a+2
  4676     16FF  085F               	movf	_fround$1056+1,w
  4677     1700  00BE               	movwf	___flmul@a+1
  4678     1701  085E               	movf	_fround$1056,w
  4679     1702  00BD               	movwf	___flmul@a
  4680     1703  120A  158A  21BA   	fcall	___flmul
  4681     1706  1283               	bcf	3,5	;RP0=0, select bank0
  4682     1707  1303               	bcf	3,6	;RP1=0, select bank0
  4683     1708  083C               	movf	?___flmul+3,w
  4684     1709  00D6               	movwf	?_fround+3
  4685     170A  083B               	movf	?___flmul+2,w
  4686     170B  00D5               	movwf	?_fround+2
  4687     170C  083A               	movf	?___flmul+1,w
  4688     170D  00D4               	movwf	?_fround+1
  4689     170E  0839               	movf	?___flmul,w
  4690     170F  00D3               	movwf	?_fround
  4691     1710  0008               	return
  4692     1711                     l4084:
  4693     1711  300B               	movlw	11
  4694     1712  0266               	subwf	fround@prec,w
  4695     1713  1C03               	skipc
  4696     1714  2FBE               	goto	l4090
  4697                           
  4698                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4699     1715  303F               	movlw	63
  4700     1716  00BC               	movwf	___flmul@b+3
  4701     1717  3000               	movlw	0
  4702     1718  00BB               	movwf	___flmul@b+2
  4703     1719  3000               	movlw	0
  4704     171A  00BA               	movwf	___flmul@b+1
  4705     171B  3000               	movlw	0
  4706     171C  00B9               	movwf	___flmul@b
  4707     171D  300A               	movlw	10
  4708     171E  00A0               	movwf	___lwdiv@divisor
  4709     171F  3000               	movlw	0
  4710     1720  00A1               	movwf	___lwdiv@divisor+1
  4711     1721  0866               	movf	fround@prec,w
  4712     1722  00D7               	movwf	??_fround
  4713     1723  01D8               	clrf	??_fround+1
  4714     1724  0857               	movf	??_fround,w
  4715     1725  00A2               	movwf	___lwdiv@dividend
  4716     1726  0858               	movf	??_fround+1,w
  4717     1727  00A3               	movwf	___lwdiv@dividend+1
  4718     1728  160A  158A  2418  160A  118A  	fcall	___lwdiv
  4719     172D  1283               	bcf	3,5	;RP0=0, select bank0
  4720     172E  1303               	bcf	3,6	;RP1=0, select bank0
  4721     172F  0820               	movf	?___lwdiv,w
  4722     1730  00D9               	movwf	??_fround+2
  4723     1731  3001               	movlw	1
  4724     1732                     u6745:
  4725     1732  1003               	clrc
  4726     1733  0DD9               	rlf	??_fround+2,f
  4727     1734  3EFF               	addlw	-1
  4728     1735  1D03               	skipz
  4729     1736  2F32               	goto	u6745
  4730     1737  1003               	clrc
  4731     1738  0D59               	rlf	??_fround+2,w
  4732     1739  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4733     173A  0084               	movwf	4
  4734     173B  160A  118A  2000  160A  118A  	fcall	stringdir
  4735     1740  00DA               	movwf	??_fround+3
  4736     1741  160A  118A  2000  160A  118A  	fcall	stringdir
  4737     1746  00DB               	movwf	??_fround+4
  4738     1747  160A  118A  2000  160A  118A  	fcall	stringdir
  4739     174C  00DC               	movwf	??_fround+5
  4740     174D  160A  118A  2000  160A  118A  	fcall	stringdir
  4741     1752  00DD               	movwf	??_fround+6
  4742     1753  085D               	movf	??_fround+6,w
  4743     1754  00C0               	movwf	___flmul@a+3
  4744     1755  085C               	movf	??_fround+5,w
  4745     1756  00BF               	movwf	___flmul@a+2
  4746     1757  085B               	movf	??_fround+4,w
  4747     1758  00BE               	movwf	___flmul@a+1
  4748     1759  085A               	movf	??_fround+3,w
  4749     175A  00BD               	movwf	___flmul@a
  4750     175B  120A  158A  21BA  160A  118A  	fcall	___flmul
  4751     1760  1283               	bcf	3,5	;RP0=0, select bank0
  4752     1761  1303               	bcf	3,6	;RP1=0, select bank0
  4753     1762  083C               	movf	?___flmul+3,w
  4754     1763  00E5               	movwf	_fround$1055+3
  4755     1764  083B               	movf	?___flmul+2,w
  4756     1765  00E4               	movwf	_fround$1055+2
  4757     1766  083A               	movf	?___flmul+1,w
  4758     1767  00E3               	movwf	_fround$1055+1
  4759     1768  0839               	movf	?___flmul,w
  4760     1769  00E2               	movwf	_fround$1055
  4761                           
  4762                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4763     176A  300A               	movlw	10
  4764     176B  00F2               	movwf	___lwmod@divisor
  4765     176C  3000               	movlw	0
  4766     176D  00F3               	movwf	___lwmod@divisor+1
  4767     176E  0866               	movf	fround@prec,w
  4768     176F  00D7               	movwf	??_fround
  4769     1770  01D8               	clrf	??_fround+1
  4770     1771  0857               	movf	??_fround,w
  4771     1772  00F4               	movwf	___lwmod@dividend
  4772     1773  0858               	movf	??_fround+1,w
  4773     1774  00F5               	movwf	___lwmod@dividend+1
  4774     1775  160A  158A  23AD  160A  118A  	fcall	___lwmod
  4775     177A  0872               	movf	?___lwmod,w
  4776     177B  1283               	bcf	3,5	;RP0=0, select bank0
  4777     177C  1303               	bcf	3,6	;RP1=0, select bank0
  4778     177D  00D9               	movwf	??_fround+2
  4779     177E  3001               	movlw	1
  4780     177F                     u6755:
  4781     177F  1003               	clrc
  4782     1780  0DD9               	rlf	??_fround+2,f
  4783     1781  3EFF               	addlw	-1
  4784     1782  1D03               	skipz
  4785     1783  2F7F               	goto	u6755
  4786     1784  1003               	clrc
  4787     1785  0D59               	rlf	??_fround+2,w
  4788     1786  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4789     1787  0084               	movwf	4
  4790     1788  160A  118A  2000  160A  118A  	fcall	stringdir
  4791     178D  00DA               	movwf	??_fround+3
  4792     178E  160A  118A  2000  160A  118A  	fcall	stringdir
  4793     1793  00DB               	movwf	??_fround+4
  4794     1794  160A  118A  2000  160A  118A  	fcall	stringdir
  4795     1799  00DC               	movwf	??_fround+5
  4796     179A  160A  118A  2000  160A  118A  	fcall	stringdir
  4797     179F  00DD               	movwf	??_fround+6
  4798     17A0  085D               	movf	??_fround+6,w
  4799     17A1  00BC               	movwf	___flmul@b+3
  4800     17A2  085C               	movf	??_fround+5,w
  4801     17A3  00BB               	movwf	___flmul@b+2
  4802     17A4  085B               	movf	??_fround+4,w
  4803     17A5  00BA               	movwf	___flmul@b+1
  4804     17A6  085A               	movf	??_fround+3,w
  4805     17A7  00B9               	movwf	___flmul@b
  4806     17A8  0865               	movf	_fround$1055+3,w
  4807     17A9  00C0               	movwf	___flmul@a+3
  4808     17AA  0864               	movf	_fround$1055+2,w
  4809     17AB  00BF               	movwf	___flmul@a+2
  4810     17AC  0863               	movf	_fround$1055+1,w
  4811     17AD  00BE               	movwf	___flmul@a+1
  4812     17AE  0862               	movf	_fround$1055,w
  4813     17AF  00BD               	movwf	___flmul@a
  4814     17B0  120A  158A  21BA   	fcall	___flmul
  4815     17B3  1283               	bcf	3,5	;RP0=0, select bank0
  4816     17B4  1303               	bcf	3,6	;RP1=0, select bank0
  4817     17B5  083C               	movf	?___flmul+3,w
  4818     17B6  00D6               	movwf	?_fround+3
  4819     17B7  083B               	movf	?___flmul+2,w
  4820     17B8  00D5               	movwf	?_fround+2
  4821     17B9  083A               	movf	?___flmul+1,w
  4822     17BA  00D4               	movwf	?_fround+1
  4823     17BB  0839               	movf	?___flmul,w
  4824     17BC  00D3               	movwf	?_fround
  4825     17BD  0008               	return
  4826     17BE                     l4090:
  4827                           
  4828                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4829     17BE  303F               	movlw	63
  4830     17BF  00BC               	movwf	___flmul@b+3
  4831     17C0  3000               	movlw	0
  4832     17C1  00BB               	movwf	___flmul@b+2
  4833     17C2  3000               	movlw	0
  4834     17C3  00BA               	movwf	___flmul@b+1
  4835     17C4  3000               	movlw	0
  4836     17C5  00B9               	movwf	___flmul@b
  4837     17C6  0866               	movf	fround@prec,w
  4838     17C7  00D7               	movwf	??_fround
  4839     17C8  3001               	movlw	1
  4840     17C9                     u6765:
  4841     17C9  1003               	clrc
  4842     17CA  0DD7               	rlf	??_fround,f
  4843     17CB  3EFF               	addlw	-1
  4844     17CC  1D03               	skipz
  4845     17CD  2FC9               	goto	u6765
  4846     17CE  1003               	clrc
  4847     17CF  0D57               	rlf	??_fround,w
  4848     17D0  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4849     17D1  0084               	movwf	4
  4850     17D2  160A  118A  2000  160A  118A  	fcall	stringdir
  4851     17D7  00D8               	movwf	??_fround+1
  4852     17D8  160A  118A  2000  160A  118A  	fcall	stringdir
  4853     17DD  00D9               	movwf	??_fround+2
  4854     17DE  160A  118A  2000  160A  118A  	fcall	stringdir
  4855     17E3  00DA               	movwf	??_fround+3
  4856     17E4  160A  118A  2000  160A  118A  	fcall	stringdir
  4857     17E9  00DB               	movwf	??_fround+4
  4858     17EA  085B               	movf	??_fround+4,w
  4859     17EB  00C0               	movwf	___flmul@a+3
  4860     17EC  085A               	movf	??_fround+3,w
  4861     17ED  00BF               	movwf	___flmul@a+2
  4862     17EE  0859               	movf	??_fround+2,w
  4863     17EF  00BE               	movwf	___flmul@a+1
  4864     17F0  0858               	movf	??_fround+1,w
  4865     17F1  00BD               	movwf	___flmul@a
  4866     17F2  120A  158A  21BA   	fcall	___flmul
  4867     17F5  1283               	bcf	3,5	;RP0=0, select bank0
  4868     17F6  1303               	bcf	3,6	;RP1=0, select bank0
  4869     17F7  083C               	movf	?___flmul+3,w
  4870     17F8  00D6               	movwf	?_fround+3
  4871     17F9  083B               	movf	?___flmul+2,w
  4872     17FA  00D5               	movwf	?_fround+2
  4873     17FB  083A               	movf	?___flmul+1,w
  4874     17FC  00D4               	movwf	?_fround+1
  4875     17FD  0839               	movf	?___flmul,w
  4876     17FE  00D3               	movwf	?_fround
  4877     17FF  0008               	return
  4878     1800                     __end_of_fround:
  4879                           
  4880                           	psect	text7
  4881     1BAD                     __ptext7:	
  4882 ;; *************** function ___lwmod *****************
  4883 ;; Defined at:
  4884 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  4885 ;; Parameters:    Size  Location     Type
  4886 ;;  divisor         2    2[COMMON] unsigned int 
  4887 ;;  dividend        2    4[COMMON] unsigned int 
  4888 ;; Auto vars:     Size  Location     Type
  4889 ;;  counter         1    6[COMMON] unsigned char 
  4890 ;; Return value:  Size  Location     Type
  4891 ;;                  2    2[COMMON] unsigned int 
  4892 ;; Registers used:
  4893 ;;		wreg, status,2, status,0, btemp+1
  4894 ;; Tracked objects:
  4895 ;;		On entry : 0/0
  4896 ;;		On exit  : 0/0
  4897 ;;		Unchanged: 0/0
  4898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4899 ;;      Params:         4       0       0       0       0
  4900 ;;      Locals:         1       0       0       0       0
  4901 ;;      Temps:          0       0       0       0       0
  4902 ;;      Totals:         5       0       0       0       0
  4903 ;;Total ram usage:        5 bytes
  4904 ;; Hardware stack levels used: 1
  4905 ;; Hardware stack levels required when called: 1
  4906 ;; This function calls:
  4907 ;;		Nothing
  4908 ;; This function is called by:
  4909 ;;		_fround
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           
  4913     1BAD                     ___lwmod:	
  4914                           ;psect for function ___lwmod
  4915                           
  4916                           
  4917                           ;incstack = 0
  4918                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  4919     1BAD  0872               	movf	___lwmod@divisor,w
  4920     1BAE  0473               	iorwf	___lwmod@divisor+1,w
  4921     1BAF  1903               	btfsc	3,2
  4922     1BB0  2BDA               	goto	l2564
  4923     1BB1  01F6               	clrf	___lwmod@counter
  4924     1BB2  0AF6               	incf	___lwmod@counter,f
  4925     1BB3                     l2554:
  4926     1BB3  1BF3               	btfsc	___lwmod@divisor+1,7
  4927     1BB4  2BC1               	goto	l2556
  4928     1BB5  3001               	movlw	1
  4929     1BB6                     u3405:
  4930     1BB6  1003               	clrc
  4931     1BB7  0DF2               	rlf	___lwmod@divisor,f
  4932     1BB8  0DF3               	rlf	___lwmod@divisor+1,f
  4933     1BB9  3EFF               	addlw	-1
  4934     1BBA  1D03               	skipz
  4935     1BBB  2BB6               	goto	u3405
  4936     1BBC  3001               	movlw	1
  4937     1BBD  00FF               	movwf	127
  4938     1BBE  087F               	movf	127,w
  4939     1BBF  07F6               	addwf	___lwmod@counter,f
  4940     1BC0  2BB3               	goto	l2554
  4941     1BC1                     l2556:
  4942     1BC1  0873               	movf	___lwmod@divisor+1,w
  4943     1BC2  0275               	subwf	___lwmod@dividend+1,w
  4944     1BC3  1D03               	skipz
  4945     1BC4  2BC7               	goto	u3425
  4946     1BC5  0872               	movf	___lwmod@divisor,w
  4947     1BC6  0274               	subwf	___lwmod@dividend,w
  4948     1BC7                     u3425:
  4949     1BC7  1C03               	skipc
  4950     1BC8  2BCF               	goto	l2560
  4951     1BC9  0872               	movf	___lwmod@divisor,w
  4952     1BCA  02F4               	subwf	___lwmod@dividend,f
  4953     1BCB  0873               	movf	___lwmod@divisor+1,w
  4954     1BCC  1C03               	skipc
  4955     1BCD  03F5               	decf	___lwmod@dividend+1,f
  4956     1BCE  02F5               	subwf	___lwmod@dividend+1,f
  4957     1BCF                     l2560:
  4958     1BCF  3001               	movlw	1
  4959     1BD0                     u3435:
  4960     1BD0  1003               	clrc
  4961     1BD1  0CF3               	rrf	___lwmod@divisor+1,f
  4962     1BD2  0CF2               	rrf	___lwmod@divisor,f
  4963     1BD3  3EFF               	addlw	-1
  4964     1BD4  1D03               	skipz
  4965     1BD5  2BD0               	goto	u3435
  4966     1BD6  3001               	movlw	1
  4967     1BD7  02F6               	subwf	___lwmod@counter,f
  4968     1BD8  1D03               	btfss	3,2
  4969     1BD9  2BC1               	goto	l2556
  4970     1BDA                     l2564:
  4971     1BDA  0875               	movf	___lwmod@dividend+1,w
  4972     1BDB  00F3               	movwf	?___lwmod+1
  4973     1BDC  0874               	movf	___lwmod@dividend,w
  4974     1BDD  00F2               	movwf	?___lwmod
  4975     1BDE  0008               	return
  4976     1BDF                     __end_of___lwmod:
  4977                           
  4978                           	psect	text8
  4979     1C18                     __ptext8:	
  4980 ;; *************** function ___lwdiv *****************
  4981 ;; Defined at:
  4982 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  4983 ;; Parameters:    Size  Location     Type
  4984 ;;  divisor         2    0[BANK0 ] unsigned int 
  4985 ;;  dividend        2    2[BANK0 ] unsigned int 
  4986 ;; Auto vars:     Size  Location     Type
  4987 ;;  quotient        2    8[COMMON] unsigned int 
  4988 ;;  counter         1    7[COMMON] unsigned char 
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  2    0[BANK0 ] unsigned int 
  4991 ;; Registers used:
  4992 ;;		wreg, status,2, status,0, btemp+1
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4998 ;;      Params:         0       4       0       0       0
  4999 ;;      Locals:         3       0       0       0       0
  5000 ;;      Temps:          0       0       0       0       0
  5001 ;;      Totals:         3       4       0       0       0
  5002 ;;Total ram usage:        7 bytes
  5003 ;; Hardware stack levels used: 1
  5004 ;; Hardware stack levels required when called: 1
  5005 ;; This function calls:
  5006 ;;		Nothing
  5007 ;; This function is called by:
  5008 ;;		_fround
  5009 ;; This function uses a non-reentrant model
  5010 ;;
  5011                           
  5012     1C18                     ___lwdiv:	
  5013                           ;psect for function ___lwdiv
  5014                           
  5015                           
  5016                           ;incstack = 0
  5017                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  5018     1C18  01F8               	clrf	___lwdiv@quotient
  5019     1C19  01F9               	clrf	___lwdiv@quotient+1
  5020     1C1A  1283               	bcf	3,5	;RP0=0, select bank0
  5021     1C1B  1303               	bcf	3,6	;RP1=0, select bank0
  5022     1C1C  0820               	movf	___lwdiv@divisor,w
  5023     1C1D  0421               	iorwf	___lwdiv@divisor+1,w
  5024     1C1E  1903               	btfsc	3,2
  5025     1C1F  2C51               	goto	l3928
  5026     1C20  01F7               	clrf	___lwdiv@counter
  5027     1C21  0AF7               	incf	___lwdiv@counter,f
  5028     1C22                     l3916:
  5029     1C22  1BA1               	btfsc	___lwdiv@divisor+1,7
  5030     1C23  2C30               	goto	l3918
  5031     1C24  3001               	movlw	1
  5032     1C25                     u6255:
  5033     1C25  1003               	clrc
  5034     1C26  0DA0               	rlf	___lwdiv@divisor,f
  5035     1C27  0DA1               	rlf	___lwdiv@divisor+1,f
  5036     1C28  3EFF               	addlw	-1
  5037     1C29  1D03               	skipz
  5038     1C2A  2C25               	goto	u6255
  5039     1C2B  3001               	movlw	1
  5040     1C2C  00FF               	movwf	127
  5041     1C2D  087F               	movf	127,w
  5042     1C2E  07F7               	addwf	___lwdiv@counter,f
  5043     1C2F  2C22               	goto	l3916
  5044     1C30                     l3918:
  5045     1C30  3001               	movlw	1
  5046     1C31                     u6275:
  5047     1C31  1003               	clrc
  5048     1C32  0DF8               	rlf	___lwdiv@quotient,f
  5049     1C33  0DF9               	rlf	___lwdiv@quotient+1,f
  5050     1C34  3EFF               	addlw	-1
  5051     1C35  1D03               	skipz
  5052     1C36  2C31               	goto	u6275
  5053     1C37  0821               	movf	___lwdiv@divisor+1,w
  5054     1C38  0223               	subwf	___lwdiv@dividend+1,w
  5055     1C39  1D03               	skipz
  5056     1C3A  2C3D               	goto	u6285
  5057     1C3B  0820               	movf	___lwdiv@divisor,w
  5058     1C3C  0222               	subwf	___lwdiv@dividend,w
  5059     1C3D                     u6285:
  5060     1C3D  1C03               	skipc
  5061     1C3E  2C46               	goto	l3924
  5062     1C3F  0820               	movf	___lwdiv@divisor,w
  5063     1C40  02A2               	subwf	___lwdiv@dividend,f
  5064     1C41  0821               	movf	___lwdiv@divisor+1,w
  5065     1C42  1C03               	skipc
  5066     1C43  03A3               	decf	___lwdiv@dividend+1,f
  5067     1C44  02A3               	subwf	___lwdiv@dividend+1,f
  5068     1C45  1478               	bsf	___lwdiv@quotient,0
  5069     1C46                     l3924:
  5070     1C46  3001               	movlw	1
  5071     1C47                     u6295:
  5072     1C47  1003               	clrc
  5073     1C48  0CA1               	rrf	___lwdiv@divisor+1,f
  5074     1C49  0CA0               	rrf	___lwdiv@divisor,f
  5075     1C4A  3EFF               	addlw	-1
  5076     1C4B  1D03               	skipz
  5077     1C4C  2C47               	goto	u6295
  5078     1C4D  3001               	movlw	1
  5079     1C4E  02F7               	subwf	___lwdiv@counter,f
  5080     1C4F  1D03               	btfss	3,2
  5081     1C50  2C30               	goto	l3918
  5082     1C51                     l3928:
  5083     1C51  0879               	movf	___lwdiv@quotient+1,w
  5084     1C52  00A1               	movwf	?___lwdiv+1
  5085     1C53  0878               	movf	___lwdiv@quotient,w
  5086     1C54  00A0               	movwf	?___lwdiv
  5087     1C55  0008               	return
  5088     1C56                     __end_of___lwdiv:
  5089                           
  5090                           	psect	text9
  5091     1108                     __ptext9:	
  5092 ;; *************** function __tdiv_to_l_ *****************
  5093 ;; Defined at:
  5094 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftdivl.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;  f1              4    2[COMMON] float 
  5097 ;;  f2              4    6[COMMON] float 
  5098 ;; Auto vars:     Size  Location     Type
  5099 ;;  quot            4    3[BANK0 ] unsigned long 
  5100 ;;  exp1            1    8[BANK0 ] unsigned char 
  5101 ;;  cntr            1    7[BANK0 ] unsigned char 
  5102 ;; Return value:  Size  Location     Type
  5103 ;;                  4    2[COMMON] unsigned long 
  5104 ;; Registers used:
  5105 ;;		wreg, status,2, status,0, btemp+1
  5106 ;; Tracked objects:
  5107 ;;		On entry : 0/0
  5108 ;;		On exit  : 0/0
  5109 ;;		Unchanged: 0/0
  5110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5111 ;;      Params:         8       0       0       0       0
  5112 ;;      Locals:         0       6       0       0       0
  5113 ;;      Temps:          0       3       0       0       0
  5114 ;;      Totals:         8       9       0       0       0
  5115 ;;Total ram usage:       17 bytes
  5116 ;; Hardware stack levels used: 1
  5117 ;; Hardware stack levels required when called: 1
  5118 ;; This function calls:
  5119 ;;		Nothing
  5120 ;; This function is called by:
  5121 ;;		_sprintf
  5122 ;; This function uses a non-reentrant model
  5123 ;;
  5124                           
  5125     1108                     __tdiv_to_l_:	
  5126                           ;psect for function __tdiv_to_l_
  5127                           
  5128                           
  5129                           ;incstack = 0
  5130                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0+btemp+1]
  5131     1108  0872               	movf	__tdiv_to_l_@f1,w
  5132     1109  1283               	bcf	3,5	;RP0=0, select bank0
  5133     110A  1303               	bcf	3,6	;RP1=0, select bank0
  5134     110B  00A0               	movwf	??__tdiv_to_l_
  5135     110C  0873               	movf	__tdiv_to_l_@f1+1,w
  5136     110D  00A1               	movwf	??__tdiv_to_l_+1
  5137     110E  0874               	movf	__tdiv_to_l_@f1+2,w
  5138     110F  00A2               	movwf	??__tdiv_to_l_+2
  5139     1110  1003               	clrc
  5140     1111  0D21               	rlf	??__tdiv_to_l_+1,w
  5141     1112  0D22               	rlf	??__tdiv_to_l_+2,w
  5142     1113  00A8               	movwf	__tdiv_to_l_@exp1
  5143     1114  0828               	movf	__tdiv_to_l_@exp1,w
  5144     1115  1D03               	btfss	3,2
  5145     1116  2920               	goto	l2976
  5146     1117                     l2972:
  5147     1117  3000               	movlw	0
  5148     1118  00F5               	movwf	?__tdiv_to_l_+3
  5149     1119  3000               	movlw	0
  5150     111A  00F4               	movwf	?__tdiv_to_l_+2
  5151     111B  3000               	movlw	0
  5152     111C  00F3               	movwf	?__tdiv_to_l_+1
  5153     111D  3000               	movlw	0
  5154     111E  00F2               	movwf	?__tdiv_to_l_
  5155     111F  0008               	return
  5156     1120                     l2976:
  5157     1120  0876               	movf	__tdiv_to_l_@f2,w
  5158     1121  00A0               	movwf	??__tdiv_to_l_
  5159     1122  0877               	movf	__tdiv_to_l_@f2+1,w
  5160     1123  00A1               	movwf	??__tdiv_to_l_+1
  5161     1124  0878               	movf	__tdiv_to_l_@f2+2,w
  5162     1125  00A2               	movwf	??__tdiv_to_l_+2
  5163     1126  1003               	clrc
  5164     1127  0D21               	rlf	??__tdiv_to_l_+1,w
  5165     1128  0D22               	rlf	??__tdiv_to_l_+2,w
  5166     1129  00A7               	movwf	__tdiv_to_l_@cntr
  5167     112A  0827               	movf	__tdiv_to_l_@cntr,w
  5168     112B  1903               	btfsc	3,2
  5169     112C  2917               	goto	l2972
  5170     112D  17F3               	bsf	__tdiv_to_l_@f1+1,7
  5171     112E  30FF               	movlw	255
  5172     112F  05F2               	andwf	__tdiv_to_l_@f1,f
  5173     1130  30FF               	movlw	255
  5174     1131  05F3               	andwf	__tdiv_to_l_@f1+1,f
  5175     1132  3000               	movlw	0
  5176     1133  05F4               	andwf	__tdiv_to_l_@f1+2,f
  5177     1134  17F7               	bsf	__tdiv_to_l_@f2+1,7
  5178     1135  30FF               	movlw	255
  5179     1136  05F6               	andwf	__tdiv_to_l_@f2,f
  5180     1137  30FF               	movlw	255
  5181     1138  05F7               	andwf	__tdiv_to_l_@f2+1,f
  5182     1139  3000               	movlw	0
  5183     113A  05F8               	andwf	__tdiv_to_l_@f2+2,f
  5184     113B  3000               	movlw	0
  5185     113C  00A6               	movwf	__tdiv_to_l_@quot+3
  5186     113D  3000               	movlw	0
  5187     113E  00A5               	movwf	__tdiv_to_l_@quot+2
  5188     113F  3000               	movlw	0
  5189     1140  00A4               	movwf	__tdiv_to_l_@quot+1
  5190     1141  3000               	movlw	0
  5191     1142  00A3               	movwf	__tdiv_to_l_@quot
  5192     1143  307F               	movlw	127
  5193     1144  02A8               	subwf	__tdiv_to_l_@exp1,f
  5194     1145  3098               	movlw	152
  5195     1146  0727               	addwf	__tdiv_to_l_@cntr,w
  5196     1147  00A0               	movwf	??__tdiv_to_l_
  5197     1148  0820               	movf	??__tdiv_to_l_,w
  5198     1149  02A8               	subwf	__tdiv_to_l_@exp1,f
  5199     114A  3018               	movlw	24
  5200     114B  00A7               	movwf	__tdiv_to_l_@cntr
  5201     114C                     l2990:
  5202     114C  3001               	movlw	1
  5203     114D  00A0               	movwf	??__tdiv_to_l_
  5204     114E                     u4565:
  5205     114E  1003               	clrc
  5206     114F  0DA3               	rlf	__tdiv_to_l_@quot,f
  5207     1150  0DA4               	rlf	__tdiv_to_l_@quot+1,f
  5208     1151  0DA5               	rlf	__tdiv_to_l_@quot+2,f
  5209     1152  0DA6               	rlf	__tdiv_to_l_@quot+3,f
  5210     1153  0BA0               	decfsz	??__tdiv_to_l_,f
  5211     1154  294E               	goto	u4565
  5212     1155  0878               	movf	__tdiv_to_l_@f2+2,w
  5213     1156  0274               	subwf	__tdiv_to_l_@f1+2,w
  5214     1157  1D03               	skipz
  5215     1158  295F               	goto	u4575
  5216     1159  0877               	movf	__tdiv_to_l_@f2+1,w
  5217     115A  0273               	subwf	__tdiv_to_l_@f1+1,w
  5218     115B  1D03               	skipz
  5219     115C  295F               	goto	u4575
  5220     115D  0876               	movf	__tdiv_to_l_@f2,w
  5221     115E  0272               	subwf	__tdiv_to_l_@f1,w
  5222     115F                     u4575:
  5223     115F  1C03               	skipc
  5224     1160  296C               	goto	l2998
  5225     1161  0876               	movf	__tdiv_to_l_@f2,w
  5226     1162  02F2               	subwf	__tdiv_to_l_@f1,f
  5227     1163  0877               	movf	__tdiv_to_l_@f2+1,w
  5228     1164  1C03               	skipc
  5229     1165  0F77               	incfsz	__tdiv_to_l_@f2+1,w
  5230     1166  02F3               	subwf	__tdiv_to_l_@f1+1,f
  5231     1167  0878               	movf	__tdiv_to_l_@f2+2,w
  5232     1168  1C03               	skipc
  5233     1169  0A78               	incf	__tdiv_to_l_@f2+2,w
  5234     116A  02F4               	subwf	__tdiv_to_l_@f1+2,f
  5235     116B  1423               	bsf	__tdiv_to_l_@quot,0
  5236     116C                     l2998:
  5237     116C  3001               	movlw	1
  5238     116D                     u4585:
  5239     116D  1003               	clrc
  5240     116E  0DF2               	rlf	__tdiv_to_l_@f1,f
  5241     116F  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  5242     1170  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  5243     1171  3EFF               	addlw	-1
  5244     1172  1D03               	skipz
  5245     1173  296D               	goto	u4585
  5246     1174  3001               	movlw	1
  5247     1175  02A7               	subwf	__tdiv_to_l_@cntr,f
  5248     1176  1D03               	btfss	3,2
  5249     1177  294C               	goto	l2990
  5250     1178  1FA8               	btfss	__tdiv_to_l_@exp1,7
  5251     1179  298F               	goto	l3012
  5252     117A  0828               	movf	__tdiv_to_l_@exp1,w
  5253     117B  3A80               	xorlw	128
  5254     117C  3E97               	addlw	151
  5255     117D  1C03               	btfss	3,0
  5256     117E  2917               	goto	l2972
  5257     117F                     l3008:
  5258     117F  3001               	movlw	1
  5259     1180                     u4625:
  5260     1180  1003               	clrc
  5261     1181  0CA6               	rrf	__tdiv_to_l_@quot+3,f
  5262     1182  0CA5               	rrf	__tdiv_to_l_@quot+2,f
  5263     1183  0CA4               	rrf	__tdiv_to_l_@quot+1,f
  5264     1184  0CA3               	rrf	__tdiv_to_l_@quot,f
  5265     1185  3EFF               	addlw	-1
  5266     1186  1D03               	skipz
  5267     1187  2980               	goto	u4625
  5268     1188  3001               	movlw	1
  5269     1189  00FF               	movwf	127
  5270     118A  087F               	movf	127,w
  5271     118B  07A8               	addwf	__tdiv_to_l_@exp1,f
  5272     118C  1903               	btfsc	3,2
  5273     118D  29A2               	goto	l3020
  5274     118E  297F               	goto	l3008
  5275     118F                     l3012:
  5276     118F  3018               	movlw	24
  5277     1190  0228               	subwf	__tdiv_to_l_@exp1,w
  5278     1191  1803               	btfsc	3,0
  5279     1192  2917               	goto	l2972
  5280     1193                     l622:
  5281     1193  0828               	movf	__tdiv_to_l_@exp1,w
  5282     1194  1903               	btfsc	3,2
  5283     1195  29A2               	goto	l3020
  5284     1196  3001               	movlw	1
  5285     1197  00A0               	movwf	??__tdiv_to_l_
  5286     1198                     u4655:
  5287     1198  1003               	clrc
  5288     1199  0DA3               	rlf	__tdiv_to_l_@quot,f
  5289     119A  0DA4               	rlf	__tdiv_to_l_@quot+1,f
  5290     119B  0DA5               	rlf	__tdiv_to_l_@quot+2,f
  5291     119C  0DA6               	rlf	__tdiv_to_l_@quot+3,f
  5292     119D  0BA0               	decfsz	??__tdiv_to_l_,f
  5293     119E  2998               	goto	u4655
  5294     119F  3001               	movlw	1
  5295     11A0  02A8               	subwf	__tdiv_to_l_@exp1,f
  5296     11A1  2993               	goto	l622
  5297     11A2                     l3020:
  5298     11A2  0826               	movf	__tdiv_to_l_@quot+3,w
  5299     11A3  00F5               	movwf	?__tdiv_to_l_+3
  5300     11A4  0825               	movf	__tdiv_to_l_@quot+2,w
  5301     11A5  00F4               	movwf	?__tdiv_to_l_+2
  5302     11A6  0824               	movf	__tdiv_to_l_@quot+1,w
  5303     11A7  00F3               	movwf	?__tdiv_to_l_+1
  5304     11A8  0823               	movf	__tdiv_to_l_@quot,w
  5305     11A9  00F2               	movwf	?__tdiv_to_l_
  5306     11AA  0008               	return
  5307     11AB                     __end_of__tdiv_to_l_:
  5308                           
  5309                           	psect	text10
  5310     11AB                     __ptext10:	
  5311 ;; *************** function __div_to_l_ *****************
  5312 ;; Defined at:
  5313 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fldivl.c"
  5314 ;; Parameters:    Size  Location     Type
  5315 ;;  f1              4    2[COMMON] unsigned long 
  5316 ;;  f2              4    6[COMMON] unsigned long 
  5317 ;; Auto vars:     Size  Location     Type
  5318 ;;  quot            4    1[BANK0 ] unsigned long 
  5319 ;;  exp1            1    6[BANK0 ] unsigned char 
  5320 ;;  cntr            1    5[BANK0 ] unsigned char 
  5321 ;; Return value:  Size  Location     Type
  5322 ;;                  4    2[COMMON] unsigned long 
  5323 ;; Registers used:
  5324 ;;		wreg, status,2, status,0, btemp+1
  5325 ;; Tracked objects:
  5326 ;;		On entry : 0/0
  5327 ;;		On exit  : 0/0
  5328 ;;		Unchanged: 0/0
  5329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5330 ;;      Params:         8       0       0       0       0
  5331 ;;      Locals:         0       6       0       0       0
  5332 ;;      Temps:          0       1       0       0       0
  5333 ;;      Totals:         8       7       0       0       0
  5334 ;;Total ram usage:       15 bytes
  5335 ;; Hardware stack levels used: 1
  5336 ;; Hardware stack levels required when called: 1
  5337 ;; This function calls:
  5338 ;;		Nothing
  5339 ;; This function is called by:
  5340 ;;		_sprintf
  5341 ;; This function uses a non-reentrant model
  5342 ;;
  5343                           
  5344     11AB                     __div_to_l_:	
  5345                           ;psect for function __div_to_l_
  5346                           
  5347                           
  5348                           ;incstack = 0
  5349                           ; Regs used in __div_to_l_: [wreg+status,2+status,0+btemp+1]
  5350     11AB  1003               	clrc
  5351     11AC  0D74               	rlf	__div_to_l_@f1+2,w
  5352     11AD  0D75               	rlf	__div_to_l_@f1+3,w
  5353     11AE  1283               	bcf	3,5	;RP0=0, select bank0
  5354     11AF  1303               	bcf	3,6	;RP1=0, select bank0
  5355     11B0  00A6               	movwf	__div_to_l_@exp1
  5356     11B1  0826               	movf	__div_to_l_@exp1,w
  5357     11B2  1D03               	btfss	3,2
  5358     11B3  29BD               	goto	l4140
  5359     11B4                     l4136:
  5360     11B4  3000               	movlw	0
  5361     11B5  00F5               	movwf	?__div_to_l_+3
  5362     11B6  3000               	movlw	0
  5363     11B7  00F4               	movwf	?__div_to_l_+2
  5364     11B8  3000               	movlw	0
  5365     11B9  00F3               	movwf	?__div_to_l_+1
  5366     11BA  3000               	movlw	0
  5367     11BB  00F2               	movwf	?__div_to_l_
  5368     11BC  0008               	return
  5369     11BD                     l4140:
  5370     11BD  1003               	clrc
  5371     11BE  0D78               	rlf	__div_to_l_@f2+2,w
  5372     11BF  0D79               	rlf	__div_to_l_@f2+3,w
  5373     11C0  00A5               	movwf	__div_to_l_@cntr
  5374     11C1  0825               	movf	__div_to_l_@cntr,w
  5375     11C2  1903               	btfsc	3,2
  5376     11C3  29B4               	goto	l4136
  5377     11C4  17F4               	bsf	__div_to_l_@f1+2,7
  5378     11C5  30FF               	movlw	255
  5379     11C6  05F2               	andwf	__div_to_l_@f1,f
  5380     11C7  30FF               	movlw	255
  5381     11C8  05F3               	andwf	__div_to_l_@f1+1,f
  5382     11C9  30FF               	movlw	255
  5383     11CA  05F4               	andwf	__div_to_l_@f1+2,f
  5384     11CB  3000               	movlw	0
  5385     11CC  05F5               	andwf	__div_to_l_@f1+3,f
  5386     11CD  17F8               	bsf	__div_to_l_@f2+2,7
  5387     11CE  30FF               	movlw	255
  5388     11CF  05F6               	andwf	__div_to_l_@f2,f
  5389     11D0  30FF               	movlw	255
  5390     11D1  05F7               	andwf	__div_to_l_@f2+1,f
  5391     11D2  30FF               	movlw	255
  5392     11D3  05F8               	andwf	__div_to_l_@f2+2,f
  5393     11D4  3000               	movlw	0
  5394     11D5  05F9               	andwf	__div_to_l_@f2+3,f
  5395     11D6  3000               	movlw	0
  5396     11D7  00A4               	movwf	__div_to_l_@quot+3
  5397     11D8  3000               	movlw	0
  5398     11D9  00A3               	movwf	__div_to_l_@quot+2
  5399     11DA  3000               	movlw	0
  5400     11DB  00A2               	movwf	__div_to_l_@quot+1
  5401     11DC  3000               	movlw	0
  5402     11DD  00A1               	movwf	__div_to_l_@quot
  5403     11DE  307F               	movlw	127
  5404     11DF  02A6               	subwf	__div_to_l_@exp1,f
  5405     11E0  30A0               	movlw	160
  5406     11E1  0725               	addwf	__div_to_l_@cntr,w
  5407     11E2  00A0               	movwf	??__div_to_l_
  5408     11E3  0820               	movf	??__div_to_l_,w
  5409     11E4  02A6               	subwf	__div_to_l_@exp1,f
  5410     11E5  3020               	movlw	32
  5411     11E6  00A5               	movwf	__div_to_l_@cntr
  5412     11E7                     l4154:
  5413     11E7  3001               	movlw	1
  5414     11E8  00A0               	movwf	??__div_to_l_
  5415     11E9                     u6965:
  5416     11E9  1003               	clrc
  5417     11EA  0DA1               	rlf	__div_to_l_@quot,f
  5418     11EB  0DA2               	rlf	__div_to_l_@quot+1,f
  5419     11EC  0DA3               	rlf	__div_to_l_@quot+2,f
  5420     11ED  0DA4               	rlf	__div_to_l_@quot+3,f
  5421     11EE  0BA0               	decfsz	??__div_to_l_,f
  5422     11EF  29E9               	goto	u6965
  5423     11F0  0879               	movf	__div_to_l_@f2+3,w
  5424     11F1  0275               	subwf	__div_to_l_@f1+3,w
  5425     11F2  1D03               	skipz
  5426     11F3  29FE               	goto	u6975
  5427     11F4  0878               	movf	__div_to_l_@f2+2,w
  5428     11F5  0274               	subwf	__div_to_l_@f1+2,w
  5429     11F6  1D03               	skipz
  5430     11F7  29FE               	goto	u6975
  5431     11F8  0877               	movf	__div_to_l_@f2+1,w
  5432     11F9  0273               	subwf	__div_to_l_@f1+1,w
  5433     11FA  1D03               	skipz
  5434     11FB  29FE               	goto	u6975
  5435     11FC  0876               	movf	__div_to_l_@f2,w
  5436     11FD  0272               	subwf	__div_to_l_@f1,w
  5437     11FE                     u6975:
  5438     11FE  1C03               	skipc
  5439     11FF  2A0F               	goto	l4162
  5440     1200  0876               	movf	__div_to_l_@f2,w
  5441     1201  02F2               	subwf	__div_to_l_@f1,f
  5442     1202  0877               	movf	__div_to_l_@f2+1,w
  5443     1203  1C03               	skipc
  5444     1204  0F77               	incfsz	__div_to_l_@f2+1,w
  5445     1205  02F3               	subwf	__div_to_l_@f1+1,f
  5446     1206  0878               	movf	__div_to_l_@f2+2,w
  5447     1207  1C03               	skipc
  5448     1208  0F78               	incfsz	__div_to_l_@f2+2,w
  5449     1209  02F4               	subwf	__div_to_l_@f1+2,f
  5450     120A  0879               	movf	__div_to_l_@f2+3,w
  5451     120B  1C03               	skipc
  5452     120C  0F79               	incfsz	__div_to_l_@f2+3,w
  5453     120D  02F5               	subwf	__div_to_l_@f1+3,f
  5454     120E  1421               	bsf	__div_to_l_@quot,0
  5455     120F                     l4162:
  5456     120F  3001               	movlw	1
  5457     1210  00A0               	movwf	??__div_to_l_
  5458     1211                     u6985:
  5459     1211  1003               	clrc
  5460     1212  0DF2               	rlf	__div_to_l_@f1,f
  5461     1213  0DF3               	rlf	__div_to_l_@f1+1,f
  5462     1214  0DF4               	rlf	__div_to_l_@f1+2,f
  5463     1215  0DF5               	rlf	__div_to_l_@f1+3,f
  5464     1216  0BA0               	decfsz	??__div_to_l_,f
  5465     1217  2A11               	goto	u6985
  5466     1218  3001               	movlw	1
  5467     1219  02A5               	subwf	__div_to_l_@cntr,f
  5468     121A  1D03               	btfss	3,2
  5469     121B  29E7               	goto	l4154
  5470     121C  1FA6               	btfss	__div_to_l_@exp1,7
  5471     121D  2A33               	goto	l4176
  5472     121E  0826               	movf	__div_to_l_@exp1,w
  5473     121F  3A80               	xorlw	128
  5474     1220  3E9F               	addlw	159
  5475     1221  1C03               	btfss	3,0
  5476     1222  29B4               	goto	l4136
  5477     1223                     l4172:
  5478     1223  3001               	movlw	1
  5479     1224                     u7025:
  5480     1224  1003               	clrc
  5481     1225  0CA4               	rrf	__div_to_l_@quot+3,f
  5482     1226  0CA3               	rrf	__div_to_l_@quot+2,f
  5483     1227  0CA2               	rrf	__div_to_l_@quot+1,f
  5484     1228  0CA1               	rrf	__div_to_l_@quot,f
  5485     1229  3EFF               	addlw	-1
  5486     122A  1D03               	skipz
  5487     122B  2A24               	goto	u7025
  5488     122C  3001               	movlw	1
  5489     122D  00FF               	movwf	127
  5490     122E  087F               	movf	127,w
  5491     122F  07A6               	addwf	__div_to_l_@exp1,f
  5492     1230  1903               	btfsc	3,2
  5493     1231  2A46               	goto	l4184
  5494     1232  2A23               	goto	l4172
  5495     1233                     l4176:
  5496     1233  3020               	movlw	32
  5497     1234  0226               	subwf	__div_to_l_@exp1,w
  5498     1235  1803               	btfsc	3,0
  5499     1236  29B4               	goto	l4136
  5500     1237                     l575:
  5501     1237  0826               	movf	__div_to_l_@exp1,w
  5502     1238  1903               	btfsc	3,2
  5503     1239  2A46               	goto	l4184
  5504     123A  3001               	movlw	1
  5505     123B  00A0               	movwf	??__div_to_l_
  5506     123C                     u7055:
  5507     123C  1003               	clrc
  5508     123D  0DA1               	rlf	__div_to_l_@quot,f
  5509     123E  0DA2               	rlf	__div_to_l_@quot+1,f
  5510     123F  0DA3               	rlf	__div_to_l_@quot+2,f
  5511     1240  0DA4               	rlf	__div_to_l_@quot+3,f
  5512     1241  0BA0               	decfsz	??__div_to_l_,f
  5513     1242  2A3C               	goto	u7055
  5514     1243  3001               	movlw	1
  5515     1244  02A6               	subwf	__div_to_l_@exp1,f
  5516     1245  2A37               	goto	l575
  5517     1246                     l4184:
  5518     1246  0824               	movf	__div_to_l_@quot+3,w
  5519     1247  00F5               	movwf	?__div_to_l_+3
  5520     1248  0823               	movf	__div_to_l_@quot+2,w
  5521     1249  00F4               	movwf	?__div_to_l_+2
  5522     124A  0822               	movf	__div_to_l_@quot+1,w
  5523     124B  00F3               	movwf	?__div_to_l_+1
  5524     124C  0821               	movf	__div_to_l_@quot,w
  5525     124D  00F2               	movwf	?__div_to_l_
  5526     124E  0008               	return
  5527     124F                     __end_of__div_to_l_:
  5528                           
  5529                           	psect	text11
  5530     0800                     __ptext11:	
  5531 ;; *************** function ___wmul *****************
  5532 ;; Defined at:
  5533 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  5534 ;; Parameters:    Size  Location     Type
  5535 ;;  multiplier      2    2[COMMON] unsigned int 
  5536 ;;  multiplicand    2    4[COMMON] unsigned int 
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;  product         2    6[COMMON] unsigned int 
  5539 ;; Return value:  Size  Location     Type
  5540 ;;                  2    2[COMMON] unsigned int 
  5541 ;; Registers used:
  5542 ;;		wreg, status,2, status,0
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5548 ;;      Params:         4       0       0       0       0
  5549 ;;      Locals:         2       0       0       0       0
  5550 ;;      Temps:          0       0       0       0       0
  5551 ;;      Totals:         6       0       0       0       0
  5552 ;;Total ram usage:        6 bytes
  5553 ;; Hardware stack levels used: 1
  5554 ;; Hardware stack levels required when called: 1
  5555 ;; This function calls:
  5556 ;;		Nothing
  5557 ;; This function is called by:
  5558 ;;		_sprintf
  5559 ;; This function uses a non-reentrant model
  5560 ;;
  5561                           
  5562     0800                     ___wmul:	
  5563                           ;psect for function ___wmul
  5564                           
  5565                           
  5566                           ;incstack = 0
  5567                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5568     0800  01F6               	clrf	___wmul@product
  5569     0801  01F7               	clrf	___wmul@product+1
  5570     0802                     l3080:
  5571     0802  1C72               	btfss	___wmul@multiplier,0
  5572     0803  280A               	goto	l394
  5573     0804  0874               	movf	___wmul@multiplicand,w
  5574     0805  07F6               	addwf	___wmul@product,f
  5575     0806  1803               	skipnc
  5576     0807  0AF7               	incf	___wmul@product+1,f
  5577     0808  0875               	movf	___wmul@multiplicand+1,w
  5578     0809  07F7               	addwf	___wmul@product+1,f
  5579     080A                     l394:
  5580     080A  3001               	movlw	1
  5581     080B                     u4815:
  5582     080B  1003               	clrc
  5583     080C  0DF4               	rlf	___wmul@multiplicand,f
  5584     080D  0DF5               	rlf	___wmul@multiplicand+1,f
  5585     080E  3EFF               	addlw	-1
  5586     080F  1D03               	skipz
  5587     0810  280B               	goto	u4815
  5588     0811  3001               	movlw	1
  5589     0812                     u4825:
  5590     0812  1003               	clrc
  5591     0813  0CF3               	rrf	___wmul@multiplier+1,f
  5592     0814  0CF2               	rrf	___wmul@multiplier,f
  5593     0815  3EFF               	addlw	-1
  5594     0816  1D03               	skipz
  5595     0817  2812               	goto	u4825
  5596     0818  0872               	movf	___wmul@multiplier,w
  5597     0819  0473               	iorwf	___wmul@multiplier+1,w
  5598     081A  1D03               	btfss	3,2
  5599     081B  2802               	goto	l3080
  5600     081C  0877               	movf	___wmul@product+1,w
  5601     081D  00F3               	movwf	?___wmul+1
  5602     081E  0876               	movf	___wmul@product,w
  5603     081F  00F2               	movwf	?___wmul
  5604     0820  0008               	return
  5605     0821                     __end_of___wmul:
  5606                           
  5607                           	psect	text12
  5608     1D30                     __ptext12:	
  5609 ;; *************** function ___llmod *****************
  5610 ;; Defined at:
  5611 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\llmod.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;  divisor         4    6[BANK0 ] unsigned long 
  5614 ;;  dividend        4   10[BANK0 ] unsigned long 
  5615 ;; Auto vars:     Size  Location     Type
  5616 ;;  counter         1   15[BANK0 ] unsigned char 
  5617 ;; Return value:  Size  Location     Type
  5618 ;;                  4    6[BANK0 ] unsigned long 
  5619 ;; Registers used:
  5620 ;;		wreg, status,2, status,0, btemp+1
  5621 ;; Tracked objects:
  5622 ;;		On entry : 0/0
  5623 ;;		On exit  : 0/0
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5626 ;;      Params:         0       8       0       0       0
  5627 ;;      Locals:         0       1       0       0       0
  5628 ;;      Temps:          0       1       0       0       0
  5629 ;;      Totals:         0      10       0       0       0
  5630 ;;Total ram usage:       10 bytes
  5631 ;; Hardware stack levels used: 1
  5632 ;; Hardware stack levels required when called: 1
  5633 ;; This function calls:
  5634 ;;		Nothing
  5635 ;; This function is called by:
  5636 ;;		_sprintf
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640     1D30                     ___llmod:	
  5641                           ;psect for function ___llmod
  5642                           
  5643                           
  5644                           ;incstack = 0
  5645                           ; Regs used in ___llmod: [wreg+status,2+status,0+btemp+1]
  5646     1D30  1283               	bcf	3,5	;RP0=0, select bank0
  5647     1D31  1303               	bcf	3,6	;RP1=0, select bank0
  5648     1D32  0829               	movf	___llmod@divisor+3,w
  5649     1D33  0428               	iorwf	___llmod@divisor+2,w
  5650     1D34  0427               	iorwf	___llmod@divisor+1,w
  5651     1D35  0426               	iorwf	___llmod@divisor,w
  5652     1D36  1903               	skipnz
  5653     1D37  2D75               	goto	l4232
  5654     1D38  01AF               	clrf	___llmod@counter
  5655     1D39  0AAF               	incf	___llmod@counter,f
  5656     1D3A                     l4222:
  5657     1D3A  1BA9               	btfsc	___llmod@divisor+3,7
  5658     1D3B  2D4A               	goto	l4224
  5659     1D3C  3001               	movlw	1
  5660     1D3D  00AE               	movwf	??___llmod
  5661     1D3E                     u7155:
  5662     1D3E  1003               	clrc
  5663     1D3F  0DA6               	rlf	___llmod@divisor,f
  5664     1D40  0DA7               	rlf	___llmod@divisor+1,f
  5665     1D41  0DA8               	rlf	___llmod@divisor+2,f
  5666     1D42  0DA9               	rlf	___llmod@divisor+3,f
  5667     1D43  0BAE               	decfsz	??___llmod,f
  5668     1D44  2D3E               	goto	u7155
  5669     1D45  3001               	movlw	1
  5670     1D46  00FF               	movwf	127
  5671     1D47  087F               	movf	127,w
  5672     1D48  07AF               	addwf	___llmod@counter,f
  5673     1D49  2D3A               	goto	l4222
  5674     1D4A                     l4224:
  5675     1D4A  0829               	movf	___llmod@divisor+3,w
  5676     1D4B  022D               	subwf	___llmod@dividend+3,w
  5677     1D4C  1D03               	skipz
  5678     1D4D  2D58               	goto	u7175
  5679     1D4E  0828               	movf	___llmod@divisor+2,w
  5680     1D4F  022C               	subwf	___llmod@dividend+2,w
  5681     1D50  1D03               	skipz
  5682     1D51  2D58               	goto	u7175
  5683     1D52  0827               	movf	___llmod@divisor+1,w
  5684     1D53  022B               	subwf	___llmod@dividend+1,w
  5685     1D54  1D03               	skipz
  5686     1D55  2D58               	goto	u7175
  5687     1D56  0826               	movf	___llmod@divisor,w
  5688     1D57  022A               	subwf	___llmod@dividend,w
  5689     1D58                     u7175:
  5690     1D58  1C03               	skipc
  5691     1D59  2D68               	goto	l4228
  5692     1D5A  0826               	movf	___llmod@divisor,w
  5693     1D5B  02AA               	subwf	___llmod@dividend,f
  5694     1D5C  0827               	movf	___llmod@divisor+1,w
  5695     1D5D  1C03               	skipc
  5696     1D5E  0F27               	incfsz	___llmod@divisor+1,w
  5697     1D5F  02AB               	subwf	___llmod@dividend+1,f
  5698     1D60  0828               	movf	___llmod@divisor+2,w
  5699     1D61  1C03               	skipc
  5700     1D62  0F28               	incfsz	___llmod@divisor+2,w
  5701     1D63  02AC               	subwf	___llmod@dividend+2,f
  5702     1D64  0829               	movf	___llmod@divisor+3,w
  5703     1D65  1C03               	skipc
  5704     1D66  0F29               	incfsz	___llmod@divisor+3,w
  5705     1D67  02AD               	subwf	___llmod@dividend+3,f
  5706     1D68                     l4228:
  5707     1D68  3001               	movlw	1
  5708     1D69                     u7185:
  5709     1D69  1003               	clrc
  5710     1D6A  0CA9               	rrf	___llmod@divisor+3,f
  5711     1D6B  0CA8               	rrf	___llmod@divisor+2,f
  5712     1D6C  0CA7               	rrf	___llmod@divisor+1,f
  5713     1D6D  0CA6               	rrf	___llmod@divisor,f
  5714     1D6E  3EFF               	addlw	-1
  5715     1D6F  1D03               	skipz
  5716     1D70  2D69               	goto	u7185
  5717     1D71  3001               	movlw	1
  5718     1D72  02AF               	subwf	___llmod@counter,f
  5719     1D73  1D03               	btfss	3,2
  5720     1D74  2D4A               	goto	l4224
  5721     1D75                     l4232:
  5722     1D75  082D               	movf	___llmod@dividend+3,w
  5723     1D76  00A9               	movwf	?___llmod+3
  5724     1D77  082C               	movf	___llmod@dividend+2,w
  5725     1D78  00A8               	movwf	?___llmod+2
  5726     1D79  082B               	movf	___llmod@dividend+1,w
  5727     1D7A  00A7               	movwf	?___llmod+1
  5728     1D7B  082A               	movf	___llmod@dividend,w
  5729     1D7C  00A6               	movwf	?___llmod
  5730     1D7D  0008               	return
  5731     1D7E                     __end_of___llmod:
  5732                           
  5733                           	psect	text13
  5734     1D7E                     __ptext13:	
  5735 ;; *************** function ___lldiv *****************
  5736 ;; Defined at:
  5737 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  5738 ;; Parameters:    Size  Location     Type
  5739 ;;  divisor         4    2[COMMON] unsigned long 
  5740 ;;  dividend        4    6[COMMON] unsigned long 
  5741 ;; Auto vars:     Size  Location     Type
  5742 ;;  quotient        4    1[BANK0 ] unsigned long 
  5743 ;;  counter         1    5[BANK0 ] unsigned char 
  5744 ;; Return value:  Size  Location     Type
  5745 ;;                  4    2[COMMON] unsigned long 
  5746 ;; Registers used:
  5747 ;;		wreg, status,2, status,0, btemp+1
  5748 ;; Tracked objects:
  5749 ;;		On entry : 0/0
  5750 ;;		On exit  : 0/0
  5751 ;;		Unchanged: 0/0
  5752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5753 ;;      Params:         8       0       0       0       0
  5754 ;;      Locals:         0       5       0       0       0
  5755 ;;      Temps:          0       1       0       0       0
  5756 ;;      Totals:         8       6       0       0       0
  5757 ;;Total ram usage:       14 bytes
  5758 ;; Hardware stack levels used: 1
  5759 ;; Hardware stack levels required when called: 1
  5760 ;; This function calls:
  5761 ;;		Nothing
  5762 ;; This function is called by:
  5763 ;;		_sprintf
  5764 ;; This function uses a non-reentrant model
  5765 ;;
  5766                           
  5767     1D7E                     ___lldiv:	
  5768                           ;psect for function ___lldiv
  5769                           
  5770                           
  5771                           ;incstack = 0
  5772                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  5773     1D7E  3000               	movlw	0
  5774     1D7F  1283               	bcf	3,5	;RP0=0, select bank0
  5775     1D80  1303               	bcf	3,6	;RP1=0, select bank0
  5776     1D81  00A4               	movwf	___lldiv@quotient+3
  5777     1D82  3000               	movlw	0
  5778     1D83  00A3               	movwf	___lldiv@quotient+2
  5779     1D84  3000               	movlw	0
  5780     1D85  00A2               	movwf	___lldiv@quotient+1
  5781     1D86  3000               	movlw	0
  5782     1D87  00A1               	movwf	___lldiv@quotient
  5783     1D88  0875               	movf	___lldiv@divisor+3,w
  5784     1D89  0474               	iorwf	___lldiv@divisor+2,w
  5785     1D8A  0473               	iorwf	___lldiv@divisor+1,w
  5786     1D8B  0472               	iorwf	___lldiv@divisor,w
  5787     1D8C  1903               	skipnz
  5788     1D8D  2DD5               	goto	l4210
  5789     1D8E  01A5               	clrf	___lldiv@counter
  5790     1D8F  0AA5               	incf	___lldiv@counter,f
  5791     1D90                     l4196:
  5792     1D90  1BF5               	btfsc	___lldiv@divisor+3,7
  5793     1D91  2DA0               	goto	l4198
  5794     1D92  3001               	movlw	1
  5795     1D93  00A0               	movwf	??___lldiv
  5796     1D94                     u7085:
  5797     1D94  1003               	clrc
  5798     1D95  0DF2               	rlf	___lldiv@divisor,f
  5799     1D96  0DF3               	rlf	___lldiv@divisor+1,f
  5800     1D97  0DF4               	rlf	___lldiv@divisor+2,f
  5801     1D98  0DF5               	rlf	___lldiv@divisor+3,f
  5802     1D99  0BA0               	decfsz	??___lldiv,f
  5803     1D9A  2D94               	goto	u7085
  5804     1D9B  3001               	movlw	1
  5805     1D9C  00FF               	movwf	127
  5806     1D9D  087F               	movf	127,w
  5807     1D9E  07A5               	addwf	___lldiv@counter,f
  5808     1D9F  2D90               	goto	l4196
  5809     1DA0                     l4198:
  5810     1DA0  3001               	movlw	1
  5811     1DA1  00A0               	movwf	??___lldiv
  5812     1DA2                     u7105:
  5813     1DA2  1003               	clrc
  5814     1DA3  0DA1               	rlf	___lldiv@quotient,f
  5815     1DA4  0DA2               	rlf	___lldiv@quotient+1,f
  5816     1DA5  0DA3               	rlf	___lldiv@quotient+2,f
  5817     1DA6  0DA4               	rlf	___lldiv@quotient+3,f
  5818     1DA7  0BA0               	decfsz	??___lldiv,f
  5819     1DA8  2DA2               	goto	u7105
  5820     1DA9  0875               	movf	___lldiv@divisor+3,w
  5821     1DAA  0279               	subwf	___lldiv@dividend+3,w
  5822     1DAB  1D03               	skipz
  5823     1DAC  2DB7               	goto	u7115
  5824     1DAD  0874               	movf	___lldiv@divisor+2,w
  5825     1DAE  0278               	subwf	___lldiv@dividend+2,w
  5826     1DAF  1D03               	skipz
  5827     1DB0  2DB7               	goto	u7115
  5828     1DB1  0873               	movf	___lldiv@divisor+1,w
  5829     1DB2  0277               	subwf	___lldiv@dividend+1,w
  5830     1DB3  1D03               	skipz
  5831     1DB4  2DB7               	goto	u7115
  5832     1DB5  0872               	movf	___lldiv@divisor,w
  5833     1DB6  0276               	subwf	___lldiv@dividend,w
  5834     1DB7                     u7115:
  5835     1DB7  1C03               	skipc
  5836     1DB8  2DC8               	goto	l4206
  5837     1DB9  0872               	movf	___lldiv@divisor,w
  5838     1DBA  02F6               	subwf	___lldiv@dividend,f
  5839     1DBB  0873               	movf	___lldiv@divisor+1,w
  5840     1DBC  1C03               	skipc
  5841     1DBD  0F73               	incfsz	___lldiv@divisor+1,w
  5842     1DBE  02F7               	subwf	___lldiv@dividend+1,f
  5843     1DBF  0874               	movf	___lldiv@divisor+2,w
  5844     1DC0  1C03               	skipc
  5845     1DC1  0F74               	incfsz	___lldiv@divisor+2,w
  5846     1DC2  02F8               	subwf	___lldiv@dividend+2,f
  5847     1DC3  0875               	movf	___lldiv@divisor+3,w
  5848     1DC4  1C03               	skipc
  5849     1DC5  0F75               	incfsz	___lldiv@divisor+3,w
  5850     1DC6  02F9               	subwf	___lldiv@dividend+3,f
  5851     1DC7  1421               	bsf	___lldiv@quotient,0
  5852     1DC8                     l4206:
  5853     1DC8  3001               	movlw	1
  5854     1DC9                     u7125:
  5855     1DC9  1003               	clrc
  5856     1DCA  0CF5               	rrf	___lldiv@divisor+3,f
  5857     1DCB  0CF4               	rrf	___lldiv@divisor+2,f
  5858     1DCC  0CF3               	rrf	___lldiv@divisor+1,f
  5859     1DCD  0CF2               	rrf	___lldiv@divisor,f
  5860     1DCE  3EFF               	addlw	-1
  5861     1DCF  1D03               	skipz
  5862     1DD0  2DC9               	goto	u7125
  5863     1DD1  3001               	movlw	1
  5864     1DD2  02A5               	subwf	___lldiv@counter,f
  5865     1DD3  1D03               	btfss	3,2
  5866     1DD4  2DA0               	goto	l4198
  5867     1DD5                     l4210:
  5868     1DD5  0824               	movf	___lldiv@quotient+3,w
  5869     1DD6  00F5               	movwf	?___lldiv+3
  5870     1DD7  0823               	movf	___lldiv@quotient+2,w
  5871     1DD8  00F4               	movwf	?___lldiv+2
  5872     1DD9  0822               	movf	___lldiv@quotient+1,w
  5873     1DDA  00F3               	movwf	?___lldiv+1
  5874     1DDB  0821               	movf	___lldiv@quotient,w
  5875     1DDC  00F2               	movwf	?___lldiv
  5876     1DDD  0008               	return
  5877     1DDE                     __end_of___lldiv:
  5878                           
  5879                           	psect	text14
  5880     1DDE                     __ptext14:	
  5881 ;; *************** function ___fltol *****************
  5882 ;; Defined at:
  5883 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fltol.c"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;  f1              4   70[BANK0 ] unsigned long 
  5886 ;; Auto vars:     Size  Location     Type
  5887 ;;  exp1            1   79[BANK0 ] unsigned char 
  5888 ;;  sign1           1   78[BANK0 ] unsigned char 
  5889 ;; Return value:  Size  Location     Type
  5890 ;;                  4   70[BANK0 ] long 
  5891 ;; Registers used:
  5892 ;;		wreg, status,2, status,0, btemp+1
  5893 ;; Tracked objects:
  5894 ;;		On entry : 0/0
  5895 ;;		On exit  : 0/0
  5896 ;;		Unchanged: 0/0
  5897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5898 ;;      Params:         0       4       0       0       0
  5899 ;;      Locals:         0       2       0       0       0
  5900 ;;      Temps:          0       4       0       0       0
  5901 ;;      Totals:         0      10       0       0       0
  5902 ;;Total ram usage:       10 bytes
  5903 ;; Hardware stack levels used: 1
  5904 ;; Hardware stack levels required when called: 1
  5905 ;; This function calls:
  5906 ;;		Nothing
  5907 ;; This function is called by:
  5908 ;;		_main
  5909 ;;		_sprintf
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913     1DDE                     ___fltol:	
  5914                           ;psect for function ___fltol
  5915                           
  5916                           
  5917                           ;incstack = 0
  5918                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  5919     1DDE  1003               	clrc
  5920     1DDF  1283               	bcf	3,5	;RP0=0, select bank0
  5921     1DE0  1303               	bcf	3,6	;RP1=0, select bank0
  5922     1DE1  0D68               	rlf	___fltol@f1+2,w
  5923     1DE2  0D69               	rlf	___fltol@f1+3,w
  5924     1DE3  00EF               	movwf	___fltol@exp1
  5925     1DE4  086F               	movf	___fltol@exp1,w
  5926     1DE5  1D03               	btfss	3,2
  5927     1DE6  2DF0               	goto	l3164
  5928     1DE7                     l3160:
  5929     1DE7  3000               	movlw	0
  5930     1DE8  00E9               	movwf	?___fltol+3
  5931     1DE9  3000               	movlw	0
  5932     1DEA  00E8               	movwf	?___fltol+2
  5933     1DEB  3000               	movlw	0
  5934     1DEC  00E7               	movwf	?___fltol+1
  5935     1DED  3000               	movlw	0
  5936     1DEE  00E6               	movwf	?___fltol
  5937     1DEF  0008               	return
  5938     1DF0                     l3164:
  5939     1DF0  0866               	movf	___fltol@f1,w
  5940     1DF1  00EA               	movwf	??___fltol
  5941     1DF2  0867               	movf	___fltol@f1+1,w
  5942     1DF3  00EB               	movwf	??___fltol+1
  5943     1DF4  0868               	movf	___fltol@f1+2,w
  5944     1DF5  00EC               	movwf	??___fltol+2
  5945     1DF6  0869               	movf	___fltol@f1+3,w
  5946     1DF7  00ED               	movwf	??___fltol+3
  5947     1DF8  301F               	movlw	31
  5948     1DF9                     u5035:
  5949     1DF9  1003               	clrc
  5950     1DFA  0CED               	rrf	??___fltol+3,f
  5951     1DFB  0CEC               	rrf	??___fltol+2,f
  5952     1DFC  0CEB               	rrf	??___fltol+1,f
  5953     1DFD  0CEA               	rrf	??___fltol,f
  5954     1DFE  3EFF               	addlw	-1
  5955     1DFF  1D03               	skipz
  5956     1E00  2DF9               	goto	u5035
  5957     1E01  086A               	movf	??___fltol,w
  5958     1E02  00EE               	movwf	___fltol@sign1
  5959     1E03  17E8               	bsf	___fltol@f1+2,7
  5960     1E04  30FF               	movlw	255
  5961     1E05  05E6               	andwf	___fltol@f1,f
  5962     1E06  30FF               	movlw	255
  5963     1E07  05E7               	andwf	___fltol@f1+1,f
  5964     1E08  30FF               	movlw	255
  5965     1E09  05E8               	andwf	___fltol@f1+2,f
  5966     1E0A  3000               	movlw	0
  5967     1E0B  05E9               	andwf	___fltol@f1+3,f
  5968     1E0C  3096               	movlw	150
  5969     1E0D  02EF               	subwf	___fltol@exp1,f
  5970     1E0E  1FEF               	btfss	___fltol@exp1,7
  5971     1E0F  2E25               	goto	l3184
  5972     1E10  086F               	movf	___fltol@exp1,w
  5973     1E11  3A80               	xorlw	128
  5974     1E12  3E97               	addlw	151
  5975     1E13  1C03               	btfss	3,0
  5976     1E14  2DE7               	goto	l3160
  5977     1E15                     l3180:
  5978     1E15  3001               	movlw	1
  5979     1E16                     u5065:
  5980     1E16  1003               	clrc
  5981     1E17  0CE9               	rrf	___fltol@f1+3,f
  5982     1E18  0CE8               	rrf	___fltol@f1+2,f
  5983     1E19  0CE7               	rrf	___fltol@f1+1,f
  5984     1E1A  0CE6               	rrf	___fltol@f1,f
  5985     1E1B  3EFF               	addlw	-1
  5986     1E1C  1D03               	skipz
  5987     1E1D  2E16               	goto	u5065
  5988     1E1E  3001               	movlw	1
  5989     1E1F  00FF               	movwf	127
  5990     1E20  087F               	movf	127,w
  5991     1E21  07EF               	addwf	___fltol@exp1,f
  5992     1E22  1903               	btfsc	3,2
  5993     1E23  2E38               	goto	l3192
  5994     1E24  2E15               	goto	l3180
  5995     1E25                     l3184:
  5996     1E25  3020               	movlw	32
  5997     1E26  026F               	subwf	___fltol@exp1,w
  5998     1E27  1803               	btfsc	3,0
  5999     1E28  2DE7               	goto	l3160
  6000     1E29                     l604:
  6001     1E29  086F               	movf	___fltol@exp1,w
  6002     1E2A  1903               	btfsc	3,2
  6003     1E2B  2E38               	goto	l3192
  6004     1E2C  3001               	movlw	1
  6005     1E2D  00EA               	movwf	??___fltol
  6006     1E2E                     u5095:
  6007     1E2E  1003               	clrc
  6008     1E2F  0DE6               	rlf	___fltol@f1,f
  6009     1E30  0DE7               	rlf	___fltol@f1+1,f
  6010     1E31  0DE8               	rlf	___fltol@f1+2,f
  6011     1E32  0DE9               	rlf	___fltol@f1+3,f
  6012     1E33  0BEA               	decfsz	??___fltol,f
  6013     1E34  2E2E               	goto	u5095
  6014     1E35  3001               	movlw	1
  6015     1E36  02EF               	subwf	___fltol@exp1,f
  6016     1E37  2E29               	goto	l604
  6017     1E38                     l3192:
  6018     1E38  086E               	movf	___fltol@sign1,w
  6019     1E39  1903               	btfsc	3,2
  6020     1E3A  0008               	return
  6021     1E3B  09E6               	comf	___fltol@f1,f
  6022     1E3C  09E7               	comf	___fltol@f1+1,f
  6023     1E3D  09E8               	comf	___fltol@f1+2,f
  6024     1E3E  09E9               	comf	___fltol@f1+3,f
  6025     1E3F  0AE6               	incf	___fltol@f1,f
  6026     1E40  1903               	skipnz
  6027     1E41  0AE7               	incf	___fltol@f1+1,f
  6028     1E42  1903               	skipnz
  6029     1E43  0AE8               	incf	___fltol@f1+2,f
  6030     1E44  1903               	skipnz
  6031     1E45  0AE9               	incf	___fltol@f1+3,f
  6032     1E46  0008               	return
  6033     1E47                     __end_of___fltol:
  6034                           
  6035                           	psect	text15
  6036     1B3B                     __ptext15:	
  6037 ;; *************** function ___flsub *****************
  6038 ;; Defined at:
  6039 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcadd.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;  a               4   25[BANK0 ] long 
  6042 ;;  b               4   29[BANK0 ] long 
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;		None
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  4   25[BANK0 ] long 
  6047 ;; Registers used:
  6048 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6049 ;; Tracked objects:
  6050 ;;		On entry : 0/0
  6051 ;;		On exit  : 0/0
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6054 ;;      Params:         0       8       0       0       0
  6055 ;;      Locals:         0       0       0       0       0
  6056 ;;      Temps:          0       0       0       0       0
  6057 ;;      Totals:         0       8       0       0       0
  6058 ;;Total ram usage:        8 bytes
  6059 ;; Hardware stack levels used: 1
  6060 ;; Hardware stack levels required when called: 2
  6061 ;; This function calls:
  6062 ;;		___fladd
  6063 ;; This function is called by:
  6064 ;;		_sprintf
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068     1B3B                     ___flsub:	
  6069                           ;psect for function ___flsub
  6070                           
  6071                           
  6072                           ;incstack = 0
  6073                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6074     1B3B  3080               	movlw	128
  6075     1B3C  1283               	bcf	3,5	;RP0=0, select bank0
  6076     1B3D  1303               	bcf	3,6	;RP1=0, select bank0
  6077     1B3E  06BC               	xorwf	___flsub@a+3,f
  6078     1B3F  0840               	movf	___flsub@b+3,w
  6079     1B40  00A8               	movwf	___fladd@b+3
  6080     1B41  083F               	movf	___flsub@b+2,w
  6081     1B42  00A7               	movwf	___fladd@b+2
  6082     1B43  083E               	movf	___flsub@b+1,w
  6083     1B44  00A6               	movwf	___fladd@b+1
  6084     1B45  083D               	movf	___flsub@b,w
  6085     1B46  00A5               	movwf	___fladd@b
  6086     1B47  083C               	movf	___flsub@a+3,w
  6087     1B48  00AC               	movwf	___fladd@a+3
  6088     1B49  083B               	movf	___flsub@a+2,w
  6089     1B4A  00AB               	movwf	___fladd@a+2
  6090     1B4B  083A               	movf	___flsub@a+1,w
  6091     1B4C  00AA               	movwf	___fladd@a+1
  6092     1B4D  0839               	movf	___flsub@a,w
  6093     1B4E  00A9               	movwf	___fladd@a
  6094     1B4F  160A  118A  23FE   	fcall	___fladd
  6095     1B52  1283               	bcf	3,5	;RP0=0, select bank0
  6096     1B53  1303               	bcf	3,6	;RP1=0, select bank0
  6097     1B54  0828               	movf	?___fladd+3,w
  6098     1B55  00BC               	movwf	?___flsub+3
  6099     1B56  0827               	movf	?___fladd+2,w
  6100     1B57  00BB               	movwf	?___flsub+2
  6101     1B58  0826               	movf	?___fladd+1,w
  6102     1B59  00BA               	movwf	?___flsub+1
  6103     1B5A  0825               	movf	?___fladd,w
  6104     1B5B  00B9               	movwf	?___flsub
  6105     1B5C  0008               	return
  6106     1B5D                     __end_of___flsub:
  6107                           
  6108                           	psect	text16
  6109     13FE                     __ptext16:	
  6110 ;; *************** function ___fladd *****************
  6111 ;; Defined at:
  6112 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcadd.c"
  6113 ;; Parameters:    Size  Location     Type
  6114 ;;  b               4    5[BANK0 ] long 
  6115 ;;  a               4    9[BANK0 ] long 
  6116 ;; Auto vars:     Size  Location     Type
  6117 ;;  grs             1   24[BANK0 ] unsigned char 
  6118 ;;  bexp            1   23[BANK0 ] unsigned char 
  6119 ;;  aexp            1   22[BANK0 ] unsigned char 
  6120 ;;  signs           1   21[BANK0 ] unsigned char 
  6121 ;; Return value:  Size  Location     Type
  6122 ;;                  4    5[BANK0 ] unsigned char 
  6123 ;; Registers used:
  6124 ;;		wreg, status,2, status,0, btemp+1
  6125 ;; Tracked objects:
  6126 ;;		On entry : 0/0
  6127 ;;		On exit  : 0/0
  6128 ;;		Unchanged: 0/0
  6129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6130 ;;      Params:         0       8       0       0       0
  6131 ;;      Locals:         0       4       0       0       0
  6132 ;;      Temps:          0       8       0       0       0
  6133 ;;      Totals:         0      20       0       0       0
  6134 ;;Total ram usage:       20 bytes
  6135 ;; Hardware stack levels used: 1
  6136 ;; Hardware stack levels required when called: 1
  6137 ;; This function calls:
  6138 ;;		Nothing
  6139 ;; This function is called by:
  6140 ;;		_main
  6141 ;;		_sprintf
  6142 ;;		___flsub
  6143 ;; This function uses a non-reentrant model
  6144 ;;
  6145                           
  6146     13FE                     ___fladd:	
  6147                           ;psect for function ___fladd
  6148                           
  6149                           
  6150                           ;incstack = 0
  6151                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6152     13FE  1283               	bcf	3,5	;RP0=0, select bank0
  6153     13FF  1303               	bcf	3,6	;RP1=0, select bank0
  6154     1400  0828               	movf	___fladd@b+3,w
  6155     1401  3980               	andlw	128
  6156     1402  00B5               	movwf	___fladd@signs
  6157     1403  0828               	movf	___fladd@b+3,w
  6158     1404  00AD               	movwf	??___fladd
  6159     1405  072D               	addwf	??___fladd,w
  6160     1406  00B7               	movwf	___fladd@bexp
  6161     1407  1BA7               	btfsc	___fladd@b+2,7
  6162     1408  1437               	bsf	___fladd@bexp,0
  6163     1409  0837               	movf	___fladd@bexp,w
  6164     140A  1903               	btfsc	3,2
  6165     140B  2C1A               	goto	l2586
  6166     140C  0A37               	incf	___fladd@bexp,w
  6167     140D  1D03               	btfss	3,2
  6168     140E  2C17               	goto	l2582
  6169     140F  3000               	movlw	0
  6170     1410  00A8               	movwf	___fladd@b+3
  6171     1411  3000               	movlw	0
  6172     1412  00A7               	movwf	___fladd@b+2
  6173     1413  3000               	movlw	0
  6174     1414  00A6               	movwf	___fladd@b+1
  6175     1415  3000               	movlw	0
  6176     1416  00A5               	movwf	___fladd@b
  6177     1417                     l2582:
  6178     1417  17A7               	bsf	___fladd@b+2,7
  6179     1418  01A8               	clrf	___fladd@b+3
  6180     1419  2C22               	goto	l2588
  6181     141A                     l2586:
  6182     141A  3000               	movlw	0
  6183     141B  00A8               	movwf	___fladd@b+3
  6184     141C  3000               	movlw	0
  6185     141D  00A7               	movwf	___fladd@b+2
  6186     141E  3000               	movlw	0
  6187     141F  00A6               	movwf	___fladd@b+1
  6188     1420  3000               	movlw	0
  6189     1421  00A5               	movwf	___fladd@b
  6190     1422                     l2588:
  6191     1422  082C               	movf	___fladd@a+3,w
  6192     1423  3980               	andlw	128
  6193     1424  00B6               	movwf	___fladd@aexp
  6194     1425  0836               	movf	___fladd@aexp,w
  6195     1426  0635               	xorwf	___fladd@signs,w
  6196     1427  1D03               	btfss	3,2
  6197     1428  1735               	bsf	___fladd@signs,6
  6198     1429  082C               	movf	___fladd@a+3,w
  6199     142A  00AD               	movwf	??___fladd
  6200     142B  072D               	addwf	??___fladd,w
  6201     142C  00B6               	movwf	___fladd@aexp
  6202     142D  1BAB               	btfsc	___fladd@a+2,7
  6203     142E  1436               	bsf	___fladd@aexp,0
  6204     142F  0836               	movf	___fladd@aexp,w
  6205     1430  1903               	btfsc	3,2
  6206     1431  2C40               	goto	l2610
  6207     1432  0A36               	incf	___fladd@aexp,w
  6208     1433  1D03               	btfss	3,2
  6209     1434  2C3D               	goto	l2606
  6210     1435  3000               	movlw	0
  6211     1436  00AC               	movwf	___fladd@a+3
  6212     1437  3000               	movlw	0
  6213     1438  00AB               	movwf	___fladd@a+2
  6214     1439  3000               	movlw	0
  6215     143A  00AA               	movwf	___fladd@a+1
  6216     143B  3000               	movlw	0
  6217     143C  00A9               	movwf	___fladd@a
  6218     143D                     l2606:
  6219     143D  17AB               	bsf	___fladd@a+2,7
  6220     143E  01AC               	clrf	___fladd@a+3
  6221     143F  2C48               	goto	l721
  6222     1440                     l2610:
  6223     1440  3000               	movlw	0
  6224     1441  00AC               	movwf	___fladd@a+3
  6225     1442  3000               	movlw	0
  6226     1443  00AB               	movwf	___fladd@a+2
  6227     1444  3000               	movlw	0
  6228     1445  00AA               	movwf	___fladd@a+1
  6229     1446  3000               	movlw	0
  6230     1447  00A9               	movwf	___fladd@a
  6231     1448                     l721:
  6232     1448  0837               	movf	___fladd@bexp,w
  6233     1449  0236               	subwf	___fladd@aexp,w
  6234     144A  1803               	skipnc
  6235     144B  2C70               	goto	l2646
  6236     144C  1F35               	btfss	___fladd@signs,6
  6237     144D  2C52               	goto	l2616
  6238     144E  3080               	movlw	128
  6239     144F  00FF               	movwf	127
  6240     1450  087F               	movf	127,w
  6241     1451  06B5               	xorwf	___fladd@signs,f
  6242     1452                     l2616:
  6243     1452  0837               	movf	___fladd@bexp,w
  6244     1453  00B8               	movwf	___fladd@grs
  6245     1454  0836               	movf	___fladd@aexp,w
  6246     1455  00B7               	movwf	___fladd@bexp
  6247     1456  0838               	movf	___fladd@grs,w
  6248     1457  00B6               	movwf	___fladd@aexp
  6249     1458  0825               	movf	___fladd@b,w
  6250     1459  00B8               	movwf	___fladd@grs
  6251     145A  0829               	movf	___fladd@a,w
  6252     145B  00A5               	movwf	___fladd@b
  6253     145C  0838               	movf	___fladd@grs,w
  6254     145D  00A9               	movwf	___fladd@a
  6255     145E  0826               	movf	___fladd@b+1,w
  6256     145F  00B8               	movwf	___fladd@grs
  6257     1460  082A               	movf	___fladd@a+1,w
  6258     1461  00A6               	movwf	___fladd@b+1
  6259     1462  0838               	movf	___fladd@grs,w
  6260     1463  00AA               	movwf	___fladd@a+1
  6261     1464  0827               	movf	___fladd@b+2,w
  6262     1465  00B8               	movwf	___fladd@grs
  6263     1466  082B               	movf	___fladd@a+2,w
  6264     1467  00A7               	movwf	___fladd@b+2
  6265     1468  0838               	movf	___fladd@grs,w
  6266     1469  00AB               	movwf	___fladd@a+2
  6267     146A  0828               	movf	___fladd@b+3,w
  6268     146B  00B8               	movwf	___fladd@grs
  6269     146C  082C               	movf	___fladd@a+3,w
  6270     146D  00A8               	movwf	___fladd@b+3
  6271     146E  0838               	movf	___fladd@grs,w
  6272     146F  00AC               	movwf	___fladd@a+3
  6273     1470                     l2646:
  6274     1470  01B8               	clrf	___fladd@grs
  6275     1471  0836               	movf	___fladd@aexp,w
  6276     1472  00AD               	movwf	??___fladd
  6277     1473  01AE               	clrf	??___fladd+1
  6278     1474  082E               	movf	??___fladd+1,w
  6279     1475  00B0               	movwf	??___fladd+3
  6280     1476  0837               	movf	___fladd@bexp,w
  6281     1477  022D               	subwf	??___fladd,w
  6282     1478  00AF               	movwf	??___fladd+2
  6283     1479  1C03               	skipc
  6284     147A  03B0               	decf	??___fladd+3,f
  6285     147B  0830               	movf	??___fladd+3,w
  6286     147C  3A80               	xorlw	128
  6287     147D  00FF               	movwf	127
  6288     147E  3080               	movlw	128
  6289     147F  027F               	subwf	127,w
  6290     1480  1D03               	skipz
  6291     1481  2C84               	goto	u3545
  6292     1482  301A               	movlw	26
  6293     1483  022F               	subwf	??___fladd+2,w
  6294     1484                     u3545:
  6295     1484  1C03               	skipc
  6296     1485  2CB7               	goto	l2664
  6297     1486  1283               	bcf	3,5	;RP0=0, select bank0
  6298     1487  1303               	bcf	3,6	;RP1=0, select bank0
  6299     1488  0828               	movf	___fladd@b+3,w
  6300     1489  0427               	iorwf	___fladd@b+2,w
  6301     148A  0426               	iorwf	___fladd@b+1,w
  6302     148B  0425               	iorwf	___fladd@b,w
  6303     148C  1903               	btfsc	3,2
  6304     148D  2C90               	goto	u3550
  6305     148E  3001               	movlw	1
  6306     148F  2C91               	goto	u3560
  6307     1490                     u3550:
  6308     1490  3000               	movlw	0
  6309     1491                     u3560:
  6310     1491  00B8               	movwf	___fladd@grs
  6311     1492  3000               	movlw	0
  6312     1493  00A8               	movwf	___fladd@b+3
  6313     1494  3000               	movlw	0
  6314     1495  00A7               	movwf	___fladd@b+2
  6315     1496  3000               	movlw	0
  6316     1497  00A6               	movwf	___fladd@b+1
  6317     1498  3000               	movlw	0
  6318     1499  00A5               	movwf	___fladd@b
  6319     149A  0836               	movf	___fladd@aexp,w
  6320     149B  00B7               	movwf	___fladd@bexp
  6321     149C  2CBD               	goto	l725
  6322     149D                     l727:
  6323     149D  1C38               	btfss	___fladd@grs,0
  6324     149E  2CA6               	goto	l2654
  6325     149F  0838               	movf	___fladd@grs,w
  6326     14A0  00AD               	movwf	??___fladd
  6327     14A1  1003               	clrc
  6328     14A2  0C2D               	rrf	??___fladd,w
  6329     14A3  3801               	iorlw	1
  6330     14A4  00B8               	movwf	___fladd@grs
  6331     14A5  2CA8               	goto	l2656
  6332     14A6                     l2654:
  6333     14A6  1003               	clrc
  6334     14A7  0CB8               	rrf	___fladd@grs,f
  6335     14A8                     l2656:
  6336     14A8  1825               	btfsc	___fladd@b,0
  6337     14A9  17B8               	bsf	___fladd@grs,7
  6338     14AA  3001               	movlw	1
  6339     14AB  00AD               	movwf	??___fladd
  6340     14AC                     u3595:
  6341     14AC  0D28               	rlf	___fladd@b+3,w
  6342     14AD  0CA8               	rrf	___fladd@b+3,f
  6343     14AE  0CA7               	rrf	___fladd@b+2,f
  6344     14AF  0CA6               	rrf	___fladd@b+1,f
  6345     14B0  0CA5               	rrf	___fladd@b,f
  6346     14B1  0BAD               	decfsz	??___fladd& (0+127),f
  6347     14B2  2CAC               	goto	u3595
  6348     14B3  3001               	movlw	1
  6349     14B4  00FF               	movwf	127
  6350     14B5  087F               	movf	127,w
  6351     14B6  07B7               	addwf	___fladd@bexp,f
  6352     14B7                     l2664:
  6353     14B7  1283               	bcf	3,5	;RP0=0, select bank0
  6354     14B8  1303               	bcf	3,6	;RP1=0, select bank0
  6355     14B9  0836               	movf	___fladd@aexp,w
  6356     14BA  0237               	subwf	___fladd@bexp,w
  6357     14BB  1C03               	skipc
  6358     14BC  2C9D               	goto	l727
  6359     14BD                     l725:
  6360     14BD  1B35               	btfsc	___fladd@signs,6
  6361     14BE  2CFC               	goto	l2690
  6362     14BF  0837               	movf	___fladd@bexp,w
  6363     14C0  1D03               	btfss	3,2
  6364     14C1  2CCB               	goto	l2672
  6365     14C2  3000               	movlw	0
  6366     14C3  00A8               	movwf	?___fladd+3
  6367     14C4  3000               	movlw	0
  6368     14C5  00A7               	movwf	?___fladd+2
  6369     14C6  3000               	movlw	0
  6370     14C7  00A6               	movwf	?___fladd+1
  6371     14C8  3000               	movlw	0
  6372     14C9  00A5               	movwf	?___fladd
  6373     14CA  0008               	return
  6374     14CB                     l2672:
  6375     14CB  0829               	movf	___fladd@a,w
  6376     14CC  07A5               	addwf	___fladd@b,f
  6377     14CD  082A               	movf	___fladd@a+1,w
  6378     14CE  1103               	clrz
  6379     14CF  1803               	skipnc
  6380     14D0  3E01               	addlw	1
  6381     14D1  1D03               	btfss	3,2
  6382     14D2  07A6               	addwf	___fladd@b+1,f
  6383     14D3  082B               	movf	___fladd@a+2,w
  6384     14D4  1103               	clrz
  6385     14D5  1803               	skipnc
  6386     14D6  3E01               	addlw	1
  6387     14D7  1D03               	btfss	3,2
  6388     14D8  07A7               	addwf	___fladd@b+2,f
  6389     14D9  082C               	movf	___fladd@a+3,w
  6390     14DA  1103               	clrz
  6391     14DB  1803               	skipnc
  6392     14DC  3E01               	addlw	1
  6393     14DD  1D03               	btfss	3,2
  6394     14DE  07A8               	addwf	___fladd@b+3,f
  6395     14DF  1C28               	btfss	___fladd@b+3,0
  6396     14E0  2D9E               	goto	l2726
  6397     14E1  1C38               	btfss	___fladd@grs,0
  6398     14E2  2CEA               	goto	l2680
  6399     14E3  0838               	movf	___fladd@grs,w
  6400     14E4  00AD               	movwf	??___fladd
  6401     14E5  1003               	clrc
  6402     14E6  0C2D               	rrf	??___fladd,w
  6403     14E7  3801               	iorlw	1
  6404     14E8  00B8               	movwf	___fladd@grs
  6405     14E9  2CEC               	goto	l2682
  6406     14EA                     l2680:
  6407     14EA  1003               	clrc
  6408     14EB  0CB8               	rrf	___fladd@grs,f
  6409     14EC                     l2682:
  6410     14EC  1825               	btfsc	___fladd@b,0
  6411     14ED  17B8               	bsf	___fladd@grs,7
  6412     14EE  3001               	movlw	1
  6413     14EF  00AD               	movwf	??___fladd
  6414     14F0                     u3675:
  6415     14F0  0D28               	rlf	___fladd@b+3,w
  6416     14F1  0CA8               	rrf	___fladd@b+3,f
  6417     14F2  0CA7               	rrf	___fladd@b+2,f
  6418     14F3  0CA6               	rrf	___fladd@b+1,f
  6419     14F4  0CA5               	rrf	___fladd@b,f
  6420     14F5  0BAD               	decfsz	??___fladd& (0+127),f
  6421     14F6  2CF0               	goto	u3675
  6422     14F7  3001               	movlw	1
  6423     14F8  00FF               	movwf	127
  6424     14F9  087F               	movf	127,w
  6425     14FA  07B7               	addwf	___fladd@bexp,f
  6426     14FB  2D9E               	goto	l2726
  6427     14FC                     l2690:
  6428     14FC  0828               	movf	___fladd@b+3,w
  6429     14FD  3A80               	xorlw	128
  6430     14FE  00FF               	movwf	127
  6431     14FF  082C               	movf	___fladd@a+3,w
  6432     1500  3A80               	xorlw	128
  6433     1501  027F               	subwf	127,w
  6434     1502  1D03               	skipz
  6435     1503  2D0E               	goto	u3683
  6436     1504  082B               	movf	___fladd@a+2,w
  6437     1505  0227               	subwf	___fladd@b+2,w
  6438     1506  1D03               	skipz
  6439     1507  2D0E               	goto	u3683
  6440     1508  082A               	movf	___fladd@a+1,w
  6441     1509  0226               	subwf	___fladd@b+1,w
  6442     150A  1D03               	skipz
  6443     150B  2D0E               	goto	u3683
  6444     150C  0829               	movf	___fladd@a,w
  6445     150D  0225               	subwf	___fladd@b,w
  6446     150E                     u3683:
  6447     150E  1803               	skipnc
  6448     150F  2D66               	goto	l2702
  6449     1510  30FF               	movlw	255
  6450     1511  00AD               	movwf	??___fladd
  6451     1512  30FF               	movlw	255
  6452     1513  00AE               	movwf	??___fladd+1
  6453     1514  30FF               	movlw	255
  6454     1515  00AF               	movwf	??___fladd+2
  6455     1516  30FF               	movlw	255
  6456     1517  00B0               	movwf	??___fladd+3
  6457     1518  0829               	movf	___fladd@a,w
  6458     1519  00B1               	movwf	??___fladd+4
  6459     151A  082A               	movf	___fladd@a+1,w
  6460     151B  00B2               	movwf	??___fladd+5
  6461     151C  082B               	movf	___fladd@a+2,w
  6462     151D  00B3               	movwf	??___fladd+6
  6463     151E  082C               	movf	___fladd@a+3,w
  6464     151F  00B4               	movwf	??___fladd+7
  6465     1520  0825               	movf	___fladd@b,w
  6466     1521  02B1               	subwf	??___fladd+4,f
  6467     1522  0826               	movf	___fladd@b+1,w
  6468     1523  1C03               	skipc
  6469     1524  0F26               	incfsz	___fladd@b+1,w
  6470     1525  2D27               	goto	u3691
  6471     1526  2D28               	goto	u3692
  6472     1527                     u3691:
  6473     1527  02B2               	subwf	??___fladd+5,f
  6474     1528                     u3692:
  6475     1528  0827               	movf	___fladd@b+2,w
  6476     1529  1C03               	skipc
  6477     152A  0F27               	incfsz	___fladd@b+2,w
  6478     152B  2D2D               	goto	u3693
  6479     152C  2D2E               	goto	u3694
  6480     152D                     u3693:
  6481     152D  02B3               	subwf	??___fladd+6,f
  6482     152E                     u3694:
  6483     152E  0828               	movf	___fladd@b+3,w
  6484     152F  1C03               	skipc
  6485     1530  0F28               	incfsz	___fladd@b+3,w
  6486     1531  2D33               	goto	u3695
  6487     1532  2D34               	goto	u3696
  6488     1533                     u3695:
  6489     1533  02B4               	subwf	??___fladd+7,f
  6490     1534                     u3696:
  6491     1534  0831               	movf	??___fladd+4,w
  6492     1535  07AD               	addwf	??___fladd,f
  6493     1536  0832               	movf	??___fladd+5,w
  6494     1537  1803               	skipnc
  6495     1538  0F32               	incfsz	??___fladd+5,w
  6496     1539  2D3B               	goto	u3700
  6497     153A  2D3C               	goto	u3701
  6498     153B                     u3700:
  6499     153B  07AE               	addwf	??___fladd+1,f
  6500     153C                     u3701:
  6501     153C  0833               	movf	??___fladd+6,w
  6502     153D  1803               	skipnc
  6503     153E  0F33               	incfsz	??___fladd+6,w
  6504     153F  2D41               	goto	u3702
  6505     1540  2D42               	goto	u3703
  6506     1541                     u3702:
  6507     1541  07AF               	addwf	??___fladd+2,f
  6508     1542                     u3703:
  6509     1542  0834               	movf	??___fladd+7,w
  6510     1543  1803               	skipnc
  6511     1544  0A34               	incf	??___fladd+7,w
  6512     1545  07B0               	addwf	??___fladd+3,f
  6513     1546  0830               	movf	??___fladd+3,w
  6514     1547  00A8               	movwf	___fladd@b+3
  6515     1548  082F               	movf	??___fladd+2,w
  6516     1549  00A7               	movwf	___fladd@b+2
  6517     154A  082E               	movf	??___fladd+1,w
  6518     154B  00A6               	movwf	___fladd@b+1
  6519     154C  082D               	movf	??___fladd,w
  6520     154D  00A5               	movwf	___fladd@b
  6521     154E  3080               	movlw	128
  6522     154F  00FF               	movwf	127
  6523     1550  087F               	movf	127,w
  6524     1551  06B5               	xorwf	___fladd@signs,f
  6525     1552  09B8               	comf	___fladd@grs,f
  6526     1553  0AB8               	incf	___fladd@grs,f
  6527     1554  0838               	movf	___fladd@grs,w
  6528     1555  1D03               	btfss	3,2
  6529     1556  2D74               	goto	l742
  6530     1557  3001               	movlw	1
  6531     1558  07A5               	addwf	___fladd@b,f
  6532     1559  3000               	movlw	0
  6533     155A  1803               	skipnc
  6534     155B  3001               	movlw	1
  6535     155C  07A6               	addwf	___fladd@b+1,f
  6536     155D  3000               	movlw	0
  6537     155E  1803               	skipnc
  6538     155F  3001               	movlw	1
  6539     1560  07A7               	addwf	___fladd@b+2,f
  6540     1561  3000               	movlw	0
  6541     1562  1803               	skipnc
  6542     1563  3001               	movlw	1
  6543     1564  07A8               	addwf	___fladd@b+3,f
  6544     1565  2D74               	goto	l742
  6545     1566                     l2702:
  6546     1566  0829               	movf	___fladd@a,w
  6547     1567  02A5               	subwf	___fladd@b,f
  6548     1568  082A               	movf	___fladd@a+1,w
  6549     1569  1C03               	skipc
  6550     156A  0F2A               	incfsz	___fladd@a+1,w
  6551     156B  02A6               	subwf	___fladd@b+1,f
  6552     156C  082B               	movf	___fladd@a+2,w
  6553     156D  1C03               	skipc
  6554     156E  0F2B               	incfsz	___fladd@a+2,w
  6555     156F  02A7               	subwf	___fladd@b+2,f
  6556     1570  082C               	movf	___fladd@a+3,w
  6557     1571  1C03               	skipc
  6558     1572  0F2C               	incfsz	___fladd@a+3,w
  6559     1573  02A8               	subwf	___fladd@b+3,f
  6560     1574                     l742:
  6561     1574  0828               	movf	___fladd@b+3,w
  6562     1575  0427               	iorwf	___fladd@b+2,w
  6563     1576  0426               	iorwf	___fladd@b+1,w
  6564     1577  0425               	iorwf	___fladd@b,w
  6565     1578  1D03               	skipz
  6566     1579  2D9C               	goto	l2724
  6567     157A  0838               	movf	___fladd@grs,w
  6568     157B  1D03               	btfss	3,2
  6569     157C  2D9C               	goto	l2724
  6570     157D  3000               	movlw	0
  6571     157E  00A8               	movwf	?___fladd+3
  6572     157F  3000               	movlw	0
  6573     1580  00A7               	movwf	?___fladd+2
  6574     1581  3000               	movlw	0
  6575     1582  00A6               	movwf	?___fladd+1
  6576     1583  3000               	movlw	0
  6577     1584  00A5               	movwf	?___fladd
  6578     1585  0008               	return
  6579     1586                     l2710:
  6580     1586  3001               	movlw	1
  6581     1587  00AD               	movwf	??___fladd
  6582     1588                     u3745:
  6583     1588  1003               	clrc
  6584     1589  0DA5               	rlf	___fladd@b,f
  6585     158A  0DA6               	rlf	___fladd@b+1,f
  6586     158B  0DA7               	rlf	___fladd@b+2,f
  6587     158C  0DA8               	rlf	___fladd@b+3,f
  6588     158D  0BAD               	decfsz	??___fladd,f
  6589     158E  2D88               	goto	u3745
  6590     158F  1BB8               	btfsc	___fladd@grs,7
  6591     1590  1425               	bsf	___fladd@b,0
  6592     1591  1C38               	btfss	___fladd@grs,0
  6593     1592  2D95               	goto	l2718
  6594     1593  1403               	setc
  6595     1594  2D96               	goto	L8
  6596     1595                     l2718:
  6597     1595  1003               	clrc
  6598     1596                     L8:
  6599     1596  0DB8               	rlf	___fladd@grs,f
  6600     1597  0837               	movf	___fladd@bexp,w
  6601     1598  1903               	btfsc	3,2
  6602     1599  2D9C               	goto	l2724
  6603     159A  3001               	movlw	1
  6604     159B  02B7               	subwf	___fladd@bexp,f
  6605     159C                     l2724:
  6606     159C  1FA7               	btfss	___fladd@b+2,7
  6607     159D  2D86               	goto	l2710
  6608     159E                     l2726:
  6609     159E  01B6               	clrf	___fladd@aexp
  6610     159F  1FB8               	btfss	___fladd@grs,7
  6611     15A0  2DA9               	goto	l2736
  6612     15A1  0838               	movf	___fladd@grs,w
  6613     15A2  397F               	andlw	127
  6614     15A3  1903               	btfsc	3,2
  6615     15A4  1825               	btfsc	___fladd@b,0
  6616     15A5  2DA7               	goto	l2732
  6617     15A6  2DA9               	goto	l2736
  6618     15A7                     l2732:
  6619     15A7  01B6               	clrf	___fladd@aexp
  6620     15A8  0AB6               	incf	___fladd@aexp,f
  6621     15A9                     l2736:
  6622     15A9  0836               	movf	___fladd@aexp,w
  6623     15AA  1903               	btfsc	3,2
  6624     15AB  2DDC               	goto	l2746
  6625     15AC  3001               	movlw	1
  6626     15AD  07A5               	addwf	___fladd@b,f
  6627     15AE  3000               	movlw	0
  6628     15AF  1803               	skipnc
  6629     15B0  3001               	movlw	1
  6630     15B1  07A6               	addwf	___fladd@b+1,f
  6631     15B2  3000               	movlw	0
  6632     15B3  1803               	skipnc
  6633     15B4  3001               	movlw	1
  6634     15B5  07A7               	addwf	___fladd@b+2,f
  6635     15B6  3000               	movlw	0
  6636     15B7  1803               	skipnc
  6637     15B8  3001               	movlw	1
  6638     15B9  07A8               	addwf	___fladd@b+3,f
  6639     15BA  1C28               	btfss	___fladd@b+3,0
  6640     15BB  2DDC               	goto	l2746
  6641     15BC  0825               	movf	___fladd@b,w
  6642     15BD  00AD               	movwf	??___fladd
  6643     15BE  0826               	movf	___fladd@b+1,w
  6644     15BF  00AE               	movwf	??___fladd+1
  6645     15C0  0827               	movf	___fladd@b+2,w
  6646     15C1  00AF               	movwf	??___fladd+2
  6647     15C2  0828               	movf	___fladd@b+3,w
  6648     15C3  00B0               	movwf	??___fladd+3
  6649     15C4  3001               	movlw	1
  6650     15C5  00B1               	movwf	??___fladd+4
  6651     15C6                     u3845:
  6652     15C6  0D30               	rlf	??___fladd+3,w
  6653     15C7  0CB0               	rrf	??___fladd+3,f
  6654     15C8  0CAF               	rrf	??___fladd+2,f
  6655     15C9  0CAE               	rrf	??___fladd+1,f
  6656     15CA  0CAD               	rrf	??___fladd,f
  6657     15CB  0BB1               	decfsz	??___fladd+4,f
  6658     15CC  2DC6               	goto	u3845
  6659     15CD  0830               	movf	??___fladd+3,w
  6660     15CE  00A8               	movwf	___fladd@b+3
  6661     15CF  082F               	movf	??___fladd+2,w
  6662     15D0  00A7               	movwf	___fladd@b+2
  6663     15D1  082E               	movf	??___fladd+1,w
  6664     15D2  00A6               	movwf	___fladd@b+1
  6665     15D3  082D               	movf	??___fladd,w
  6666     15D4  00A5               	movwf	___fladd@b
  6667     15D5  0A37               	incf	___fladd@bexp,w
  6668     15D6  1903               	btfsc	3,2
  6669     15D7  2DDC               	goto	l2746
  6670     15D8  3001               	movlw	1
  6671     15D9  00FF               	movwf	127
  6672     15DA  087F               	movf	127,w
  6673     15DB  07B7               	addwf	___fladd@bexp,f
  6674     15DC                     l2746:
  6675     15DC  0A37               	incf	___fladd@bexp,w
  6676     15DD  1D03               	btfss	3,2
  6677     15DE  0837               	movf	___fladd@bexp,w
  6678     15DF  1D03               	btfss	3,2
  6679     15E0  2DEC               	goto	l2756
  6680     15E1  3000               	movlw	0
  6681     15E2  00A8               	movwf	___fladd@b+3
  6682     15E3  3000               	movlw	0
  6683     15E4  00A7               	movwf	___fladd@b+2
  6684     15E5  3000               	movlw	0
  6685     15E6  00A6               	movwf	___fladd@b+1
  6686     15E7  3000               	movlw	0
  6687     15E8  00A5               	movwf	___fladd@b
  6688     15E9  0837               	movf	___fladd@bexp,w
  6689     15EA  1903               	btfsc	3,2
  6690     15EB  01B5               	clrf	___fladd@signs
  6691     15EC                     l2756:
  6692     15EC  1C37               	btfss	___fladd@bexp,0
  6693     15ED  2DF0               	goto	l2760
  6694     15EE  17A7               	bsf	___fladd@b+2,7
  6695     15EF  2DF4               	goto	l2762
  6696     15F0                     l2760:
  6697     15F0  307F               	movlw	127
  6698     15F1  00FF               	movwf	127
  6699     15F2  087F               	movf	127,w
  6700     15F3  05A7               	andwf	___fladd@b+2,f
  6701     15F4                     l2762:
  6702     15F4  0837               	movf	___fladd@bexp,w
  6703     15F5  00AD               	movwf	??___fladd
  6704     15F6  1003               	clrc
  6705     15F7  0C2D               	rrf	??___fladd,w
  6706     15F8  00A8               	movwf	___fladd@b+3
  6707     15F9  1FB5               	btfss	___fladd@signs,7
  6708     15FA  0008               	return
  6709     15FB  17A8               	bsf	___fladd@b+3,7
  6710     15FC  0008               	return
  6711     15FD                     __end_of___fladd:
  6712                           
  6713                           	psect	text17
  6714     1ABC                     __ptext17:	
  6715 ;; *************** function ___flneg *****************
  6716 ;; Defined at:
  6717 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\flneg.c"
  6718 ;; Parameters:    Size  Location     Type
  6719 ;;  f1              4    2[COMMON] unsigned char 
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;		None
  6722 ;; Return value:  Size  Location     Type
  6723 ;;                  4    2[COMMON] unsigned char 
  6724 ;; Registers used:
  6725 ;;		wreg
  6726 ;; Tracked objects:
  6727 ;;		On entry : 0/0
  6728 ;;		On exit  : 0/0
  6729 ;;		Unchanged: 0/0
  6730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6731 ;;      Params:         4       0       0       0       0
  6732 ;;      Locals:         0       0       0       0       0
  6733 ;;      Temps:          0       0       0       0       0
  6734 ;;      Totals:         4       0       0       0       0
  6735 ;;Total ram usage:        4 bytes
  6736 ;; Hardware stack levels used: 1
  6737 ;; Hardware stack levels required when called: 1
  6738 ;; This function calls:
  6739 ;;		Nothing
  6740 ;; This function is called by:
  6741 ;;		_sprintf
  6742 ;; This function uses a non-reentrant model
  6743 ;;
  6744                           
  6745     1ABC                     ___flneg:	
  6746                           ;psect for function ___flneg
  6747                           
  6748                           
  6749                           ;incstack = 0
  6750                           ; Regs used in ___flneg: [wreg]
  6751     1ABC  0875               	movf	___flneg@f1+3,w
  6752     1ABD  0474               	iorwf	___flneg@f1+2,w
  6753     1ABE  0473               	iorwf	___flneg@f1+1,w
  6754     1ABF  0472               	iorwf	___flneg@f1,w
  6755     1AC0  1903               	skipnz
  6756     1AC1  0008               	return
  6757     1AC2  3080               	movlw	128
  6758     1AC3  06F5               	xorwf	___flneg@f1+3,f
  6759     1AC4  0008               	return
  6760     1AC5                     __end_of___flneg:
  6761                           
  6762                           	psect	text18
  6763     1EC8                     __ptext18:	
  6764 ;; *************** function ___flge *****************
  6765 ;; Defined at:
  6766 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\flge.c"
  6767 ;; Parameters:    Size  Location     Type
  6768 ;;  ff1             4    2[COMMON] unsigned char 
  6769 ;;  ff2             4    6[COMMON] unsigned char 
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;		None
  6772 ;; Return value:  Size  Location     Type
  6773 ;;		None               void
  6774 ;; Registers used:
  6775 ;;		wreg, status,2, status,0
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6781 ;;      Params:         8       0       0       0       0
  6782 ;;      Locals:         0       0       0       0       0
  6783 ;;      Temps:          0       4       0       0       0
  6784 ;;      Totals:         8       4       0       0       0
  6785 ;;Total ram usage:       12 bytes
  6786 ;; Hardware stack levels used: 1
  6787 ;; Hardware stack levels required when called: 1
  6788 ;; This function calls:
  6789 ;;		Nothing
  6790 ;; This function is called by:
  6791 ;;		_main
  6792 ;;		_sprintf
  6793 ;; This function uses a non-reentrant model
  6794 ;;
  6795                           
  6796     1EC8                     ___flge:	
  6797                           ;psect for function ___flge
  6798                           
  6799                           
  6800                           ;incstack = 0
  6801                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6802     1EC8  3000               	movlw	0
  6803     1EC9  0572               	andwf	___flge@ff1,w
  6804     1ECA  1283               	bcf	3,5	;RP0=0, select bank0
  6805     1ECB  1303               	bcf	3,6	;RP1=0, select bank0
  6806     1ECC  00A0               	movwf	??___flge
  6807     1ECD  3000               	movlw	0
  6808     1ECE  0573               	andwf	___flge@ff1+1,w
  6809     1ECF  00A1               	movwf	??___flge+1
  6810     1ED0  3080               	movlw	128
  6811     1ED1  0574               	andwf	___flge@ff1+2,w
  6812     1ED2  00A2               	movwf	??___flge+2
  6813     1ED3  307F               	movlw	127
  6814     1ED4  0575               	andwf	___flge@ff1+3,w
  6815     1ED5  00A3               	movwf	??___flge+3
  6816     1ED6  0823               	movf	??___flge+3,w
  6817     1ED7  0422               	iorwf	??___flge+2,w
  6818     1ED8  0421               	iorwf	??___flge+1,w
  6819     1ED9  0420               	iorwf	??___flge,w
  6820     1EDA  1D03               	skipz
  6821     1EDB  2EE4               	goto	l585
  6822     1EDC  3000               	movlw	0
  6823     1EDD  00F5               	movwf	___flge@ff1+3
  6824     1EDE  3000               	movlw	0
  6825     1EDF  00F4               	movwf	___flge@ff1+2
  6826     1EE0  3000               	movlw	0
  6827     1EE1  00F3               	movwf	___flge@ff1+1
  6828     1EE2  3000               	movlw	0
  6829     1EE3  00F2               	movwf	___flge@ff1
  6830     1EE4                     l585:
  6831     1EE4  3000               	movlw	0
  6832     1EE5  0576               	andwf	___flge@ff2,w
  6833     1EE6  00A0               	movwf	??___flge
  6834     1EE7  3000               	movlw	0
  6835     1EE8  0577               	andwf	___flge@ff2+1,w
  6836     1EE9  00A1               	movwf	??___flge+1
  6837     1EEA  3080               	movlw	128
  6838     1EEB  0578               	andwf	___flge@ff2+2,w
  6839     1EEC  00A2               	movwf	??___flge+2
  6840     1EED  307F               	movlw	127
  6841     1EEE  0579               	andwf	___flge@ff2+3,w
  6842     1EEF  00A3               	movwf	??___flge+3
  6843     1EF0  0823               	movf	??___flge+3,w
  6844     1EF1  0422               	iorwf	??___flge+2,w
  6845     1EF2  0421               	iorwf	??___flge+1,w
  6846     1EF3  0420               	iorwf	??___flge,w
  6847     1EF4  1D03               	skipz
  6848     1EF5  2EFE               	goto	l3136
  6849     1EF6  3000               	movlw	0
  6850     1EF7  00F9               	movwf	___flge@ff2+3
  6851     1EF8  3000               	movlw	0
  6852     1EF9  00F8               	movwf	___flge@ff2+2
  6853     1EFA  3000               	movlw	0
  6854     1EFB  00F7               	movwf	___flge@ff2+1
  6855     1EFC  3000               	movlw	0
  6856     1EFD  00F6               	movwf	___flge@ff2
  6857     1EFE                     l3136:
  6858     1EFE  1FF5               	btfss	___flge@ff1+3,7
  6859     1EFF  2F24               	goto	l3140
  6860     1F00  3000               	movlw	0
  6861     1F01  00A0               	movwf	??___flge
  6862     1F02  3000               	movlw	0
  6863     1F03  00A1               	movwf	??___flge+1
  6864     1F04  3000               	movlw	0
  6865     1F05  00A2               	movwf	??___flge+2
  6866     1F06  3080               	movlw	128
  6867     1F07  00A3               	movwf	??___flge+3
  6868     1F08  0872               	movf	___flge@ff1,w
  6869     1F09  02A0               	subwf	??___flge,f
  6870     1F0A  0873               	movf	___flge@ff1+1,w
  6871     1F0B  1C03               	skipc
  6872     1F0C  0F73               	incfsz	___flge@ff1+1,w
  6873     1F0D  2F0F               	goto	u4971
  6874     1F0E  2F10               	goto	u4972
  6875     1F0F                     u4971:
  6876     1F0F  02A1               	subwf	??___flge+1,f
  6877     1F10                     u4972:
  6878     1F10  0874               	movf	___flge@ff1+2,w
  6879     1F11  1C03               	skipc
  6880     1F12  0F74               	incfsz	___flge@ff1+2,w
  6881     1F13  2F15               	goto	u4973
  6882     1F14  2F16               	goto	u4974
  6883     1F15                     u4973:
  6884     1F15  02A2               	subwf	??___flge+2,f
  6885     1F16                     u4974:
  6886     1F16  0875               	movf	___flge@ff1+3,w
  6887     1F17  1C03               	skipc
  6888     1F18  0F75               	incfsz	___flge@ff1+3,w
  6889     1F19  2F1B               	goto	u4975
  6890     1F1A  2F1C               	goto	u4976
  6891     1F1B                     u4975:
  6892     1F1B  02A3               	subwf	??___flge+3,f
  6893     1F1C                     u4976:
  6894     1F1C  0823               	movf	??___flge+3,w
  6895     1F1D  00F5               	movwf	___flge@ff1+3
  6896     1F1E  0822               	movf	??___flge+2,w
  6897     1F1F  00F4               	movwf	___flge@ff1+2
  6898     1F20  0821               	movf	??___flge+1,w
  6899     1F21  00F3               	movwf	___flge@ff1+1
  6900     1F22  0820               	movf	??___flge,w
  6901     1F23  00F2               	movwf	___flge@ff1
  6902     1F24                     l3140:
  6903     1F24  1FF9               	btfss	___flge@ff2+3,7
  6904     1F25  2F4A               	goto	l588
  6905     1F26  3000               	movlw	0
  6906     1F27  00A0               	movwf	??___flge
  6907     1F28  3000               	movlw	0
  6908     1F29  00A1               	movwf	??___flge+1
  6909     1F2A  3000               	movlw	0
  6910     1F2B  00A2               	movwf	??___flge+2
  6911     1F2C  3080               	movlw	128
  6912     1F2D  00A3               	movwf	??___flge+3
  6913     1F2E  0876               	movf	___flge@ff2,w
  6914     1F2F  02A0               	subwf	??___flge,f
  6915     1F30  0877               	movf	___flge@ff2+1,w
  6916     1F31  1C03               	skipc
  6917     1F32  0F77               	incfsz	___flge@ff2+1,w
  6918     1F33  2F35               	goto	u4991
  6919     1F34  2F36               	goto	u4992
  6920     1F35                     u4991:
  6921     1F35  02A1               	subwf	??___flge+1,f
  6922     1F36                     u4992:
  6923     1F36  0878               	movf	___flge@ff2+2,w
  6924     1F37  1C03               	skipc
  6925     1F38  0F78               	incfsz	___flge@ff2+2,w
  6926     1F39  2F3B               	goto	u4993
  6927     1F3A  2F3C               	goto	u4994
  6928     1F3B                     u4993:
  6929     1F3B  02A2               	subwf	??___flge+2,f
  6930     1F3C                     u4994:
  6931     1F3C  0879               	movf	___flge@ff2+3,w
  6932     1F3D  1C03               	skipc
  6933     1F3E  0F79               	incfsz	___flge@ff2+3,w
  6934     1F3F  2F41               	goto	u4995
  6935     1F40  2F42               	goto	u4996
  6936     1F41                     u4995:
  6937     1F41  02A3               	subwf	??___flge+3,f
  6938     1F42                     u4996:
  6939     1F42  0823               	movf	??___flge+3,w
  6940     1F43  00F9               	movwf	___flge@ff2+3
  6941     1F44  0822               	movf	??___flge+2,w
  6942     1F45  00F8               	movwf	___flge@ff2+2
  6943     1F46  0821               	movf	??___flge+1,w
  6944     1F47  00F7               	movwf	___flge@ff2+1
  6945     1F48  0820               	movf	??___flge,w
  6946     1F49  00F6               	movwf	___flge@ff2
  6947     1F4A                     l588:
  6948     1F4A  3080               	movlw	128
  6949     1F4B  06F5               	xorwf	___flge@ff1+3,f
  6950     1F4C  3080               	movlw	128
  6951     1F4D  06F9               	xorwf	___flge@ff2+3,f
  6952     1F4E  0879               	movf	___flge@ff2+3,w
  6953     1F4F  0275               	subwf	___flge@ff1+3,w
  6954     1F50  1D03               	skipz
  6955     1F51  0008               	return
  6956     1F52  0878               	movf	___flge@ff2+2,w
  6957     1F53  0274               	subwf	___flge@ff1+2,w
  6958     1F54  1D03               	skipz
  6959     1F55  0008               	return
  6960     1F56  0877               	movf	___flge@ff2+1,w
  6961     1F57  0273               	subwf	___flge@ff1+1,w
  6962     1F58  1D03               	skipz
  6963     1F59  0008               	return
  6964     1F5A  0876               	movf	___flge@ff2,w
  6965     1F5B  0272               	subwf	___flge@ff1,w
  6966     1F5C  0008               	return
  6967     1F5D                     __end_of___flge:
  6968                           
  6969                           	psect	text19
  6970     1C9B                     __ptext19:	
  6971 ;; *************** function ___fleq *****************
  6972 ;; Defined at:
  6973 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fleq.c"
  6974 ;; Parameters:    Size  Location     Type
  6975 ;;  ff1             4    2[COMMON] unsigned char 
  6976 ;;  ff2             4    6[COMMON] unsigned char 
  6977 ;; Auto vars:     Size  Location     Type
  6978 ;;		None
  6979 ;; Return value:  Size  Location     Type
  6980 ;;		None               void
  6981 ;; Registers used:
  6982 ;;		wreg, status,2, status,0
  6983 ;; Tracked objects:
  6984 ;;		On entry : 0/0
  6985 ;;		On exit  : 0/0
  6986 ;;		Unchanged: 0/0
  6987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6988 ;;      Params:         8       0       0       0       0
  6989 ;;      Locals:         0       0       0       0       0
  6990 ;;      Temps:          0       4       0       0       0
  6991 ;;      Totals:         8       4       0       0       0
  6992 ;;Total ram usage:       12 bytes
  6993 ;; Hardware stack levels used: 1
  6994 ;; Hardware stack levels required when called: 1
  6995 ;; This function calls:
  6996 ;;		Nothing
  6997 ;; This function is called by:
  6998 ;;		_sprintf
  6999 ;; This function uses a non-reentrant model
  7000 ;;
  7001                           
  7002     1C9B                     ___fleq:	
  7003                           ;psect for function ___fleq
  7004                           
  7005                           
  7006                           ;incstack = 0
  7007                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7008     1C9B  3000               	movlw	0
  7009     1C9C  0572               	andwf	___fleq@ff1,w
  7010     1C9D  1283               	bcf	3,5	;RP0=0, select bank0
  7011     1C9E  1303               	bcf	3,6	;RP1=0, select bank0
  7012     1C9F  00A0               	movwf	??___fleq
  7013     1CA0  3000               	movlw	0
  7014     1CA1  0573               	andwf	___fleq@ff1+1,w
  7015     1CA2  00A1               	movwf	??___fleq+1
  7016     1CA3  3080               	movlw	128
  7017     1CA4  0574               	andwf	___fleq@ff1+2,w
  7018     1CA5  00A2               	movwf	??___fleq+2
  7019     1CA6  307F               	movlw	127
  7020     1CA7  0575               	andwf	___fleq@ff1+3,w
  7021     1CA8  00A3               	movwf	??___fleq+3
  7022     1CA9  0823               	movf	??___fleq+3,w
  7023     1CAA  0422               	iorwf	??___fleq+2,w
  7024     1CAB  0421               	iorwf	??___fleq+1,w
  7025     1CAC  0420               	iorwf	??___fleq,w
  7026     1CAD  1D03               	skipz
  7027     1CAE  2CB7               	goto	l580
  7028     1CAF  3000               	movlw	0
  7029     1CB0  00F5               	movwf	___fleq@ff1+3
  7030     1CB1  3000               	movlw	0
  7031     1CB2  00F4               	movwf	___fleq@ff1+2
  7032     1CB3  3000               	movlw	0
  7033     1CB4  00F3               	movwf	___fleq@ff1+1
  7034     1CB5  3000               	movlw	0
  7035     1CB6  00F2               	movwf	___fleq@ff1
  7036     1CB7                     l580:
  7037     1CB7  3000               	movlw	0
  7038     1CB8  0576               	andwf	___fleq@ff2,w
  7039     1CB9  00A0               	movwf	??___fleq
  7040     1CBA  3000               	movlw	0
  7041     1CBB  0577               	andwf	___fleq@ff2+1,w
  7042     1CBC  00A1               	movwf	??___fleq+1
  7043     1CBD  3080               	movlw	128
  7044     1CBE  0578               	andwf	___fleq@ff2+2,w
  7045     1CBF  00A2               	movwf	??___fleq+2
  7046     1CC0  307F               	movlw	127
  7047     1CC1  0579               	andwf	___fleq@ff2+3,w
  7048     1CC2  00A3               	movwf	??___fleq+3
  7049     1CC3  0823               	movf	??___fleq+3,w
  7050     1CC4  0422               	iorwf	??___fleq+2,w
  7051     1CC5  0421               	iorwf	??___fleq+1,w
  7052     1CC6  0420               	iorwf	??___fleq,w
  7053     1CC7  1D03               	skipz
  7054     1CC8  2CD1               	goto	l581
  7055     1CC9  3000               	movlw	0
  7056     1CCA  00F9               	movwf	___fleq@ff2+3
  7057     1CCB  3000               	movlw	0
  7058     1CCC  00F8               	movwf	___fleq@ff2+2
  7059     1CCD  3000               	movlw	0
  7060     1CCE  00F7               	movwf	___fleq@ff2+1
  7061     1CCF  3000               	movlw	0
  7062     1CD0  00F6               	movwf	___fleq@ff2
  7063     1CD1                     l581:
  7064     1CD1  0879               	movf	___fleq@ff2+3,w
  7065     1CD2  0675               	xorwf	___fleq@ff1+3,w
  7066     1CD3  1D03               	skipz
  7067     1CD4  2CDF               	goto	u4935
  7068     1CD5  0878               	movf	___fleq@ff2+2,w
  7069     1CD6  0674               	xorwf	___fleq@ff1+2,w
  7070     1CD7  1D03               	skipz
  7071     1CD8  2CDF               	goto	u4935
  7072     1CD9  0877               	movf	___fleq@ff2+1,w
  7073     1CDA  0673               	xorwf	___fleq@ff1+1,w
  7074     1CDB  1D03               	skipz
  7075     1CDC  2CDF               	goto	u4935
  7076     1CDD  0876               	movf	___fleq@ff2,w
  7077     1CDE  0672               	xorwf	___fleq@ff1,w
  7078     1CDF                     u4935:
  7079     1CDF  1903               	skipnz
  7080     1CE0  2CE3               	goto	l3126
  7081     1CE1  1003               	clrc
  7082     1CE2  0008               	return
  7083     1CE3                     l3126:
  7084     1CE3  1403               	setc
  7085     1CE4  0008               	return
  7086     1CE5                     __end_of___fleq:
  7087                           
  7088                           	psect	text20
  7089     1323                     __ptext20:	
  7090 ;; *************** function _lcd_init *****************
  7091 ;; Defined at:
  7092 ;;		line 47 in file "bibliotec_lcd.c"
  7093 ;; Parameters:    Size  Location     Type
  7094 ;;  lcd_pins        1    wreg     PTR struct .
  7095 ;;		 -> lcd_pins(12), 
  7096 ;; Auto vars:     Size  Location     Type
  7097 ;;  lcd_pins        1    9[COMMON] PTR struct .
  7098 ;;		 -> lcd_pins(12), 
  7099 ;; Return value:  Size  Location     Type
  7100 ;;                  1    wreg      void 
  7101 ;; Registers used:
  7102 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7103 ;; Tracked objects:
  7104 ;;		On entry : 0/0
  7105 ;;		On exit  : 0/0
  7106 ;;		Unchanged: 0/0
  7107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7108 ;;      Params:         0       0       0       0       0
  7109 ;;      Locals:         1       0       0       0       0
  7110 ;;      Temps:          0       2       0       0       0
  7111 ;;      Totals:         1       2       0       0       0
  7112 ;;Total ram usage:        3 bytes
  7113 ;; Hardware stack levels used: 1
  7114 ;; Hardware stack levels required when called: 4
  7115 ;; This function calls:
  7116 ;;		_byte
  7117 ;;		_enable
  7118 ;;		_nibble
  7119 ;; This function is called by:
  7120 ;;		_main
  7121 ;; This function uses a non-reentrant model
  7122 ;;
  7123                           
  7124     1323                     _lcd_init:	
  7125                           ;psect for function _lcd_init
  7126                           
  7127                           
  7128                           ;incstack = 0
  7129                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7130                           ;lcd_init@lcd_pins stored from wreg
  7131     1323  00F9               	movwf	lcd_init@lcd_pins
  7132                           
  7133                           ;bibliotec_lcd.c: 47: void lcd_init( lcd_pin_t *lcd_pins);bibliotec_lcd.c: 48: {;bibliot
      +                          ec_lcd.c: 50:     port_rs = lcd_pins->port_rs;
  7134     1324  0879               	movf	lcd_init@lcd_pins,w
  7135     1325  0084               	movwf	4
  7136     1326  1783               	bsf	3,7	;select IRP bank2
  7137     1327  0800               	movf	0,w
  7138     1328  1683               	bsf	3,5	;RP0=1, select bank3
  7139     1329  1703               	bsf	3,6	;RP1=1, select bank3
  7140     132A  0092               	movwf	_port_rs^(0+384)
  7141     132B  0A84               	incf	4,f
  7142     132C  0800               	movf	0,w
  7143     132D  0384               	decf	4,f
  7144     132E  0093               	movwf	(_port_rs+1)^(0+384)
  7145                           
  7146                           ;bibliotec_lcd.c: 51:     port_en = lcd_pins->port_en;
  7147     132F  0879               	movf	lcd_init@lcd_pins,w
  7148     1330  3E03               	addlw	3
  7149     1331  0084               	movwf	4
  7150     1332  0800               	movf	0,w
  7151     1333  0090               	movwf	_port_en^(0+384)
  7152     1334  0A84               	incf	4,f
  7153     1335  0800               	movf	0,w
  7154     1336  0384               	decf	4,f
  7155     1337  0091               	movwf	(_port_en+1)^(0+384)
  7156                           
  7157                           ;bibliotec_lcd.c: 52:     port_data = lcd_pins->port_data;
  7158     1338  0879               	movf	lcd_init@lcd_pins,w
  7159     1339  3E06               	addlw	6
  7160     133A  0084               	movwf	4
  7161     133B  0800               	movf	0,w
  7162     133C  1683               	bsf	3,5	;RP0=1, select bank1
  7163     133D  1303               	bcf	3,6	;RP1=0, select bank1
  7164     133E  00ED               	movwf	_port_data^(0+128)
  7165     133F  0A84               	incf	4,f
  7166     1340  0800               	movf	0,w
  7167     1341  0384               	decf	4,f
  7168     1342  00EE               	movwf	(_port_data+1)^(0+128)
  7169                           
  7170                           ;bibliotec_lcd.c: 53:     RS = lcd_pins->pino_rs;
  7171     1343  0879               	movf	lcd_init@lcd_pins,w
  7172     1344  3E02               	addlw	2
  7173     1345  0084               	movwf	4
  7174     1346  0800               	movf	0,w
  7175     1347  1283               	bcf	3,5	;RP0=0, select bank0
  7176     1348  1303               	bcf	3,6	;RP1=0, select bank0
  7177     1349  00AA               	movwf	??_lcd_init
  7178     134A  01AB               	clrf	??_lcd_init+1
  7179     134B  082A               	movf	??_lcd_init,w
  7180     134C  1683               	bsf	3,5	;RP0=1, select bank3
  7181     134D  1703               	bsf	3,6	;RP1=1, select bank3
  7182     134E  009C               	movwf	_RS^(0+384)	;volatile
  7183     134F  1283               	bcf	3,5	;RP0=0, select bank0
  7184     1350  1303               	bcf	3,6	;RP1=0, select bank0
  7185     1351  082B               	movf	??_lcd_init+1,w
  7186     1352  1683               	bsf	3,5	;RP0=1, select bank3
  7187     1353  1703               	bsf	3,6	;RP1=1, select bank3
  7188     1354  009D               	movwf	(_RS+1)^(0+384)	;volatile
  7189                           
  7190                           ;bibliotec_lcd.c: 54:     EN = lcd_pins->pino_en;
  7191     1355  0879               	movf	lcd_init@lcd_pins,w
  7192     1356  3E05               	addlw	5
  7193     1357  0084               	movwf	4
  7194     1358  0800               	movf	0,w
  7195     1359  1283               	bcf	3,5	;RP0=0, select bank0
  7196     135A  1303               	bcf	3,6	;RP1=0, select bank0
  7197     135B  00AA               	movwf	??_lcd_init
  7198     135C  01AB               	clrf	??_lcd_init+1
  7199     135D  082A               	movf	??_lcd_init,w
  7200     135E  00FA               	movwf	_EN	;volatile
  7201     135F  082B               	movf	??_lcd_init+1,w
  7202     1360  00FB               	movwf	_EN+1	;volatile
  7203                           
  7204                           ;bibliotec_lcd.c: 55:     D4 = lcd_pins->pino_d4;
  7205     1361  0879               	movf	lcd_init@lcd_pins,w
  7206     1362  3E08               	addlw	8
  7207     1363  0084               	movwf	4
  7208     1364  0800               	movf	0,w
  7209     1365  00AA               	movwf	??_lcd_init
  7210     1366  01AB               	clrf	??_lcd_init+1
  7211     1367  082A               	movf	??_lcd_init,w
  7212     1368  1683               	bsf	3,5	;RP0=1, select bank3
  7213     1369  1703               	bsf	3,6	;RP1=1, select bank3
  7214     136A  009A               	movwf	_D4^(0+384)	;volatile
  7215     136B  1283               	bcf	3,5	;RP0=0, select bank0
  7216     136C  1303               	bcf	3,6	;RP1=0, select bank0
  7217     136D  082B               	movf	??_lcd_init+1,w
  7218     136E  1683               	bsf	3,5	;RP0=1, select bank3
  7219     136F  1703               	bsf	3,6	;RP1=1, select bank3
  7220     1370  009B               	movwf	(_D4+1)^(0+384)	;volatile
  7221                           
  7222                           ;bibliotec_lcd.c: 56:     D5 = lcd_pins->pino_d5;
  7223     1371  0879               	movf	lcd_init@lcd_pins,w
  7224     1372  3E09               	addlw	9
  7225     1373  0084               	movwf	4
  7226     1374  0800               	movf	0,w
  7227     1375  1283               	bcf	3,5	;RP0=0, select bank0
  7228     1376  1303               	bcf	3,6	;RP1=0, select bank0
  7229     1377  00AA               	movwf	??_lcd_init
  7230     1378  01AB               	clrf	??_lcd_init+1
  7231     1379  082A               	movf	??_lcd_init,w
  7232     137A  1683               	bsf	3,5	;RP0=1, select bank3
  7233     137B  1703               	bsf	3,6	;RP1=1, select bank3
  7234     137C  0098               	movwf	_D5^(0+384)	;volatile
  7235     137D  1283               	bcf	3,5	;RP0=0, select bank0
  7236     137E  1303               	bcf	3,6	;RP1=0, select bank0
  7237     137F  082B               	movf	??_lcd_init+1,w
  7238     1380  1683               	bsf	3,5	;RP0=1, select bank3
  7239     1381  1703               	bsf	3,6	;RP1=1, select bank3
  7240     1382  0099               	movwf	(_D5+1)^(0+384)	;volatile
  7241                           
  7242                           ;bibliotec_lcd.c: 57:     D6 = lcd_pins->pino_d6;
  7243     1383  0879               	movf	lcd_init@lcd_pins,w
  7244     1384  3E0A               	addlw	10
  7245     1385  0084               	movwf	4
  7246     1386  0800               	movf	0,w
  7247     1387  1283               	bcf	3,5	;RP0=0, select bank0
  7248     1388  1303               	bcf	3,6	;RP1=0, select bank0
  7249     1389  00AA               	movwf	??_lcd_init
  7250     138A  01AB               	clrf	??_lcd_init+1
  7251     138B  082A               	movf	??_lcd_init,w
  7252     138C  1683               	bsf	3,5	;RP0=1, select bank3
  7253     138D  1703               	bsf	3,6	;RP1=1, select bank3
  7254     138E  0096               	movwf	_D6^(0+384)	;volatile
  7255     138F  1283               	bcf	3,5	;RP0=0, select bank0
  7256     1390  1303               	bcf	3,6	;RP1=0, select bank0
  7257     1391  082B               	movf	??_lcd_init+1,w
  7258     1392  1683               	bsf	3,5	;RP0=1, select bank3
  7259     1393  1703               	bsf	3,6	;RP1=1, select bank3
  7260     1394  0097               	movwf	(_D6+1)^(0+384)	;volatile
  7261                           
  7262                           ;bibliotec_lcd.c: 58:     D7 = lcd_pins->pino_d7;
  7263     1395  0879               	movf	lcd_init@lcd_pins,w
  7264     1396  3E0B               	addlw	11
  7265     1397  0084               	movwf	4
  7266     1398  0800               	movf	0,w
  7267     1399  1283               	bcf	3,5	;RP0=0, select bank0
  7268     139A  1303               	bcf	3,6	;RP1=0, select bank0
  7269     139B  00AA               	movwf	??_lcd_init
  7270     139C  01AB               	clrf	??_lcd_init+1
  7271     139D  082A               	movf	??_lcd_init,w
  7272     139E  1683               	bsf	3,5	;RP0=1, select bank3
  7273     139F  1703               	bsf	3,6	;RP1=1, select bank3
  7274     13A0  0094               	movwf	_D7^(0+384)	;volatile
  7275     13A1  1283               	bcf	3,5	;RP0=0, select bank0
  7276     13A2  1303               	bcf	3,6	;RP1=0, select bank0
  7277     13A3  082B               	movf	??_lcd_init+1,w
  7278     13A4  1683               	bsf	3,5	;RP0=1, select bank3
  7279     13A5  1703               	bsf	3,6	;RP1=1, select bank3
  7280     13A6  0095               	movwf	(_D7+1)^(0+384)	;volatile
  7281                           
  7282                           ;bibliotec_lcd.c: 60:     _delay((unsigned long)((50)*(4000000/4000.0)));
  7283     13A7  3041               	movlw	65
  7284     13A8  1283               	bcf	3,5	;RP0=0, select bank0
  7285     13A9  1303               	bcf	3,6	;RP1=0, select bank0
  7286     13AA  00AB               	movwf	??_lcd_init+1
  7287     13AB  30ED               	movlw	237
  7288     13AC  00AA               	movwf	??_lcd_init
  7289     13AD                     u7697:
  7290     13AD  0BAA               	decfsz	??_lcd_init,f
  7291     13AE  2BAD               	goto	u7697
  7292     13AF  0BAB               	decfsz	??_lcd_init+1,f
  7293     13B0  2BAD               	goto	u7697
  7294     13B1  2BB2               	nop2
  7295                           
  7296                           ;bibliotec_lcd.c: 61:     nibble(0x2);
  7297     13B2  3002               	movlw	2
  7298     13B3  1283               	bcf	3,5	;RP0=0, select bank0
  7299     13B4  1303               	bcf	3,6	;RP1=0, select bank0
  7300     13B5  00A0               	movwf	nibble@dado
  7301     13B6  3000               	movlw	0
  7302     13B7  00A1               	movwf	nibble@dado+1
  7303     13B8  160A  158A  2647  160A  118A  	fcall	_nibble
  7304                           
  7305                           ;bibliotec_lcd.c: 62:     enable();
  7306     13BD  160A  158A  23DF  160A  118A  	fcall	_enable
  7307                           
  7308                           ;bibliotec_lcd.c: 64:     byte(0, 0x28);
  7309     13C2  3000               	movlw	0
  7310     13C3  1283               	bcf	3,5	;RP0=0, select bank0
  7311     13C4  1303               	bcf	3,6	;RP1=0, select bank0
  7312     13C5  00A4               	movwf	byte@escreve
  7313     13C6  00A5               	movwf	byte@escreve+1
  7314     13C7  3028               	movlw	40
  7315     13C8  00A6               	movwf	byte@dado
  7316     13C9  160A  158A  2456  160A  118A  	fcall	_byte
  7317                           
  7318                           ;bibliotec_lcd.c: 65:     byte(0, 0x0C);
  7319     13CE  3000               	movlw	0
  7320     13CF  1283               	bcf	3,5	;RP0=0, select bank0
  7321     13D0  1303               	bcf	3,6	;RP1=0, select bank0
  7322     13D1  00A4               	movwf	byte@escreve
  7323     13D2  00A5               	movwf	byte@escreve+1
  7324     13D3  300C               	movlw	12
  7325     13D4  00A6               	movwf	byte@dado
  7326     13D5  160A  158A  2456  160A  118A  	fcall	_byte
  7327                           
  7328                           ;bibliotec_lcd.c: 66:     byte(0, 0x06);
  7329     13DA  3000               	movlw	0
  7330     13DB  1283               	bcf	3,5	;RP0=0, select bank0
  7331     13DC  1303               	bcf	3,6	;RP1=0, select bank0
  7332     13DD  00A4               	movwf	byte@escreve
  7333     13DE  00A5               	movwf	byte@escreve+1
  7334     13DF  3006               	movlw	6
  7335     13E0  00A6               	movwf	byte@dado
  7336     13E1  160A  158A  2456  160A  118A  	fcall	_byte
  7337                           
  7338                           ;bibliotec_lcd.c: 67:     byte(0, 0x01);
  7339     13E6  3000               	movlw	0
  7340     13E7  1283               	bcf	3,5	;RP0=0, select bank0
  7341     13E8  1303               	bcf	3,6	;RP1=0, select bank0
  7342     13E9  00A4               	movwf	byte@escreve
  7343     13EA  00A5               	movwf	byte@escreve+1
  7344     13EB  01A6               	clrf	byte@dado
  7345     13EC  0AA6               	incf	byte@dado,f
  7346     13ED  160A  158A  2456  160A  118A  	fcall	_byte
  7347                           
  7348                           ;bibliotec_lcd.c: 69:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7349     13F2  3007               	movlw	7
  7350     13F3  1283               	bcf	3,5	;RP0=0, select bank0
  7351     13F4  1303               	bcf	3,6	;RP1=0, select bank0
  7352     13F5  00AB               	movwf	??_lcd_init+1
  7353     13F6  307C               	movlw	124
  7354     13F7  00AA               	movwf	??_lcd_init
  7355     13F8                     u7707:
  7356     13F8  0BAA               	decfsz	??_lcd_init,f
  7357     13F9  2BF8               	goto	u7707
  7358     13FA  0BAB               	decfsz	??_lcd_init+1,f
  7359     13FB  2BF8               	goto	u7707
  7360     13FC  0000               	nop
  7361     13FD  0008               	return
  7362     13FE                     __end_of_lcd_init:
  7363                           
  7364                           	psect	text21
  7365     1C56                     __ptext21:	
  7366 ;; *************** function _byte *****************
  7367 ;; Defined at:
  7368 ;;		line 37 in file "bibliotec_lcd.c"
  7369 ;; Parameters:    Size  Location     Type
  7370 ;;  escreve         2    4[BANK0 ] int 
  7371 ;;  dado            1    6[BANK0 ] unsigned char 
  7372 ;; Auto vars:     Size  Location     Type
  7373 ;;		None
  7374 ;; Return value:  Size  Location     Type
  7375 ;;                  1    wreg      void 
  7376 ;; Registers used:
  7377 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7378 ;; Tracked objects:
  7379 ;;		On entry : 0/0
  7380 ;;		On exit  : 0/0
  7381 ;;		Unchanged: 0/0
  7382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7383 ;;      Params:         0       3       0       0       0
  7384 ;;      Locals:         0       0       0       0       0
  7385 ;;      Temps:          0       3       0       0       0
  7386 ;;      Totals:         0       6       0       0       0
  7387 ;;Total ram usage:        6 bytes
  7388 ;; Hardware stack levels used: 1
  7389 ;; Hardware stack levels required when called: 3
  7390 ;; This function calls:
  7391 ;;		_enable
  7392 ;;		_muda_pin
  7393 ;;		_nibble
  7394 ;; This function is called by:
  7395 ;;		_lcd_init
  7396 ;;		_limpa
  7397 ;;		_escreve
  7398 ;;		_desloca
  7399 ;;		_grava_caractere
  7400 ;;		_usa_caractere
  7401 ;; This function uses a non-reentrant model
  7402 ;;
  7403                           
  7404     1C56                     _byte:	
  7405                           ;psect for function _byte
  7406                           
  7407                           
  7408                           ;bibliotec_lcd.c: 37: void byte (int escreve, char dado);bibliotec_lcd.c: 38: {;bibliote
      +                          c_lcd.c: 39:     muda_pin(port_rs, RS, escreve & 0x01);
  7409                           
  7410                           ;incstack = 0
  7411                           ; Regs used in _byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7412     1C56  1683               	bsf	3,5	;RP0=1, select bank3
  7413     1C57  1703               	bsf	3,6	;RP1=1, select bank3
  7414     1C58  0812               	movf	_port_rs^(0+384),w
  7415     1C59  00F2               	movwf	muda_pin@_port
  7416     1C5A  0813               	movf	(_port_rs+1)^(0+384),w
  7417     1C5B  00F3               	movwf	muda_pin@_port+1
  7418     1C5C  081D               	movf	(_RS+1)^(0+384),w	;volatile
  7419     1C5D  00F5               	movwf	muda_pin@_pin+1
  7420     1C5E  081C               	movf	_RS^(0+384),w	;volatile
  7421     1C5F  00F4               	movwf	muda_pin@_pin
  7422     1C60  3001               	movlw	1
  7423     1C61  1283               	bcf	3,5	;RP0=0, select bank0
  7424     1C62  1303               	bcf	3,6	;RP1=0, select bank0
  7425     1C63  0524               	andwf	byte@escreve,w
  7426     1C64  00F6               	movwf	muda_pin@_val
  7427     1C65  3000               	movlw	0
  7428     1C66  0525               	andwf	byte@escreve+1,w
  7429     1C67  00F7               	movwf	muda_pin@_val+1
  7430     1C68  160A  158A  2382  160A  158A  	fcall	_muda_pin
  7431                           
  7432                           ;bibliotec_lcd.c: 41:     nibble(dado >> 4);
  7433     1C6D  1283               	bcf	3,5	;RP0=0, select bank0
  7434     1C6E  1303               	bcf	3,6	;RP1=0, select bank0
  7435     1C6F  0826               	movf	byte@dado,w
  7436     1C70  00A7               	movwf	??_byte
  7437     1C71  3004               	movlw	4
  7438     1C72                     u6685:
  7439     1C72  1003               	clrc
  7440     1C73  0CA7               	rrf	??_byte,f
  7441     1C74  3EFF               	addlw	-1
  7442     1C75  1D03               	skipz
  7443     1C76  2C72               	goto	u6685
  7444     1C77  0827               	movf	??_byte,w
  7445     1C78  00A8               	movwf	??_byte+1
  7446     1C79  01A9               	clrf	??_byte+2
  7447     1C7A  0828               	movf	??_byte+1,w
  7448     1C7B  00A0               	movwf	nibble@dado
  7449     1C7C  0829               	movf	??_byte+2,w
  7450     1C7D  00A1               	movwf	nibble@dado+1
  7451     1C7E  160A  158A  2647  160A  158A  	fcall	_nibble
  7452                           
  7453                           ;bibliotec_lcd.c: 42:     enable();
  7454     1C83  160A  158A  23DF  160A  158A  	fcall	_enable
  7455                           
  7456                           ;bibliotec_lcd.c: 43:     nibble(dado & 0x0F);
  7457     1C88  1283               	bcf	3,5	;RP0=0, select bank0
  7458     1C89  1303               	bcf	3,6	;RP1=0, select bank0
  7459     1C8A  0826               	movf	byte@dado,w
  7460     1C8B  390F               	andlw	15
  7461     1C8C  00A7               	movwf	??_byte
  7462     1C8D  01A8               	clrf	??_byte+1
  7463     1C8E  0827               	movf	??_byte,w
  7464     1C8F  00A0               	movwf	nibble@dado
  7465     1C90  0828               	movf	??_byte+1,w
  7466     1C91  00A1               	movwf	nibble@dado+1
  7467     1C92  160A  158A  2647  160A  158A  	fcall	_nibble
  7468                           
  7469                           ;bibliotec_lcd.c: 44:     enable();
  7470     1C97  160A  158A  23DF   	fcall	_enable
  7471     1C9A  0008               	return
  7472     1C9B                     __end_of_byte:
  7473                           
  7474                           	psect	text22
  7475     1E47                     __ptext22:	
  7476 ;; *************** function _nibble *****************
  7477 ;; Defined at:
  7478 ;;		line 28 in file "bibliotec_lcd.c"
  7479 ;; Parameters:    Size  Location     Type
  7480 ;;  dado            2    0[BANK0 ] int 
  7481 ;; Auto vars:     Size  Location     Type
  7482 ;;		None
  7483 ;; Return value:  Size  Location     Type
  7484 ;;                  1    wreg      void 
  7485 ;; Registers used:
  7486 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7487 ;; Tracked objects:
  7488 ;;		On entry : 0/0
  7489 ;;		On exit  : 0/0
  7490 ;;		Unchanged: 0/0
  7491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7492 ;;      Params:         0       2       0       0       0
  7493 ;;      Locals:         0       0       0       0       0
  7494 ;;      Temps:          0       2       0       0       0
  7495 ;;      Totals:         0       4       0       0       0
  7496 ;;Total ram usage:        4 bytes
  7497 ;; Hardware stack levels used: 1
  7498 ;; Hardware stack levels required when called: 2
  7499 ;; This function calls:
  7500 ;;		_muda_pin
  7501 ;; This function is called by:
  7502 ;;		_byte
  7503 ;;		_lcd_init
  7504 ;; This function uses a non-reentrant model
  7505 ;;
  7506                           
  7507     1E47                     _nibble:	
  7508                           ;psect for function _nibble
  7509                           
  7510                           
  7511                           ;bibliotec_lcd.c: 28: void nibble(int dado);bibliotec_lcd.c: 29: {;bibliotec_lcd.c: 30: 
      +                              muda_pin(port_data, D4, dado & 0x01);
  7512                           
  7513                           ;incstack = 0
  7514                           ; Regs used in _nibble: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7515     1E47  1683               	bsf	3,5	;RP0=1, select bank1
  7516     1E48  1303               	bcf	3,6	;RP1=0, select bank1
  7517     1E49  086D               	movf	_port_data^(0+128),w
  7518     1E4A  00F2               	movwf	muda_pin@_port
  7519     1E4B  086E               	movf	(_port_data+1)^(0+128),w
  7520     1E4C  00F3               	movwf	muda_pin@_port+1
  7521     1E4D  1683               	bsf	3,5	;RP0=1, select bank3
  7522     1E4E  1703               	bsf	3,6	;RP1=1, select bank3
  7523     1E4F  081B               	movf	(_D4+1)^(0+384),w	;volatile
  7524     1E50  00F5               	movwf	muda_pin@_pin+1
  7525     1E51  081A               	movf	_D4^(0+384),w	;volatile
  7526     1E52  00F4               	movwf	muda_pin@_pin
  7527     1E53  3001               	movlw	1
  7528     1E54  1283               	bcf	3,5	;RP0=0, select bank0
  7529     1E55  1303               	bcf	3,6	;RP1=0, select bank0
  7530     1E56  0520               	andwf	nibble@dado,w
  7531     1E57  00F6               	movwf	muda_pin@_val
  7532     1E58  3000               	movlw	0
  7533     1E59  0521               	andwf	nibble@dado+1,w
  7534     1E5A  00F7               	movwf	muda_pin@_val+1
  7535     1E5B  160A  158A  2382  160A  158A  	fcall	_muda_pin
  7536                           
  7537                           ;bibliotec_lcd.c: 31:     muda_pin(port_data, D5, dado >> 1 & 0x01);
  7538     1E60  1683               	bsf	3,5	;RP0=1, select bank1
  7539     1E61  1303               	bcf	3,6	;RP1=0, select bank1
  7540     1E62  086D               	movf	_port_data^(0+128),w
  7541     1E63  00F2               	movwf	muda_pin@_port
  7542     1E64  086E               	movf	(_port_data+1)^(0+128),w
  7543     1E65  00F3               	movwf	muda_pin@_port+1
  7544     1E66  1683               	bsf	3,5	;RP0=1, select bank3
  7545     1E67  1703               	bsf	3,6	;RP1=1, select bank3
  7546     1E68  0819               	movf	(_D5+1)^(0+384),w	;volatile
  7547     1E69  00F5               	movwf	muda_pin@_pin+1
  7548     1E6A  0818               	movf	_D5^(0+384),w	;volatile
  7549     1E6B  00F4               	movwf	muda_pin@_pin
  7550     1E6C  1283               	bcf	3,5	;RP0=0, select bank0
  7551     1E6D  1303               	bcf	3,6	;RP1=0, select bank0
  7552     1E6E  0821               	movf	nibble@dado+1,w
  7553     1E6F  00A3               	movwf	??_nibble+1
  7554     1E70  0820               	movf	nibble@dado,w
  7555     1E71  00A2               	movwf	??_nibble
  7556     1E72  0D23               	rlf	??_nibble+1,w
  7557     1E73  0CA3               	rrf	??_nibble+1,f
  7558     1E74  0CA2               	rrf	??_nibble,f
  7559     1E75  3001               	movlw	1
  7560     1E76  0522               	andwf	??_nibble,w
  7561     1E77  00F6               	movwf	muda_pin@_val
  7562     1E78  3000               	movlw	0
  7563     1E79  0523               	andwf	??_nibble+1,w
  7564     1E7A  00F7               	movwf	muda_pin@_val+1
  7565     1E7B  160A  158A  2382  160A  158A  	fcall	_muda_pin
  7566                           
  7567                           ;bibliotec_lcd.c: 32:     muda_pin(port_data, D6, dado >> 2 & 0x01);
  7568     1E80  1683               	bsf	3,5	;RP0=1, select bank1
  7569     1E81  1303               	bcf	3,6	;RP1=0, select bank1
  7570     1E82  086D               	movf	_port_data^(0+128),w
  7571     1E83  00F2               	movwf	muda_pin@_port
  7572     1E84  086E               	movf	(_port_data+1)^(0+128),w
  7573     1E85  00F3               	movwf	muda_pin@_port+1
  7574     1E86  1683               	bsf	3,5	;RP0=1, select bank3
  7575     1E87  1703               	bsf	3,6	;RP1=1, select bank3
  7576     1E88  0817               	movf	(_D6+1)^(0+384),w	;volatile
  7577     1E89  00F5               	movwf	muda_pin@_pin+1
  7578     1E8A  0816               	movf	_D6^(0+384),w	;volatile
  7579     1E8B  00F4               	movwf	muda_pin@_pin
  7580     1E8C  1283               	bcf	3,5	;RP0=0, select bank0
  7581     1E8D  1303               	bcf	3,6	;RP1=0, select bank0
  7582     1E8E  0821               	movf	nibble@dado+1,w
  7583     1E8F  00A3               	movwf	??_nibble+1
  7584     1E90  0820               	movf	nibble@dado,w
  7585     1E91  00A2               	movwf	??_nibble
  7586     1E92  0D23               	rlf	??_nibble+1,w
  7587     1E93  0CA3               	rrf	??_nibble+1,f
  7588     1E94  0CA2               	rrf	??_nibble,f
  7589     1E95  0D23               	rlf	??_nibble+1,w
  7590     1E96  0CA3               	rrf	??_nibble+1,f
  7591     1E97  0CA2               	rrf	??_nibble,f
  7592     1E98  3001               	movlw	1
  7593     1E99  0522               	andwf	??_nibble,w
  7594     1E9A  00F6               	movwf	muda_pin@_val
  7595     1E9B  3000               	movlw	0
  7596     1E9C  0523               	andwf	??_nibble+1,w
  7597     1E9D  00F7               	movwf	muda_pin@_val+1
  7598     1E9E  160A  158A  2382  160A  158A  	fcall	_muda_pin
  7599                           
  7600                           ;bibliotec_lcd.c: 33:     muda_pin(port_data, D7, dado >> 3 & 0x01);
  7601     1EA3  1683               	bsf	3,5	;RP0=1, select bank1
  7602     1EA4  1303               	bcf	3,6	;RP1=0, select bank1
  7603     1EA5  086D               	movf	_port_data^(0+128),w
  7604     1EA6  00F2               	movwf	muda_pin@_port
  7605     1EA7  086E               	movf	(_port_data+1)^(0+128),w
  7606     1EA8  00F3               	movwf	muda_pin@_port+1
  7607     1EA9  1683               	bsf	3,5	;RP0=1, select bank3
  7608     1EAA  1703               	bsf	3,6	;RP1=1, select bank3
  7609     1EAB  0815               	movf	(_D7+1)^(0+384),w	;volatile
  7610     1EAC  00F5               	movwf	muda_pin@_pin+1
  7611     1EAD  0814               	movf	_D7^(0+384),w	;volatile
  7612     1EAE  00F4               	movwf	muda_pin@_pin
  7613     1EAF  1283               	bcf	3,5	;RP0=0, select bank0
  7614     1EB0  1303               	bcf	3,6	;RP1=0, select bank0
  7615     1EB1  0821               	movf	nibble@dado+1,w
  7616     1EB2  00A3               	movwf	??_nibble+1
  7617     1EB3  0820               	movf	nibble@dado,w
  7618     1EB4  00A2               	movwf	??_nibble
  7619     1EB5  0D23               	rlf	??_nibble+1,w
  7620     1EB6  0CA3               	rrf	??_nibble+1,f
  7621     1EB7  0CA2               	rrf	??_nibble,f
  7622     1EB8  0D23               	rlf	??_nibble+1,w
  7623     1EB9  0CA3               	rrf	??_nibble+1,f
  7624     1EBA  0CA2               	rrf	??_nibble,f
  7625     1EBB  0D23               	rlf	??_nibble+1,w
  7626     1EBC  0CA3               	rrf	??_nibble+1,f
  7627     1EBD  0CA2               	rrf	??_nibble,f
  7628     1EBE  3001               	movlw	1
  7629     1EBF  0522               	andwf	??_nibble,w
  7630     1EC0  00F6               	movwf	muda_pin@_val
  7631     1EC1  3000               	movlw	0
  7632     1EC2  0523               	andwf	??_nibble+1,w
  7633     1EC3  00F7               	movwf	muda_pin@_val+1
  7634     1EC4  160A  158A  2382   	fcall	_muda_pin
  7635     1EC7  0008               	return
  7636     1EC8                     __end_of_nibble:
  7637                           
  7638                           	psect	text23
  7639     1BDF                     __ptext23:	
  7640 ;; *************** function _enable *****************
  7641 ;; Defined at:
  7642 ;;		line 20 in file "bibliotec_lcd.c"
  7643 ;; Parameters:    Size  Location     Type
  7644 ;;		None
  7645 ;; Auto vars:     Size  Location     Type
  7646 ;;		None
  7647 ;; Return value:  Size  Location     Type
  7648 ;;                  1    wreg      void 
  7649 ;; Registers used:
  7650 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7651 ;; Tracked objects:
  7652 ;;		On entry : 0/0
  7653 ;;		On exit  : 0/0
  7654 ;;		Unchanged: 0/0
  7655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7656 ;;      Params:         0       0       0       0       0
  7657 ;;      Locals:         0       0       0       0       0
  7658 ;;      Temps:          0       2       0       0       0
  7659 ;;      Totals:         0       2       0       0       0
  7660 ;;Total ram usage:        2 bytes
  7661 ;; Hardware stack levels used: 1
  7662 ;; Hardware stack levels required when called: 2
  7663 ;; This function calls:
  7664 ;;		_muda_pin
  7665 ;; This function is called by:
  7666 ;;		_byte
  7667 ;;		_lcd_init
  7668 ;; This function uses a non-reentrant model
  7669 ;;
  7670                           
  7671     1BDF                     _enable:	
  7672                           ;psect for function _enable
  7673                           
  7674                           
  7675                           ;bibliotec_lcd.c: 22:     muda_pin(port_en, EN, 1);
  7676                           
  7677                           ;incstack = 0
  7678                           ; Regs used in _enable: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7679     1BDF  1683               	bsf	3,5	;RP0=1, select bank3
  7680     1BE0  1703               	bsf	3,6	;RP1=1, select bank3
  7681     1BE1  0810               	movf	_port_en^(0+384),w
  7682     1BE2  00F2               	movwf	muda_pin@_port
  7683     1BE3  0811               	movf	(_port_en+1)^(0+384),w
  7684     1BE4  00F3               	movwf	muda_pin@_port+1
  7685     1BE5  087B               	movf	_EN+1,w	;volatile
  7686     1BE6  00F5               	movwf	muda_pin@_pin+1
  7687     1BE7  087A               	movf	_EN,w	;volatile
  7688     1BE8  00F4               	movwf	muda_pin@_pin
  7689     1BE9  3001               	movlw	1
  7690     1BEA  00F6               	movwf	muda_pin@_val
  7691     1BEB  3000               	movlw	0
  7692     1BEC  00F7               	movwf	muda_pin@_val+1
  7693     1BED  160A  158A  2382  160A  158A  	fcall	_muda_pin
  7694                           
  7695                           ;bibliotec_lcd.c: 23:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7696     1BF2  3007               	movlw	7
  7697     1BF3  1283               	bcf	3,5	;RP0=0, select bank0
  7698     1BF4  1303               	bcf	3,6	;RP1=0, select bank0
  7699     1BF5  00A1               	movwf	??_enable+1
  7700     1BF6  307C               	movlw	124
  7701     1BF7  00A0               	movwf	??_enable
  7702     1BF8                     u7717:
  7703     1BF8  0BA0               	decfsz	??_enable,f
  7704     1BF9  2BF8               	goto	u7717
  7705     1BFA  0BA1               	decfsz	??_enable+1,f
  7706     1BFB  2BF8               	goto	u7717
  7707     1BFC  0000               	nop
  7708                           
  7709                           ;bibliotec_lcd.c: 24:     muda_pin(port_en, EN, 0);
  7710     1BFD  1683               	bsf	3,5	;RP0=1, select bank3
  7711     1BFE  1703               	bsf	3,6	;RP1=1, select bank3
  7712     1BFF  0810               	movf	_port_en^(0+384),w
  7713     1C00  00F2               	movwf	muda_pin@_port
  7714     1C01  0811               	movf	(_port_en+1)^(0+384),w
  7715     1C02  00F3               	movwf	muda_pin@_port+1
  7716     1C03  087B               	movf	_EN+1,w	;volatile
  7717     1C04  00F5               	movwf	muda_pin@_pin+1
  7718     1C05  087A               	movf	_EN,w	;volatile
  7719     1C06  00F4               	movwf	muda_pin@_pin
  7720     1C07  3000               	movlw	0
  7721     1C08  00F6               	movwf	muda_pin@_val
  7722     1C09  00F7               	movwf	muda_pin@_val+1
  7723     1C0A  160A  158A  2382  160A  158A  	fcall	_muda_pin
  7724                           
  7725                           ;bibliotec_lcd.c: 25:     _delay((unsigned long)((1)*(4000000/4000.0)));
  7726     1C0F  30C7               	movlw	199
  7727     1C10  1283               	bcf	3,5	;RP0=0, select bank0
  7728     1C11  1303               	bcf	3,6	;RP1=0, select bank0
  7729     1C12  00A0               	movwf	??_enable
  7730     1C13                     u7727:
  7731     1C13  2C14               	nop2
  7732     1C14  0BA0               	decfsz	??_enable,f
  7733     1C15  2C13               	goto	u7727
  7734     1C16  2C17               	nop2
  7735     1C17  0008               	return
  7736     1C18                     __end_of_enable:
  7737                           
  7738                           	psect	text24
  7739     1B82                     __ptext24:	
  7740 ;; *************** function _muda_pin *****************
  7741 ;; Defined at:
  7742 ;;		line 7 in file "bibliotec_lcd.c"
  7743 ;; Parameters:    Size  Location     Type
  7744 ;;  _port           2    2[COMMON] PTR volatile unsigned ch
  7745 ;;		 -> NULL(0), PORTB(1), 
  7746 ;;  _pin            2    4[COMMON] int 
  7747 ;;  _val            2    6[COMMON] int 
  7748 ;; Auto vars:     Size  Location     Type
  7749 ;;		None
  7750 ;; Return value:  Size  Location     Type
  7751 ;;                  1    wreg      void 
  7752 ;; Registers used:
  7753 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  7754 ;; Tracked objects:
  7755 ;;		On entry : 0/0
  7756 ;;		On exit  : 0/0
  7757 ;;		Unchanged: 0/0
  7758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7759 ;;      Params:         6       0       0       0       0
  7760 ;;      Locals:         0       0       0       0       0
  7761 ;;      Temps:          1       0       0       0       0
  7762 ;;      Totals:         7       0       0       0       0
  7763 ;;Total ram usage:        7 bytes
  7764 ;; Hardware stack levels used: 1
  7765 ;; Hardware stack levels required when called: 1
  7766 ;; This function calls:
  7767 ;;		Nothing
  7768 ;; This function is called by:
  7769 ;;		_enable
  7770 ;;		_nibble
  7771 ;;		_byte
  7772 ;; This function uses a non-reentrant model
  7773 ;;
  7774                           
  7775     1B82                     _muda_pin:	
  7776                           ;psect for function _muda_pin
  7777                           
  7778                           
  7779                           ;bibliotec_lcd.c: 7: void muda_pin(volatile unsigned char *_port, int _pin, int _val);bi
      +                          bliotec_lcd.c: 8: {;bibliotec_lcd.c: 9:     if(_val == 1)
  7780                           
  7781                           ;incstack = 0
  7782                           ; Regs used in _muda_pin: [wreg-fsr0h+status,2+status,0+btemp+1]
  7783     1B82  0376               	decf	muda_pin@_val,w
  7784     1B83  0477               	iorwf	muda_pin@_val+1,w
  7785     1B84  1D03               	btfss	3,2
  7786     1B85  2B99               	goto	l2414
  7787                           
  7788                           ;bibliotec_lcd.c: 10:     {;bibliotec_lcd.c: 11:         *_port |= 1 << _pin;
  7789     1B86  3001               	movlw	1
  7790     1B87  00F8               	movwf	??_muda_pin
  7791     1B88  0A74               	incf	muda_pin@_pin,w
  7792     1B89  2B8C               	goto	u3084
  7793     1B8A                     u3085:
  7794     1B8A  1003               	clrc
  7795     1B8B  0DF8               	rlf	??_muda_pin,f
  7796     1B8C                     u3084:
  7797     1B8C  3EFF               	addlw	-1
  7798     1B8D  1D03               	skipz
  7799     1B8E  2B8A               	goto	u3085
  7800     1B8F  0878               	movf	??_muda_pin,w
  7801     1B90  00FF               	movwf	127
  7802     1B91  0872               	movf	muda_pin@_port,w
  7803     1B92  0084               	movwf	4
  7804     1B93  1783               	bsf	3,7
  7805     1B94  1C73               	btfss	muda_pin@_port+1,0
  7806     1B95  1383               	bcf	3,7
  7807     1B96  087F               	movf	127,w
  7808     1B97  0480               	iorwf	0,f
  7809                           
  7810                           ;bibliotec_lcd.c: 12:     }
  7811     1B98  0008               	return
  7812     1B99                     l2414:
  7813                           
  7814                           ;bibliotec_lcd.c: 14:     {;bibliotec_lcd.c: 15:         *_port &= ~(1 << _pin);
  7815     1B99  3001               	movlw	1
  7816     1B9A  00F8               	movwf	??_muda_pin
  7817     1B9B  0A74               	incf	muda_pin@_pin,w
  7818     1B9C  2B9F               	goto	u3094
  7819     1B9D                     u3095:
  7820     1B9D  1003               	clrc
  7821     1B9E  0DF8               	rlf	??_muda_pin,f
  7822     1B9F                     u3094:
  7823     1B9F  3EFF               	addlw	-1
  7824     1BA0  1D03               	skipz
  7825     1BA1  2B9D               	goto	u3095
  7826     1BA2  0878               	movf	??_muda_pin,w
  7827     1BA3  3AFF               	xorlw	255
  7828     1BA4  00FF               	movwf	127
  7829     1BA5  0872               	movf	muda_pin@_port,w
  7830     1BA6  0084               	movwf	4
  7831     1BA7  1783               	bsf	3,7
  7832     1BA8  1C73               	btfss	muda_pin@_port+1,0
  7833     1BA9  1383               	bcf	3,7
  7834     1BAA  087F               	movf	127,w
  7835     1BAB  0580               	andwf	0,f
  7836     1BAC  0008               	return
  7837     1BAD                     __end_of_muda_pin:
  7838                           
  7839                           	psect	text25
  7840     1B05                     __ptext25:	
  7841 ;; *************** function _controle_pwm *****************
  7842 ;; Defined at:
  7843 ;;		line 129 in file "controle.c"
  7844 ;; Parameters:    Size  Location     Type
  7845 ;;  ligado          1    wreg     unsigned char 
  7846 ;; Auto vars:     Size  Location     Type
  7847 ;;  ligado          1    2[COMMON] unsigned char 
  7848 ;; Return value:  Size  Location     Type
  7849 ;;                  1    wreg      void 
  7850 ;; Registers used:
  7851 ;;		wreg, status,2, status,0
  7852 ;; Tracked objects:
  7853 ;;		On entry : 0/0
  7854 ;;		On exit  : 0/0
  7855 ;;		Unchanged: 0/0
  7856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7857 ;;      Params:         0       0       0       0       0
  7858 ;;      Locals:         1       0       0       0       0
  7859 ;;      Temps:          0       0       0       0       0
  7860 ;;      Totals:         1       0       0       0       0
  7861 ;;Total ram usage:        1 bytes
  7862 ;; Hardware stack levels used: 1
  7863 ;; Hardware stack levels required when called: 1
  7864 ;; This function calls:
  7865 ;;		Nothing
  7866 ;; This function is called by:
  7867 ;;		_main
  7868 ;; This function uses a non-reentrant model
  7869 ;;
  7870                           
  7871     1B05                     _controle_pwm:	
  7872                           ;psect for function _controle_pwm
  7873                           
  7874                           
  7875                           ;incstack = 0
  7876                           ; Regs used in _controle_pwm: [wreg+status,2+status,0]
  7877                           ;controle_pwm@ligado stored from wreg
  7878     1B05  00F2               	movwf	controle_pwm@ligado
  7879                           
  7880                           ;controle.c: 129: void controle_pwm(char ligado);controle.c: 130: {;controle.c: 131:    
      +                           if(ligado)
  7881     1B06  0872               	movf	controle_pwm@ligado,w
  7882     1B07  1903               	btfsc	3,2
  7883     1B08  2B14               	goto	l121
  7884                           
  7885                           ;controle.c: 132:     {;controle.c: 133:         CCP1CON = 0b00001100;
  7886     1B09  300C               	movlw	12
  7887     1B0A  1283               	bcf	3,5	;RP0=0, select bank0
  7888     1B0B  1303               	bcf	3,6	;RP1=0, select bank0
  7889     1B0C  0097               	movwf	23	;volatile
  7890                           
  7891                           ;controle.c: 134:         TMR2 = 0;
  7892     1B0D  0191               	clrf	17	;volatile
  7893                           
  7894                           ;controle.c: 135:         TRISC2 = 0;
  7895     1B0E  1683               	bsf	3,5	;RP0=1, select bank1
  7896     1B0F  1303               	bcf	3,6	;RP1=0, select bank1
  7897     1B10  1107               	bcf	7,2	;volatile
  7898                           
  7899                           ;controle.c: 136:         pwm_enabled = 1;
  7900     1B11  01EF               	clrf	_pwm_enabled^(0+128)
  7901     1B12  0AEF               	incf	_pwm_enabled^(0+128),f
  7902                           
  7903                           ;controle.c: 137:     }
  7904     1B13  0008               	return
  7905     1B14                     l121:	
  7906                           ;controle.c: 138:     else
  7907                           
  7908                           
  7909                           ;controle.c: 139:     {;controle.c: 140:         TRISC2 = 1;
  7910     1B14  1683               	bsf	3,5	;RP0=1, select bank1
  7911     1B15  1303               	bcf	3,6	;RP1=0, select bank1
  7912     1B16  1507               	bsf	7,2	;volatile
  7913                           
  7914                           ;controle.c: 141:         CCP1CON = 0b00000000;
  7915     1B17  1283               	bcf	3,5	;RP0=0, select bank0
  7916     1B18  1303               	bcf	3,6	;RP1=0, select bank0
  7917     1B19  0197               	clrf	23	;volatile
  7918                           
  7919                           ;controle.c: 142:         pwm_enabled = 0;
  7920     1B1A  1683               	bsf	3,5	;RP0=1, select bank1
  7921     1B1B  1303               	bcf	3,6	;RP1=0, select bank1
  7922     1B1C  01EF               	clrf	_pwm_enabled^(0+128)
  7923     1B1D  0008               	return
  7924     1B1E                     __end_of_controle_pwm:
  7925                           
  7926                           	psect	text26
  7927     07EB                     __ptext26:	
  7928 ;; *************** function _UART_init *****************
  7929 ;; Defined at:
  7930 ;;		line 94 in file "controle.c"
  7931 ;; Parameters:    Size  Location     Type
  7932 ;;		None
  7933 ;; Auto vars:     Size  Location     Type
  7934 ;;		None
  7935 ;; Return value:  Size  Location     Type
  7936 ;;                  1    wreg      void 
  7937 ;; Registers used:
  7938 ;;		wreg
  7939 ;; Tracked objects:
  7940 ;;		On entry : 0/0
  7941 ;;		On exit  : 0/0
  7942 ;;		Unchanged: 0/0
  7943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7944 ;;      Params:         0       0       0       0       0
  7945 ;;      Locals:         0       0       0       0       0
  7946 ;;      Temps:          0       0       0       0       0
  7947 ;;      Totals:         0       0       0       0       0
  7948 ;;Total ram usage:        0 bytes
  7949 ;; Hardware stack levels used: 1
  7950 ;; Hardware stack levels required when called: 1
  7951 ;; This function calls:
  7952 ;;		Nothing
  7953 ;; This function is called by:
  7954 ;;		_main
  7955 ;; This function uses a non-reentrant model
  7956 ;;
  7957                           
  7958     07EB                     _UART_init:	
  7959                           ;psect for function _UART_init
  7960                           
  7961                           
  7962                           ;controle.c: 96:     SPBRG = 25;
  7963                           
  7964                           ;incstack = 0
  7965                           ; Regs used in _UART_init: [wreg]
  7966     07EB  3019               	movlw	25
  7967     07EC  1683               	bsf	3,5	;RP0=1, select bank1
  7968     07ED  1303               	bcf	3,6	;RP1=0, select bank1
  7969     07EE  0099               	movwf	25	;volatile
  7970                           
  7971                           ;controle.c: 98:     TXSTAbits.TXEN = 1;
  7972     07EF  1698               	bsf	24,5	;volatile
  7973                           
  7974                           ;controle.c: 99:     RCSTAbits.CREN = 1;
  7975     07F0  1283               	bcf	3,5	;RP0=0, select bank0
  7976     07F1  1303               	bcf	3,6	;RP1=0, select bank0
  7977     07F2  1618               	bsf	24,4	;volatile
  7978                           
  7979                           ;controle.c: 101:     TXSTAbits.SYNC = 0;
  7980     07F3  1683               	bsf	3,5	;RP0=1, select bank1
  7981     07F4  1303               	bcf	3,6	;RP1=0, select bank1
  7982     07F5  1218               	bcf	24,4	;volatile
  7983                           
  7984                           ;controle.c: 102:     TXSTAbits.BRGH = 1;
  7985     07F6  1518               	bsf	24,2	;volatile
  7986                           
  7987                           ;controle.c: 103:     RCSTAbits.SPEN = 1;
  7988     07F7  1283               	bcf	3,5	;RP0=0, select bank0
  7989     07F8  1303               	bcf	3,6	;RP1=0, select bank0
  7990     07F9  1798               	bsf	24,7	;volatile
  7991                           
  7992                           ;controle.c: 104:     RCSTAbits.RX9 = 0;
  7993     07FA  1318               	bcf	24,6	;volatile
  7994                           
  7995                           ;controle.c: 105:     TXSTAbits.TX9 = 0;
  7996     07FB  1683               	bsf	3,5	;RP0=1, select bank1
  7997     07FC  1303               	bcf	3,6	;RP1=0, select bank1
  7998     07FD  1318               	bcf	24,6	;volatile
  7999     07FE  0008               	return
  8000     07FF                     __end_of_UART_init:
  8001                           
  8002                           	psect	text27
  8003     1AD1                     __ptext27:	
  8004 ;; *************** function _Timer0_init *****************
  8005 ;; Defined at:
  8006 ;;		line 81 in file "controle.c"
  8007 ;; Parameters:    Size  Location     Type
  8008 ;;		None
  8009 ;; Auto vars:     Size  Location     Type
  8010 ;;		None
  8011 ;; Return value:  Size  Location     Type
  8012 ;;                  1    wreg      void 
  8013 ;; Registers used:
  8014 ;;		wreg
  8015 ;; Tracked objects:
  8016 ;;		On entry : 0/0
  8017 ;;		On exit  : 0/0
  8018 ;;		Unchanged: 0/0
  8019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8020 ;;      Params:         0       0       0       0       0
  8021 ;;      Locals:         0       0       0       0       0
  8022 ;;      Temps:          0       0       0       0       0
  8023 ;;      Totals:         0       0       0       0       0
  8024 ;;Total ram usage:        0 bytes
  8025 ;; Hardware stack levels used: 1
  8026 ;; Hardware stack levels required when called: 1
  8027 ;; This function calls:
  8028 ;;		Nothing
  8029 ;; This function is called by:
  8030 ;;		_main
  8031 ;; This function uses a non-reentrant model
  8032 ;;
  8033                           
  8034     1AD1                     _Timer0_init:	
  8035                           ;psect for function _Timer0_init
  8036                           
  8037                           
  8038                           ;controle.c: 83:     PSA = 0;
  8039                           
  8040                           ;incstack = 0
  8041                           ; Regs used in _Timer0_init: [wreg]
  8042     1AD1  1683               	bsf	3,5	;RP0=1, select bank1
  8043     1AD2  1303               	bcf	3,6	;RP1=0, select bank1
  8044     1AD3  1181               	bcf	1,3	;volatile
  8045                           
  8046                           ;controle.c: 84:     PS2 = 0b1;
  8047     1AD4  1501               	bsf	1,2	;volatile
  8048                           
  8049                           ;controle.c: 85:     PS1 = 0b0;
  8050     1AD5  1081               	bcf	1,1	;volatile
  8051                           
  8052                           ;controle.c: 86:     PS0 = 0b1;
  8053     1AD6  1401               	bsf	1,0	;volatile
  8054                           
  8055                           ;controle.c: 87:     T0CS = 0;
  8056     1AD7  1281               	bcf	1,5	;volatile
  8057                           
  8058                           ;controle.c: 88:     T0IE = 1;
  8059     1AD8  168B               	bsf	11,5	;volatile
  8060                           
  8061                           ;controle.c: 89:     T0IF = 0;
  8062     1AD9  110B               	bcf	11,2	;volatile
  8063                           
  8064                           ;controle.c: 90:     TMR0 = 100;
  8065     1ADA  3064               	movlw	100
  8066     1ADB  1283               	bcf	3,5	;RP0=0, select bank0
  8067     1ADC  1303               	bcf	3,6	;RP1=0, select bank0
  8068     1ADD  0081               	movwf	1	;volatile
  8069                           
  8070                           ;controle.c: 91:     GIE = 1;
  8071     1ADE  178B               	bsf	11,7	;volatile
  8072     1ADF  0008               	return
  8073     1AE0                     __end_of_Timer0_init:
  8074                           
  8075                           	psect	text28
  8076     1B1E                     __ptext28:	
  8077 ;; *************** function _PWM_init *****************
  8078 ;; Defined at:
  8079 ;;		line 44 in file "controle.c"
  8080 ;; Parameters:    Size  Location     Type
  8081 ;;		None
  8082 ;; Auto vars:     Size  Location     Type
  8083 ;;		None
  8084 ;; Return value:  Size  Location     Type
  8085 ;;                  1    wreg      void 
  8086 ;; Registers used:
  8087 ;;		wreg
  8088 ;; Tracked objects:
  8089 ;;		On entry : 0/0
  8090 ;;		On exit  : 0/0
  8091 ;;		Unchanged: 0/0
  8092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8093 ;;      Params:         0       0       0       0       0
  8094 ;;      Locals:         0       0       0       0       0
  8095 ;;      Temps:          0       0       0       0       0
  8096 ;;      Totals:         0       0       0       0       0
  8097 ;;Total ram usage:        0 bytes
  8098 ;; Hardware stack levels used: 1
  8099 ;; Hardware stack levels required when called: 1
  8100 ;; This function calls:
  8101 ;;		Nothing
  8102 ;; This function is called by:
  8103 ;;		_main
  8104 ;; This function uses a non-reentrant model
  8105 ;;
  8106                           
  8107     1B1E                     _PWM_init:	
  8108                           ;psect for function _PWM_init
  8109                           
  8110                           
  8111                           ;controle.c: 46:     TRISC2 = 1;
  8112                           
  8113                           ;incstack = 0
  8114                           ; Regs used in _PWM_init: [wreg]
  8115     1B1E  1683               	bsf	3,5	;RP0=1, select bank1
  8116     1B1F  1303               	bcf	3,6	;RP1=0, select bank1
  8117     1B20  1507               	bsf	7,2	;volatile
  8118                           
  8119                           ;controle.c: 47:     PR2 = 255;
  8120     1B21  30FF               	movlw	255
  8121     1B22  0092               	movwf	18	;volatile
  8122                           
  8123                           ;controle.c: 48:     CCP1CON = 0b00001100;
  8124     1B23  300C               	movlw	12
  8125     1B24  1283               	bcf	3,5	;RP0=0, select bank0
  8126     1B25  1303               	bcf	3,6	;RP1=0, select bank0
  8127     1B26  0097               	movwf	23	;volatile
  8128                           
  8129                           ;controle.c: 49:     CCPR1L = 100;
  8130     1B27  3064               	movlw	100
  8131     1B28  0095               	movwf	21	;volatile
  8132                           
  8133                           ;controle.c: 50:     TMR2IF = 0;
  8134     1B29  108C               	bcf	12,1	;volatile
  8135                           
  8136                           ;controle.c: 51:     T2CON = 0b00000010;
  8137     1B2A  3002               	movlw	2
  8138     1B2B  0092               	movwf	18	;volatile
  8139                           
  8140                           ;controle.c: 52:     T2CON = 0b00000110;
  8141     1B2C  3006               	movlw	6
  8142     1B2D  0092               	movwf	18	;volatile
  8143     1B2E                     l91:	
  8144                           ;controle.c: 53:     while(!TMR2IF);
  8145                           
  8146     1B2E  1C8C               	btfss	12,1	;volatile
  8147     1B2F  2B2E               	goto	l91
  8148                           
  8149                           ;controle.c: 54:     TRISC2 = 0;
  8150     1B30  1683               	bsf	3,5	;RP0=1, select bank1
  8151     1B31  1303               	bcf	3,6	;RP1=0, select bank1
  8152     1B32  1107               	bcf	7,2	;volatile
  8153                           
  8154                           ;controle.c: 55:     TMR2IF = 0;
  8155     1B33  1283               	bcf	3,5	;RP0=0, select bank0
  8156     1B34  1303               	bcf	3,6	;RP1=0, select bank0
  8157     1B35  108C               	bcf	12,1	;volatile
  8158                           
  8159                           ;controle.c: 56:     pwm_enabled = 1;
  8160     1B36  1683               	bsf	3,5	;RP0=1, select bank1
  8161     1B37  1303               	bcf	3,6	;RP1=0, select bank1
  8162     1B38  01EF               	clrf	_pwm_enabled^(0+128)
  8163     1B39  0AEF               	incf	_pwm_enabled^(0+128),f
  8164     1B3A  0008               	return
  8165     1B3B                     __end_of_PWM_init:
  8166                           
  8167                           	psect	text29
  8168     124F                     __ptext29:	
  8169 ;; *************** function _LM35 *****************
  8170 ;; Defined at:
  8171 ;;		line 59 in file "controle.c"
  8172 ;; Parameters:    Size  Location     Type
  8173 ;;		None
  8174 ;; Auto vars:     Size  Location     Type
  8175 ;;  temperatura     4   10[BANK1 ] float 
  8176 ;;  adc_val         2   18[BANK1 ] unsigned int 
  8177 ;; Return value:  Size  Location     Type
  8178 ;;                  4    0[BANK1 ] float 
  8179 ;; Registers used:
  8180 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8181 ;; Tracked objects:
  8182 ;;		On entry : 0/0
  8183 ;;		On exit  : 0/0
  8184 ;;		Unchanged: 0/0
  8185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8186 ;;      Params:         0       0       4       0       0
  8187 ;;      Locals:         0       0      10       0       0
  8188 ;;      Temps:          0       0       6       0       0
  8189 ;;      Totals:         0       0      20       0       0
  8190 ;;Total ram usage:       20 bytes
  8191 ;; Hardware stack levels used: 1
  8192 ;; Hardware stack levels required when called: 3
  8193 ;; This function calls:
  8194 ;;		___fldiv
  8195 ;;		___flmul
  8196 ;;		___xxtofl
  8197 ;; This function is called by:
  8198 ;;		_main
  8199 ;; This function uses a non-reentrant model
  8200 ;;
  8201                           
  8202     124F                     _LM35:	
  8203                           ;psect for function _LM35
  8204                           
  8205                           
  8206                           ;controle.c: 61:     unsigned int adc_val;;controle.c: 62:     float temperatura;;contro
      +                          le.c: 63:     ADON = 1;
  8207                           
  8208                           ;incstack = 0
  8209                           ; Regs used in _LM35: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8210     124F  1283               	bcf	3,5	;RP0=0, select bank0
  8211     1250  1303               	bcf	3,6	;RP1=0, select bank0
  8212     1251  141F               	bsf	31,0	;volatile
  8213                           
  8214                           ;controle.c: 64:     ADFM = 0;
  8215     1252  1683               	bsf	3,5	;RP0=1, select bank1
  8216     1253  1303               	bcf	3,6	;RP1=0, select bank1
  8217     1254  139F               	bcf	31,7	;volatile
  8218                           
  8219                           ;controle.c: 65:     ADCS1 = 0;
  8220     1255  1283               	bcf	3,5	;RP0=0, select bank0
  8221     1256  1303               	bcf	3,6	;RP1=0, select bank0
  8222     1257  139F               	bcf	31,7	;volatile
  8223                           
  8224                           ;controle.c: 66:     ADCS0 = 1;
  8225     1258  171F               	bsf	31,6	;volatile
  8226                           
  8227                           ;controle.c: 67:     CHS3 = 0;
  8228     1259  129F               	bcf	31,5	;volatile
  8229                           
  8230                           ;controle.c: 68:     CHS2 = 0;
  8231     125A  121F               	bcf	31,4	;volatile
  8232                           
  8233                           ;controle.c: 69:     CHS1 = 0;
  8234     125B  119F               	bcf	31,3	;volatile
  8235                           
  8236                           ;controle.c: 70:     CHS0 = 0;
  8237     125C  111F               	bcf	31,2	;volatile
  8238                           
  8239                           ;controle.c: 71:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  8240     125D  3005               	movlw	5
  8241     125E  1683               	bsf	3,5	;RP0=1, select bank1
  8242     125F  1303               	bcf	3,6	;RP1=0, select bank1
  8243     1260  00A4               	movwf	??_LM35^(0+128)
  8244     1261                     u7737:
  8245     1261  0BA4               	decfsz	??_LM35^(0+128),f
  8246     1262  2A61               	goto	u7737
  8247     1263  2A64               	nop2
  8248                           
  8249                           ;controle.c: 72:     GO_DONE = 1;
  8250     1264  1283               	bcf	3,5	;RP0=0, select bank0
  8251     1265  1303               	bcf	3,6	;RP1=0, select bank0
  8252     1266  149F               	bsf	31,1	;volatile
  8253     1267                     l97:	
  8254                           ;controle.c: 73:     while (GO_DONE);
  8255                           
  8256     1267  189F               	btfsc	31,1	;volatile
  8257     1268  2A67               	goto	l97
  8258                           
  8259                           ;controle.c: 74:     adc_val = ADRESH;
  8260     1269  081E               	movf	30,w	;volatile
  8261     126A  1683               	bsf	3,5	;RP0=1, select bank1
  8262     126B  1303               	bcf	3,6	;RP1=0, select bank1
  8263     126C  00A4               	movwf	??_LM35^(0+128)
  8264     126D  01A5               	clrf	(??_LM35^(0+128)+1)
  8265     126E  0824               	movf	??_LM35^(0+128),w
  8266     126F  00B2               	movwf	LM35@adc_val^(0+128)
  8267     1270  0825               	movf	(??_LM35+1)^(0+128),w
  8268     1271  00B3               	movwf	(LM35@adc_val+1)^(0+128)
  8269                           
  8270                           ;controle.c: 75:     adc_val = (adc_val << 8) | ADRESL;
  8271     1272  081E               	movf	30,w	;volatile
  8272     1273  00A4               	movwf	??_LM35^(0+128)
  8273     1274  01A5               	clrf	(??_LM35^(0+128)+1)
  8274     1275  0832               	movf	LM35@adc_val^(0+128),w
  8275     1276  00A7               	movwf	((??_LM35+2)^(0+128)+1)
  8276     1277  01A6               	clrf	(??_LM35+2)^(0+128)
  8277     1278  0824               	movf	??_LM35^(0+128),w
  8278     1279  0426               	iorwf	(??_LM35+2)^(0+128),w
  8279     127A  00A8               	movwf	(??_LM35+4)^(0+128)
  8280     127B  0825               	movf	(??_LM35+1)^(0+128),w
  8281     127C  0427               	iorwf	(??_LM35+3)^(0+128),w
  8282     127D  00A9               	movwf	(??_LM35+5)^(0+128)
  8283     127E  0828               	movf	(??_LM35+4)^(0+128),w
  8284     127F  00B2               	movwf	LM35@adc_val^(0+128)
  8285     1280  0829               	movf	(??_LM35+5)^(0+128),w
  8286     1281  00B3               	movwf	(LM35@adc_val+1)^(0+128)
  8287                           
  8288                           ;controle.c: 76:     temperatura = adc_val * 5.0f / 1023 * 1.543319f ;
  8289     1282  3044               	movlw	68
  8290     1283  1283               	bcf	3,5	;RP0=0, select bank0
  8291     1284  1303               	bcf	3,6	;RP1=0, select bank0
  8292     1285  00D6               	movwf	___fldiv@a+3
  8293     1286  307F               	movlw	127
  8294     1287  00D5               	movwf	___fldiv@a+2
  8295     1288  30C0               	movlw	192
  8296     1289  00D4               	movwf	___fldiv@a+1
  8297     128A  3000               	movlw	0
  8298     128B  00D3               	movwf	___fldiv@a
  8299     128C  3040               	movlw	64
  8300     128D  00BC               	movwf	___flmul@b+3
  8301     128E  30A0               	movlw	160
  8302     128F  00BB               	movwf	___flmul@b+2
  8303     1290  3000               	movlw	0
  8304     1291  00BA               	movwf	___flmul@b+1
  8305     1292  3000               	movlw	0
  8306     1293  00B9               	movwf	___flmul@b
  8307     1294  1683               	bsf	3,5	;RP0=1, select bank1
  8308     1295  1303               	bcf	3,6	;RP1=0, select bank1
  8309     1296  0832               	movf	LM35@adc_val^(0+128),w
  8310     1297  00F2               	movwf	___xxtofl@val
  8311     1298  0833               	movf	(LM35@adc_val+1)^(0+128),w
  8312     1299  00F3               	movwf	___xxtofl@val+1
  8313     129A  01F4               	clrf	___xxtofl@val+2
  8314     129B  01F5               	clrf	___xxtofl@val+3
  8315     129C  3000               	movlw	0
  8316     129D  160A  158A  275D  160A  118A  	fcall	___xxtofl
  8317     12A2  0875               	movf	?___xxtofl+3,w
  8318     12A3  1283               	bcf	3,5	;RP0=0, select bank0
  8319     12A4  1303               	bcf	3,6	;RP1=0, select bank0
  8320     12A5  00C0               	movwf	___flmul@a+3
  8321     12A6  0874               	movf	?___xxtofl+2,w
  8322     12A7  00BF               	movwf	___flmul@a+2
  8323     12A8  0873               	movf	?___xxtofl+1,w
  8324     12A9  00BE               	movwf	___flmul@a+1
  8325     12AA  0872               	movf	?___xxtofl,w
  8326     12AB  00BD               	movwf	___flmul@a
  8327     12AC  120A  158A  21BA  160A  118A  	fcall	___flmul
  8328     12B1  1283               	bcf	3,5	;RP0=0, select bank0
  8329     12B2  1303               	bcf	3,6	;RP1=0, select bank0
  8330     12B3  083C               	movf	?___flmul+3,w
  8331     12B4  00DA               	movwf	___fldiv@b+3
  8332     12B5  083B               	movf	?___flmul+2,w
  8333     12B6  00D9               	movwf	___fldiv@b+2
  8334     12B7  083A               	movf	?___flmul+1,w
  8335     12B8  00D8               	movwf	___fldiv@b+1
  8336     12B9  0839               	movf	?___flmul,w
  8337     12BA  00D7               	movwf	___fldiv@b
  8338     12BB  120A  158A  2021  160A  118A  	fcall	___fldiv
  8339     12C0  1283               	bcf	3,5	;RP0=0, select bank0
  8340     12C1  1303               	bcf	3,6	;RP1=0, select bank0
  8341     12C2  0856               	movf	?___fldiv+3,w
  8342     12C3  1683               	bsf	3,5	;RP0=1, select bank1
  8343     12C4  1303               	bcf	3,6	;RP1=0, select bank1
  8344     12C5  00B1               	movwf	(_LM35$1054+3)^(0+128)
  8345     12C6  1283               	bcf	3,5	;RP0=0, select bank0
  8346     12C7  1303               	bcf	3,6	;RP1=0, select bank0
  8347     12C8  0855               	movf	?___fldiv+2,w
  8348     12C9  1683               	bsf	3,5	;RP0=1, select bank1
  8349     12CA  1303               	bcf	3,6	;RP1=0, select bank1
  8350     12CB  00B0               	movwf	(_LM35$1054+2)^(0+128)
  8351     12CC  1283               	bcf	3,5	;RP0=0, select bank0
  8352     12CD  1303               	bcf	3,6	;RP1=0, select bank0
  8353     12CE  0854               	movf	?___fldiv+1,w
  8354     12CF  1683               	bsf	3,5	;RP0=1, select bank1
  8355     12D0  1303               	bcf	3,6	;RP1=0, select bank1
  8356     12D1  00AF               	movwf	(_LM35$1054+1)^(0+128)
  8357     12D2  1283               	bcf	3,5	;RP0=0, select bank0
  8358     12D3  1303               	bcf	3,6	;RP1=0, select bank0
  8359     12D4  0853               	movf	?___fldiv,w
  8360     12D5  1683               	bsf	3,5	;RP0=1, select bank1
  8361     12D6  1303               	bcf	3,6	;RP1=0, select bank1
  8362     12D7  00AE               	movwf	_LM35$1054^(0+128)
  8363                           
  8364                           ;controle.c: 76:     temperatura = adc_val * 5.0f / 1023 * 1.543319f ;
  8365     12D8  303F               	movlw	63
  8366     12D9  1283               	bcf	3,5	;RP0=0, select bank0
  8367     12DA  1303               	bcf	3,6	;RP1=0, select bank0
  8368     12DB  00BC               	movwf	___flmul@b+3
  8369     12DC  30C5               	movlw	197
  8370     12DD  00BB               	movwf	___flmul@b+2
  8371     12DE  308B               	movlw	139
  8372     12DF  00BA               	movwf	___flmul@b+1
  8373     12E0  307A               	movlw	122
  8374     12E1  00B9               	movwf	___flmul@b
  8375     12E2  1683               	bsf	3,5	;RP0=1, select bank1
  8376     12E3  1303               	bcf	3,6	;RP1=0, select bank1
  8377     12E4  0831               	movf	(_LM35$1054+3)^(0+128),w
  8378     12E5  1283               	bcf	3,5	;RP0=0, select bank0
  8379     12E6  1303               	bcf	3,6	;RP1=0, select bank0
  8380     12E7  00C0               	movwf	___flmul@a+3
  8381     12E8  1683               	bsf	3,5	;RP0=1, select bank1
  8382     12E9  1303               	bcf	3,6	;RP1=0, select bank1
  8383     12EA  0830               	movf	(_LM35$1054+2)^(0+128),w
  8384     12EB  1283               	bcf	3,5	;RP0=0, select bank0
  8385     12EC  1303               	bcf	3,6	;RP1=0, select bank0
  8386     12ED  00BF               	movwf	___flmul@a+2
  8387     12EE  1683               	bsf	3,5	;RP0=1, select bank1
  8388     12EF  1303               	bcf	3,6	;RP1=0, select bank1
  8389     12F0  082F               	movf	(_LM35$1054+1)^(0+128),w
  8390     12F1  1283               	bcf	3,5	;RP0=0, select bank0
  8391     12F2  1303               	bcf	3,6	;RP1=0, select bank0
  8392     12F3  00BE               	movwf	___flmul@a+1
  8393     12F4  1683               	bsf	3,5	;RP0=1, select bank1
  8394     12F5  1303               	bcf	3,6	;RP1=0, select bank1
  8395     12F6  082E               	movf	_LM35$1054^(0+128),w
  8396     12F7  1283               	bcf	3,5	;RP0=0, select bank0
  8397     12F8  1303               	bcf	3,6	;RP1=0, select bank0
  8398     12F9  00BD               	movwf	___flmul@a
  8399     12FA  120A  158A  21BA   	fcall	___flmul
  8400     12FD  1283               	bcf	3,5	;RP0=0, select bank0
  8401     12FE  1303               	bcf	3,6	;RP1=0, select bank0
  8402     12FF  083C               	movf	?___flmul+3,w
  8403     1300  1683               	bsf	3,5	;RP0=1, select bank1
  8404     1301  1303               	bcf	3,6	;RP1=0, select bank1
  8405     1302  00AD               	movwf	(LM35@temperatura+3)^(0+128)
  8406     1303  1283               	bcf	3,5	;RP0=0, select bank0
  8407     1304  1303               	bcf	3,6	;RP1=0, select bank0
  8408     1305  083B               	movf	?___flmul+2,w
  8409     1306  1683               	bsf	3,5	;RP0=1, select bank1
  8410     1307  1303               	bcf	3,6	;RP1=0, select bank1
  8411     1308  00AC               	movwf	(LM35@temperatura+2)^(0+128)
  8412     1309  1283               	bcf	3,5	;RP0=0, select bank0
  8413     130A  1303               	bcf	3,6	;RP1=0, select bank0
  8414     130B  083A               	movf	?___flmul+1,w
  8415     130C  1683               	bsf	3,5	;RP0=1, select bank1
  8416     130D  1303               	bcf	3,6	;RP1=0, select bank1
  8417     130E  00AB               	movwf	(LM35@temperatura+1)^(0+128)
  8418     130F  1283               	bcf	3,5	;RP0=0, select bank0
  8419     1310  1303               	bcf	3,6	;RP1=0, select bank0
  8420     1311  0839               	movf	?___flmul,w
  8421     1312  1683               	bsf	3,5	;RP0=1, select bank1
  8422     1313  1303               	bcf	3,6	;RP1=0, select bank1
  8423     1314  00AA               	movwf	LM35@temperatura^(0+128)
  8424                           
  8425                           ;controle.c: 77:     ADON = 0;
  8426     1315  1283               	bcf	3,5	;RP0=0, select bank0
  8427     1316  1303               	bcf	3,6	;RP1=0, select bank0
  8428     1317  101F               	bcf	31,0	;volatile
  8429                           
  8430                           ;controle.c: 78:     return temperatura;
  8431     1318  1683               	bsf	3,5	;RP0=1, select bank1
  8432     1319  1303               	bcf	3,6	;RP1=0, select bank1
  8433     131A  082D               	movf	(LM35@temperatura+3)^(0+128),w
  8434     131B  00A3               	movwf	(?_LM35+3)^(0+128)
  8435     131C  082C               	movf	(LM35@temperatura+2)^(0+128),w
  8436     131D  00A2               	movwf	(?_LM35+2)^(0+128)
  8437     131E  082B               	movf	(LM35@temperatura+1)^(0+128),w
  8438     131F  00A1               	movwf	(?_LM35+1)^(0+128)
  8439     1320  082A               	movf	LM35@temperatura^(0+128),w
  8440     1321  00A0               	movwf	?_LM35^(0+128)
  8441     1322  0008               	return
  8442     1323                     __end_of_LM35:
  8443                           
  8444                           	psect	text30
  8445     1F5D                     __ptext30:	
  8446 ;; *************** function ___xxtofl *****************
  8447 ;; Defined at:
  8448 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\xxtofl.c"
  8449 ;; Parameters:    Size  Location     Type
  8450 ;;  sign            1    wreg     unsigned char 
  8451 ;;  val             4    2[COMMON] long 
  8452 ;; Auto vars:     Size  Location     Type
  8453 ;;  sign            1    0[BANK0 ] unsigned char 
  8454 ;;  arg             4    2[BANK0 ] unsigned long 
  8455 ;;  exp             1    1[BANK0 ] unsigned char 
  8456 ;; Return value:  Size  Location     Type
  8457 ;;                  4    2[COMMON] unsigned char 
  8458 ;; Registers used:
  8459 ;;		wreg, status,2, status,0, btemp+1
  8460 ;; Tracked objects:
  8461 ;;		On entry : 0/0
  8462 ;;		On exit  : 0/0
  8463 ;;		Unchanged: 0/0
  8464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8465 ;;      Params:         4       0       0       0       0
  8466 ;;      Locals:         0       6       0       0       0
  8467 ;;      Temps:          4       0       0       0       0
  8468 ;;      Totals:         8       6       0       0       0
  8469 ;;Total ram usage:       14 bytes
  8470 ;; Hardware stack levels used: 1
  8471 ;; Hardware stack levels required when called: 1
  8472 ;; This function calls:
  8473 ;;		Nothing
  8474 ;; This function is called by:
  8475 ;;		_LM35
  8476 ;;		_sprintf
  8477 ;; This function uses a non-reentrant model
  8478 ;;
  8479                           
  8480     1F5D                     ___xxtofl:	
  8481                           ;psect for function ___xxtofl
  8482                           
  8483                           
  8484                           ;incstack = 0
  8485                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  8486                           ;___xxtofl@sign stored from wreg
  8487     1F5D  1283               	bcf	3,5	;RP0=0, select bank0
  8488     1F5E  1303               	bcf	3,6	;RP1=0, select bank0
  8489     1F5F  00A0               	movwf	___xxtofl@sign
  8490     1F60  0820               	movf	___xxtofl@sign,w
  8491     1F61  1D03               	btfss	3,2
  8492     1F62  1FF5               	btfss	___xxtofl@val+3,7
  8493     1F63  2F74               	goto	l3376
  8494     1F64  0972               	comf	___xxtofl@val,w
  8495     1F65  00A2               	movwf	___xxtofl@arg
  8496     1F66  0973               	comf	___xxtofl@val+1,w
  8497     1F67  00A3               	movwf	___xxtofl@arg+1
  8498     1F68  0974               	comf	___xxtofl@val+2,w
  8499     1F69  00A4               	movwf	___xxtofl@arg+2
  8500     1F6A  0975               	comf	___xxtofl@val+3,w
  8501     1F6B  00A5               	movwf	___xxtofl@arg+3
  8502     1F6C  0AA2               	incf	___xxtofl@arg,f
  8503     1F6D  1903               	skipnz
  8504     1F6E  0AA3               	incf	___xxtofl@arg+1,f
  8505     1F6F  1903               	skipnz
  8506     1F70  0AA4               	incf	___xxtofl@arg+2,f
  8507     1F71  1903               	skipnz
  8508     1F72  0AA5               	incf	___xxtofl@arg+3,f
  8509     1F73  2F7C               	goto	l861
  8510     1F74                     l3376:
  8511     1F74  0875               	movf	___xxtofl@val+3,w
  8512     1F75  00A5               	movwf	___xxtofl@arg+3
  8513     1F76  0874               	movf	___xxtofl@val+2,w
  8514     1F77  00A4               	movwf	___xxtofl@arg+2
  8515     1F78  0873               	movf	___xxtofl@val+1,w
  8516     1F79  00A3               	movwf	___xxtofl@arg+1
  8517     1F7A  0872               	movf	___xxtofl@val,w
  8518     1F7B  00A2               	movwf	___xxtofl@arg
  8519     1F7C                     l861:
  8520     1F7C  0875               	movf	___xxtofl@val+3,w
  8521     1F7D  0474               	iorwf	___xxtofl@val+2,w
  8522     1F7E  0473               	iorwf	___xxtofl@val+1,w
  8523     1F7F  0472               	iorwf	___xxtofl@val,w
  8524     1F80  1D03               	skipz
  8525     1F81  2F8B               	goto	l3382
  8526     1F82  3000               	movlw	0
  8527     1F83  00F5               	movwf	?___xxtofl+3
  8528     1F84  3000               	movlw	0
  8529     1F85  00F4               	movwf	?___xxtofl+2
  8530     1F86  3000               	movlw	0
  8531     1F87  00F3               	movwf	?___xxtofl+1
  8532     1F88  3000               	movlw	0
  8533     1F89  00F2               	movwf	?___xxtofl
  8534     1F8A  0008               	return
  8535     1F8B                     l3382:
  8536     1F8B  3096               	movlw	150
  8537     1F8C  00A1               	movwf	___xxtofl@exp
  8538     1F8D                     l3388:
  8539     1F8D  30FE               	movlw	254
  8540     1F8E  0525               	andwf	___xxtofl@arg+3,w
  8541     1F8F  1903               	btfsc	3,2
  8542     1F90  2FBA               	goto	l3396
  8543     1F91  3001               	movlw	1
  8544     1F92  00FF               	movwf	127
  8545     1F93  087F               	movf	127,w
  8546     1F94  07A1               	addwf	___xxtofl@exp,f
  8547     1F95  3001               	movlw	1
  8548     1F96                     u5505:
  8549     1F96  1003               	clrc
  8550     1F97  0CA5               	rrf	___xxtofl@arg+3,f
  8551     1F98  0CA4               	rrf	___xxtofl@arg+2,f
  8552     1F99  0CA3               	rrf	___xxtofl@arg+1,f
  8553     1F9A  0CA2               	rrf	___xxtofl@arg,f
  8554     1F9B  3EFF               	addlw	-1
  8555     1F9C  1D03               	skipz
  8556     1F9D  2F96               	goto	u5505
  8557     1F9E  2F8D               	goto	l3388
  8558     1F9F                     l3390:
  8559     1F9F  3001               	movlw	1
  8560     1FA0  00FF               	movwf	127
  8561     1FA1  087F               	movf	127,w
  8562     1FA2  07A1               	addwf	___xxtofl@exp,f
  8563     1FA3  3001               	movlw	1
  8564     1FA4  07A2               	addwf	___xxtofl@arg,f
  8565     1FA5  3000               	movlw	0
  8566     1FA6  1803               	skipnc
  8567     1FA7  3001               	movlw	1
  8568     1FA8  07A3               	addwf	___xxtofl@arg+1,f
  8569     1FA9  3000               	movlw	0
  8570     1FAA  1803               	skipnc
  8571     1FAB  3001               	movlw	1
  8572     1FAC  07A4               	addwf	___xxtofl@arg+2,f
  8573     1FAD  3000               	movlw	0
  8574     1FAE  1803               	skipnc
  8575     1FAF  3001               	movlw	1
  8576     1FB0  07A5               	addwf	___xxtofl@arg+3,f
  8577     1FB1  3001               	movlw	1
  8578     1FB2                     u5525:
  8579     1FB2  1003               	clrc
  8580     1FB3  0CA5               	rrf	___xxtofl@arg+3,f
  8581     1FB4  0CA4               	rrf	___xxtofl@arg+2,f
  8582     1FB5  0CA3               	rrf	___xxtofl@arg+1,f
  8583     1FB6  0CA2               	rrf	___xxtofl@arg,f
  8584     1FB7  3EFF               	addlw	-1
  8585     1FB8  1D03               	skipz
  8586     1FB9  2FB2               	goto	u5525
  8587     1FBA                     l3396:
  8588     1FBA  30FF               	movlw	255
  8589     1FBB  0525               	andwf	___xxtofl@arg+3,w
  8590     1FBC  1903               	btfsc	3,2
  8591     1FBD  2FCE               	goto	l3400
  8592     1FBE  2F9F               	goto	l3390
  8593     1FBF                     l3402:
  8594     1FBF  3002               	movlw	2
  8595     1FC0  0221               	subwf	___xxtofl@exp,w
  8596     1FC1  1C03               	btfss	3,0
  8597     1FC2  2FD0               	goto	l874
  8598     1FC3  3001               	movlw	1
  8599     1FC4  02A1               	subwf	___xxtofl@exp,f
  8600     1FC5  3001               	movlw	1
  8601     1FC6  00F6               	movwf	??___xxtofl
  8602     1FC7                     u5545:
  8603     1FC7  1003               	clrc
  8604     1FC8  0DA2               	rlf	___xxtofl@arg,f
  8605     1FC9  0DA3               	rlf	___xxtofl@arg+1,f
  8606     1FCA  0DA4               	rlf	___xxtofl@arg+2,f
  8607     1FCB  0DA5               	rlf	___xxtofl@arg+3,f
  8608     1FCC  0BF6               	decfsz	??___xxtofl,f
  8609     1FCD  2FC7               	goto	u5545
  8610     1FCE                     l3400:
  8611     1FCE  1FA4               	btfss	___xxtofl@arg+2,7
  8612     1FCF  2FBF               	goto	l3402
  8613     1FD0                     l874:
  8614     1FD0  1821               	btfsc	___xxtofl@exp,0
  8615     1FD1  2FDA               	goto	l875
  8616     1FD2  30FF               	movlw	255
  8617     1FD3  05A2               	andwf	___xxtofl@arg,f
  8618     1FD4  30FF               	movlw	255
  8619     1FD5  05A3               	andwf	___xxtofl@arg+1,f
  8620     1FD6  307F               	movlw	127
  8621     1FD7  05A4               	andwf	___xxtofl@arg+2,f
  8622     1FD8  30FF               	movlw	255
  8623     1FD9  05A5               	andwf	___xxtofl@arg+3,f
  8624     1FDA                     l875:
  8625     1FDA  1003               	clrc
  8626     1FDB  0CA1               	rrf	___xxtofl@exp,f
  8627     1FDC  0821               	movf	___xxtofl@exp,w
  8628     1FDD  00F6               	movwf	??___xxtofl
  8629     1FDE  01F7               	clrf	??___xxtofl+1
  8630     1FDF  01F8               	clrf	??___xxtofl+2
  8631     1FE0  01F9               	clrf	??___xxtofl+3
  8632     1FE1  3018               	movlw	24
  8633     1FE2                     u5585:
  8634     1FE2  1003               	clrc
  8635     1FE3  0DF6               	rlf	??___xxtofl,f
  8636     1FE4  0DF7               	rlf	??___xxtofl+1,f
  8637     1FE5  0DF8               	rlf	??___xxtofl+2,f
  8638     1FE6  0DF9               	rlf	??___xxtofl+3,f
  8639     1FE7  3EFF               	addlw	-1
  8640     1FE8  1D03               	skipz
  8641     1FE9  2FE2               	goto	u5585
  8642     1FEA  0876               	movf	??___xxtofl,w
  8643     1FEB  04A2               	iorwf	___xxtofl@arg,f
  8644     1FEC  0877               	movf	??___xxtofl+1,w
  8645     1FED  04A3               	iorwf	___xxtofl@arg+1,f
  8646     1FEE  0878               	movf	??___xxtofl+2,w
  8647     1FEF  04A4               	iorwf	___xxtofl@arg+2,f
  8648     1FF0  0879               	movf	??___xxtofl+3,w
  8649     1FF1  04A5               	iorwf	___xxtofl@arg+3,f
  8650     1FF2  0820               	movf	___xxtofl@sign,w
  8651     1FF3  1D03               	btfss	3,2
  8652     1FF4  1FF5               	btfss	___xxtofl@val+3,7
  8653     1FF5  2FF7               	goto	l3414
  8654     1FF6  17A5               	bsf	___xxtofl@arg+3,7
  8655     1FF7                     l3414:
  8656     1FF7  0825               	movf	___xxtofl@arg+3,w
  8657     1FF8  00F5               	movwf	?___xxtofl+3
  8658     1FF9  0824               	movf	___xxtofl@arg+2,w
  8659     1FFA  00F4               	movwf	?___xxtofl+2
  8660     1FFB  0823               	movf	___xxtofl@arg+1,w
  8661     1FFC  00F3               	movwf	?___xxtofl+1
  8662     1FFD  0822               	movf	___xxtofl@arg,w
  8663     1FFE  00F2               	movwf	?___xxtofl
  8664     1FFF  0008               	return
  8665     2000                     __end_of___xxtofl:
  8666                           
  8667                           	psect	text31
  8668     09BA                     __ptext31:	
  8669 ;; *************** function ___flmul *****************
  8670 ;; Defined at:
  8671 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcmul.c"
  8672 ;; Parameters:    Size  Location     Type
  8673 ;;  b               4   25[BANK0 ] unsigned char 
  8674 ;;  a               4   29[BANK0 ] unsigned char 
  8675 ;; Auto vars:     Size  Location     Type
  8676 ;;  prod            4   45[BANK0 ] struct .
  8677 ;;  grs             4   40[BANK0 ] unsigned long 
  8678 ;;  temp            2   49[BANK0 ] struct .
  8679 ;;  bexp            1   44[BANK0 ] unsigned char 
  8680 ;;  aexp            1   39[BANK0 ] unsigned char 
  8681 ;;  sign            1   38[BANK0 ] unsigned char 
  8682 ;; Return value:  Size  Location     Type
  8683 ;;                  4   25[BANK0 ] unsigned char 
  8684 ;; Registers used:
  8685 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8686 ;; Tracked objects:
  8687 ;;		On entry : 0/0
  8688 ;;		On exit  : 0/0
  8689 ;;		Unchanged: 0/0
  8690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8691 ;;      Params:         0       8       0       0       0
  8692 ;;      Locals:         0      13       0       0       0
  8693 ;;      Temps:          0       5       0       0       0
  8694 ;;      Totals:         0      26       0       0       0
  8695 ;;Total ram usage:       26 bytes
  8696 ;; Hardware stack levels used: 1
  8697 ;; Hardware stack levels required when called: 2
  8698 ;; This function calls:
  8699 ;;		__Umul8_16
  8700 ;; This function is called by:
  8701 ;;		_LM35
  8702 ;;		_main
  8703 ;;		_fround
  8704 ;;		_scale
  8705 ;;		_sprintf
  8706 ;; This function uses a non-reentrant model
  8707 ;;
  8708                           
  8709     09BA                     ___flmul:	
  8710                           ;psect for function ___flmul
  8711                           
  8712                           
  8713                           ;incstack = 0
  8714                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8715     09BA  1283               	bcf	3,5	;RP0=0, select bank0
  8716     09BB  1303               	bcf	3,6	;RP1=0, select bank0
  8717     09BC  083C               	movf	___flmul@b+3,w
  8718     09BD  3980               	andlw	128
  8719     09BE  00C6               	movwf	___flmul@sign
  8720     09BF  083C               	movf	___flmul@b+3,w
  8721     09C0  00C1               	movwf	??___flmul
  8722     09C1  0741               	addwf	??___flmul,w
  8723     09C2  00CC               	movwf	___flmul@bexp
  8724     09C3  1BBB               	btfsc	___flmul@b+2,7
  8725     09C4  144C               	bsf	___flmul@bexp,0
  8726     09C5  084C               	movf	___flmul@bexp,w
  8727     09C6  1903               	btfsc	3,2
  8728     09C7  29D5               	goto	l3948
  8729     09C8  0A4C               	incf	___flmul@bexp,w
  8730     09C9  1D03               	btfss	3,2
  8731     09CA  29D3               	goto	l3946
  8732     09CB  3000               	movlw	0
  8733     09CC  00BC               	movwf	___flmul@b+3
  8734     09CD  3000               	movlw	0
  8735     09CE  00BB               	movwf	___flmul@b+2
  8736     09CF  3000               	movlw	0
  8737     09D0  00BA               	movwf	___flmul@b+1
  8738     09D1  3000               	movlw	0
  8739     09D2  00B9               	movwf	___flmul@b
  8740     09D3                     l3946:
  8741     09D3  17BB               	bsf	___flmul@b+2,7
  8742     09D4  29DD               	goto	l3950
  8743     09D5                     l3948:
  8744     09D5  3000               	movlw	0
  8745     09D6  00BC               	movwf	___flmul@b+3
  8746     09D7  3000               	movlw	0
  8747     09D8  00BB               	movwf	___flmul@b+2
  8748     09D9  3000               	movlw	0
  8749     09DA  00BA               	movwf	___flmul@b+1
  8750     09DB  3000               	movlw	0
  8751     09DC  00B9               	movwf	___flmul@b
  8752     09DD                     l3950:
  8753     09DD  0840               	movf	___flmul@a+3,w
  8754     09DE  3980               	andlw	128
  8755     09DF  00FF               	movwf	127
  8756     09E0  087F               	movf	127,w
  8757     09E1  06C6               	xorwf	___flmul@sign,f
  8758     09E2  0840               	movf	___flmul@a+3,w
  8759     09E3  00C1               	movwf	??___flmul
  8760     09E4  0741               	addwf	??___flmul,w
  8761     09E5  00C7               	movwf	___flmul@aexp
  8762     09E6  1BBF               	btfsc	___flmul@a+2,7
  8763     09E7  1447               	bsf	___flmul@aexp,0
  8764     09E8  0847               	movf	___flmul@aexp,w
  8765     09E9  1903               	btfsc	3,2
  8766     09EA  29F8               	goto	l3966
  8767     09EB  0A47               	incf	___flmul@aexp,w
  8768     09EC  1D03               	btfss	3,2
  8769     09ED  29F6               	goto	l3964
  8770     09EE  3000               	movlw	0
  8771     09EF  00C0               	movwf	___flmul@a+3
  8772     09F0  3000               	movlw	0
  8773     09F1  00BF               	movwf	___flmul@a+2
  8774     09F2  3000               	movlw	0
  8775     09F3  00BE               	movwf	___flmul@a+1
  8776     09F4  3000               	movlw	0
  8777     09F5  00BD               	movwf	___flmul@a
  8778     09F6                     l3964:
  8779     09F6  17BF               	bsf	___flmul@a+2,7
  8780     09F7  2A00               	goto	l3968
  8781     09F8                     l3966:
  8782     09F8  3000               	movlw	0
  8783     09F9  00C0               	movwf	___flmul@a+3
  8784     09FA  3000               	movlw	0
  8785     09FB  00BF               	movwf	___flmul@a+2
  8786     09FC  3000               	movlw	0
  8787     09FD  00BE               	movwf	___flmul@a+1
  8788     09FE  3000               	movlw	0
  8789     09FF  00BD               	movwf	___flmul@a
  8790     0A00                     l3968:
  8791     0A00  0847               	movf	___flmul@aexp,w
  8792     0A01  1D03               	btfss	3,2
  8793     0A02  084C               	movf	___flmul@bexp,w
  8794     0A03  1D03               	btfss	3,2
  8795     0A04  2A0E               	goto	l3976
  8796     0A05  3000               	movlw	0
  8797     0A06  00BC               	movwf	?___flmul+3
  8798     0A07  3000               	movlw	0
  8799     0A08  00BB               	movwf	?___flmul+2
  8800     0A09  3000               	movlw	0
  8801     0A0A  00BA               	movwf	?___flmul+1
  8802     0A0B  3000               	movlw	0
  8803     0A0C  00B9               	movwf	?___flmul
  8804     0A0D  0008               	return
  8805     0A0E                     l3976:
  8806     0A0E  0839               	movf	___flmul@b,w
  8807     0A0F  00F2               	movwf	__Umul8_16@multiplicand
  8808     0A10  083F               	movf	___flmul@a+2,w
  8809     0A11  160A  158A  235D  120A  158A  	fcall	__Umul8_16
  8810     0A16  0873               	movf	?__Umul8_16+1,w
  8811     0A17  1283               	bcf	3,5	;RP0=0, select bank0
  8812     0A18  1303               	bcf	3,6	;RP1=0, select bank0
  8813     0A19  00D2               	movwf	___flmul@temp+1
  8814     0A1A  0872               	movf	?__Umul8_16,w
  8815     0A1B  00D1               	movwf	___flmul@temp
  8816     0A1C  0851               	movf	___flmul@temp,w
  8817     0A1D  00C1               	movwf	??___flmul
  8818     0A1E  01C2               	clrf	??___flmul+1
  8819     0A1F  01C3               	clrf	??___flmul+2
  8820     0A20  01C4               	clrf	??___flmul+3
  8821     0A21  0844               	movf	??___flmul+3,w
  8822     0A22  00CB               	movwf	___flmul@grs+3
  8823     0A23  0843               	movf	??___flmul+2,w
  8824     0A24  00CA               	movwf	___flmul@grs+2
  8825     0A25  0842               	movf	??___flmul+1,w
  8826     0A26  00C9               	movwf	___flmul@grs+1
  8827     0A27  0841               	movf	??___flmul,w
  8828     0A28  00C8               	movwf	___flmul@grs
  8829     0A29  0852               	movf	___flmul@temp+1,w
  8830     0A2A  00C1               	movwf	??___flmul
  8831     0A2B  01C2               	clrf	??___flmul+1
  8832     0A2C  01C3               	clrf	??___flmul+2
  8833     0A2D  01C4               	clrf	??___flmul+3
  8834     0A2E  0844               	movf	??___flmul+3,w
  8835     0A2F  00D0               	movwf	___flmul@prod+3
  8836     0A30  0843               	movf	??___flmul+2,w
  8837     0A31  00CF               	movwf	___flmul@prod+2
  8838     0A32  0842               	movf	??___flmul+1,w
  8839     0A33  00CE               	movwf	___flmul@prod+1
  8840     0A34  0841               	movf	??___flmul,w
  8841     0A35  00CD               	movwf	___flmul@prod
  8842     0A36  083A               	movf	___flmul@b+1,w
  8843     0A37  00F2               	movwf	__Umul8_16@multiplicand
  8844     0A38  083E               	movf	___flmul@a+1,w
  8845     0A39  160A  158A  235D  120A  158A  	fcall	__Umul8_16
  8846     0A3E  0873               	movf	?__Umul8_16+1,w
  8847     0A3F  1283               	bcf	3,5	;RP0=0, select bank0
  8848     0A40  1303               	bcf	3,6	;RP1=0, select bank0
  8849     0A41  00D2               	movwf	___flmul@temp+1
  8850     0A42  0872               	movf	?__Umul8_16,w
  8851     0A43  00D1               	movwf	___flmul@temp
  8852     0A44  0851               	movf	___flmul@temp,w
  8853     0A45  00C1               	movwf	??___flmul
  8854     0A46  01C2               	clrf	??___flmul+1
  8855     0A47  01C3               	clrf	??___flmul+2
  8856     0A48  01C4               	clrf	??___flmul+3
  8857     0A49  0841               	movf	??___flmul,w
  8858     0A4A  07C8               	addwf	___flmul@grs,f
  8859     0A4B  0842               	movf	??___flmul+1,w
  8860     0A4C  1103               	clrz
  8861     0A4D  1803               	skipnc
  8862     0A4E  3E01               	addlw	1
  8863     0A4F  1D03               	btfss	3,2
  8864     0A50  07C9               	addwf	___flmul@grs+1,f
  8865     0A51  0843               	movf	??___flmul+2,w
  8866     0A52  1103               	clrz
  8867     0A53  1803               	skipnc
  8868     0A54  3E01               	addlw	1
  8869     0A55  1D03               	btfss	3,2
  8870     0A56  07CA               	addwf	___flmul@grs+2,f
  8871     0A57  0844               	movf	??___flmul+3,w
  8872     0A58  1103               	clrz
  8873     0A59  1803               	skipnc
  8874     0A5A  3E01               	addlw	1
  8875     0A5B  1D03               	btfss	3,2
  8876     0A5C  07CB               	addwf	___flmul@grs+3,f
  8877     0A5D  0852               	movf	___flmul@temp+1,w
  8878     0A5E  00C1               	movwf	??___flmul
  8879     0A5F  01C2               	clrf	??___flmul+1
  8880     0A60  01C3               	clrf	??___flmul+2
  8881     0A61  01C4               	clrf	??___flmul+3
  8882     0A62  0841               	movf	??___flmul,w
  8883     0A63  07CD               	addwf	___flmul@prod,f
  8884     0A64  0842               	movf	??___flmul+1,w
  8885     0A65  1103               	clrz
  8886     0A66  1803               	skipnc
  8887     0A67  3E01               	addlw	1
  8888     0A68  1D03               	btfss	3,2
  8889     0A69  07CE               	addwf	___flmul@prod+1,f
  8890     0A6A  0843               	movf	??___flmul+2,w
  8891     0A6B  1103               	clrz
  8892     0A6C  1803               	skipnc
  8893     0A6D  3E01               	addlw	1
  8894     0A6E  1D03               	btfss	3,2
  8895     0A6F  07CF               	addwf	___flmul@prod+2,f
  8896     0A70  0844               	movf	??___flmul+3,w
  8897     0A71  1103               	clrz
  8898     0A72  1803               	skipnc
  8899     0A73  3E01               	addlw	1
  8900     0A74  1D03               	btfss	3,2
  8901     0A75  07D0               	addwf	___flmul@prod+3,f
  8902     0A76  083B               	movf	___flmul@b+2,w
  8903     0A77  00F2               	movwf	__Umul8_16@multiplicand
  8904     0A78  083D               	movf	___flmul@a,w
  8905     0A79  160A  158A  235D  120A  158A  	fcall	__Umul8_16
  8906     0A7E  0873               	movf	?__Umul8_16+1,w
  8907     0A7F  1283               	bcf	3,5	;RP0=0, select bank0
  8908     0A80  1303               	bcf	3,6	;RP1=0, select bank0
  8909     0A81  00D2               	movwf	___flmul@temp+1
  8910     0A82  0872               	movf	?__Umul8_16,w
  8911     0A83  00D1               	movwf	___flmul@temp
  8912     0A84  0851               	movf	___flmul@temp,w
  8913     0A85  00C1               	movwf	??___flmul
  8914     0A86  01C2               	clrf	??___flmul+1
  8915     0A87  01C3               	clrf	??___flmul+2
  8916     0A88  01C4               	clrf	??___flmul+3
  8917     0A89  0841               	movf	??___flmul,w
  8918     0A8A  07C8               	addwf	___flmul@grs,f
  8919     0A8B  0842               	movf	??___flmul+1,w
  8920     0A8C  1103               	clrz
  8921     0A8D  1803               	skipnc
  8922     0A8E  3E01               	addlw	1
  8923     0A8F  1D03               	btfss	3,2
  8924     0A90  07C9               	addwf	___flmul@grs+1,f
  8925     0A91  0843               	movf	??___flmul+2,w
  8926     0A92  1103               	clrz
  8927     0A93  1803               	skipnc
  8928     0A94  3E01               	addlw	1
  8929     0A95  1D03               	btfss	3,2
  8930     0A96  07CA               	addwf	___flmul@grs+2,f
  8931     0A97  0844               	movf	??___flmul+3,w
  8932     0A98  1103               	clrz
  8933     0A99  1803               	skipnc
  8934     0A9A  3E01               	addlw	1
  8935     0A9B  1D03               	btfss	3,2
  8936     0A9C  07CB               	addwf	___flmul@grs+3,f
  8937     0A9D  0852               	movf	___flmul@temp+1,w
  8938     0A9E  00C1               	movwf	??___flmul
  8939     0A9F  01C2               	clrf	??___flmul+1
  8940     0AA0  01C3               	clrf	??___flmul+2
  8941     0AA1  01C4               	clrf	??___flmul+3
  8942     0AA2  0841               	movf	??___flmul,w
  8943     0AA3  07CD               	addwf	___flmul@prod,f
  8944     0AA4  0842               	movf	??___flmul+1,w
  8945     0AA5  1103               	clrz
  8946     0AA6  1803               	skipnc
  8947     0AA7  3E01               	addlw	1
  8948     0AA8  1D03               	btfss	3,2
  8949     0AA9  07CE               	addwf	___flmul@prod+1,f
  8950     0AAA  0843               	movf	??___flmul+2,w
  8951     0AAB  1103               	clrz
  8952     0AAC  1803               	skipnc
  8953     0AAD  3E01               	addlw	1
  8954     0AAE  1D03               	btfss	3,2
  8955     0AAF  07CF               	addwf	___flmul@prod+2,f
  8956     0AB0  0844               	movf	??___flmul+3,w
  8957     0AB1  1103               	clrz
  8958     0AB2  1803               	skipnc
  8959     0AB3  3E01               	addlw	1
  8960     0AB4  1D03               	btfss	3,2
  8961     0AB5  07D0               	addwf	___flmul@prod+3,f
  8962     0AB6  3008               	movlw	8
  8963     0AB7  00C1               	movwf	??___flmul
  8964     0AB8                     u6435:
  8965     0AB8  1003               	clrc
  8966     0AB9  0DC8               	rlf	___flmul@grs,f
  8967     0ABA  0DC9               	rlf	___flmul@grs+1,f
  8968     0ABB  0DCA               	rlf	___flmul@grs+2,f
  8969     0ABC  0DCB               	rlf	___flmul@grs+3,f
  8970     0ABD  0BC1               	decfsz	??___flmul,f
  8971     0ABE  2AB8               	goto	u6435
  8972     0ABF  083A               	movf	___flmul@b+1,w
  8973     0AC0  00F2               	movwf	__Umul8_16@multiplicand
  8974     0AC1  083D               	movf	___flmul@a,w
  8975     0AC2  160A  158A  235D  120A  158A  	fcall	__Umul8_16
  8976     0AC7  0873               	movf	?__Umul8_16+1,w
  8977     0AC8  1283               	bcf	3,5	;RP0=0, select bank0
  8978     0AC9  1303               	bcf	3,6	;RP1=0, select bank0
  8979     0ACA  00D2               	movwf	___flmul@temp+1
  8980     0ACB  0872               	movf	?__Umul8_16,w
  8981     0ACC  00D1               	movwf	___flmul@temp
  8982     0ACD  0851               	movf	___flmul@temp,w
  8983     0ACE  00C1               	movwf	??___flmul
  8984     0ACF  0852               	movf	___flmul@temp+1,w
  8985     0AD0  00C2               	movwf	??___flmul+1
  8986     0AD1  01C3               	clrf	??___flmul+2
  8987     0AD2  01C4               	clrf	??___flmul+3
  8988     0AD3  0841               	movf	??___flmul,w
  8989     0AD4  07C8               	addwf	___flmul@grs,f
  8990     0AD5  0842               	movf	??___flmul+1,w
  8991     0AD6  1103               	clrz
  8992     0AD7  1803               	skipnc
  8993     0AD8  3E01               	addlw	1
  8994     0AD9  1D03               	btfss	3,2
  8995     0ADA  07C9               	addwf	___flmul@grs+1,f
  8996     0ADB  0843               	movf	??___flmul+2,w
  8997     0ADC  1103               	clrz
  8998     0ADD  1803               	skipnc
  8999     0ADE  3E01               	addlw	1
  9000     0ADF  1D03               	btfss	3,2
  9001     0AE0  07CA               	addwf	___flmul@grs+2,f
  9002     0AE1  0844               	movf	??___flmul+3,w
  9003     0AE2  1103               	clrz
  9004     0AE3  1803               	skipnc
  9005     0AE4  3E01               	addlw	1
  9006     0AE5  1D03               	btfss	3,2
  9007     0AE6  07CB               	addwf	___flmul@grs+3,f
  9008     0AE7  0839               	movf	___flmul@b,w
  9009     0AE8  00F2               	movwf	__Umul8_16@multiplicand
  9010     0AE9  083E               	movf	___flmul@a+1,w
  9011     0AEA  160A  158A  235D  120A  158A  	fcall	__Umul8_16
  9012     0AEF  0873               	movf	?__Umul8_16+1,w
  9013     0AF0  1283               	bcf	3,5	;RP0=0, select bank0
  9014     0AF1  1303               	bcf	3,6	;RP1=0, select bank0
  9015     0AF2  00D2               	movwf	___flmul@temp+1
  9016     0AF3  0872               	movf	?__Umul8_16,w
  9017     0AF4  00D1               	movwf	___flmul@temp
  9018     0AF5  0851               	movf	___flmul@temp,w
  9019     0AF6  00C1               	movwf	??___flmul
  9020     0AF7  0852               	movf	___flmul@temp+1,w
  9021     0AF8  00C2               	movwf	??___flmul+1
  9022     0AF9  01C3               	clrf	??___flmul+2
  9023     0AFA  01C4               	clrf	??___flmul+3
  9024     0AFB  0841               	movf	??___flmul,w
  9025     0AFC  07C8               	addwf	___flmul@grs,f
  9026     0AFD  0842               	movf	??___flmul+1,w
  9027     0AFE  1103               	clrz
  9028     0AFF  1803               	skipnc
  9029     0B00  3E01               	addlw	1
  9030     0B01  1D03               	btfss	3,2
  9031     0B02  07C9               	addwf	___flmul@grs+1,f
  9032     0B03  0843               	movf	??___flmul+2,w
  9033     0B04  1103               	clrz
  9034     0B05  1803               	skipnc
  9035     0B06  3E01               	addlw	1
  9036     0B07  1D03               	btfss	3,2
  9037     0B08  07CA               	addwf	___flmul@grs+2,f
  9038     0B09  0844               	movf	??___flmul+3,w
  9039     0B0A  1103               	clrz
  9040     0B0B  1803               	skipnc
  9041     0B0C  3E01               	addlw	1
  9042     0B0D  1D03               	btfss	3,2
  9043     0B0E  07CB               	addwf	___flmul@grs+3,f
  9044     0B0F  3008               	movlw	8
  9045     0B10  00C1               	movwf	??___flmul
  9046     0B11                     u6465:
  9047     0B11  1003               	clrc
  9048     0B12  0DC8               	rlf	___flmul@grs,f
  9049     0B13  0DC9               	rlf	___flmul@grs+1,f
  9050     0B14  0DCA               	rlf	___flmul@grs+2,f
  9051     0B15  0DCB               	rlf	___flmul@grs+3,f
  9052     0B16  0BC1               	decfsz	??___flmul,f
  9053     0B17  2B11               	goto	u6465
  9054     0B18  0839               	movf	___flmul@b,w
  9055     0B19  00F2               	movwf	__Umul8_16@multiplicand
  9056     0B1A  083D               	movf	___flmul@a,w
  9057     0B1B  160A  158A  235D  120A  158A  	fcall	__Umul8_16
  9058     0B20  0873               	movf	?__Umul8_16+1,w
  9059     0B21  1283               	bcf	3,5	;RP0=0, select bank0
  9060     0B22  1303               	bcf	3,6	;RP1=0, select bank0
  9061     0B23  00D2               	movwf	___flmul@temp+1
  9062     0B24  0872               	movf	?__Umul8_16,w
  9063     0B25  00D1               	movwf	___flmul@temp
  9064     0B26  0851               	movf	___flmul@temp,w
  9065     0B27  00C1               	movwf	??___flmul
  9066     0B28  0852               	movf	___flmul@temp+1,w
  9067     0B29  00C2               	movwf	??___flmul+1
  9068     0B2A  01C3               	clrf	??___flmul+2
  9069     0B2B  01C4               	clrf	??___flmul+3
  9070     0B2C  0841               	movf	??___flmul,w
  9071     0B2D  07C8               	addwf	___flmul@grs,f
  9072     0B2E  0842               	movf	??___flmul+1,w
  9073     0B2F  1103               	clrz
  9074     0B30  1803               	skipnc
  9075     0B31  3E01               	addlw	1
  9076     0B32  1D03               	btfss	3,2
  9077     0B33  07C9               	addwf	___flmul@grs+1,f
  9078     0B34  0843               	movf	??___flmul+2,w
  9079     0B35  1103               	clrz
  9080     0B36  1803               	skipnc
  9081     0B37  3E01               	addlw	1
  9082     0B38  1D03               	btfss	3,2
  9083     0B39  07CA               	addwf	___flmul@grs+2,f
  9084     0B3A  0844               	movf	??___flmul+3,w
  9085     0B3B  1103               	clrz
  9086     0B3C  1803               	skipnc
  9087     0B3D  3E01               	addlw	1
  9088     0B3E  1D03               	btfss	3,2
  9089     0B3F  07CB               	addwf	___flmul@grs+3,f
  9090     0B40  083A               	movf	___flmul@b+1,w
  9091     0B41  00F2               	movwf	__Umul8_16@multiplicand
  9092     0B42  083F               	movf	___flmul@a+2,w
  9093     0B43  160A  158A  235D  120A  158A  	fcall	__Umul8_16
  9094     0B48  0873               	movf	?__Umul8_16+1,w
  9095     0B49  1283               	bcf	3,5	;RP0=0, select bank0
  9096     0B4A  1303               	bcf	3,6	;RP1=0, select bank0
  9097     0B4B  00D2               	movwf	___flmul@temp+1
  9098     0B4C  0872               	movf	?__Umul8_16,w
  9099     0B4D  00D1               	movwf	___flmul@temp
  9100     0B4E  0851               	movf	___flmul@temp,w
  9101     0B4F  00C1               	movwf	??___flmul
  9102     0B50  0852               	movf	___flmul@temp+1,w
  9103     0B51  00C2               	movwf	??___flmul+1
  9104     0B52  01C3               	clrf	??___flmul+2
  9105     0B53  01C4               	clrf	??___flmul+3
  9106     0B54  0841               	movf	??___flmul,w
  9107     0B55  07CD               	addwf	___flmul@prod,f
  9108     0B56  0842               	movf	??___flmul+1,w
  9109     0B57  1103               	clrz
  9110     0B58  1803               	skipnc
  9111     0B59  3E01               	addlw	1
  9112     0B5A  1D03               	btfss	3,2
  9113     0B5B  07CE               	addwf	___flmul@prod+1,f
  9114     0B5C  0843               	movf	??___flmul+2,w
  9115     0B5D  1103               	clrz
  9116     0B5E  1803               	skipnc
  9117     0B5F  3E01               	addlw	1
  9118     0B60  1D03               	btfss	3,2
  9119     0B61  07CF               	addwf	___flmul@prod+2,f
  9120     0B62  0844               	movf	??___flmul+3,w
  9121     0B63  1103               	clrz
  9122     0B64  1803               	skipnc
  9123     0B65  3E01               	addlw	1
  9124     0B66  1D03               	btfss	3,2
  9125     0B67  07D0               	addwf	___flmul@prod+3,f
  9126     0B68  083B               	movf	___flmul@b+2,w
  9127     0B69  00F2               	movwf	__Umul8_16@multiplicand
  9128     0B6A  083E               	movf	___flmul@a+1,w
  9129     0B6B  160A  158A  235D  120A  158A  	fcall	__Umul8_16
  9130     0B70  0873               	movf	?__Umul8_16+1,w
  9131     0B71  1283               	bcf	3,5	;RP0=0, select bank0
  9132     0B72  1303               	bcf	3,6	;RP1=0, select bank0
  9133     0B73  00D2               	movwf	___flmul@temp+1
  9134     0B74  0872               	movf	?__Umul8_16,w
  9135     0B75  00D1               	movwf	___flmul@temp
  9136     0B76  0851               	movf	___flmul@temp,w
  9137     0B77  00C1               	movwf	??___flmul
  9138     0B78  0852               	movf	___flmul@temp+1,w
  9139     0B79  00C2               	movwf	??___flmul+1
  9140     0B7A  01C3               	clrf	??___flmul+2
  9141     0B7B  01C4               	clrf	??___flmul+3
  9142     0B7C  0841               	movf	??___flmul,w
  9143     0B7D  07CD               	addwf	___flmul@prod,f
  9144     0B7E  0842               	movf	??___flmul+1,w
  9145     0B7F  1103               	clrz
  9146     0B80  1803               	skipnc
  9147     0B81  3E01               	addlw	1
  9148     0B82  1D03               	btfss	3,2
  9149     0B83  07CE               	addwf	___flmul@prod+1,f
  9150     0B84  0843               	movf	??___flmul+2,w
  9151     0B85  1103               	clrz
  9152     0B86  1803               	skipnc
  9153     0B87  3E01               	addlw	1
  9154     0B88  1D03               	btfss	3,2
  9155     0B89  07CF               	addwf	___flmul@prod+2,f
  9156     0B8A  0844               	movf	??___flmul+3,w
  9157     0B8B  1103               	clrz
  9158     0B8C  1803               	skipnc
  9159     0B8D  3E01               	addlw	1
  9160     0B8E  1D03               	btfss	3,2
  9161     0B8F  07D0               	addwf	___flmul@prod+3,f
  9162     0B90  083B               	movf	___flmul@b+2,w
  9163     0B91  00F2               	movwf	__Umul8_16@multiplicand
  9164     0B92  083F               	movf	___flmul@a+2,w
  9165     0B93  160A  158A  235D  120A  158A  	fcall	__Umul8_16
  9166     0B98  0873               	movf	?__Umul8_16+1,w
  9167     0B99  1283               	bcf	3,5	;RP0=0, select bank0
  9168     0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  9169     0B9B  00D2               	movwf	___flmul@temp+1
  9170     0B9C  0872               	movf	?__Umul8_16,w
  9171     0B9D  00D1               	movwf	___flmul@temp
  9172     0B9E  0851               	movf	___flmul@temp,w
  9173     0B9F  00C1               	movwf	??___flmul
  9174     0BA0  0852               	movf	___flmul@temp+1,w
  9175     0BA1  00C2               	movwf	??___flmul+1
  9176     0BA2  01C3               	clrf	??___flmul+2
  9177     0BA3  01C4               	clrf	??___flmul+3
  9178     0BA4  3008               	movlw	8
  9179     0BA5                     u6505:
  9180     0BA5  1003               	clrc
  9181     0BA6  0DC1               	rlf	??___flmul,f
  9182     0BA7  0DC2               	rlf	??___flmul+1,f
  9183     0BA8  0DC3               	rlf	??___flmul+2,f
  9184     0BA9  0DC4               	rlf	??___flmul+3,f
  9185     0BAA  3EFF               	addlw	-1
  9186     0BAB  1D03               	skipz
  9187     0BAC  2BA5               	goto	u6505
  9188     0BAD  0841               	movf	??___flmul,w
  9189     0BAE  07CD               	addwf	___flmul@prod,f
  9190     0BAF  0842               	movf	??___flmul+1,w
  9191     0BB0  1103               	clrz
  9192     0BB1  1803               	skipnc
  9193     0BB2  3E01               	addlw	1
  9194     0BB3  1D03               	btfss	3,2
  9195     0BB4  07CE               	addwf	___flmul@prod+1,f
  9196     0BB5  0843               	movf	??___flmul+2,w
  9197     0BB6  1103               	clrz
  9198     0BB7  1803               	skipnc
  9199     0BB8  3E01               	addlw	1
  9200     0BB9  1D03               	btfss	3,2
  9201     0BBA  07CF               	addwf	___flmul@prod+2,f
  9202     0BBB  0844               	movf	??___flmul+3,w
  9203     0BBC  1103               	clrz
  9204     0BBD  1803               	skipnc
  9205     0BBE  3E01               	addlw	1
  9206     0BBF  1D03               	btfss	3,2
  9207     0BC0  07D0               	addwf	___flmul@prod+3,f
  9208     0BC1  0848               	movf	___flmul@grs,w
  9209     0BC2  00C1               	movwf	??___flmul
  9210     0BC3  0849               	movf	___flmul@grs+1,w
  9211     0BC4  00C2               	movwf	??___flmul+1
  9212     0BC5  084A               	movf	___flmul@grs+2,w
  9213     0BC6  00C3               	movwf	??___flmul+2
  9214     0BC7  084B               	movf	___flmul@grs+3,w
  9215     0BC8  00C4               	movwf	??___flmul+3
  9216     0BC9  3018               	movlw	24
  9217     0BCA                     u6525:
  9218     0BCA  1003               	clrc
  9219     0BCB  0CC4               	rrf	??___flmul+3,f
  9220     0BCC  0CC3               	rrf	??___flmul+2,f
  9221     0BCD  0CC2               	rrf	??___flmul+1,f
  9222     0BCE  0CC1               	rrf	??___flmul,f
  9223     0BCF  3EFF               	addlw	-1
  9224     0BD0  1D03               	skipz
  9225     0BD1  2BCA               	goto	u6525
  9226     0BD2  0841               	movf	??___flmul,w
  9227     0BD3  07CD               	addwf	___flmul@prod,f
  9228     0BD4  0842               	movf	??___flmul+1,w
  9229     0BD5  1103               	clrz
  9230     0BD6  1803               	skipnc
  9231     0BD7  3E01               	addlw	1
  9232     0BD8  1D03               	btfss	3,2
  9233     0BD9  07CE               	addwf	___flmul@prod+1,f
  9234     0BDA  0843               	movf	??___flmul+2,w
  9235     0BDB  1103               	clrz
  9236     0BDC  1803               	skipnc
  9237     0BDD  3E01               	addlw	1
  9238     0BDE  1D03               	btfss	3,2
  9239     0BDF  07CF               	addwf	___flmul@prod+2,f
  9240     0BE0  0844               	movf	??___flmul+3,w
  9241     0BE1  1103               	clrz
  9242     0BE2  1803               	skipnc
  9243     0BE3  3E01               	addlw	1
  9244     0BE4  1D03               	btfss	3,2
  9245     0BE5  07D0               	addwf	___flmul@prod+3,f
  9246     0BE6  3008               	movlw	8
  9247     0BE7  00C1               	movwf	??___flmul
  9248     0BE8                     u6545:
  9249     0BE8  1003               	clrc
  9250     0BE9  0DC8               	rlf	___flmul@grs,f
  9251     0BEA  0DC9               	rlf	___flmul@grs+1,f
  9252     0BEB  0DCA               	rlf	___flmul@grs+2,f
  9253     0BEC  0DCB               	rlf	___flmul@grs+3,f
  9254     0BED  0BC1               	decfsz	??___flmul,f
  9255     0BEE  2BE8               	goto	u6545
  9256     0BEF  084C               	movf	___flmul@bexp,w
  9257     0BF0  0747               	addwf	___flmul@aexp,w
  9258     0BF1  00C1               	movwf	??___flmul
  9259     0BF2  01C2               	clrf	??___flmul+1
  9260     0BF3  0DC2               	rlf	??___flmul+1,f
  9261     0BF4  0841               	movf	??___flmul,w
  9262     0BF5  3E82               	addlw	130
  9263     0BF6  00D1               	movwf	___flmul@temp
  9264     0BF7  0842               	movf	??___flmul+1,w
  9265     0BF8  1803               	skipnc
  9266     0BF9  3E01               	addlw	1
  9267     0BFA  3EFF               	addlw	255
  9268     0BFB  00D2               	movwf	___flmul@temp+1
  9269     0BFC                     l4028:
  9270     0BFC  1BCF               	btfsc	___flmul@prod+2,7
  9271     0BFD  2C19               	goto	l4030
  9272     0BFE  3001               	movlw	1
  9273     0BFF  00C1               	movwf	??___flmul
  9274     0C00                     u6555:
  9275     0C00  1003               	clrc
  9276     0C01  0DCD               	rlf	___flmul@prod,f
  9277     0C02  0DCE               	rlf	___flmul@prod+1,f
  9278     0C03  0DCF               	rlf	___flmul@prod+2,f
  9279     0C04  0DD0               	rlf	___flmul@prod+3,f
  9280     0C05  0BC1               	decfsz	??___flmul,f
  9281     0C06  2C00               	goto	u6555
  9282     0C07  1BCB               	btfsc	___flmul@grs+3,7
  9283     0C08  144D               	bsf	___flmul@prod,0
  9284     0C09  3001               	movlw	1
  9285     0C0A  00C1               	movwf	??___flmul
  9286     0C0B                     u6575:
  9287     0C0B  1003               	clrc
  9288     0C0C  0DC8               	rlf	___flmul@grs,f
  9289     0C0D  0DC9               	rlf	___flmul@grs+1,f
  9290     0C0E  0DCA               	rlf	___flmul@grs+2,f
  9291     0C0F  0DCB               	rlf	___flmul@grs+3,f
  9292     0C10  0BC1               	decfsz	??___flmul,f
  9293     0C11  2C0B               	goto	u6575
  9294     0C12  30FF               	movlw	255
  9295     0C13  07D1               	addwf	___flmul@temp,f
  9296     0C14  1803               	skipnc
  9297     0C15  0AD2               	incf	___flmul@temp+1,f
  9298     0C16  30FF               	movlw	255
  9299     0C17  07D2               	addwf	___flmul@temp+1,f
  9300     0C18  2BFC               	goto	l4028
  9301     0C19                     l4030:
  9302     0C19  01C7               	clrf	___flmul@aexp
  9303     0C1A  1FCB               	btfss	___flmul@grs+3,7
  9304     0C1B  2C32               	goto	l4040
  9305     0C1C  30FF               	movlw	255
  9306     0C1D  0548               	andwf	___flmul@grs,w
  9307     0C1E  00C1               	movwf	??___flmul
  9308     0C1F  30FF               	movlw	255
  9309     0C20  0549               	andwf	___flmul@grs+1,w
  9310     0C21  00C2               	movwf	??___flmul+1
  9311     0C22  30FF               	movlw	255
  9312     0C23  054A               	andwf	___flmul@grs+2,w
  9313     0C24  00C3               	movwf	??___flmul+2
  9314     0C25  307F               	movlw	127
  9315     0C26  054B               	andwf	___flmul@grs+3,w
  9316     0C27  00C4               	movwf	??___flmul+3
  9317     0C28  0844               	movf	??___flmul+3,w
  9318     0C29  0443               	iorwf	??___flmul+2,w
  9319     0C2A  0442               	iorwf	??___flmul+1,w
  9320     0C2B  0441               	iorwf	??___flmul,w
  9321     0C2C  1903               	skipnz
  9322     0C2D  184D               	btfsc	___flmul@prod,0
  9323     0C2E  2C30               	goto	l4036
  9324     0C2F  2C32               	goto	l4040
  9325     0C30                     l4036:
  9326     0C30  01C7               	clrf	___flmul@aexp
  9327     0C31  0AC7               	incf	___flmul@aexp,f
  9328     0C32                     l4040:
  9329     0C32  0847               	movf	___flmul@aexp,w
  9330     0C33  1903               	btfsc	3,2
  9331     0C34  2C64               	goto	l4050
  9332     0C35  3001               	movlw	1
  9333     0C36  07CD               	addwf	___flmul@prod,f
  9334     0C37  3000               	movlw	0
  9335     0C38  1803               	skipnc
  9336     0C39  3001               	movlw	1
  9337     0C3A  07CE               	addwf	___flmul@prod+1,f
  9338     0C3B  3000               	movlw	0
  9339     0C3C  1803               	skipnc
  9340     0C3D  3001               	movlw	1
  9341     0C3E  07CF               	addwf	___flmul@prod+2,f
  9342     0C3F  3000               	movlw	0
  9343     0C40  1803               	skipnc
  9344     0C41  3001               	movlw	1
  9345     0C42  07D0               	addwf	___flmul@prod+3,f
  9346     0C43  1C50               	btfss	___flmul@prod+3,0
  9347     0C44  2C64               	goto	l4050
  9348     0C45  084D               	movf	___flmul@prod,w
  9349     0C46  00C1               	movwf	??___flmul
  9350     0C47  084E               	movf	___flmul@prod+1,w
  9351     0C48  00C2               	movwf	??___flmul+1
  9352     0C49  084F               	movf	___flmul@prod+2,w
  9353     0C4A  00C3               	movwf	??___flmul+2
  9354     0C4B  0850               	movf	___flmul@prod+3,w
  9355     0C4C  00C4               	movwf	??___flmul+3
  9356     0C4D  3001               	movlw	1
  9357     0C4E  00C5               	movwf	??___flmul+4
  9358     0C4F                     u6645:
  9359     0C4F  0D44               	rlf	??___flmul+3,w
  9360     0C50  0CC4               	rrf	??___flmul+3,f
  9361     0C51  0CC3               	rrf	??___flmul+2,f
  9362     0C52  0CC2               	rrf	??___flmul+1,f
  9363     0C53  0CC1               	rrf	??___flmul,f
  9364     0C54  0BC5               	decfsz	??___flmul+4,f
  9365     0C55  2C4F               	goto	u6645
  9366     0C56  0844               	movf	??___flmul+3,w
  9367     0C57  00D0               	movwf	___flmul@prod+3
  9368     0C58  0843               	movf	??___flmul+2,w
  9369     0C59  00CF               	movwf	___flmul@prod+2
  9370     0C5A  0842               	movf	??___flmul+1,w
  9371     0C5B  00CE               	movwf	___flmul@prod+1
  9372     0C5C  0841               	movf	??___flmul,w
  9373     0C5D  00CD               	movwf	___flmul@prod
  9374     0C5E  3001               	movlw	1
  9375     0C5F  07D1               	addwf	___flmul@temp,f
  9376     0C60  1803               	skipnc
  9377     0C61  0AD2               	incf	___flmul@temp+1,f
  9378     0C62  3000               	movlw	0
  9379     0C63  07D2               	addwf	___flmul@temp+1,f
  9380     0C64                     l4050:
  9381     0C64  0852               	movf	___flmul@temp+1,w
  9382     0C65  3A80               	xorlw	128
  9383     0C66  00FF               	movwf	127
  9384     0C67  3080               	movlw	128
  9385     0C68  027F               	subwf	127,w
  9386     0C69  1D03               	skipz
  9387     0C6A  2C6D               	goto	u6655
  9388     0C6B  30FF               	movlw	255
  9389     0C6C  0251               	subwf	___flmul@temp,w
  9390     0C6D                     u6655:
  9391     0C6D  1C03               	skipc
  9392     0C6E  2C7A               	goto	l4054
  9393     0C6F  307F               	movlw	127
  9394     0C70  1283               	bcf	3,5	;RP0=0, select bank0
  9395     0C71  1303               	bcf	3,6	;RP1=0, select bank0
  9396     0C72  00D0               	movwf	___flmul@prod+3
  9397     0C73  3080               	movlw	128
  9398     0C74  00CF               	movwf	___flmul@prod+2
  9399     0C75  3000               	movlw	0
  9400     0C76  00CE               	movwf	___flmul@prod+1
  9401     0C77  3000               	movlw	0
  9402     0C78  00CD               	movwf	___flmul@prod
  9403     0C79  2CA6               	goto	l4068
  9404     0C7A                     l4054:
  9405     0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  9406     0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  9407     0C7C  0852               	movf	___flmul@temp+1,w
  9408     0C7D  3A80               	xorlw	128
  9409     0C7E  00FF               	movwf	127
  9410     0C7F  3080               	movlw	128
  9411     0C80  027F               	subwf	127,w
  9412     0C81  1D03               	skipz
  9413     0C82  2C85               	goto	u6665
  9414     0C83  3001               	movlw	1
  9415     0C84  0251               	subwf	___flmul@temp,w
  9416     0C85                     u6665:
  9417     0C85  1803               	skipnc
  9418     0C86  2C93               	goto	l4060
  9419     0C87  3000               	movlw	0
  9420     0C88  1283               	bcf	3,5	;RP0=0, select bank0
  9421     0C89  1303               	bcf	3,6	;RP1=0, select bank0
  9422     0C8A  00D0               	movwf	___flmul@prod+3
  9423     0C8B  3000               	movlw	0
  9424     0C8C  00CF               	movwf	___flmul@prod+2
  9425     0C8D  3000               	movlw	0
  9426     0C8E  00CE               	movwf	___flmul@prod+1
  9427     0C8F  3000               	movlw	0
  9428     0C90  00CD               	movwf	___flmul@prod
  9429     0C91  01C6               	clrf	___flmul@sign
  9430     0C92  2CA6               	goto	l4068
  9431     0C93                     l4060:
  9432     0C93  1283               	bcf	3,5	;RP0=0, select bank0
  9433     0C94  1303               	bcf	3,6	;RP1=0, select bank0
  9434     0C95  0851               	movf	___flmul@temp,w
  9435     0C96  00CC               	movwf	___flmul@bexp
  9436     0C97  30FF               	movlw	255
  9437     0C98  05CD               	andwf	___flmul@prod,f
  9438     0C99  30FF               	movlw	255
  9439     0C9A  05CE               	andwf	___flmul@prod+1,f
  9440     0C9B  307F               	movlw	127
  9441     0C9C  05CF               	andwf	___flmul@prod+2,f
  9442     0C9D  3000               	movlw	0
  9443     0C9E  05D0               	andwf	___flmul@prod+3,f
  9444     0C9F  184C               	btfsc	___flmul@bexp,0
  9445     0CA0  17CF               	bsf	___flmul@prod+2,7
  9446     0CA1  084C               	movf	___flmul@bexp,w
  9447     0CA2  00C1               	movwf	??___flmul
  9448     0CA3  1003               	clrc
  9449     0CA4  0C41               	rrf	??___flmul,w
  9450     0CA5  00D0               	movwf	___flmul@prod+3
  9451     0CA6                     l4068:
  9452     0CA6  0846               	movf	___flmul@sign,w
  9453     0CA7  00FF               	movwf	127
  9454     0CA8  087F               	movf	127,w
  9455     0CA9  04D0               	iorwf	___flmul@prod+3,f
  9456     0CAA  0850               	movf	___flmul@prod+3,w
  9457     0CAB  00BC               	movwf	?___flmul+3
  9458     0CAC  084F               	movf	___flmul@prod+2,w
  9459     0CAD  00BB               	movwf	?___flmul+2
  9460     0CAE  084E               	movf	___flmul@prod+1,w
  9461     0CAF  00BA               	movwf	?___flmul+1
  9462     0CB0  084D               	movf	___flmul@prod,w
  9463     0CB1  00B9               	movwf	?___flmul
  9464     0CB2  0008               	return
  9465     0CB3                     __end_of___flmul:
  9466                           
  9467                           	psect	text32
  9468     1B5D                     __ptext32:	
  9469 ;; *************** function __Umul8_16 *****************
  9470 ;; Defined at:
  9471 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8_16.c"
  9472 ;; Parameters:    Size  Location     Type
  9473 ;;  multiplier      1    wreg     unsigned char 
  9474 ;;  multiplicand    1    2[COMMON] unsigned char 
  9475 ;; Auto vars:     Size  Location     Type
  9476 ;;  multiplier      1    4[BANK0 ] unsigned char 
  9477 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  9478 ;;  product         2    0[BANK0 ] unsigned int 
  9479 ;; Return value:  Size  Location     Type
  9480 ;;                  2    2[COMMON] unsigned int 
  9481 ;; Registers used:
  9482 ;;		wreg, status,2, status,0
  9483 ;; Tracked objects:
  9484 ;;		On entry : 0/0
  9485 ;;		On exit  : 0/0
  9486 ;;		Unchanged: 0/0
  9487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9488 ;;      Params:         2       0       0       0       0
  9489 ;;      Locals:         0       5       0       0       0
  9490 ;;      Temps:          2       0       0       0       0
  9491 ;;      Totals:         4       5       0       0       0
  9492 ;;Total ram usage:        9 bytes
  9493 ;; Hardware stack levels used: 1
  9494 ;; Hardware stack levels required when called: 1
  9495 ;; This function calls:
  9496 ;;		Nothing
  9497 ;; This function is called by:
  9498 ;;		___flmul
  9499 ;; This function uses a non-reentrant model
  9500 ;;
  9501                           
  9502     1B5D                     __Umul8_16:	
  9503                           ;psect for function __Umul8_16
  9504                           
  9505                           
  9506                           ;incstack = 0
  9507                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9508                           ;__Umul8_16@multiplier stored from wreg
  9509     1B5D  1283               	bcf	3,5	;RP0=0, select bank0
  9510     1B5E  1303               	bcf	3,6	;RP1=0, select bank0
  9511     1B5F  00A4               	movwf	__Umul8_16@multiplier
  9512     1B60  01A0               	clrf	__Umul8_16@product
  9513     1B61  01A1               	clrf	__Umul8_16@product+1
  9514     1B62  0872               	movf	__Umul8_16@multiplicand,w
  9515     1B63  00F4               	movwf	??__Umul8_16
  9516     1B64  01F5               	clrf	??__Umul8_16+1
  9517     1B65  0874               	movf	??__Umul8_16,w
  9518     1B66  00A2               	movwf	__Umul8_16@word_mpld
  9519     1B67  0875               	movf	??__Umul8_16+1,w
  9520     1B68  00A3               	movwf	__Umul8_16@word_mpld+1
  9521     1B69                     l3844:
  9522     1B69  1C24               	btfss	__Umul8_16@multiplier,0
  9523     1B6A  2B71               	goto	l836
  9524     1B6B  0822               	movf	__Umul8_16@word_mpld,w
  9525     1B6C  07A0               	addwf	__Umul8_16@product,f
  9526     1B6D  1803               	skipnc
  9527     1B6E  0AA1               	incf	__Umul8_16@product+1,f
  9528     1B6F  0823               	movf	__Umul8_16@word_mpld+1,w
  9529     1B70  07A1               	addwf	__Umul8_16@product+1,f
  9530     1B71                     l836:
  9531     1B71  3001               	movlw	1
  9532     1B72                     u6125:
  9533     1B72  1003               	clrc
  9534     1B73  0DA2               	rlf	__Umul8_16@word_mpld,f
  9535     1B74  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  9536     1B75  3EFF               	addlw	-1
  9537     1B76  1D03               	skipz
  9538     1B77  2B72               	goto	u6125
  9539     1B78  1003               	clrc
  9540     1B79  0CA4               	rrf	__Umul8_16@multiplier,f
  9541     1B7A  0824               	movf	__Umul8_16@multiplier,w
  9542     1B7B  1D03               	btfss	3,2
  9543     1B7C  2B69               	goto	l3844
  9544     1B7D  0821               	movf	__Umul8_16@product+1,w
  9545     1B7E  00F3               	movwf	?__Umul8_16+1
  9546     1B7F  0820               	movf	__Umul8_16@product,w
  9547     1B80  00F2               	movwf	?__Umul8_16
  9548     1B81  0008               	return
  9549     1B82                     __end_of__Umul8_16:
  9550                           
  9551                           	psect	text33
  9552     0821                     __ptext33:	
  9553 ;; *************** function ___fldiv *****************
  9554 ;; Defined at:
  9555 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcdiv.c"
  9556 ;; Parameters:    Size  Location     Type
  9557 ;;  a               4   51[BANK0 ] unsigned int 
  9558 ;;  b               4   55[BANK0 ] unsigned int 
  9559 ;; Auto vars:     Size  Location     Type
  9560 ;;  grs             4   71[BANK0 ] unsigned long 
  9561 ;;  rem             4   64[BANK0 ] unsigned long 
  9562 ;;  new_exp         2   69[BANK0 ] int 
  9563 ;;  aexp            1   76[BANK0 ] unsigned char 
  9564 ;;  bexp            1   75[BANK0 ] unsigned char 
  9565 ;;  sign            1   68[BANK0 ] unsigned char 
  9566 ;; Return value:  Size  Location     Type
  9567 ;;                  4   51[BANK0 ] unsigned char 
  9568 ;; Registers used:
  9569 ;;		wreg, status,2, status,0, btemp+1
  9570 ;; Tracked objects:
  9571 ;;		On entry : 0/0
  9572 ;;		On exit  : 0/0
  9573 ;;		Unchanged: 0/0
  9574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9575 ;;      Params:         0       8       0       0       0
  9576 ;;      Locals:         0      13       0       0       0
  9577 ;;      Temps:          0       5       0       0       0
  9578 ;;      Totals:         0      26       0       0       0
  9579 ;;Total ram usage:       26 bytes
  9580 ;; Hardware stack levels used: 1
  9581 ;; Hardware stack levels required when called: 1
  9582 ;; This function calls:
  9583 ;;		Nothing
  9584 ;; This function is called by:
  9585 ;;		_LM35
  9586 ;; This function uses a non-reentrant model
  9587 ;;
  9588                           
  9589     0821                     ___fldiv:	
  9590                           ;psect for function ___fldiv
  9591                           
  9592                           
  9593                           ;incstack = 0
  9594                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  9595     0821  1283               	bcf	3,5	;RP0=0, select bank0
  9596     0822  1303               	bcf	3,6	;RP1=0, select bank0
  9597     0823  085A               	movf	___fldiv@b+3,w
  9598     0824  3980               	andlw	128
  9599     0825  00E4               	movwf	___fldiv@sign
  9600     0826  085A               	movf	___fldiv@b+3,w
  9601     0827  00DB               	movwf	??___fldiv
  9602     0828  075B               	addwf	??___fldiv,w
  9603     0829  00EB               	movwf	___fldiv@bexp
  9604     082A  1BD9               	btfsc	___fldiv@b+2,7
  9605     082B  146B               	bsf	___fldiv@bexp,0
  9606     082C  086B               	movf	___fldiv@bexp,w
  9607     082D  1903               	btfsc	3,2
  9608     082E  283D               	goto	l3242
  9609     082F  0A6B               	incf	___fldiv@bexp,w
  9610     0830  1D03               	btfss	3,2
  9611     0831  283A               	goto	l3238
  9612     0832  3000               	movlw	0
  9613     0833  00DA               	movwf	___fldiv@b+3
  9614     0834  3000               	movlw	0
  9615     0835  00D9               	movwf	___fldiv@b+2
  9616     0836  3000               	movlw	0
  9617     0837  00D8               	movwf	___fldiv@b+1
  9618     0838  3000               	movlw	0
  9619     0839  00D7               	movwf	___fldiv@b
  9620     083A                     l3238:
  9621     083A  17D9               	bsf	___fldiv@b+2,7
  9622     083B  01DA               	clrf	___fldiv@b+3
  9623     083C  2845               	goto	l3244
  9624     083D                     l3242:
  9625     083D  3000               	movlw	0
  9626     083E  00DA               	movwf	___fldiv@b+3
  9627     083F  3000               	movlw	0
  9628     0840  00D9               	movwf	___fldiv@b+2
  9629     0841  3000               	movlw	0
  9630     0842  00D8               	movwf	___fldiv@b+1
  9631     0843  3000               	movlw	0
  9632     0844  00D7               	movwf	___fldiv@b
  9633     0845                     l3244:
  9634     0845  0856               	movf	___fldiv@a+3,w
  9635     0846  3980               	andlw	128
  9636     0847  00FF               	movwf	127
  9637     0848  087F               	movf	127,w
  9638     0849  06E4               	xorwf	___fldiv@sign,f
  9639     084A  0856               	movf	___fldiv@a+3,w
  9640     084B  00DB               	movwf	??___fldiv
  9641     084C  075B               	addwf	??___fldiv,w
  9642     084D  00EC               	movwf	___fldiv@aexp
  9643     084E  1BD5               	btfsc	___fldiv@a+2,7
  9644     084F  146C               	bsf	___fldiv@aexp,0
  9645     0850  086C               	movf	___fldiv@aexp,w
  9646     0851  1903               	btfsc	3,2
  9647     0852  2861               	goto	l3262
  9648     0853  0A6C               	incf	___fldiv@aexp,w
  9649     0854  1D03               	btfss	3,2
  9650     0855  285E               	goto	l3258
  9651     0856  3000               	movlw	0
  9652     0857  00D6               	movwf	___fldiv@a+3
  9653     0858  3000               	movlw	0
  9654     0859  00D5               	movwf	___fldiv@a+2
  9655     085A  3000               	movlw	0
  9656     085B  00D4               	movwf	___fldiv@a+1
  9657     085C  3000               	movlw	0
  9658     085D  00D3               	movwf	___fldiv@a
  9659     085E                     l3258:
  9660     085E  17D5               	bsf	___fldiv@a+2,7
  9661     085F  01D6               	clrf	___fldiv@a+3
  9662     0860  2869               	goto	l777
  9663     0861                     l3262:
  9664     0861  3000               	movlw	0
  9665     0862  00D6               	movwf	___fldiv@a+3
  9666     0863  3000               	movlw	0
  9667     0864  00D5               	movwf	___fldiv@a+2
  9668     0865  3000               	movlw	0
  9669     0866  00D4               	movwf	___fldiv@a+1
  9670     0867  3000               	movlw	0
  9671     0868  00D3               	movwf	___fldiv@a
  9672     0869                     l777:
  9673     0869  0856               	movf	___fldiv@a+3,w
  9674     086A  0455               	iorwf	___fldiv@a+2,w
  9675     086B  0454               	iorwf	___fldiv@a+1,w
  9676     086C  0453               	iorwf	___fldiv@a,w
  9677     086D  1D03               	skipz
  9678     086E  2888               	goto	l3272
  9679     086F  3000               	movlw	0
  9680     0870  00DA               	movwf	___fldiv@b+3
  9681     0871  3000               	movlw	0
  9682     0872  00D9               	movwf	___fldiv@b+2
  9683     0873  3000               	movlw	0
  9684     0874  00D8               	movwf	___fldiv@b+1
  9685     0875  3000               	movlw	0
  9686     0876  00D7               	movwf	___fldiv@b
  9687     0877  3080               	movlw	128
  9688     0878  04D9               	iorwf	___fldiv@b+2,f
  9689     0879  307F               	movlw	127
  9690     087A  04DA               	iorwf	___fldiv@b+3,f
  9691     087B                     l3266:
  9692     087B  0864               	movf	___fldiv@sign,w
  9693     087C  00FF               	movwf	127
  9694     087D  087F               	movf	127,w
  9695     087E  04DA               	iorwf	___fldiv@b+3,f
  9696     087F  085A               	movf	___fldiv@b+3,w
  9697     0880  00D6               	movwf	?___fldiv+3
  9698     0881  0859               	movf	___fldiv@b+2,w
  9699     0882  00D5               	movwf	?___fldiv+2
  9700     0883  0858               	movf	___fldiv@b+1,w
  9701     0884  00D4               	movwf	?___fldiv+1
  9702     0885  0857               	movf	___fldiv@b,w
  9703     0886  00D3               	movwf	?___fldiv
  9704     0887  0008               	return
  9705     0888                     l3272:
  9706     0888  086B               	movf	___fldiv@bexp,w
  9707     0889  1D03               	btfss	3,2
  9708     088A  2894               	goto	l3278
  9709     088B  3000               	movlw	0
  9710     088C  00D6               	movwf	?___fldiv+3
  9711     088D  3000               	movlw	0
  9712     088E  00D5               	movwf	?___fldiv+2
  9713     088F  3000               	movlw	0
  9714     0890  00D4               	movwf	?___fldiv+1
  9715     0891  3000               	movlw	0
  9716     0892  00D3               	movwf	?___fldiv
  9717     0893  0008               	return
  9718     0894                     l3278:
  9719     0894  086B               	movf	___fldiv@bexp,w
  9720     0895  00DB               	movwf	??___fldiv
  9721     0896  01DC               	clrf	??___fldiv+1
  9722     0897  085C               	movf	??___fldiv+1,w
  9723     0898  00DE               	movwf	??___fldiv+3
  9724     0899  086C               	movf	___fldiv@aexp,w
  9725     089A  025B               	subwf	??___fldiv,w
  9726     089B  00DD               	movwf	??___fldiv+2
  9727     089C  1C03               	skipc
  9728     089D  03DE               	decf	??___fldiv+3,f
  9729     089E  085D               	movf	??___fldiv+2,w
  9730     089F  3E7F               	addlw	127
  9731     08A0  00E5               	movwf	___fldiv@new_exp
  9732     08A1  085E               	movf	??___fldiv+3,w
  9733     08A2  1803               	skipnc
  9734     08A3  3E01               	addlw	1
  9735     08A4  3E00               	addlw	0
  9736     08A5  00E6               	movwf	___fldiv@new_exp+1
  9737     08A6  085A               	movf	___fldiv@b+3,w
  9738     08A7  00E3               	movwf	___fldiv@rem+3
  9739     08A8  0859               	movf	___fldiv@b+2,w
  9740     08A9  00E2               	movwf	___fldiv@rem+2
  9741     08AA  0858               	movf	___fldiv@b+1,w
  9742     08AB  00E1               	movwf	___fldiv@rem+1
  9743     08AC  0857               	movf	___fldiv@b,w
  9744     08AD  00E0               	movwf	___fldiv@rem
  9745     08AE  3000               	movlw	0
  9746     08AF  00DA               	movwf	___fldiv@b+3
  9747     08B0  3000               	movlw	0
  9748     08B1  00D9               	movwf	___fldiv@b+2
  9749     08B2  3000               	movlw	0
  9750     08B3  00D8               	movwf	___fldiv@b+1
  9751     08B4  3000               	movlw	0
  9752     08B5  00D7               	movwf	___fldiv@b
  9753     08B6  3000               	movlw	0
  9754     08B7  00EA               	movwf	___fldiv@grs+3
  9755     08B8  3000               	movlw	0
  9756     08B9  00E9               	movwf	___fldiv@grs+2
  9757     08BA  3000               	movlw	0
  9758     08BB  00E8               	movwf	___fldiv@grs+1
  9759     08BC  3000               	movlw	0
  9760     08BD  00E7               	movwf	___fldiv@grs
  9761     08BE  01EC               	clrf	___fldiv@aexp
  9762     08BF                     l3306:
  9763     08BF  301A               	movlw	26
  9764     08C0  026C               	subwf	___fldiv@aexp,w
  9765     08C1  1803               	btfsc	3,0
  9766     08C2  2907               	goto	l3308
  9767     08C3  086C               	movf	___fldiv@aexp,w
  9768     08C4  1903               	btfsc	3,2
  9769     08C5  28E3               	goto	l3298
  9770     08C6  3001               	movlw	1
  9771     08C7  00DB               	movwf	??___fldiv
  9772     08C8                     u5275:
  9773     08C8  1003               	clrc
  9774     08C9  0DE0               	rlf	___fldiv@rem,f
  9775     08CA  0DE1               	rlf	___fldiv@rem+1,f
  9776     08CB  0DE2               	rlf	___fldiv@rem+2,f
  9777     08CC  0DE3               	rlf	___fldiv@rem+3,f
  9778     08CD  0BDB               	decfsz	??___fldiv,f
  9779     08CE  28C8               	goto	u5275
  9780     08CF  3001               	movlw	1
  9781     08D0  00DB               	movwf	??___fldiv
  9782     08D1                     u5285:
  9783     08D1  1003               	clrc
  9784     08D2  0DD7               	rlf	___fldiv@b,f
  9785     08D3  0DD8               	rlf	___fldiv@b+1,f
  9786     08D4  0DD9               	rlf	___fldiv@b+2,f
  9787     08D5  0DDA               	rlf	___fldiv@b+3,f
  9788     08D6  0BDB               	decfsz	??___fldiv,f
  9789     08D7  28D1               	goto	u5285
  9790     08D8  1BEA               	btfsc	___fldiv@grs+3,7
  9791     08D9  1457               	bsf	___fldiv@b,0
  9792     08DA  3001               	movlw	1
  9793     08DB  00DB               	movwf	??___fldiv
  9794     08DC                     u5305:
  9795     08DC  1003               	clrc
  9796     08DD  0DE7               	rlf	___fldiv@grs,f
  9797     08DE  0DE8               	rlf	___fldiv@grs+1,f
  9798     08DF  0DE9               	rlf	___fldiv@grs+2,f
  9799     08E0  0DEA               	rlf	___fldiv@grs+3,f
  9800     08E1  0BDB               	decfsz	??___fldiv,f
  9801     08E2  28DC               	goto	u5305
  9802     08E3                     l3298:
  9803     08E3  0856               	movf	___fldiv@a+3,w
  9804     08E4  0263               	subwf	___fldiv@rem+3,w
  9805     08E5  1D03               	skipz
  9806     08E6  28F1               	goto	u5315
  9807     08E7  0855               	movf	___fldiv@a+2,w
  9808     08E8  0262               	subwf	___fldiv@rem+2,w
  9809     08E9  1D03               	skipz
  9810     08EA  28F1               	goto	u5315
  9811     08EB  0854               	movf	___fldiv@a+1,w
  9812     08EC  0261               	subwf	___fldiv@rem+1,w
  9813     08ED  1D03               	skipz
  9814     08EE  28F1               	goto	u5315
  9815     08EF  0853               	movf	___fldiv@a,w
  9816     08F0  0260               	subwf	___fldiv@rem,w
  9817     08F1                     u5315:
  9818     08F1  1C03               	skipc
  9819     08F2  2902               	goto	l3304
  9820     08F3  176A               	bsf	___fldiv@grs+3,6
  9821     08F4  0853               	movf	___fldiv@a,w
  9822     08F5  02E0               	subwf	___fldiv@rem,f
  9823     08F6  0854               	movf	___fldiv@a+1,w
  9824     08F7  1C03               	skipc
  9825     08F8  0F54               	incfsz	___fldiv@a+1,w
  9826     08F9  02E1               	subwf	___fldiv@rem+1,f
  9827     08FA  0855               	movf	___fldiv@a+2,w
  9828     08FB  1C03               	skipc
  9829     08FC  0F55               	incfsz	___fldiv@a+2,w
  9830     08FD  02E2               	subwf	___fldiv@rem+2,f
  9831     08FE  0856               	movf	___fldiv@a+3,w
  9832     08FF  1C03               	skipc
  9833     0900  0F56               	incfsz	___fldiv@a+3,w
  9834     0901  02E3               	subwf	___fldiv@rem+3,f
  9835     0902                     l3304:
  9836     0902  3001               	movlw	1
  9837     0903  00FF               	movwf	127
  9838     0904  087F               	movf	127,w
  9839     0905  07EC               	addwf	___fldiv@aexp,f
  9840     0906  28BF               	goto	l3306
  9841     0907                     l3308:
  9842     0907  0863               	movf	___fldiv@rem+3,w
  9843     0908  0462               	iorwf	___fldiv@rem+2,w
  9844     0909  0461               	iorwf	___fldiv@rem+1,w
  9845     090A  0460               	iorwf	___fldiv@rem,w
  9846     090B  1D03               	btfss	3,2
  9847     090C  1467               	bsf	___fldiv@grs,0
  9848     090D                     l3322:
  9849     090D  1BD9               	btfsc	___fldiv@b+2,7
  9850     090E  292A               	goto	l3324
  9851     090F  3001               	movlw	1
  9852     0910  00DB               	movwf	??___fldiv
  9853     0911                     u5345:
  9854     0911  1003               	clrc
  9855     0912  0DD7               	rlf	___fldiv@b,f
  9856     0913  0DD8               	rlf	___fldiv@b+1,f
  9857     0914  0DD9               	rlf	___fldiv@b+2,f
  9858     0915  0DDA               	rlf	___fldiv@b+3,f
  9859     0916  0BDB               	decfsz	??___fldiv,f
  9860     0917  2911               	goto	u5345
  9861     0918  1BEA               	btfsc	___fldiv@grs+3,7
  9862     0919  1457               	bsf	___fldiv@b,0
  9863     091A  3001               	movlw	1
  9864     091B  00DB               	movwf	??___fldiv
  9865     091C                     u5365:
  9866     091C  1003               	clrc
  9867     091D  0DE7               	rlf	___fldiv@grs,f
  9868     091E  0DE8               	rlf	___fldiv@grs+1,f
  9869     091F  0DE9               	rlf	___fldiv@grs+2,f
  9870     0920  0DEA               	rlf	___fldiv@grs+3,f
  9871     0921  0BDB               	decfsz	??___fldiv,f
  9872     0922  291C               	goto	u5365
  9873     0923  30FF               	movlw	255
  9874     0924  07E5               	addwf	___fldiv@new_exp,f
  9875     0925  1803               	skipnc
  9876     0926  0AE6               	incf	___fldiv@new_exp+1,f
  9877     0927  30FF               	movlw	255
  9878     0928  07E6               	addwf	___fldiv@new_exp+1,f
  9879     0929  290D               	goto	l3322
  9880     092A                     l3324:
  9881     092A  01EC               	clrf	___fldiv@aexp
  9882     092B  1FEA               	btfss	___fldiv@grs+3,7
  9883     092C  2943               	goto	l3334
  9884     092D  30FF               	movlw	255
  9885     092E  0567               	andwf	___fldiv@grs,w
  9886     092F  00DB               	movwf	??___fldiv
  9887     0930  30FF               	movlw	255
  9888     0931  0568               	andwf	___fldiv@grs+1,w
  9889     0932  00DC               	movwf	??___fldiv+1
  9890     0933  30FF               	movlw	255
  9891     0934  0569               	andwf	___fldiv@grs+2,w
  9892     0935  00DD               	movwf	??___fldiv+2
  9893     0936  307F               	movlw	127
  9894     0937  056A               	andwf	___fldiv@grs+3,w
  9895     0938  00DE               	movwf	??___fldiv+3
  9896     0939  085E               	movf	??___fldiv+3,w
  9897     093A  045D               	iorwf	??___fldiv+2,w
  9898     093B  045C               	iorwf	??___fldiv+1,w
  9899     093C  045B               	iorwf	??___fldiv,w
  9900     093D  1903               	skipnz
  9901     093E  1857               	btfsc	___fldiv@b,0
  9902     093F  2941               	goto	l3330
  9903     0940  2943               	goto	l3334
  9904     0941                     l3330:
  9905     0941  01EC               	clrf	___fldiv@aexp
  9906     0942  0AEC               	incf	___fldiv@aexp,f
  9907     0943                     l3334:
  9908     0943  086C               	movf	___fldiv@aexp,w
  9909     0944  1903               	btfsc	3,2
  9910     0945  2975               	goto	l3344
  9911     0946  3001               	movlw	1
  9912     0947  07D7               	addwf	___fldiv@b,f
  9913     0948  3000               	movlw	0
  9914     0949  1803               	skipnc
  9915     094A  3001               	movlw	1
  9916     094B  07D8               	addwf	___fldiv@b+1,f
  9917     094C  3000               	movlw	0
  9918     094D  1803               	skipnc
  9919     094E  3001               	movlw	1
  9920     094F  07D9               	addwf	___fldiv@b+2,f
  9921     0950  3000               	movlw	0
  9922     0951  1803               	skipnc
  9923     0952  3001               	movlw	1
  9924     0953  07DA               	addwf	___fldiv@b+3,f
  9925     0954  1C5A               	btfss	___fldiv@b+3,0
  9926     0955  2975               	goto	l3344
  9927     0956  0857               	movf	___fldiv@b,w
  9928     0957  00DB               	movwf	??___fldiv
  9929     0958  0858               	movf	___fldiv@b+1,w
  9930     0959  00DC               	movwf	??___fldiv+1
  9931     095A  0859               	movf	___fldiv@b+2,w
  9932     095B  00DD               	movwf	??___fldiv+2
  9933     095C  085A               	movf	___fldiv@b+3,w
  9934     095D  00DE               	movwf	??___fldiv+3
  9935     095E  3001               	movlw	1
  9936     095F  00DF               	movwf	??___fldiv+4
  9937     0960                     u5435:
  9938     0960  0D5E               	rlf	??___fldiv+3,w
  9939     0961  0CDE               	rrf	??___fldiv+3,f
  9940     0962  0CDD               	rrf	??___fldiv+2,f
  9941     0963  0CDC               	rrf	??___fldiv+1,f
  9942     0964  0CDB               	rrf	??___fldiv,f
  9943     0965  0BDF               	decfsz	??___fldiv+4,f
  9944     0966  2960               	goto	u5435
  9945     0967  085E               	movf	??___fldiv+3,w
  9946     0968  00DA               	movwf	___fldiv@b+3
  9947     0969  085D               	movf	??___fldiv+2,w
  9948     096A  00D9               	movwf	___fldiv@b+2
  9949     096B  085C               	movf	??___fldiv+1,w
  9950     096C  00D8               	movwf	___fldiv@b+1
  9951     096D  085B               	movf	??___fldiv,w
  9952     096E  00D7               	movwf	___fldiv@b
  9953     096F  3001               	movlw	1
  9954     0970  07E5               	addwf	___fldiv@new_exp,f
  9955     0971  1803               	skipnc
  9956     0972  0AE6               	incf	___fldiv@new_exp+1,f
  9957     0973  3000               	movlw	0
  9958     0974  07E6               	addwf	___fldiv@new_exp+1,f
  9959     0975                     l3344:
  9960     0975  0866               	movf	___fldiv@new_exp+1,w
  9961     0976  3A80               	xorlw	128
  9962     0977  00FF               	movwf	127
  9963     0978  3080               	movlw	128
  9964     0979  027F               	subwf	127,w
  9965     097A  1D03               	skipz
  9966     097B  297E               	goto	u5445
  9967     097C  30FF               	movlw	255
  9968     097D  0265               	subwf	___fldiv@new_exp,w
  9969     097E                     u5445:
  9970     097E  1C03               	skipc
  9971     097F  298E               	goto	l3348
  9972     0980  30FF               	movlw	255
  9973     0981  1283               	bcf	3,5	;RP0=0, select bank0
  9974     0982  1303               	bcf	3,6	;RP1=0, select bank0
  9975     0983  00E5               	movwf	___fldiv@new_exp
  9976     0984  3000               	movlw	0
  9977     0985  00E6               	movwf	___fldiv@new_exp+1
  9978     0986  3000               	movlw	0
  9979     0987  00DA               	movwf	___fldiv@b+3
  9980     0988  3000               	movlw	0
  9981     0989  00D9               	movwf	___fldiv@b+2
  9982     098A  3000               	movlw	0
  9983     098B  00D8               	movwf	___fldiv@b+1
  9984     098C  3000               	movlw	0
  9985     098D  00D7               	movwf	___fldiv@b
  9986     098E                     l3348:
  9987     098E  1283               	bcf	3,5	;RP0=0, select bank0
  9988     098F  1303               	bcf	3,6	;RP1=0, select bank0
  9989     0990  0866               	movf	___fldiv@new_exp+1,w
  9990     0991  3A80               	xorlw	128
  9991     0992  00FF               	movwf	127
  9992     0993  3080               	movlw	128
  9993     0994  027F               	subwf	127,w
  9994     0995  1D03               	skipz
  9995     0996  2999               	goto	u5455
  9996     0997  3001               	movlw	1
  9997     0998  0265               	subwf	___fldiv@new_exp,w
  9998     0999                     u5455:
  9999     0999  1803               	skipnc
 10000     099A  29A8               	goto	l799
 10001     099B  1283               	bcf	3,5	;RP0=0, select bank0
 10002     099C  1303               	bcf	3,6	;RP1=0, select bank0
 10003     099D  01E5               	clrf	___fldiv@new_exp
 10004     099E  01E6               	clrf	___fldiv@new_exp+1
 10005     099F  3000               	movlw	0
 10006     09A0  00DA               	movwf	___fldiv@b+3
 10007     09A1  3000               	movlw	0
 10008     09A2  00D9               	movwf	___fldiv@b+2
 10009     09A3  3000               	movlw	0
 10010     09A4  00D8               	movwf	___fldiv@b+1
 10011     09A5  3000               	movlw	0
 10012     09A6  00D7               	movwf	___fldiv@b
 10013     09A7  01E4               	clrf	___fldiv@sign
 10014     09A8                     l799:
 10015     09A8  1283               	bcf	3,5	;RP0=0, select bank0
 10016     09A9  1303               	bcf	3,6	;RP1=0, select bank0
 10017     09AA  0865               	movf	___fldiv@new_exp,w
 10018     09AB  00EB               	movwf	___fldiv@bexp
 10019     09AC  1C6B               	btfss	___fldiv@bexp,0
 10020     09AD  29B0               	goto	l3360
 10021     09AE  17D9               	bsf	___fldiv@b+2,7
 10022     09AF  29B4               	goto	l3362
 10023     09B0                     l3360:
 10024     09B0  307F               	movlw	127
 10025     09B1  00FF               	movwf	127
 10026     09B2  087F               	movf	127,w
 10027     09B3  05D9               	andwf	___fldiv@b+2,f
 10028     09B4                     l3362:
 10029     09B4  086B               	movf	___fldiv@bexp,w
 10030     09B5  00DB               	movwf	??___fldiv
 10031     09B6  1003               	clrc
 10032     09B7  0C5B               	rrf	??___fldiv,w
 10033     09B8  00DA               	movwf	___fldiv@b+3
 10034     09B9  287B               	goto	l3266
 10035     09BA                     __end_of___fldiv:
 10036                           
 10037                           	psect	text34
 10038     1AF1                     __ptext34:	
 10039 ;; *************** function _Timers_ISR *****************
 10040 ;; Defined at:
 10041 ;;		line 195 in file "controle.c"
 10042 ;; Parameters:    Size  Location     Type
 10043 ;;		None
 10044 ;; Auto vars:     Size  Location     Type
 10045 ;;		None
 10046 ;; Return value:  Size  Location     Type
 10047 ;;                  1    wreg      void 
 10048 ;; Registers used:
 10049 ;;		wreg
 10050 ;; Tracked objects:
 10051 ;;		On entry : 0/0
 10052 ;;		On exit  : 0/0
 10053 ;;		Unchanged: 0/0
 10054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10055 ;;      Params:         0       0       0       0       0
 10056 ;;      Locals:         0       0       0       0       0
 10057 ;;      Temps:          2       0       0       0       0
 10058 ;;      Totals:         2       0       0       0       0
 10059 ;;Total ram usage:        2 bytes
 10060 ;; Hardware stack levels used: 1
 10061 ;; This function calls:
 10062 ;;		Nothing
 10063 ;; This function is called by:
 10064 ;;		Interrupt level 1
 10065 ;; This function uses a non-reentrant model
 10066 ;;
 10067                           
 10068     1AF1                     _Timers_ISR:	
 10069                           ;psect for function _Timers_ISR
 10070                           
 10071                           
 10072                           ;controle.c: 197:     if (INTCONbits.T0IF)
 10073     1AF1  1D0B               	btfss	11,2	;volatile
 10074     1AF2  2AFA               	goto	i1l2316
 10075                           
 10076                           ;controle.c: 198:     {;controle.c: 199:         INTCONbits.T0IF = 0;
 10077     1AF3  110B               	bcf	11,2	;volatile
 10078                           
 10079                           ;controle.c: 200:         TMR0 = 100;
 10080     1AF4  3064               	movlw	100
 10081     1AF5  1283               	bcf	3,5	;RP0=0, select bank0
 10082     1AF6  1303               	bcf	3,6	;RP1=0, select bank0
 10083     1AF7  0081               	movwf	1	;volatile
 10084                           
 10085                           ;controle.c: 201:         RC3 = !RC3;
 10086     1AF8  3008               	movlw	8
 10087     1AF9  0687               	xorwf	7,f
 10088     1AFA                     i1l2316:
 10089                           
 10090                           ;controle.c: 203:     if (TMR2IF)
 10091     1AFA  1283               	bcf	3,5	;RP0=0, select bank0
 10092     1AFB  1303               	bcf	3,6	;RP1=0, select bank0
 10093     1AFC  188C               	btfsc	12,1	;volatile
 10094                           
 10095                           ;controle.c: 204:     {;controle.c: 205:         TMR2IF = 0;
 10096     1AFD  108C               	bcf	12,1	;volatile
 10097     1AFE  0871               	movf	??_Timers_ISR+1,w
 10098     1AFF  008A               	movwf	10
 10099     1B00  0E70               	swapf	??_Timers_ISR,w
 10100     1B01  0083               	movwf	3
 10101     1B02  0EFE               	swapf	126,f
 10102     1B03  0E7E               	swapf	126,w
 10103     1B04  0009               	retfie
 10104     1B05                     __end_of_Timers_ISR:
 10105     007E                     btemp	set	126	;btemp
 10106     007E                     wtemp0	set	126
 10107                           
 10108                           	psect	intentry
 10109     0004                     __pintentry:	
 10110                           ;incstack = 0
 10111                           ; Regs used in _Timers_ISR: [wreg]
 10112                           
 10113     0004                     interrupt_function:
 10114     007E                     saved_w	set	btemp
 10115     0004  00FE               	movwf	btemp
 10116     0005  0E03               	swapf	3,w
 10117     0006  00F0               	movwf	??_Timers_ISR
 10118     0007  080A               	movf	10,w
 10119     0008  00F1               	movwf	??_Timers_ISR+1
 10120     0009  160A  158A  2AF1   	ljmp	_Timers_ISR
 10121                           
 10122                           	psect	idloc
 10123                           
 10124                           ;Config register IDLOC0 @ 0x2000
 10125                           ;	unspecified, using default values
 10126     2000                     	org	8192
 10127     2000  3FFF               	dw	16383
 10128                           
 10129                           ;Config register IDLOC1 @ 0x2001
 10130                           ;	unspecified, using default values
 10131     2001                     	org	8193
 10132     2001  3FFF               	dw	16383
 10133                           
 10134                           ;Config register IDLOC2 @ 0x2002
 10135                           ;	unspecified, using default values
 10136     2002                     	org	8194
 10137     2002  3FFF               	dw	16383
 10138                           
 10139                           ;Config register IDLOC3 @ 0x2003
 10140                           ;	unspecified, using default values
 10141     2003                     	org	8195
 10142     2003  3FFF               	dw	16383
 10143                           
 10144                           	psect	config
 10145                           
 10146                           ;Config register CONFIG1 @ 0x2007
 10147                           ;	Oscillator Selection bits
 10148                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 10149                           ;	Watchdog Timer Enable bit
 10150                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10151                           ;	Power-up Timer Enable bit
 10152                           ;	PWRTE = 0x1, unprogrammed default
 10153                           ;	RE3/MCLR pin function select bit
 10154                           ;	MCLRE = 0x1, unprogrammed default
 10155                           ;	Code Protection bit
 10156                           ;	CP = 0x1, unprogrammed default
 10157                           ;	Data Code Protection bit
 10158                           ;	CPD = 0x1, unprogrammed default
 10159                           ;	Brown Out Reset Selection bits
 10160                           ;	BOREN = 0x3, unprogrammed default
 10161                           ;	Internal External Switchover bit
 10162                           ;	IESO = 0x1, unprogrammed default
 10163                           ;	Fail-Safe Clock Monitor Enabled bit
 10164                           ;	FCMEN = 0x1, unprogrammed default
 10165                           ;	Low Voltage Programming Enable bit
 10166                           ;	LVP = 0x1, unprogrammed default
 10167                           ;	In-Circuit Debugger Mode bit
 10168                           ;	DEBUG = 0x1, unprogrammed default
 10169     2007                     	org	8199
 10170     2007  3FF4               	dw	16372
 10171                           
 10172                           ;Config register CONFIG2 @ 0x2008
 10173                           ;	unspecified, using default values
 10174                           ;	Brown-out Reset Selection bit
 10175                           ;	BOR4V = 0x1, unprogrammed default
 10176                           ;	Flash Program Memory Self Write Enable bits
 10177                           ;	WRT = 0x3, unprogrammed default
 10178     2008                     	org	8200
 10179     2008  3FFF               	dw	16383

Data Sizes:
    Strings     23
    Constant    144
    Data        12
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     80      80
    BANK1            80     77      80
    BANK3            96      0      26
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_1(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 30
		 -> main@buffer(BANK1[30]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    lcd_init@lcd_pins.port_data	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    lcd_init@lcd_pins.port_en	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    lcd_init@lcd_pins.port_rs	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    lcd_init@lcd_pins	PTR struct . size(1) Largest target is 12
		 -> lcd_pins(BANK3[12]), 

    port_rs	PTR volatile unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTB(SFR0[1]), 

    port_data	PTR volatile unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTB(SFR0[1]), 

    port_en	PTR volatile unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTB(SFR0[1]), 

    muda_pin@_port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTB(SFR0[1]), 

    S22$port_data	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    lcd_pins.port_data	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    S22$port_en	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    lcd_pins.port_en	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    S22$port_rs	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    lcd_pins.port_rs	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->___flge
    _main->_lcd_init
    _sprintf->___fleq
    _sprintf->___flge
    _sprintf->___lldiv
    _sprintf->___xxtofl
    _sprintf->__div_to_l_
    _sprintf->__tdiv_to_l_
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___llmod->___lldiv
    ___flsub->___xxtofl
    ___fladd->___lwdiv
    _byte->_muda_pin
    _nibble->_muda_pin
    _enable->_muda_pin
    _LM35->___xxtofl
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _Timers_ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fltol
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->__Umul8_16
    _lcd_init->_byte
    _byte->_nibble
    _LM35->___fldiv
    ___flmul->___fladd
    ___fldiv->___flmul

Critical Paths under _Timers_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _Timers_ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timers_ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timers_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                40    40      0   70464
                                             37 BANK1     40    40      0
                               _LM35
                           _PWM_init
                        _Timer0_init
                          _UART_init
                            ___fladd
                             ___flge
                            ___flmul
                            ___fltol
                       _controle_pwm
                           _lcd_init
                            _sprintf
                         _velocidade
 ---------------------------------------------------------------------------------
 (1) _velocidade                                           1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             44    37      7   39268
                                              0 BANK1     37    30      7
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    9775
                                             51 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1208
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1705
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    7979
                                             51 BANK0     20    16      4
                            ___fladd (ARG)
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     615
                                              2 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     781
                                              7 COMMON     3     3      0
                                              0 BANK0      4     0      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              2 COMMON     8     0      8
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     634
                                              2 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     952
                                              6 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     781
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     533
                                             70 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2637
                                             25 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2440
                                              5 BANK0     20    12      8
                          __Umul8_16 (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1094
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0   12246
                                              9 COMMON     1     1      0
                                             10 BANK0      2     2      0
                               _byte
                             _enable
                             _nibble
 ---------------------------------------------------------------------------------
 (2) _byte                                                 6     3      3    8125
                                              4 BANK0      6     3      3
                             _enable
                           _muda_pin
                             _nibble
 ---------------------------------------------------------------------------------
 (2) _nibble                                               4     2      2    2100
                                              0 BANK0      4     2      2
                           _muda_pin
 ---------------------------------------------------------------------------------
 (2) _enable                                               2     2      0    1706
                                              0 BANK0      2     2      0
                           _muda_pin
 ---------------------------------------------------------------------------------
 (3) _muda_pin                                             7     1      6    1706
                                              2 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (1) _controle_pwm                                         1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LM35                                                20    16      4    8116
                                              0 BANK1     20    16      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    6233
                                             25 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fladd (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              2 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1273
                                             51 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Timers_ISR                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LM35
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           __Umul8_16 (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___xxtofl
   _PWM_init
   _Timer0_init
   _UART_init
   ___fladd
   ___flge
   ___flmul
   ___fltol
     ___fladd (ARG)
     ___flmul (ARG)
     _scale (ARG)
       ___awdiv
       ___awmod
       ___flmul
   _controle_pwm
   _lcd_init
     _byte
       _enable
         _muda_pin
       _muda_pin
       _nibble
         _muda_pin
     _enable
     _nibble
   _sprintf
     ___awdiv
     ___fladd
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___fladd (ARG)
       ___flmul (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
     _scale
   _velocidade

 _Timers_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      1A       9       27.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     4D      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      C6      12        0.0%
ABS                  0      0      C6       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Apr 22 15:38:36 2023

           ___fldiv@aexp 006C             ___fldiv@bexp 006B                        pc 0002  
           ___fldiv@sign 0064                       _D4 019A                       _D5 0198  
                     _D6 0196                       _D7 0194                       l91 1B2E  
                     _EN 007A                       l97 1267                       _RS 019C  
           ___awdiv@sign 0025                       fsr 0004      ___wmul@multiplicand 0074  
    __Umul8_16@word_mpld 0022                      l121 1B14                      l135 07AB  
                    l138 07B6                      l341 005A                      l604 1E29  
                    l622 1193                      l721 1448                      l394 080A  
                    l580 1CB7                      l581 1CD1                      l725 14BD  
                    l742 1574                      l727 149D                      l575 1237  
                    l585 1EE4                      l836 1B71                      l588 1F4A  
                    l861 1F7C                      l777 0869                      l874 1FD0  
                    l875 1FDA                      l799 09A8                      _GIE 005F  
                    _RC3 003B                      _PS0 0408                      _PR2 0092  
                    _PS1 0409                      _PS2 040A                      _PSA 040B  
                    fsr0 0004                      indf 0000             ___awmod@sign 0077  
           ___flmul@aexp 0047             ___flmul@bexp 004C             ___flmul@sign 0046  
           ___flmul@temp 0051             ___flmul@prod 004D             ___fltol@exp1 006F  
                   l3020 11A2                     l3012 118F                     l3008 117F  
                   l3140 1F24                     l4030 0C19                     l2414 1B99  
                   l3126 1CE3                     l2502 1CFC                     l3304 0902  
                   l4040 0C32                     l3400 1FCE                     l3136 1EFE  
                   l3160 1DE7                     l3080 0802                     l2504 1D0A  
                   l2512 1D23                     l4112 0E32                     l3330 0941  
                   l3322 090D                     l3306 08BF                     l3242 083D  
                   l4050 0C64                     l3402 1FBF                     l2610 1440  
                   l4210 1DD5                     l4130 0FD5                     l4106 0DA7  
                   l3324 092A                     l3308 0907                     l3244 0845  
                   l4060 0C93                     l4036 0C30                     l4028 0BFC  
                   l3180 1E15                     l3164 1DF0                     l4140 11BD  
                   l2516 1D2B                     l2508 1D18                     l4124 0F4A  
                   l4116 0E5D                     l4300 00D2                     l3334 0943  
                   l3262 0861                     l3238 083A                     l4054 0C7A  
                   l3414 1FF7                     l2710 1586                     l2702 1566  
                   l2606 143D                     l4206 1DC8                     l4222 1D3A  
                   l3360 09B0                     l3344 0975                     l3272 0888  
                   l2616 1452                     l3192 1E38                     l3184 1E25  
                   l4224 1D4A                     l4232 1D75                     l4136 11B4  
                   l2560 1BCF                     l4400 0470                     l3362 09B4  
                   l3266 087B                     l3258 085E                     l4162 120F  
                   l4154 11E7                     l2554 1BB3                     l4090 17BE  
                   l2490 1CEF                     l4330 01E6                     l3348 098E  
                   l4068 0CA6                     l2732 15A7                     l2724 159C  
                   l4228 1D68                     l4172 1223                     l2556 1BC1  
                   l2564 1BDA                     l4084 1711                     l4340 0281  
                   l4324 01C5                     l4316 013C                     l4500 0731  
                   l3278 0894                     l3390 1F9F                     l3382 1F8B  
                   l2718 1595                     l2726 159E                     l2654 14A6  
                   l2646 1470                     l2582 1417                     l2494 1CF6  
                   l4430 05F2                     l4510 079D                     l4502 0782  
                   l3376 1F74                     l2760 15F0                     l2736 15A9  
                   l2680 14EA                     l2672 14CB                     l2656 14A8  
                   l2664 14B7                     l4184 1246                     l4176 1233  
                   l4424 05E3                     l4408 0489                     l4344 029C  
                   l4432 05F7                     l4280 005C                     l3298 08E3  
                   l2762 15F4                     l2746 15DC                     l2682 14EC  
                   l2690 14FC                     l2586 141A                     l4450 0647  
                   l4442 060B                     l4354 02EA                     l4522 07C7  
                   l4530 07D8                     l3396 1FBA                     l3388 1F8D  
                   l2756 15EC                     l2588 1422                     l4196 1D90  
                   l4372 03AC                     l4364 0370                     l4284 0061  
                   l4198 1DA0                     l3902 1103                     l4358 036E  
                   l4614 0073                     l4286 007E                     l4278 0057  
                   l4464 0661                     l4456 065A                     l4394 0454  
                   l4386 03BF                     l4466 003B                     l4490 06EC  
                   l3844 1B69                     l2972 1117                     l3924 1C46  
                   l3916 1C22                     l4388 0443                     l4468 06C9  
                   l3950 09DD                     l2990 114C                     l3918 1C30  
                   l3870 10B9                     l2976 1120                     l3928 1C51  
                   l4496 0716                     l3946 09D3                     l3964 09F6  
                   l3948 09D5                     l3876 10C4                     l3966 09F8  
                   l2998 116C                     l3894 10F0                     l3886 10CC  
                   l3976 0A0E                     l3968 0A00                     l3888 10DA  
                   _ADFM 04FF                     l3898 10FB                     _ADON 00F8  
                   _CHS0 00FA                     _CHS1 00FB                     _CHS2 00FC  
                   _CHS3 00FD                     STR_1 1096                     _LM35 124F  
                   _T0IE 005D                     _T0IF 005A                     _T0CS 040D  
                   u3084 1B8C                     u3085 1B8A                     u3405 1BB6  
                   u3094 1B9F                     u3095 1B9D                     u3425 1BC7  
                   u3265 1CFF                     u5035 1DF9                     u3435 1BD0  
                   u3700 153B                     u3701 153C                     u3285 1D10  
                   u3702 1541                     u3550 1490                     u3703 1542  
                   u3295 1D19                     u3560 1491                     u5305 08DC  
                   u3545 1484                     u5065 1E16                     u5315 08F1  
                   u6125 1B72                     u6205 10E7                     u5095 1E2E  
                   u6215 10F1                     u5345 0911                     u5505 1F96  
                   u3745 1588                     u7105 1DA2                     u7025 1224  
                   u4625 1180                     u5435 0960                     u5275 08C8  
                   u3691 1527                     u3683 150E                     u3675 14F0  
                   u3595 14AC                     u7115 1DB7                     u3692 1528  
                   _RCIF 0065                     u5445 097E                     u5365 091C  
                   u5285 08D1                     u5525 1FB2                     u3845 15C6  
                   u3693 152D                     u7125 1DC9                     u4565 114E  
                   u3694 152E                     u5455 0999                     u3695 1533  
                   u4815 080B                     u7055 123C                     u4655 1198  
                   u4575 115F                     u6255 1C25                     u6175 10CF  
                   u3696 1534                     u6505 0BA5                     u5545 1FC7  
                   u4825 0812                     u4585 116D                     u6435 0AB8  
                   u7155 1D3E                     u6275 1C31                     u6195 10DB  
                   u7315 027F                     u6525 0BCA                     u7085 1D94  
                   u6285 1C3D                     u7405 046A                     u4935 1CDF  
                   u7175 1D58                     u6295 1C47                     u7335 0373  
                   u6545 0BE8                     u6465 0B11                     u5585 1FE2  
                   u7185 1D69                     u6705 1621                     u7505 067B  
                   u7425 0509                     u7345 03A2                     u6555 0C00  
                   u4971 1F0F                     u6715 167D                     u7435 058D  
                   u4972 1F10                     u6645 0C4F                     u4973 1F15  
                   u6725 16D2                     u6805 0D1D                     u7285 0234  
                   u4974 1F16                     u6655 0C6D                     u6575 0C0B  
                   u4991 1F35                     u4975 1F1B                     u6815 0D68  
                   u7375 03C7                     u4992 1F36                     u4976 1F1C  
                   u6665 0C85                     u4993 1F3B                     u6745 1732  
                   u7465 060E                     u4994 1F3C                     u7707 13F8  
                   u4995 1F41                     u6755 177F                     u6915 0F62  
                   u6835 0DBF                     u7475 063D                     u7395 045D  
                   u4996 1F42                     u7717 1BF8                     u6685 1C72  
                   u6765 17C9                     u6925 0F9E                     u6845 0DFB  
                   u7727 1C13                     u6935 0FD8                     u6855 0E35  
                   u7737 1261                     u6875 0E84                     u6795 0CE1  
                   u6965 11E9                     u6885 0EC0                     u6975 11FE  
                   u6895 0F0B                     u7687 07E6                     u7697 13AD  
                   u6985 1211                     _TMR0 0001                     _TMR2 0011  
                   _main 06CE                     _byte 1C56                     btemp 007E  
                   start 000C          ___fldiv@new_exp 0065             _sprintf$1058 00AC  
                  ?_LM35 00A0            ___fltol@sign1 006E                    _ADCS0 00FE  
                  _ADCS1 00FF          __end_of___fladd 15FD                    ?_main 0070  
          ?_controle_pwm 0070                    ?_byte 0024          __end_of___fldiv 09BA  
        __end_of___awdiv 1108          __end_of___flneg 1AC5          __end_of___awmod 1D30  
        __end_of___flmul 0CB3          __end_of___flsub 1B5D          __end_of___fltol 1E47  
        __end_of___lldiv 1DDE          ___awdiv@divisor 0020          __end_of___llmod 1D7E  
                  _T2CON 0012          __end_of___lwdiv 1C56          __end_of___lwmod 1BDF  
        ___awdiv@counter 0024                    _RCREG 001A                    _SPBRG 0099  
                  _PORTB 0006                    _TRISB 0086                    _TXREG 0019  
         velocidade@duty 0072          __end_of_dpowers 1096                    _scale 0CB3  
                  main@c 00E5                    main@i 00E6                    pclath 000A  
       __end_of_PWM_init 1B3B                    status 0003                    wtemp0 007E  
        __end_of_sprintf 06CE             __end_of_LM35 1323              byte@escreve 0024  
        __initialization 000F             __end_of_main 07EB             __end_of_byte 1C9B  
                 ??_LM35 00A4           ??_controle_pwm 0072                   ??_main 00C5  
                 ??_byte 0027         ___llmod@dividend 002A                   ?_scale 0053  
                 _ADRESH 001E                   _ADRESL 009E                   _CCPR1L 0015  
       ___awdiv@dividend 0022                   _ANSELH 0189                   i1l2316 1AFA  
                 _TMR2IF 0061                   _TRISC2 043A         __end_of___xxtofl 2000  
          ??_Timer0_init 0072         __end_of__powers_ 103A         __end_of_lcd_init 13FE  
                 ___flge 1EC8                   ___fleq 1C9B                ??___fladd 002D  
                 ___wmul 0800        __end_of_UART_init 07FF                ??___fldiv 005B  
              ??___awdiv 0078                ??___flneg 0076                ??___awmod 0076  
              ??___flmul 0041                ??___flsub 007A                ??___fltol 006A  
              ??___lldiv 0020                ??___llmod 002E                   _enable 1BDF  
              ??___lwdiv 0077                ??___lwmod 0076                   _nibble 1E47  
                 _fround 15FD               _Timers_ISR 1AF1         ___awdiv@quotient 0026  
        ___awmod@divisor 0072          ___awmod@counter 0076         __end_of_muda_pin 1BAD  
                 saved_w 007E                ??_sprintf 00A7               ___flge@ff1 0072  
             ___flge@ff2 0076             ___xxtofl@arg 0022             ___xxtofl@exp 0021  
           ___xxtofl@val 0072               ___fleq@ff1 0072               ___fleq@ff2 0076  
__end_of__initialization 0032               ___flneg@f1 0072               ___fltol@f1 0066  
         __pcstackCOMMON 0070             __pidataBANK3 1AC5            __end_of_scale 1000  
    __end_of_Timer0_init 1AE0                ?_PWM_init 0070               __div_to_l_ 11AB  
        __div_to_l_@exp1 0026          __div_to_l_@cntr 0025                  ??_scale 0057  
        __div_to_l_@quot 0021               __pbssBANK1 00ED               __pbssBANK3 0190  
   __end_of_controle_pwm 1B1E            __div_to_l_@f1 0072            __div_to_l_@f2 0076  
      __end_of__Umul8_16 1B82               __pmaintext 06CE                  ?___flge 0072  
                ?___fleq 0072                  ?___wmul 0072               __pintentry 0004  
                ?_enable 0070                  _CCP1CON 0017                  ?_nibble 0020  
                ?_fround 0053              ?_Timers_ISR 0070               ??_PWM_init 0072  
              ?___xxtofl 0072                  _GO_DONE 00F9                ?_lcd_init 0070  
             __stringtab 1000                _LM35$1054 00AE                ?_muda_pin 0072  
         main@duty_cycle 00E8        __end_of__npowers_ 106E               _scale$1057 0061  
            _Timer0_init 1AD1                  ___fladd 13FE                  ___fldiv 0821  
                ___awdiv 10AD                  ___flneg 1ABC                  ___awmod 1CE5  
                ___flmul 09BA                  ___flsub 1B3B                  ___fltol 1DDE  
                ___lldiv 1D7E                  ___llmod 1D30                  ___lwdiv 1C18  
                ___lwmod 1BAD            muda_pin@_port 0072                  __ptext1 1AB5  
                __ptext2 0036                  __ptext3 0CB3                  __ptext4 1CE5  
                __ptext5 10AD                  __ptext6 15FD                  __ptext7 1BAD  
                __ptext8 1C18                  __ptext9 1108              ?__div_to_l_ 0072  
        LM35@temperatura 00AA                  _dpowers 106E               ??___xxtofl 0076  
       ___awmod@dividend 0074                  _port_en 0190                  _port_rs 0192  
                _sprintf 0036               ??_lcd_init 002A     end_of_initialization 0032  
        ___lldiv@divisor 0072               ??_muda_pin 0078          ___lldiv@counter 0025  
              _RCSTAbits 0018           __tdiv_to_l_@f1 0072           __tdiv_to_l_@f2 0076  
          ??__tdiv_to_l_ 0020                _UART_init 07EB               _velocidade 1AB5  
            ___fladd@grs 0038            ___xxtofl@sign 0020                _TRISCbits 0087  
            ___fldiv@grs 0067              ___fldiv@rem 0060              ___flmul@grs 0048  
             main@buffer 00C7                _TXSTAbits 0098           __end_of___flge 1F5D  
         __end_of___fleq 1CE5           __end_of___wmul 0821           __end_of_enable 1C18  
             ?_UART_init 0070           __end_of_nibble 1EC8           __end_of_fround 1800  
           _controle_pwm 1B05      start_initialization 000F      __end_of__tdiv_to_l_ 11AB  
             nibble@dado 0020          ___llmod@divisor 0026          ___llmod@counter 002F  
               ??___flge 0020                 ??___fleq 0020                 ??___wmul 0076  
             init_fetch0 1AE0                 ??_enable 0020                __Umul8_16 1B5D  
            __pdataBANK3 019E                 ??_nibble 0022             ??_Timers_ISR 0070  
               ??_fround 0057            sprintf@tmpval 00BB              ?_velocidade 0070  
              ___fladd@a 0029                ___fladd@b 0025               fround@prec 0066  
              ___fldiv@a 0053                ___fldiv@b 0057                ___flmul@a 003D  
              ___flmul@b 0039              __pbssCOMMON 007A                ___flsub@a 0039  
              ___flsub@b 003D                ___latbits 0002            __pcstackBANK0 0020  
          __pcstackBANK1 00A0       controle_pwm@ligado 0072              sprintf@flag 00B1  
            sprintf@eexp 00B9              sprintf@fval 00C0              sprintf@prec 00B3  
     __end_of_Timers_ISR 1B05         ___lwdiv@dividend 0022             ?_Timer0_init 0070  
               ?___fladd 0025                 ?___fldiv 0053                 ?___awdiv 0020  
               ?___flneg 0072                 ?___awmod 0072                 ?___flmul 0039  
               ?___flsub 0039                 ?___fltol 0066                 ?___lldiv 0072  
               ?___llmod 0026                __npowers_ 103A               ?__Umul8_16 0072  
               ?___lwdiv 0020                 ?___lwmod 0072                __pstrings 1000  
            __tdiv_to_l_ 1108              ??_UART_init 0072             ??__div_to_l_ 0020  
       ___lwdiv@quotient 0078                 ?_sprintf 00A0             muda_pin@_pin 0074  
           muda_pin@_val 0076        interrupt_function 0004           ___wmul@product 0076  
     __end_of__div_to_l_ 124F                _port_data 00ED              __stringbase 1005  
      ___wmul@multiplier 0072                 _PWM_init 1B1E              ??__Umul8_16 0074  
            _fround$1055 0062              _fround$1056 005E       __end_of__stringtab 1006  
             sprintf@val 00B5                 ___xxtofl 1F5D          ___lwdiv@divisor 0020  
        ___lwdiv@counter 0077                 __ptext10 11AB                 __ptext11 0800  
               __ptext20 1323                 __ptext12 1D30                 __ptext21 1C56  
               __ptext13 1D7E                 __ptext30 1F5D                 __ptext22 1E47  
               __ptext14 1DDE                 __ptext31 09BA                 __ptext23 1BDF  
               __ptext15 1B3B                 __ptext32 1B5D                 __ptext24 1B82  
               __ptext16 13FE                 __ptext33 0821                 __ptext25 1B05  
               __ptext17 1ABC                 __ptext34 1AF1                 __ptext26 07EB  
               __ptext18 1EC8                 __ptext27 1AD1                 __ptext19 1C9B  
               __ptext28 1B1E                 __ptext29 124F                 __powers_ 1006  
               _lcd_init 1323                 _lcd_pins 019E                 _muda_pin 1B82  
            LM35@adc_val 00B2                 main@temp 00E9         lcd_init@lcd_pins 0079  
           ??_velocidade 0072                 byte@dado 0026               _INTCONbits 000B  
               init_ram0 1AE4                 scale@scl 0065                 intlevel1 0000  
              sprintf@ap 00B0         __tdiv_to_l_@exp1 0028         __tdiv_to_l_@cntr 0027  
              sprintf@sp 00BF         __tdiv_to_l_@quot 0023         ___lwmod@dividend 0074  
       ___lldiv@dividend 0076       __end_of_velocidade 1ABC                stringcode 1000  
           ?__tdiv_to_l_ 0072   __Umul8_16@multiplicand 0072                 sprintf@c 00C4  
               sprintf@f 00A0         ___lldiv@quotient 0021          ___lwmod@divisor 0072  
        ___lwmod@counter 0076                 stringdir 1000                 stringtab 1000  
          ___fladd@signs 0035             ___fladd@aexp 0036             ___fladd@bexp 0037  
   __Umul8_16@multiplier 0024              _pwm_enabled 00EF        __Umul8_16@product 0020  
